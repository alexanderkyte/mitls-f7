theory T
type top = int
use import int.Int
function i_t int:top
(* declaring type Pervasives.bool [pervasives.fs7(1,0)] *)
predicate v_Pervasives__True_p 
function v_Pervasives__True  : top
predicate v_Pervasives__False_p 
function v_Pervasives__False  : top
axiom a1_v_Pervasives__False_Disj: not(v_Pervasives__True = v_Pervasives__False)
(* assume (!x. false <=> True () = False ()) [pervasives.fs7(2,0)] *)
axiom a2_asm: (forall v_x:top. (false <-> ((v_Pervasives__True ) = (v_Pervasives__False ))))
(* declaring type Pervasives.int [pervasives.fs7(4,0)] *)
predicate v_Pervasives__Zero_p 
function v_Pervasives__Zero  : top
predicate v_Pervasives__Succ_p (x1:top)
function v_Pervasives__Succ (x1:top) : top
function v_Pervasives__Succ__1 (x1:top) : top
axiom a3_v_Pervasives__Succ_Inj: (forall x1:top. (v_Pervasives__Succ__1 (v_Pervasives__Succ x1)) = x1) /\ (forall x1:top,y1:top. (v_Pervasives__Succ x1) = (v_Pervasives__Succ y1) -> x1 = y1)
axiom a4_v_Pervasives__Succ_Disj: forall x0:top. not(v_Pervasives__Zero = (v_Pervasives__Succ x0))
(* declaring type Pervasives.list [pervasives.fs7(10,0)] *)
predicate v_Pervasives__op_Nil_p 
function v_Pervasives__op_Nil  : top
predicate v_Pervasives__op_ColonColon_p (x1:top) (x2:top)
function v_Pervasives__op_ColonColon (x1:top) (x2:top) : top
function v_Pervasives__op_ColonColon__1 (x1:top) : top
function v_Pervasives__op_ColonColon__2 (x1:top) : top
axiom a5_v_Pervasives__op_ColonColon_Inj: (forall x1:top, x2:top. ((v_Pervasives__op_ColonColon__1 (v_Pervasives__op_ColonColon x1 x2)) = x1) /\ ((v_Pervasives__op_ColonColon__2 (v_Pervasives__op_ColonColon x1 x2)) = x2)) /\ (forall x1:top, x2:top,y1:top, y2:top. (v_Pervasives__op_ColonColon x1 x2) = (v_Pervasives__op_ColonColon y1 y2) -> (x1 = y1) /\ (x2 = y2))
axiom a6_v_Pervasives__op_ColonColon_Disj: forall x0:top, x1:top. not(v_Pervasives__op_Nil = (v_Pervasives__op_ColonColon x0 x1))
(* declaring fun Pervasives.Head [pervasives.fs7(13,9)] *)
function v_Pervasives__Head (x1:top) : top
(* declaring fun Pervasives.Tail [pervasives.fs7(14,9)] *)
function v_Pervasives__Tail (x1:top) : top
(* assume (!h. (!t. Head (op_ColonColon (h, t)) = h)) [pervasives.fs7(16,0)] *)
axiom a7_asm: (forall v_h:top. (forall v_t:top. ((v_Pervasives__Head (v_Pervasives__op_ColonColon v_h v_t)) = v_h)))
(* assume (!h. (!t. Tail (op_ColonColon (h, t)) = t)) [pervasives.fs7(17,0)] *)
axiom a8_asm: (forall v_h:top. (forall v_t:top. ((v_Pervasives__Tail (v_Pervasives__op_ColonColon v_h v_t)) = v_t)))
(* declaring type Pervasives.string [pervasives.fs7(23,0)] *)
predicate v_Pervasives__Str_p (x1:top)
function v_Pervasives__Str (x1:top) : top
function v_Pervasives__Str__1 (x1:top) : top
axiom a9_v_Pervasives__Str_Inj: (forall x1:top. (v_Pervasives__Str__1 (v_Pervasives__Str x1)) = x1) /\ (forall x1:top,y1:top. (v_Pervasives__Str x1) = (v_Pervasives__Str y1) -> x1 = y1)
predicate v_Pervasives__SofI_p (x1:top)
function v_Pervasives__SofI (x1:top) : top
function v_Pervasives__SofI__1 (x1:top) : top
axiom a10_v_Pervasives__SofI_Inj: (forall x1:top. (v_Pervasives__SofI__1 (v_Pervasives__SofI x1)) = x1) /\ (forall x1:top,y1:top. (v_Pervasives__SofI x1) = (v_Pervasives__SofI y1) -> x1 = y1)
axiom a11_v_Pervasives__SofI_Disj: forall x0:top, x1:top. not((v_Pervasives__Str x0) = (v_Pervasives__SofI x1))
(* declaring type Pervasives.ref [pervasives.fs7(24,0)] *)
predicate v_Pervasives__Ref_p (x1:top)
function v_Pervasives__Ref (x1:top) : top
function v_Pervasives__Ref__1 (x1:top) : top
axiom a12_v_Pervasives__Ref_Inj: (forall x1:top. (v_Pervasives__Ref__1 (v_Pervasives__Ref x1)) = x1) /\ (forall x1:top,y1:top. (v_Pervasives__Ref x1) = (v_Pervasives__Ref y1) -> x1 = y1)
(* declaring type Pervasives.option [pervasives.fs7(26,0)] *)
predicate v_Pervasives__None_p 
function v_Pervasives__None  : top
predicate v_Pervasives__Some_p (x1:top)
function v_Pervasives__Some (x1:top) : top
function v_Pervasives__Some__1 (x1:top) : top
axiom a13_v_Pervasives__Some_Inj: (forall x1:top. (v_Pervasives__Some__1 (v_Pervasives__Some x1)) = x1) /\ (forall x1:top,y1:top. (v_Pervasives__Some x1) = (v_Pervasives__Some y1) -> x1 = y1)
axiom a14_v_Pervasives__Some_Disj: forall x0:top. not(v_Pervasives__None = (v_Pervasives__Some x0))
(* declaring type Pervasives.byte [pervasives.fs7(28,0)] *)
predicate v_Pervasives__Byte_p (x1:top)
function v_Pervasives__Byte (x1:top) : top
function v_Pervasives__Byte__1 (x1:top) : top
axiom a15_v_Pervasives__Byte_Inj: (forall x1:top. (v_Pervasives__Byte__1 (v_Pervasives__Byte x1)) = x1) /\ (forall x1:top,y1:top. (v_Pervasives__Byte x1) = (v_Pervasives__Byte y1) -> x1 = y1)
(* declaring type Pervasives.array [pervasives.fs7(30,0)] *)
predicate v_Pervasives__array_of_list_p (x1:top)
function v_Pervasives__array_of_list (x1:top) : top
function v_Pervasives__array_of_list__1 (x1:top) : top
axiom a16_v_Pervasives__array_of_list_Inj: (forall x1:top. (v_Pervasives__array_of_list__1 (v_Pervasives__array_of_list x1)) = x1) /\ (forall x1:top,y1:top. (v_Pervasives__array_of_list x1) = (v_Pervasives__array_of_list y1) -> x1 = y1)
(* declaring type Pervasives.comparisons [pervasives.fs7(39,10)] *)
predicate v_Pervasives__pr_LessThanOrEqual_p (x1:top) (x2:top)
predicate v_Pervasives__pr_LessThan_p (x1:top) (x2:top)
predicate v_Pervasives__pr_GreaterThan_p (x1:top) (x2:top)
predicate v_Pervasives__pr_GreaterThanOrEqual_p (x1:top) (x2:top)
(* declaring type Pervasives.z3bops [pervasives.fs7(61,9)] *)
function v_Pervasives__bop_Addition (x1:top) (x2:top) : top
function v_Pervasives__bop_Subtraction (x1:top) (x2:top) : top
function v_Pervasives__bop_Multiply (x1:top) (x2:top) : top
function v_Pervasives__bop_Divide (x1:top) (x2:top) : top
function v_Pervasives__bop_Modulus (x1:top) (x2:top) : top
function v_Pervasives__bop_ArrayAppend (x1:top) (x2:top) : top
function v_Pervasives__bop_Append (x1:top) (x2:top) : top
(* assume (!l. bop_Append (l, op_Nil ()) = l) [pervasives.fs7(71,0)] *)
axiom a17_asm: (forall v_l:top. ((v_Pervasives__bop_Append v_l (v_Pervasives__op_Nil )) = v_l))
(* assume (!l1. (!l2. (!l3. bop_Append (bop_Append (l1, l2), l3) = bop_Append (bop_Append (l1, l2), l3)))) [pervasives.fs7(72,0)] *)
axiom a18_asm: (forall v_l1:top. (forall v_l2:top. (forall v_l3:top. ((v_Pervasives__bop_Append (v_Pervasives__bop_Append v_l1 v_l2) v_l3) = (v_Pervasives__bop_Append (v_Pervasives__bop_Append v_l1 v_l2) v_l3)))))
(* assume (!x. bop_Addition (x, 1) = Succ (x)) [pervasives.fs7(76,0)] *)
axiom a19_asm: (forall v_x:top. ((v_x + 1) = (v_Pervasives__Succ v_x)))
(* assume (!x. bop_Subtraction (Succ (x), 1) = x) [pervasives.fs7(79,0)] *)
axiom a20_asm: (forall v_x:top. (((v_Pervasives__Succ v_x) - 1) = v_x))
(* assume (!x. (!y. (!z. pr_GreaterThanOrEqual(x, 0) /\ pr_GreaterThanOrEqual(y, 0) /\ z = bop_Divide (x, y) => pr_GreaterThanOrEqual(z, 0) /\ pr_LessThanOrEqual(z, x)))) [pervasives.fs7(110,0)] *)
axiom a21_asm: (forall v_x:top. (forall v_y:top. (forall v_z:top. (((v_x >= 0) /\ ((v_y >= 0) /\ (v_z = (v_Pervasives__bop_Divide v_x v_y)))) -> ((v_z >= 0) /\ (v_z <= v_x))))))
(* assume (!x. (!y. pr_GreaterThanOrEqual(x, 0) /\ pr_GreaterThan(y, 0) => pr_GreaterThanOrEqual(bop_Modulus (x, y), 0) /\ pr_LessThanOrEqual(bop_Modulus (x, y), x) /\ pr_LessThan(bop_Modulus (x, y), y))) [pervasives.fs7(117,0)] *)
axiom a22_asm: (forall v_x:top. (forall v_y:top. (((v_x >= 0) /\ (v_y > 0)) -> (((v_Pervasives__bop_Modulus v_x v_y) >= 0) /\ (((v_Pervasives__bop_Modulus v_x v_y) <= v_x) /\ ((v_Pervasives__bop_Modulus v_x v_y) < v_y))))))
(* declaring type Tuples.tup0 [Z:\Cvk\samples\lib\fs7-interfaces\tuples.fs7(3,0)] *)
predicate v_Tuples__Tup0_p 
function v_Tuples__Tup0  : top
(* declaring type Tuples.tup1 [Z:\Cvk\samples\lib\fs7-interfaces\tuples.fs7(4,0)] *)
predicate v_Tuples__Tup1_p (x1:top)
function v_Tuples__Tup1 (x1:top) : top
function v_Tuples__Tup1__1 (x1:top) : top
axiom a23_v_Tuples__Tup1_Inj: (forall x1:top. (v_Tuples__Tup1__1 (v_Tuples__Tup1 x1)) = x1) /\ (forall x1:top,y1:top. (v_Tuples__Tup1 x1) = (v_Tuples__Tup1 y1) -> x1 = y1)
(* declaring type Tuples.tup2 [Z:\Cvk\samples\lib\fs7-interfaces\tuples.fs7(5,0)] *)
predicate v_Tuples__Tup2_p (x1:top) (x2:top)
function v_Tuples__Tup2 (x1:top) (x2:top) : top
function v_Tuples__Tup2__1 (x1:top) : top
function v_Tuples__Tup2__2 (x1:top) : top
axiom a24_v_Tuples__Tup2_Inj: (forall x1:top, x2:top. ((v_Tuples__Tup2__1 (v_Tuples__Tup2 x1 x2)) = x1) /\ ((v_Tuples__Tup2__2 (v_Tuples__Tup2 x1 x2)) = x2)) /\ (forall x1:top, x2:top,y1:top, y2:top. (v_Tuples__Tup2 x1 x2) = (v_Tuples__Tup2 y1 y2) -> (x1 = y1) /\ (x2 = y2))
(* declaring type Tuples.tup3 [Z:\Cvk\samples\lib\fs7-interfaces\tuples.fs7(6,0)] *)
predicate v_Tuples__Tup3_p (x1:top) (x2:top) (x3:top)
function v_Tuples__Tup3 (x1:top) (x2:top) (x3:top) : top
function v_Tuples__Tup3__1 (x1:top) : top
function v_Tuples__Tup3__2 (x1:top) : top
function v_Tuples__Tup3__3 (x1:top) : top
axiom a25_v_Tuples__Tup3_Inj: (forall x1:top, x2:top, x3:top. ((v_Tuples__Tup3__1 (v_Tuples__Tup3 x1 x2 x3)) = x1) /\ (((v_Tuples__Tup3__2 (v_Tuples__Tup3 x1 x2 x3)) = x2) /\ ((v_Tuples__Tup3__3 (v_Tuples__Tup3 x1 x2 x3)) = x3))) /\ (forall x1:top, x2:top, x3:top,y1:top, y2:top, y3:top. (v_Tuples__Tup3 x1 x2 x3) = (v_Tuples__Tup3 y1 y2 y3) -> (x1 = y1) /\ ((x2 = y2) /\ (x3 = y3)))
(* declaring type Tuples.tup4 [Z:\Cvk\samples\lib\fs7-interfaces\tuples.fs7(7,0)] *)
predicate v_Tuples__Tup4_p (x1:top) (x2:top) (x3:top) (x4:top)
function v_Tuples__Tup4 (x1:top) (x2:top) (x3:top) (x4:top) : top
function v_Tuples__Tup4__1 (x1:top) : top
function v_Tuples__Tup4__2 (x1:top) : top
function v_Tuples__Tup4__3 (x1:top) : top
function v_Tuples__Tup4__4 (x1:top) : top
axiom a26_v_Tuples__Tup4_Inj: (forall x1:top, x2:top, x3:top, x4:top. ((v_Tuples__Tup4__1 (v_Tuples__Tup4 x1 x2 x3 x4)) = x1) /\ (((v_Tuples__Tup4__2 (v_Tuples__Tup4 x1 x2 x3 x4)) = x2) /\ (((v_Tuples__Tup4__3 (v_Tuples__Tup4 x1 x2 x3 x4)) = x3) /\ ((v_Tuples__Tup4__4 (v_Tuples__Tup4 x1 x2 x3 x4)) = x4)))) /\ (forall x1:top, x2:top, x3:top, x4:top,y1:top, y2:top, y3:top, y4:top. (v_Tuples__Tup4 x1 x2 x3 x4) = (v_Tuples__Tup4 y1 y2 y3 y4) -> (x1 = y1) /\ ((x2 = y2) /\ ((x3 = y3) /\ (x4 = y4))))
(* declaring type Tuples.tup5 [Z:\Cvk\samples\lib\fs7-interfaces\tuples.fs7(8,0)] *)
predicate v_Tuples__Tup5_p (x1:top) (x2:top) (x3:top) (x4:top) (x5:top)
function v_Tuples__Tup5 (x1:top) (x2:top) (x3:top) (x4:top) (x5:top) : top
function v_Tuples__Tup5__1 (x1:top) : top
function v_Tuples__Tup5__2 (x1:top) : top
function v_Tuples__Tup5__3 (x1:top) : top
function v_Tuples__Tup5__4 (x1:top) : top
function v_Tuples__Tup5__5 (x1:top) : top
axiom a27_v_Tuples__Tup5_Inj: (forall x1:top, x2:top, x3:top, x4:top, x5:top. ((v_Tuples__Tup5__1 (v_Tuples__Tup5 x1 x2 x3 x4 x5)) = x1) /\ (((v_Tuples__Tup5__2 (v_Tuples__Tup5 x1 x2 x3 x4 x5)) = x2) /\ (((v_Tuples__Tup5__3 (v_Tuples__Tup5 x1 x2 x3 x4 x5)) = x3) /\ (((v_Tuples__Tup5__4 (v_Tuples__Tup5 x1 x2 x3 x4 x5)) = x4) /\ ((v_Tuples__Tup5__5 (v_Tuples__Tup5 x1 x2 x3 x4 x5)) = x5))))) /\ (forall x1:top, x2:top, x3:top, x4:top, x5:top,y1:top, y2:top, y3:top, y4:top, y5:top. (v_Tuples__Tup5 x1 x2 x3 x4 x5) = (v_Tuples__Tup5 y1 y2 y3 y4 y5) -> (x1 = y1) /\ ((x2 = y2) /\ ((x3 = y3) /\ ((x4 = y4) /\ (x5 = y5)))))
(* declaring type Tuples.tup6 [Z:\Cvk\samples\lib\fs7-interfaces\tuples.fs7(9,0)] *)
predicate v_Tuples__Tup6_p (x1:top) (x2:top) (x3:top) (x4:top) (x5:top) (x6:top)
function v_Tuples__Tup6 (x1:top) (x2:top) (x3:top) (x4:top) (x5:top) (x6:top) : top
function v_Tuples__Tup6__1 (x1:top) : top
function v_Tuples__Tup6__2 (x1:top) : top
function v_Tuples__Tup6__3 (x1:top) : top
function v_Tuples__Tup6__4 (x1:top) : top
function v_Tuples__Tup6__5 (x1:top) : top
function v_Tuples__Tup6__6 (x1:top) : top
axiom a28_v_Tuples__Tup6_Inj: (forall x1:top, x2:top, x3:top, x4:top, x5:top, x6:top. ((v_Tuples__Tup6__1 (v_Tuples__Tup6 x1 x2 x3 x4 x5 x6)) = x1) /\ (((v_Tuples__Tup6__2 (v_Tuples__Tup6 x1 x2 x3 x4 x5 x6)) = x2) /\ (((v_Tuples__Tup6__3 (v_Tuples__Tup6 x1 x2 x3 x4 x5 x6)) = x3) /\ (((v_Tuples__Tup6__4 (v_Tuples__Tup6 x1 x2 x3 x4 x5 x6)) = x4) /\ (((v_Tuples__Tup6__5 (v_Tuples__Tup6 x1 x2 x3 x4 x5 x6)) = x5) /\ ((v_Tuples__Tup6__6 (v_Tuples__Tup6 x1 x2 x3 x4 x5 x6)) = x6)))))) /\ (forall x1:top, x2:top, x3:top, x4:top, x5:top, x6:top,y1:top, y2:top, y3:top, y4:top, y5:top, y6:top. (v_Tuples__Tup6 x1 x2 x3 x4 x5 x6) = (v_Tuples__Tup6 y1 y2 y3 y4 y5 y6) -> (x1 = y1) /\ ((x2 = y2) /\ ((x3 = y3) /\ ((x4 = y4) /\ ((x5 = y5) /\ (x6 = y6))))))
(* declaring type Tuples.tup7 [Z:\Cvk\samples\lib\fs7-interfaces\tuples.fs7(10,0)] *)
predicate v_Tuples__Tup7_p (x1:top) (x2:top) (x3:top) (x4:top) (x5:top) (x6:top) (x7:top)
function v_Tuples__Tup7 (x1:top) (x2:top) (x3:top) (x4:top) (x5:top) (x6:top) (x7:top) : top
function v_Tuples__Tup7__1 (x1:top) : top
function v_Tuples__Tup7__2 (x1:top) : top
function v_Tuples__Tup7__3 (x1:top) : top
function v_Tuples__Tup7__4 (x1:top) : top
function v_Tuples__Tup7__5 (x1:top) : top
function v_Tuples__Tup7__6 (x1:top) : top
function v_Tuples__Tup7__7 (x1:top) : top
axiom a29_v_Tuples__Tup7_Inj: (forall x1:top, x2:top, x3:top, x4:top, x5:top, x6:top, x7:top. ((v_Tuples__Tup7__1 (v_Tuples__Tup7 x1 x2 x3 x4 x5 x6 x7)) = x1) /\ (((v_Tuples__Tup7__2 (v_Tuples__Tup7 x1 x2 x3 x4 x5 x6 x7)) = x2) /\ (((v_Tuples__Tup7__3 (v_Tuples__Tup7 x1 x2 x3 x4 x5 x6 x7)) = x3) /\ (((v_Tuples__Tup7__4 (v_Tuples__Tup7 x1 x2 x3 x4 x5 x6 x7)) = x4) /\ (((v_Tuples__Tup7__5 (v_Tuples__Tup7 x1 x2 x3 x4 x5 x6 x7)) = x5) /\ (((v_Tuples__Tup7__6 (v_Tuples__Tup7 x1 x2 x3 x4 x5 x6 x7)) = x6) /\ ((v_Tuples__Tup7__7 (v_Tuples__Tup7 x1 x2 x3 x4 x5 x6 x7)) = x7))))))) /\ (forall x1:top, x2:top, x3:top, x4:top, x5:top, x6:top, x7:top,y1:top, y2:top, y3:top, y4:top, y5:top, y6:top, y7:top. (v_Tuples__Tup7 x1 x2 x3 x4 x5 x6 x7) = (v_Tuples__Tup7 y1 y2 y3 y4 y5 y6 y7) -> (x1 = y1) /\ ((x2 = y2) /\ ((x3 = y3) /\ ((x4 = y4) /\ ((x5 = y5) /\ ((x6 = y6) /\ (x7 = y7)))))))
(* declaring type Tuples.tup8 [Z:\Cvk\samples\lib\fs7-interfaces\tuples.fs7(11,0)] *)
predicate v_Tuples__Tup8_p (x1:top) (x2:top) (x3:top) (x4:top) (x5:top) (x6:top) (x7:top) (x8:top)
function v_Tuples__Tup8 (x1:top) (x2:top) (x3:top) (x4:top) (x5:top) (x6:top) (x7:top) (x8:top) : top
function v_Tuples__Tup8__1 (x1:top) : top
function v_Tuples__Tup8__2 (x1:top) : top
function v_Tuples__Tup8__3 (x1:top) : top
function v_Tuples__Tup8__4 (x1:top) : top
function v_Tuples__Tup8__5 (x1:top) : top
function v_Tuples__Tup8__6 (x1:top) : top
function v_Tuples__Tup8__7 (x1:top) : top
function v_Tuples__Tup8__8 (x1:top) : top
axiom a30_v_Tuples__Tup8_Inj: (forall x1:top, x2:top, x3:top, x4:top, x5:top, x6:top, x7:top, x8:top. ((v_Tuples__Tup8__1 (v_Tuples__Tup8 x1 x2 x3 x4 x5 x6 x7 x8)) = x1) /\ (((v_Tuples__Tup8__2 (v_Tuples__Tup8 x1 x2 x3 x4 x5 x6 x7 x8)) = x2) /\ (((v_Tuples__Tup8__3 (v_Tuples__Tup8 x1 x2 x3 x4 x5 x6 x7 x8)) = x3) /\ (((v_Tuples__Tup8__4 (v_Tuples__Tup8 x1 x2 x3 x4 x5 x6 x7 x8)) = x4) /\ (((v_Tuples__Tup8__5 (v_Tuples__Tup8 x1 x2 x3 x4 x5 x6 x7 x8)) = x5) /\ (((v_Tuples__Tup8__6 (v_Tuples__Tup8 x1 x2 x3 x4 x5 x6 x7 x8)) = x6) /\ (((v_Tuples__Tup8__7 (v_Tuples__Tup8 x1 x2 x3 x4 x5 x6 x7 x8)) = x7) /\ ((v_Tuples__Tup8__8 (v_Tuples__Tup8 x1 x2 x3 x4 x5 x6 x7 x8)) = x8)))))))) /\ (forall x1:top, x2:top, x3:top, x4:top, x5:top, x6:top, x7:top, x8:top,y1:top, y2:top, y3:top, y4:top, y5:top, y6:top, y7:top, y8:top. (v_Tuples__Tup8 x1 x2 x3 x4 x5 x6 x7 x8) = (v_Tuples__Tup8 y1 y2 y3 y4 y5 y6 y7 y8) -> (x1 = y1) /\ ((x2 = y2) /\ ((x3 = y3) /\ ((x4 = y4) /\ ((x5 = y5) /\ ((x6 = y6) /\ ((x7 = y7) /\ (x8 = y8))))))))
(* declaring type Tuples.tup9 [Z:\Cvk\samples\lib\fs7-interfaces\tuples.fs7(12,0)] *)
predicate v_Tuples__Tup9_p (x1:top) (x2:top) (x3:top) (x4:top) (x5:top) (x6:top) (x7:top) (x8:top) (x9:top)
function v_Tuples__Tup9 (x1:top) (x2:top) (x3:top) (x4:top) (x5:top) (x6:top) (x7:top) (x8:top) (x9:top) : top
function v_Tuples__Tup9__1 (x1:top) : top
function v_Tuples__Tup9__2 (x1:top) : top
function v_Tuples__Tup9__3 (x1:top) : top
function v_Tuples__Tup9__4 (x1:top) : top
function v_Tuples__Tup9__5 (x1:top) : top
function v_Tuples__Tup9__6 (x1:top) : top
function v_Tuples__Tup9__7 (x1:top) : top
function v_Tuples__Tup9__8 (x1:top) : top
function v_Tuples__Tup9__9 (x1:top) : top
axiom a31_v_Tuples__Tup9_Inj: (forall x1:top, x2:top, x3:top, x4:top, x5:top, x6:top, x7:top, x8:top, x9:top. ((v_Tuples__Tup9__1 (v_Tuples__Tup9 x1 x2 x3 x4 x5 x6 x7 x8 x9)) = x1) /\ (((v_Tuples__Tup9__2 (v_Tuples__Tup9 x1 x2 x3 x4 x5 x6 x7 x8 x9)) = x2) /\ (((v_Tuples__Tup9__3 (v_Tuples__Tup9 x1 x2 x3 x4 x5 x6 x7 x8 x9)) = x3) /\ (((v_Tuples__Tup9__4 (v_Tuples__Tup9 x1 x2 x3 x4 x5 x6 x7 x8 x9)) = x4) /\ (((v_Tuples__Tup9__5 (v_Tuples__Tup9 x1 x2 x3 x4 x5 x6 x7 x8 x9)) = x5) /\ (((v_Tuples__Tup9__6 (v_Tuples__Tup9 x1 x2 x3 x4 x5 x6 x7 x8 x9)) = x6) /\ (((v_Tuples__Tup9__7 (v_Tuples__Tup9 x1 x2 x3 x4 x5 x6 x7 x8 x9)) = x7) /\ (((v_Tuples__Tup9__8 (v_Tuples__Tup9 x1 x2 x3 x4 x5 x6 x7 x8 x9)) = x8) /\ ((v_Tuples__Tup9__9 (v_Tuples__Tup9 x1 x2 x3 x4 x5 x6 x7 x8 x9)) = x9))))))))) /\ (forall x1:top, x2:top, x3:top, x4:top, x5:top, x6:top, x7:top, x8:top, x9:top,y1:top, y2:top, y3:top, y4:top, y5:top, y6:top, y7:top, y8:top, y9:top. (v_Tuples__Tup9 x1 x2 x3 x4 x5 x6 x7 x8 x9) = (v_Tuples__Tup9 y1 y2 y3 y4 y5 y6 y7 y8 y9) -> (x1 = y1) /\ ((x2 = y2) /\ ((x3 = y3) /\ ((x4 = y4) /\ ((x5 = y5) /\ ((x6 = y6) /\ ((x7 = y7) /\ ((x8 = y8) /\ (x9 = y9)))))))))
(* declaring type Tuples.tup10 [Z:\Cvk\samples\lib\fs7-interfaces\tuples.fs7(13,0)] *)
predicate v_Tuples__Tup10_p (x1:top) (x2:top) (x3:top) (x4:top) (x5:top) (x6:top) (x7:top) (x8:top) (x9:top) (x10:top)
function v_Tuples__Tup10 (x1:top) (x2:top) (x3:top) (x4:top) (x5:top) (x6:top) (x7:top) (x8:top) (x9:top) (x10:top) : top
function v_Tuples__Tup10__1 (x1:top) : top
function v_Tuples__Tup10__2 (x1:top) : top
function v_Tuples__Tup10__3 (x1:top) : top
function v_Tuples__Tup10__4 (x1:top) : top
function v_Tuples__Tup10__5 (x1:top) : top
function v_Tuples__Tup10__6 (x1:top) : top
function v_Tuples__Tup10__7 (x1:top) : top
function v_Tuples__Tup10__8 (x1:top) : top
function v_Tuples__Tup10__9 (x1:top) : top
function v_Tuples__Tup10__10 (x1:top) : top
axiom a32_v_Tuples__Tup10_Inj: (forall x1:top, x2:top, x3:top, x4:top, x5:top, x6:top, x7:top, x8:top, x9:top, x10:top. ((v_Tuples__Tup10__1 (v_Tuples__Tup10 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10)) = x1) /\ (((v_Tuples__Tup10__2 (v_Tuples__Tup10 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10)) = x2) /\ (((v_Tuples__Tup10__3 (v_Tuples__Tup10 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10)) = x3) /\ (((v_Tuples__Tup10__4 (v_Tuples__Tup10 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10)) = x4) /\ (((v_Tuples__Tup10__5 (v_Tuples__Tup10 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10)) = x5) /\ (((v_Tuples__Tup10__6 (v_Tuples__Tup10 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10)) = x6) /\ (((v_Tuples__Tup10__7 (v_Tuples__Tup10 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10)) = x7) /\ (((v_Tuples__Tup10__8 (v_Tuples__Tup10 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10)) = x8) /\ (((v_Tuples__Tup10__9 (v_Tuples__Tup10 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10)) = x9) /\ ((v_Tuples__Tup10__10 (v_Tuples__Tup10 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10)) = x10)))))))))) /\ (forall x1:top, x2:top, x3:top, x4:top, x5:top, x6:top, x7:top, x8:top, x9:top, x10:top,y1:top, y2:top, y3:top, y4:top, y5:top, y6:top, y7:top, y8:top, y9:top, y10:top. (v_Tuples__Tup10 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10) = (v_Tuples__Tup10 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10) -> (x1 = y1) /\ ((x2 = y2) /\ ((x3 = y3) /\ ((x4 = y4) /\ ((x5 = y5) /\ ((x6 = y6) /\ ((x7 = y7) /\ ((x8 = y8) /\ ((x9 = y9) /\ (x10 = y10))))))))))
(* declaring type Tuples.tup11 [Z:\Cvk\samples\lib\fs7-interfaces\tuples.fs7(14,0)] *)
predicate v_Tuples__Tup11_p (x1:top) (x2:top) (x3:top) (x4:top) (x5:top) (x6:top) (x7:top) (x8:top) (x9:top) (x10:top) (x11:top)
function v_Tuples__Tup11 (x1:top) (x2:top) (x3:top) (x4:top) (x5:top) (x6:top) (x7:top) (x8:top) (x9:top) (x10:top) (x11:top) : top
function v_Tuples__Tup11__1 (x1:top) : top
function v_Tuples__Tup11__2 (x1:top) : top
function v_Tuples__Tup11__3 (x1:top) : top
function v_Tuples__Tup11__4 (x1:top) : top
function v_Tuples__Tup11__5 (x1:top) : top
function v_Tuples__Tup11__6 (x1:top) : top
function v_Tuples__Tup11__7 (x1:top) : top
function v_Tuples__Tup11__8 (x1:top) : top
function v_Tuples__Tup11__9 (x1:top) : top
function v_Tuples__Tup11__10 (x1:top) : top
function v_Tuples__Tup11__11 (x1:top) : top
axiom a33_v_Tuples__Tup11_Inj: (forall x1:top, x2:top, x3:top, x4:top, x5:top, x6:top, x7:top, x8:top, x9:top, x10:top, x11:top. ((v_Tuples__Tup11__1 (v_Tuples__Tup11 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11)) = x1) /\ (((v_Tuples__Tup11__2 (v_Tuples__Tup11 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11)) = x2) /\ (((v_Tuples__Tup11__3 (v_Tuples__Tup11 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11)) = x3) /\ (((v_Tuples__Tup11__4 (v_Tuples__Tup11 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11)) = x4) /\ (((v_Tuples__Tup11__5 (v_Tuples__Tup11 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11)) = x5) /\ (((v_Tuples__Tup11__6 (v_Tuples__Tup11 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11)) = x6) /\ (((v_Tuples__Tup11__7 (v_Tuples__Tup11 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11)) = x7) /\ (((v_Tuples__Tup11__8 (v_Tuples__Tup11 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11)) = x8) /\ (((v_Tuples__Tup11__9 (v_Tuples__Tup11 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11)) = x9) /\ (((v_Tuples__Tup11__10 (v_Tuples__Tup11 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11)) = x10) /\ ((v_Tuples__Tup11__11 (v_Tuples__Tup11 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11)) = x11))))))))))) /\ (forall x1:top, x2:top, x3:top, x4:top, x5:top, x6:top, x7:top, x8:top, x9:top, x10:top, x11:top,y1:top, y2:top, y3:top, y4:top, y5:top, y6:top, y7:top, y8:top, y9:top, y10:top, y11:top. (v_Tuples__Tup11 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11) = (v_Tuples__Tup11 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10 y11) -> (x1 = y1) /\ ((x2 = y2) /\ ((x3 = y3) /\ ((x4 = y4) /\ ((x5 = y5) /\ ((x6 = y6) /\ ((x7 = y7) /\ ((x8 = y8) /\ ((x9 = y9) /\ ((x10 = y10) /\ (x11 = y11)))))))))))
(* declaring type Tuples.tup12 [Z:\Cvk\samples\lib\fs7-interfaces\tuples.fs7(15,0)] *)
predicate v_Tuples__Tup12_p (x1:top) (x2:top) (x3:top) (x4:top) (x5:top) (x6:top) (x7:top) (x8:top) (x9:top) (x10:top) (x11:top) (x12:top)
function v_Tuples__Tup12 (x1:top) (x2:top) (x3:top) (x4:top) (x5:top) (x6:top) (x7:top) (x8:top) (x9:top) (x10:top) (x11:top) (x12:top) : top
function v_Tuples__Tup12__1 (x1:top) : top
function v_Tuples__Tup12__2 (x1:top) : top
function v_Tuples__Tup12__3 (x1:top) : top
function v_Tuples__Tup12__4 (x1:top) : top
function v_Tuples__Tup12__5 (x1:top) : top
function v_Tuples__Tup12__6 (x1:top) : top
function v_Tuples__Tup12__7 (x1:top) : top
function v_Tuples__Tup12__8 (x1:top) : top
function v_Tuples__Tup12__9 (x1:top) : top
function v_Tuples__Tup12__10 (x1:top) : top
function v_Tuples__Tup12__11 (x1:top) : top
function v_Tuples__Tup12__12 (x1:top) : top
axiom a34_v_Tuples__Tup12_Inj: (forall x1:top, x2:top, x3:top, x4:top, x5:top, x6:top, x7:top, x8:top, x9:top, x10:top, x11:top, x12:top. ((v_Tuples__Tup12__1 (v_Tuples__Tup12 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12)) = x1) /\ (((v_Tuples__Tup12__2 (v_Tuples__Tup12 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12)) = x2) /\ (((v_Tuples__Tup12__3 (v_Tuples__Tup12 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12)) = x3) /\ (((v_Tuples__Tup12__4 (v_Tuples__Tup12 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12)) = x4) /\ (((v_Tuples__Tup12__5 (v_Tuples__Tup12 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12)) = x5) /\ (((v_Tuples__Tup12__6 (v_Tuples__Tup12 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12)) = x6) /\ (((v_Tuples__Tup12__7 (v_Tuples__Tup12 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12)) = x7) /\ (((v_Tuples__Tup12__8 (v_Tuples__Tup12 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12)) = x8) /\ (((v_Tuples__Tup12__9 (v_Tuples__Tup12 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12)) = x9) /\ (((v_Tuples__Tup12__10 (v_Tuples__Tup12 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12)) = x10) /\ (((v_Tuples__Tup12__11 (v_Tuples__Tup12 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12)) = x11) /\ ((v_Tuples__Tup12__12 (v_Tuples__Tup12 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12)) = x12)))))))))))) /\ (forall x1:top, x2:top, x3:top, x4:top, x5:top, x6:top, x7:top, x8:top, x9:top, x10:top, x11:top, x12:top,y1:top, y2:top, y3:top, y4:top, y5:top, y6:top, y7:top, y8:top, y9:top, y10:top, y11:top, y12:top. (v_Tuples__Tup12 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12) = (v_Tuples__Tup12 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10 y11 y12) -> (x1 = y1) /\ ((x2 = y2) /\ ((x3 = y3) /\ ((x4 = y4) /\ ((x5 = y5) /\ ((x6 = y6) /\ ((x7 = y7) /\ ((x8 = y8) /\ ((x9 = y9) /\ ((x10 = y10) /\ ((x11 = y11) /\ (x12 = y12))))))))))))
(* declaring type Tuples.tup13 [Z:\Cvk\samples\lib\fs7-interfaces\tuples.fs7(16,0)] *)
predicate v_Tuples__Tup13_p (x1:top) (x2:top) (x3:top) (x4:top) (x5:top) (x6:top) (x7:top) (x8:top) (x9:top) (x10:top) (x11:top) (x12:top) (x13:top)
function v_Tuples__Tup13 (x1:top) (x2:top) (x3:top) (x4:top) (x5:top) (x6:top) (x7:top) (x8:top) (x9:top) (x10:top) (x11:top) (x12:top) (x13:top) : top
function v_Tuples__Tup13__1 (x1:top) : top
function v_Tuples__Tup13__2 (x1:top) : top
function v_Tuples__Tup13__3 (x1:top) : top
function v_Tuples__Tup13__4 (x1:top) : top
function v_Tuples__Tup13__5 (x1:top) : top
function v_Tuples__Tup13__6 (x1:top) : top
function v_Tuples__Tup13__7 (x1:top) : top
function v_Tuples__Tup13__8 (x1:top) : top
function v_Tuples__Tup13__9 (x1:top) : top
function v_Tuples__Tup13__10 (x1:top) : top
function v_Tuples__Tup13__11 (x1:top) : top
function v_Tuples__Tup13__12 (x1:top) : top
function v_Tuples__Tup13__13 (x1:top) : top
axiom a35_v_Tuples__Tup13_Inj: (forall x1:top, x2:top, x3:top, x4:top, x5:top, x6:top, x7:top, x8:top, x9:top, x10:top, x11:top, x12:top, x13:top. ((v_Tuples__Tup13__1 (v_Tuples__Tup13 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13)) = x1) /\ (((v_Tuples__Tup13__2 (v_Tuples__Tup13 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13)) = x2) /\ (((v_Tuples__Tup13__3 (v_Tuples__Tup13 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13)) = x3) /\ (((v_Tuples__Tup13__4 (v_Tuples__Tup13 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13)) = x4) /\ (((v_Tuples__Tup13__5 (v_Tuples__Tup13 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13)) = x5) /\ (((v_Tuples__Tup13__6 (v_Tuples__Tup13 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13)) = x6) /\ (((v_Tuples__Tup13__7 (v_Tuples__Tup13 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13)) = x7) /\ (((v_Tuples__Tup13__8 (v_Tuples__Tup13 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13)) = x8) /\ (((v_Tuples__Tup13__9 (v_Tuples__Tup13 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13)) = x9) /\ (((v_Tuples__Tup13__10 (v_Tuples__Tup13 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13)) = x10) /\ (((v_Tuples__Tup13__11 (v_Tuples__Tup13 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13)) = x11) /\ (((v_Tuples__Tup13__12 (v_Tuples__Tup13 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13)) = x12) /\ ((v_Tuples__Tup13__13 (v_Tuples__Tup13 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13)) = x13))))))))))))) /\ (forall x1:top, x2:top, x3:top, x4:top, x5:top, x6:top, x7:top, x8:top, x9:top, x10:top, x11:top, x12:top, x13:top,y1:top, y2:top, y3:top, y4:top, y5:top, y6:top, y7:top, y8:top, y9:top, y10:top, y11:top, y12:top, y13:top. (v_Tuples__Tup13 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13) = (v_Tuples__Tup13 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10 y11 y12 y13) -> (x1 = y1) /\ ((x2 = y2) /\ ((x3 = y3) /\ ((x4 = y4) /\ ((x5 = y5) /\ ((x6 = y6) /\ ((x7 = y7) /\ ((x8 = y8) /\ ((x9 = y9) /\ ((x10 = y10) /\ ((x11 = y11) /\ ((x12 = y12) /\ (x13 = y13)))))))))))))
(* declaring type Tuples.tup14 [Z:\Cvk\samples\lib\fs7-interfaces\tuples.fs7(17,0)] *)
predicate v_Tuples__Tup14_p (x1:top) (x2:top) (x3:top) (x4:top) (x5:top) (x6:top) (x7:top) (x8:top) (x9:top) (x10:top) (x11:top) (x12:top) (x13:top) (x14:top)
function v_Tuples__Tup14 (x1:top) (x2:top) (x3:top) (x4:top) (x5:top) (x6:top) (x7:top) (x8:top) (x9:top) (x10:top) (x11:top) (x12:top) (x13:top) (x14:top) : top
function v_Tuples__Tup14__1 (x1:top) : top
function v_Tuples__Tup14__2 (x1:top) : top
function v_Tuples__Tup14__3 (x1:top) : top
function v_Tuples__Tup14__4 (x1:top) : top
function v_Tuples__Tup14__5 (x1:top) : top
function v_Tuples__Tup14__6 (x1:top) : top
function v_Tuples__Tup14__7 (x1:top) : top
function v_Tuples__Tup14__8 (x1:top) : top
function v_Tuples__Tup14__9 (x1:top) : top
function v_Tuples__Tup14__10 (x1:top) : top
function v_Tuples__Tup14__11 (x1:top) : top
function v_Tuples__Tup14__12 (x1:top) : top
function v_Tuples__Tup14__13 (x1:top) : top
function v_Tuples__Tup14__14 (x1:top) : top
axiom a36_v_Tuples__Tup14_Inj: (forall x1:top, x2:top, x3:top, x4:top, x5:top, x6:top, x7:top, x8:top, x9:top, x10:top, x11:top, x12:top, x13:top, x14:top. ((v_Tuples__Tup14__1 (v_Tuples__Tup14 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14)) = x1) /\ (((v_Tuples__Tup14__2 (v_Tuples__Tup14 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14)) = x2) /\ (((v_Tuples__Tup14__3 (v_Tuples__Tup14 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14)) = x3) /\ (((v_Tuples__Tup14__4 (v_Tuples__Tup14 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14)) = x4) /\ (((v_Tuples__Tup14__5 (v_Tuples__Tup14 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14)) = x5) /\ (((v_Tuples__Tup14__6 (v_Tuples__Tup14 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14)) = x6) /\ (((v_Tuples__Tup14__7 (v_Tuples__Tup14 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14)) = x7) /\ (((v_Tuples__Tup14__8 (v_Tuples__Tup14 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14)) = x8) /\ (((v_Tuples__Tup14__9 (v_Tuples__Tup14 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14)) = x9) /\ (((v_Tuples__Tup14__10 (v_Tuples__Tup14 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14)) = x10) /\ (((v_Tuples__Tup14__11 (v_Tuples__Tup14 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14)) = x11) /\ (((v_Tuples__Tup14__12 (v_Tuples__Tup14 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14)) = x12) /\ (((v_Tuples__Tup14__13 (v_Tuples__Tup14 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14)) = x13) /\ ((v_Tuples__Tup14__14 (v_Tuples__Tup14 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14)) = x14)))))))))))))) /\ (forall x1:top, x2:top, x3:top, x4:top, x5:top, x6:top, x7:top, x8:top, x9:top, x10:top, x11:top, x12:top, x13:top, x14:top,y1:top, y2:top, y3:top, y4:top, y5:top, y6:top, y7:top, y8:top, y9:top, y10:top, y11:top, y12:top, y13:top, y14:top. (v_Tuples__Tup14 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14) = (v_Tuples__Tup14 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10 y11 y12 y13 y14) -> (x1 = y1) /\ ((x2 = y2) /\ ((x3 = y3) /\ ((x4 = y4) /\ ((x5 = y5) /\ ((x6 = y6) /\ ((x7 = y7) /\ ((x8 = y8) /\ ((x9 = y9) /\ ((x10 = y10) /\ ((x11 = y11) /\ ((x12 = y12) /\ ((x13 = y13) /\ (x14 = y14))))))))))))))
(* declaring type Tuples.tup15 [Z:\Cvk\samples\lib\fs7-interfaces\tuples.fs7(18,0)] *)
predicate v_Tuples__Tup15_p (x1:top) (x2:top) (x3:top) (x4:top) (x5:top) (x6:top) (x7:top) (x8:top) (x9:top) (x10:top) (x11:top) (x12:top) (x13:top) (x14:top) (x15:top)
function v_Tuples__Tup15 (x1:top) (x2:top) (x3:top) (x4:top) (x5:top) (x6:top) (x7:top) (x8:top) (x9:top) (x10:top) (x11:top) (x12:top) (x13:top) (x14:top) (x15:top) : top
function v_Tuples__Tup15__1 (x1:top) : top
function v_Tuples__Tup15__2 (x1:top) : top
function v_Tuples__Tup15__3 (x1:top) : top
function v_Tuples__Tup15__4 (x1:top) : top
function v_Tuples__Tup15__5 (x1:top) : top
function v_Tuples__Tup15__6 (x1:top) : top
function v_Tuples__Tup15__7 (x1:top) : top
function v_Tuples__Tup15__8 (x1:top) : top
function v_Tuples__Tup15__9 (x1:top) : top
function v_Tuples__Tup15__10 (x1:top) : top
function v_Tuples__Tup15__11 (x1:top) : top
function v_Tuples__Tup15__12 (x1:top) : top
function v_Tuples__Tup15__13 (x1:top) : top
function v_Tuples__Tup15__14 (x1:top) : top
function v_Tuples__Tup15__15 (x1:top) : top
axiom a37_v_Tuples__Tup15_Inj: (forall x1:top, x2:top, x3:top, x4:top, x5:top, x6:top, x7:top, x8:top, x9:top, x10:top, x11:top, x12:top, x13:top, x14:top, x15:top. ((v_Tuples__Tup15__1 (v_Tuples__Tup15 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15)) = x1) /\ (((v_Tuples__Tup15__2 (v_Tuples__Tup15 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15)) = x2) /\ (((v_Tuples__Tup15__3 (v_Tuples__Tup15 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15)) = x3) /\ (((v_Tuples__Tup15__4 (v_Tuples__Tup15 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15)) = x4) /\ (((v_Tuples__Tup15__5 (v_Tuples__Tup15 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15)) = x5) /\ (((v_Tuples__Tup15__6 (v_Tuples__Tup15 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15)) = x6) /\ (((v_Tuples__Tup15__7 (v_Tuples__Tup15 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15)) = x7) /\ (((v_Tuples__Tup15__8 (v_Tuples__Tup15 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15)) = x8) /\ (((v_Tuples__Tup15__9 (v_Tuples__Tup15 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15)) = x9) /\ (((v_Tuples__Tup15__10 (v_Tuples__Tup15 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15)) = x10) /\ (((v_Tuples__Tup15__11 (v_Tuples__Tup15 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15)) = x11) /\ (((v_Tuples__Tup15__12 (v_Tuples__Tup15 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15)) = x12) /\ (((v_Tuples__Tup15__13 (v_Tuples__Tup15 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15)) = x13) /\ (((v_Tuples__Tup15__14 (v_Tuples__Tup15 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15)) = x14) /\ ((v_Tuples__Tup15__15 (v_Tuples__Tup15 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15)) = x15))))))))))))))) /\ (forall x1:top, x2:top, x3:top, x4:top, x5:top, x6:top, x7:top, x8:top, x9:top, x10:top, x11:top, x12:top, x13:top, x14:top, x15:top,y1:top, y2:top, y3:top, y4:top, y5:top, y6:top, y7:top, y8:top, y9:top, y10:top, y11:top, y12:top, y13:top, y14:top, y15:top. (v_Tuples__Tup15 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15) = (v_Tuples__Tup15 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10 y11 y12 y13 y14 y15) -> (x1 = y1) /\ ((x2 = y2) /\ ((x3 = y3) /\ ((x4 = y4) /\ ((x5 = y5) /\ ((x6 = y6) /\ ((x7 = y7) /\ ((x8 = y8) /\ ((x9 = y9) /\ ((x10 = y10) /\ ((x11 = y11) /\ ((x12 = y12) /\ ((x13 = y13) /\ ((x14 = y14) /\ (x15 = y15)))))))))))))))
(* declaring type Tuples.tup16 [Z:\Cvk\samples\lib\fs7-interfaces\tuples.fs7(19,0)] *)
predicate v_Tuples__Tup16_p (x1:top) (x2:top) (x3:top) (x4:top) (x5:top) (x6:top) (x7:top) (x8:top) (x9:top) (x10:top) (x11:top) (x12:top) (x13:top) (x14:top) (x15:top) (x16:top)
function v_Tuples__Tup16 (x1:top) (x2:top) (x3:top) (x4:top) (x5:top) (x6:top) (x7:top) (x8:top) (x9:top) (x10:top) (x11:top) (x12:top) (x13:top) (x14:top) (x15:top) (x16:top) : top
function v_Tuples__Tup16__1 (x1:top) : top
function v_Tuples__Tup16__2 (x1:top) : top
function v_Tuples__Tup16__3 (x1:top) : top
function v_Tuples__Tup16__4 (x1:top) : top
function v_Tuples__Tup16__5 (x1:top) : top
function v_Tuples__Tup16__6 (x1:top) : top
function v_Tuples__Tup16__7 (x1:top) : top
function v_Tuples__Tup16__8 (x1:top) : top
function v_Tuples__Tup16__9 (x1:top) : top
function v_Tuples__Tup16__10 (x1:top) : top
function v_Tuples__Tup16__11 (x1:top) : top
function v_Tuples__Tup16__12 (x1:top) : top
function v_Tuples__Tup16__13 (x1:top) : top
function v_Tuples__Tup16__14 (x1:top) : top
function v_Tuples__Tup16__15 (x1:top) : top
function v_Tuples__Tup16__16 (x1:top) : top
axiom a38_v_Tuples__Tup16_Inj: (forall x1:top, x2:top, x3:top, x4:top, x5:top, x6:top, x7:top, x8:top, x9:top, x10:top, x11:top, x12:top, x13:top, x14:top, x15:top, x16:top. ((v_Tuples__Tup16__1 (v_Tuples__Tup16 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15 x16)) = x1) /\ (((v_Tuples__Tup16__2 (v_Tuples__Tup16 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15 x16)) = x2) /\ (((v_Tuples__Tup16__3 (v_Tuples__Tup16 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15 x16)) = x3) /\ (((v_Tuples__Tup16__4 (v_Tuples__Tup16 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15 x16)) = x4) /\ (((v_Tuples__Tup16__5 (v_Tuples__Tup16 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15 x16)) = x5) /\ (((v_Tuples__Tup16__6 (v_Tuples__Tup16 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15 x16)) = x6) /\ (((v_Tuples__Tup16__7 (v_Tuples__Tup16 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15 x16)) = x7) /\ (((v_Tuples__Tup16__8 (v_Tuples__Tup16 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15 x16)) = x8) /\ (((v_Tuples__Tup16__9 (v_Tuples__Tup16 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15 x16)) = x9) /\ (((v_Tuples__Tup16__10 (v_Tuples__Tup16 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15 x16)) = x10) /\ (((v_Tuples__Tup16__11 (v_Tuples__Tup16 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15 x16)) = x11) /\ (((v_Tuples__Tup16__12 (v_Tuples__Tup16 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15 x16)) = x12) /\ (((v_Tuples__Tup16__13 (v_Tuples__Tup16 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15 x16)) = x13) /\ (((v_Tuples__Tup16__14 (v_Tuples__Tup16 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15 x16)) = x14) /\ (((v_Tuples__Tup16__15 (v_Tuples__Tup16 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15 x16)) = x15) /\ ((v_Tuples__Tup16__16 (v_Tuples__Tup16 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15 x16)) = x16)))))))))))))))) /\ (forall x1:top, x2:top, x3:top, x4:top, x5:top, x6:top, x7:top, x8:top, x9:top, x10:top, x11:top, x12:top, x13:top, x14:top, x15:top, x16:top,y1:top, y2:top, y3:top, y4:top, y5:top, y6:top, y7:top, y8:top, y9:top, y10:top, y11:top, y12:top, y13:top, y14:top, y15:top, y16:top. (v_Tuples__Tup16 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15 x16) = (v_Tuples__Tup16 y1 y2 y3 y4 y5 y6 y7 y8 y9 y10 y11 y12 y13 y14 y15 y16) -> (x1 = y1) /\ ((x2 = y2) /\ ((x3 = y3) /\ ((x4 = y4) /\ ((x5 = y5) /\ ((x6 = y6) /\ ((x7 = y7) /\ ((x8 = y8) /\ ((x9 = y9) /\ ((x10 = y10) /\ ((x11 = y11) /\ ((x12 = y12) /\ ((x13 = y13) /\ ((x14 = y14) /\ ((x15 = y15) /\ (x16 = y16))))))))))))))))
(* declaring type Pi.postpred [Z:\Cvk\samples\lib\fs7-interfaces\pi.fs7(32,0)] *)
predicate v_Pi__Post_p (x1:top) (x2:top) (x3:top)
function v_Pi__Post (x1:top) (x2:top) (x3:top) : top
function v_Pi__Post__1 (x1:top) : top
function v_Pi__Post__2 (x1:top) : top
function v_Pi__Post__3 (x1:top) : top
axiom a39_v_Pi__Post_Inj: (forall x1:top, x2:top, x3:top. ((v_Pi__Post__1 (v_Pi__Post x1 x2 x3)) = x1) /\ (((v_Pi__Post__2 (v_Pi__Post x1 x2 x3)) = x2) /\ ((v_Pi__Post__3 (v_Pi__Post x1 x2 x3)) = x3))) /\ (forall x1:top, x2:top, x3:top,y1:top, y2:top, y3:top. (v_Pi__Post x1 x2 x3) = (v_Pi__Post y1 y2 y3) -> (x1 = y1) /\ ((x2 = y2) /\ (x3 = y3)))
predicate v_Pi__Post2_p (x1:top) (x2:top) (x3:top)
function v_Pi__Post2 (x1:top) (x2:top) (x3:top) : top
function v_Pi__Post2__1 (x1:top) : top
function v_Pi__Post2__2 (x1:top) : top
function v_Pi__Post2__3 (x1:top) : top
axiom a40_v_Pi__Post2_Inj: (forall x1:top, x2:top, x3:top. ((v_Pi__Post2__1 (v_Pi__Post2 x1 x2 x3)) = x1) /\ (((v_Pi__Post2__2 (v_Pi__Post2 x1 x2 x3)) = x2) /\ ((v_Pi__Post2__3 (v_Pi__Post2 x1 x2 x3)) = x3))) /\ (forall x1:top, x2:top, x3:top,y1:top, y2:top, y3:top. (v_Pi__Post2 x1 x2 x3) = (v_Pi__Post2 y1 y2 y3) -> (x1 = y1) /\ ((x2 = y2) /\ (x3 = y3)))
axiom a41_v_Pi__Post2_Disj: forall x0:top, x1:top, x2:top, x3:top, x4:top, x5:top. not((v_Pi__Post x0 x1 x2) = (v_Pi__Post2 x3 x4 x5))
predicate v_Pi__Pre_p (x1:top) (x2:top)
function v_Pi__Pre (x1:top) (x2:top) : top
function v_Pi__Pre__1 (x1:top) : top
function v_Pi__Pre__2 (x1:top) : top
axiom a42_v_Pi__Pre_Inj: (forall x1:top, x2:top. ((v_Pi__Pre__1 (v_Pi__Pre x1 x2)) = x1) /\ ((v_Pi__Pre__2 (v_Pi__Pre x1 x2)) = x2)) /\ (forall x1:top, x2:top,y1:top, y2:top. (v_Pi__Pre x1 x2) = (v_Pi__Pre y1 y2) -> (x1 = y1) /\ (x2 = y2))
axiom a43_v_Pi__Pre_Disj: forall x0:top, x1:top, x2:top, x3:top, x4:top. not((v_Pi__Post2 x0 x1 x2) = (v_Pi__Pre x3 x4))
axiom a44_v_Pi__Pre_Disj: forall x0:top, x1:top, x2:top, x3:top, x4:top. not((v_Pi__Post x0 x1 x2) = (v_Pi__Pre x3 x4))
predicate v_Pi__Pre2_p (x1:top) (x2:top)
function v_Pi__Pre2 (x1:top) (x2:top) : top
function v_Pi__Pre2__1 (x1:top) : top
function v_Pi__Pre2__2 (x1:top) : top
axiom a45_v_Pi__Pre2_Inj: (forall x1:top, x2:top. ((v_Pi__Pre2__1 (v_Pi__Pre2 x1 x2)) = x1) /\ ((v_Pi__Pre2__2 (v_Pi__Pre2 x1 x2)) = x2)) /\ (forall x1:top, x2:top,y1:top, y2:top. (v_Pi__Pre2 x1 x2) = (v_Pi__Pre2 y1 y2) -> (x1 = y1) /\ (x2 = y2))
axiom a46_v_Pi__Pre2_Disj: forall x0:top, x1:top, x2:top, x3:top. not((v_Pi__Pre x0 x1) = (v_Pi__Pre2 x2 x3))
axiom a47_v_Pi__Pre2_Disj: forall x0:top, x1:top, x2:top, x3:top, x4:top. not((v_Pi__Post2 x0 x1 x2) = (v_Pi__Pre2 x3 x4))
axiom a48_v_Pi__Pre2_Disj: forall x0:top, x1:top, x2:top, x3:top, x4:top. not((v_Pi__Post x0 x1 x2) = (v_Pi__Pre2 x3 x4))
predicate v_Pi__Call_p (x1:top) (x2:top)
function v_Pi__Call (x1:top) (x2:top) : top
function v_Pi__Call__1 (x1:top) : top
function v_Pi__Call__2 (x1:top) : top
axiom a49_v_Pi__Call_Inj: (forall x1:top, x2:top. ((v_Pi__Call__1 (v_Pi__Call x1 x2)) = x1) /\ ((v_Pi__Call__2 (v_Pi__Call x1 x2)) = x2)) /\ (forall x1:top, x2:top,y1:top, y2:top. (v_Pi__Call x1 x2) = (v_Pi__Call y1 y2) -> (x1 = y1) /\ (x2 = y2))
axiom a50_v_Pi__Call_Disj: forall x0:top, x1:top, x2:top, x3:top. not((v_Pi__Pre2 x0 x1) = (v_Pi__Call x2 x3))
axiom a51_v_Pi__Call_Disj: forall x0:top, x1:top, x2:top, x3:top. not((v_Pi__Pre x0 x1) = (v_Pi__Call x2 x3))
axiom a52_v_Pi__Call_Disj: forall x0:top, x1:top, x2:top, x3:top, x4:top. not((v_Pi__Post2 x0 x1 x2) = (v_Pi__Call x3 x4))
axiom a53_v_Pi__Call_Disj: forall x0:top, x1:top, x2:top, x3:top, x4:top. not((v_Pi__Post x0 x1 x2) = (v_Pi__Call x3 x4))
predicate v_Pi__Return_p (x1:top) (x2:top) (x3:top)
function v_Pi__Return (x1:top) (x2:top) (x3:top) : top
function v_Pi__Return__1 (x1:top) : top
function v_Pi__Return__2 (x1:top) : top
function v_Pi__Return__3 (x1:top) : top
axiom a54_v_Pi__Return_Inj: (forall x1:top, x2:top, x3:top. ((v_Pi__Return__1 (v_Pi__Return x1 x2 x3)) = x1) /\ (((v_Pi__Return__2 (v_Pi__Return x1 x2 x3)) = x2) /\ ((v_Pi__Return__3 (v_Pi__Return x1 x2 x3)) = x3))) /\ (forall x1:top, x2:top, x3:top,y1:top, y2:top, y3:top. (v_Pi__Return x1 x2 x3) = (v_Pi__Return y1 y2 y3) -> (x1 = y1) /\ ((x2 = y2) /\ (x3 = y3)))
axiom a55_v_Pi__Return_Disj: forall x0:top, x1:top, x2:top, x3:top, x4:top. not((v_Pi__Call x0 x1) = (v_Pi__Return x2 x3 x4))
axiom a56_v_Pi__Return_Disj: forall x0:top, x1:top, x2:top, x3:top, x4:top. not((v_Pi__Pre2 x0 x1) = (v_Pi__Return x2 x3 x4))
axiom a57_v_Pi__Return_Disj: forall x0:top, x1:top, x2:top, x3:top, x4:top. not((v_Pi__Pre x0 x1) = (v_Pi__Return x2 x3 x4))
axiom a58_v_Pi__Return_Disj: forall x0:top, x1:top, x2:top, x3:top, x4:top, x5:top. not((v_Pi__Post2 x0 x1 x2) = (v_Pi__Return x3 x4 x5))
axiom a59_v_Pi__Return_Disj: forall x0:top, x1:top, x2:top, x3:top, x4:top, x5:top. not((v_Pi__Post x0 x1 x2) = (v_Pi__Return x3 x4 x5))
predicate v_Pi__Deterministic_p (x1:top)
function v_Pi__Deterministic (x1:top) : top
function v_Pi__Deterministic__1 (x1:top) : top
axiom a60_v_Pi__Deterministic_Inj: (forall x1:top. (v_Pi__Deterministic__1 (v_Pi__Deterministic x1)) = x1) /\ (forall x1:top,y1:top. (v_Pi__Deterministic x1) = (v_Pi__Deterministic y1) -> x1 = y1)
axiom a61_v_Pi__Deterministic_Disj: forall x0:top, x1:top, x2:top, x3:top. not((v_Pi__Return x0 x1 x2) = (v_Pi__Deterministic x3))
axiom a62_v_Pi__Deterministic_Disj: forall x0:top, x1:top, x2:top. not((v_Pi__Call x0 x1) = (v_Pi__Deterministic x2))
axiom a63_v_Pi__Deterministic_Disj: forall x0:top, x1:top, x2:top. not((v_Pi__Pre2 x0 x1) = (v_Pi__Deterministic x2))
axiom a64_v_Pi__Deterministic_Disj: forall x0:top, x1:top, x2:top. not((v_Pi__Pre x0 x1) = (v_Pi__Deterministic x2))
axiom a65_v_Pi__Deterministic_Disj: forall x0:top, x1:top, x2:top, x3:top. not((v_Pi__Post2 x0 x1 x2) = (v_Pi__Deterministic x3))
axiom a66_v_Pi__Deterministic_Disj: forall x0:top, x1:top, x2:top, x3:top. not((v_Pi__Post x0 x1 x2) = (v_Pi__Deterministic x3))
predicate v_Pi__Determ_p (x1:top)
function v_Pi__Determ (x1:top) : top
function v_Pi__Determ__1 (x1:top) : top
axiom a67_v_Pi__Determ_Inj: (forall x1:top. (v_Pi__Determ__1 (v_Pi__Determ x1)) = x1) /\ (forall x1:top,y1:top. (v_Pi__Determ x1) = (v_Pi__Determ y1) -> x1 = y1)
axiom a68_v_Pi__Determ_Disj: forall x0:top, x1:top. not((v_Pi__Deterministic x0) = (v_Pi__Determ x1))
axiom a69_v_Pi__Determ_Disj: forall x0:top, x1:top, x2:top, x3:top. not((v_Pi__Return x0 x1 x2) = (v_Pi__Determ x3))
axiom a70_v_Pi__Determ_Disj: forall x0:top, x1:top, x2:top. not((v_Pi__Call x0 x1) = (v_Pi__Determ x2))
axiom a71_v_Pi__Determ_Disj: forall x0:top, x1:top, x2:top. not((v_Pi__Pre2 x0 x1) = (v_Pi__Determ x2))
axiom a72_v_Pi__Determ_Disj: forall x0:top, x1:top, x2:top. not((v_Pi__Pre x0 x1) = (v_Pi__Determ x2))
axiom a73_v_Pi__Determ_Disj: forall x0:top, x1:top, x2:top, x3:top. not((v_Pi__Post2 x0 x1 x2) = (v_Pi__Determ x3))
axiom a74_v_Pi__Determ_Disj: forall x0:top, x1:top, x2:top, x3:top. not((v_Pi__Post x0 x1 x2) = (v_Pi__Determ x3))
(* declaring type F7.preds [Z:\Cvk\samples\lib\fs7-interfaces\formulas.fs7(3,10)] *)
predicate v_F7__Equals_p (x1:top) (x2:top)
(* assume (!x. (!y. F7.Equals(x, y) <=> x = y)) [Z:\Cvk\samples\lib\fs7-interfaces\formulas.fs7(4,0)] *)
axiom a75_asm: (forall v_x:top. (forall v_y:top. ((v_F7__Equals_p v_x v_y) <-> (v_x = v_y))))
(* declaring type Error.OptResult [C:\cygwin\home\Pierre-Yves\mitls\Platform\Error.fs7(3,0)] *)
predicate v_Error__Error_p (x1:top)
function v_Error__Error (x1:top) : top
function v_Error__Error__1 (x1:top) : top
axiom a76_v_Error__Error_Inj: (forall x1:top. (v_Error__Error__1 (v_Error__Error x1)) = x1) /\ (forall x1:top,y1:top. (v_Error__Error x1) = (v_Error__Error y1) -> x1 = y1)
predicate v_Error__Correct_p (x1:top)
function v_Error__Correct (x1:top) : top
function v_Error__Correct__1 (x1:top) : top
axiom a77_v_Error__Correct_Inj: (forall x1:top. (v_Error__Correct__1 (v_Error__Correct x1)) = x1) /\ (forall x1:top,y1:top. (v_Error__Correct x1) = (v_Error__Correct y1) -> x1 = y1)
axiom a78_v_Error__Correct_Disj: forall x0:top, x1:top. not((v_Error__Error x0) = (v_Error__Correct x1))
(* declaring value Error.perror [C:\cygwin\home\Pierre-Yves\mitls\Platform\Error.fs7(7,0)] *)
function v_Error__perror : top
(* declaring value Error.correct [C:\cygwin\home\Pierre-Yves\mitls\Platform\Error.fs7(9,0)] *)
function v_Error__correct : top
(* declaring value Error.unexpected [C:\cygwin\home\Pierre-Yves\mitls\Platform\Error.fs7(16,0)] *)
function v_Error__unexpected : top
(* declaring value Error.unreachable [C:\cygwin\home\Pierre-Yves\mitls\Platform\Error.fs7(17,0)] *)
function v_Error__unreachable : top
(* declaring value Date.now [C:\cygwin\home\Pierre-Yves\mitls\Platform\Date.fs7(5,0)] *)
function v_Date__now : top
(* declaring value Date.secondsFromDawn [C:\cygwin\home\Pierre-Yves\mitls\Platform\Date.fs7(6,0)] *)
function v_Date__secondsFromDawn : top
(* declaring value Date.newTimeSpan [C:\cygwin\home\Pierre-Yves\mitls\Platform\Date.fs7(7,0)] *)
function v_Date__newTimeSpan : top
(* declaring value Date.addTimeSpan [C:\cygwin\home\Pierre-Yves\mitls\Platform\Date.fs7(8,0)] *)
function v_Date__addTimeSpan : top
(* declaring value Date.greaterDateTime [C:\cygwin\home\Pierre-Yves\mitls\Platform\Date.fs7(9,0)] *)
function v_Date__greaterDateTime : top
(* declaring fun Bytes.B [C:\cygwin\home\Pierre-Yves\mitls\Platform\Bytes.fs7(11,9)] *)
function v_Bytes__B (x1:top) : top
(* declaring value Bytes.empty_bytes [C:\cygwin\home\Pierre-Yves\mitls\Platform\Bytes.fs7(12,0)] *)
function v_Bytes__empty_bytes : top
(* assume Bytes.B (Bytes.empty_bytes) = array_of_list op_Nil () [C:\cygwin\home\Pierre-Yves\mitls\Platform\Bytes.fs7(12,0)] *)
axiom a79_asm: ((v_Bytes__B v_Bytes__empty_bytes) = (v_Pervasives__array_of_list (v_Pervasives__op_Nil )))
(* declaring value Bytes.abytes [C:\cygwin\home\Pierre-Yves\mitls\Platform\Bytes.fs7(13,0)] *)
function v_Bytes__abytes : top
(* declaring value Bytes.abyte [C:\cygwin\home\Pierre-Yves\mitls\Platform\Bytes.fs7(14,0)] *)
function v_Bytes__abyte : top
(* declaring value Bytes.abyte2 [C:\cygwin\home\Pierre-Yves\mitls\Platform\Bytes.fs7(15,0)] *)
function v_Bytes__abyte2 : top
(* declaring value Bytes.cbytes [C:\cygwin\home\Pierre-Yves\mitls\Platform\Bytes.fs7(17,0)] *)
function v_Bytes__cbytes : top
(* declaring value Bytes.cbyte [C:\cygwin\home\Pierre-Yves\mitls\Platform\Bytes.fs7(18,0)] *)
function v_Bytes__cbyte : top
(* declaring value Bytes.cbyte2 [C:\cygwin\home\Pierre-Yves\mitls\Platform\Bytes.fs7(19,0)] *)
function v_Bytes__cbyte2 : top
(* assume (!b. (!b'. Bytes.B (b) = Bytes.B (b') => b = b')) [C:\cygwin\home\Pierre-Yves\mitls\Platform\Bytes.fs7(22,0)] *)
axiom a80_asm: (forall v_b:top. (forall v_b':top. (((v_Bytes__B v_b) = (v_Bytes__B v_b')) -> (v_b = v_b'))))
(* declaring fun Bytes.BLength [C:\cygwin\home\Pierre-Yves\mitls\Platform\Bytes.fs7(26,9)] *)
function v_Bytes__BLength (x1:top) : top
(* declaring fun Bytes.Length [C:\cygwin\home\Pierre-Yves\mitls\Platform\Bytes.fs7(27,9)] *)
function v_Bytes__Length (x1:top) : top
(* assume (!x. (!y. Bytes.BLength (bop_ArrayAppend (x, y)) = bop_Addition (Bytes.BLength (x), Bytes.BLength (y)))) [C:\cygwin\home\Pierre-Yves\mitls\Platform\Bytes.fs7(29,0)] *)
axiom a81_asm: (forall v_x:top. (forall v_y:top. ((v_Bytes__BLength (v_Pervasives__bop_ArrayAppend v_x v_y)) = ((v_Bytes__BLength v_x) + (v_Bytes__BLength v_y)))))
(* assume (!x. Bytes.Length (x) = Bytes.BLength (Bytes.B (x))) [C:\cygwin\home\Pierre-Yves\mitls\Platform\Bytes.fs7(30,0)] *)
axiom a82_asm: (forall v_x:top. ((v_Bytes__Length v_x) = (v_Bytes__BLength (v_Bytes__B v_x))))
(* assume (!b. Bytes.BLength (b) = 0 => b = array_of_list op_Nil ()) [C:\cygwin\home\Pierre-Yves\mitls\Platform\Bytes.fs7(31,0)] *)
axiom a83_asm: (forall v_b:top. (((v_Bytes__BLength v_b) = 0) -> (v_b = (v_Pervasives__array_of_list (v_Pervasives__op_Nil )))))
(* assume (!b. Bytes.Length (b) = 0 => Bytes.B (b) = array_of_list op_Nil ()) [C:\cygwin\home\Pierre-Yves\mitls\Platform\Bytes.fs7(32,0)] *)
axiom a84_asm: (forall v_b:top. (((v_Bytes__Length v_b) = 0) -> ((v_Bytes__B v_b) = (v_Pervasives__array_of_list (v_Pervasives__op_Nil )))))
(* declaring value Bytes.length [C:\cygwin\home\Pierre-Yves\mitls\Platform\Bytes.fs7(34,0)] *)
function v_Bytes__length : top
(* declaring value Bytes.createBytes [C:\cygwin\home\Pierre-Yves\mitls\Platform\Bytes.fs7(38,0)] *)
function v_Bytes__createBytes : top
(* declaring value Bytes.equalBytes [C:\cygwin\home\Pierre-Yves\mitls\Platform\Bytes.fs7(40,0)] *)
function v_Bytes__equalBytes : top
(* declaring value Bytes.xor [C:\cygwin\home\Pierre-Yves\mitls\Platform\Bytes.fs7(42,0)] *)
function v_Bytes__xor : top
(* declaring value Bytes.op_AtBar [C:\cygwin\home\Pierre-Yves\mitls\Platform\Bytes.fs7(47,0)] *)
function v_Bytes__op_AtBar : top
(* declaring value Bytes.split [C:\cygwin\home\Pierre-Yves\mitls\Platform\Bytes.fs7(50,0)] *)
function v_Bytes__split : top
(* declaring value Bytes.split2 [C:\cygwin\home\Pierre-Yves\mitls\Platform\Bytes.fs7(54,0)] *)
function v_Bytes__split2 : top
(* assume (!x. bop_ArrayAppend (array_of_list op_Nil (), x) = x) [C:\cygwin\home\Pierre-Yves\mitls\Platform\Bytes.fs7(59,0)] *)
axiom a85_asm: (forall v_x:top. ((v_Pervasives__bop_ArrayAppend (v_Pervasives__array_of_list (v_Pervasives__op_Nil )) v_x) = v_x))
(* assume (!x. bop_ArrayAppend (x, array_of_list op_Nil ()) = x) [C:\cygwin\home\Pierre-Yves\mitls\Platform\Bytes.fs7(60,0)] *)
axiom a86_asm: (forall v_x:top. ((v_Pervasives__bop_ArrayAppend v_x (v_Pervasives__array_of_list (v_Pervasives__op_Nil ))) = v_x))
(* assume (!b1. (!b2. (!c1. (!c2. bop_ArrayAppend (b1, b2) = bop_ArrayAppend (c1, c2) /\ Bytes.BLength (b1) = Bytes.BLength (c1) => b1 = c1 /\ b2 = c2)))) [C:\cygwin\home\Pierre-Yves\mitls\Platform\Bytes.fs7(63,0)] *)
axiom a87_asm: (forall v_b1:top. (forall v_b2:top. (forall v_c1:top. (forall v_c2:top. ((((v_Pervasives__bop_ArrayAppend v_b1 v_b2) = (v_Pervasives__bop_ArrayAppend v_c1 v_c2)) /\ ((v_Bytes__BLength v_b1) = (v_Bytes__BLength v_c1))) -> ((v_b1 = v_c1) /\ (v_b2 = v_c2)))))))
(* assume (!b1. (!b2. (!c1. (!c2. bop_ArrayAppend (b1, b2) = bop_ArrayAppend (c1, c2) /\ Bytes.BLength (b2) = Bytes.BLength (c2) => b1 = c1 /\ b2 = c2)))) [C:\cygwin\home\Pierre-Yves\mitls\Platform\Bytes.fs7(66,0)] *)
axiom a88_asm: (forall v_b1:top. (forall v_b2:top. (forall v_c1:top. (forall v_c2:top. ((((v_Pervasives__bop_ArrayAppend v_b1 v_b2) = (v_Pervasives__bop_ArrayAppend v_c1 v_c2)) /\ ((v_Bytes__BLength v_b2) = (v_Bytes__BLength v_c2))) -> ((v_b1 = v_c1) /\ (v_b2 = v_c2)))))))
(* assume (!b1. (!b2. (!b3. bop_ArrayAppend (bop_ArrayAppend (b1, b2), b3) = bop_ArrayAppend (b1, bop_ArrayAppend (b2, b3))))) [C:\cygwin\home\Pierre-Yves\mitls\Platform\Bytes.fs7(70,0)] *)
axiom a89_asm: (forall v_b1:top. (forall v_b2:top. (forall v_b3:top. ((v_Pervasives__bop_ArrayAppend (v_Pervasives__bop_ArrayAppend v_b1 v_b2) v_b3) = (v_Pervasives__bop_ArrayAppend v_b1 (v_Pervasives__bop_ArrayAppend v_b2 v_b3))))))
(* declaring fun Bytes.IntBytes [C:\cygwin\home\Pierre-Yves\mitls\Platform\Bytes.fs7(74,9)] *)
function v_Bytes__IntBytes (x1:top) (x2:top) : top
(* declaring value Bytes.bytes_of_int [C:\cygwin\home\Pierre-Yves\mitls\Platform\Bytes.fs7(80,0)] *)
function v_Bytes__bytes_of_int : top
(* declaring value Bytes.int_of_bytes [C:\cygwin\home\Pierre-Yves\mitls\Platform\Bytes.fs7(81,0)] *)
function v_Bytes__int_of_bytes : top
(* assume (!l. (!i. Bytes.Length (Bytes.IntBytes (l, i)) = l)) [C:\cygwin\home\Pierre-Yves\mitls\Platform\Bytes.fs7(85,0)] *)
axiom a90_asm: (forall v_l:top. (forall v_i:top. ((v_Bytes__Length (v_Bytes__IntBytes v_l v_i)) = v_l)))
(* assume (!l. (!i0. (!i1. Bytes.IntBytes (l, i0) = Bytes.IntBytes (l, i1) => i0 = i1))) [C:\cygwin\home\Pierre-Yves\mitls\Platform\Bytes.fs7(87,0)] *)
axiom a91_asm: (forall v_l:top. (forall v_i0:top. (forall v_i1:top. (((v_Bytes__IntBytes v_l v_i0) = (v_Bytes__IntBytes v_l v_i1)) -> (v_i0 = v_i1)))))
(* declaring fun Bytes.Utf8 [C:\cygwin\home\Pierre-Yves\mitls\Platform\Bytes.fs7(97,9)] *)
function v_Bytes__Utf8 (x1:top) : top
(* declaring value Bytes.utf8 [C:\cygwin\home\Pierre-Yves\mitls\Platform\Bytes.fs7(98,0)] *)
function v_Bytes__utf8 : top
(* declaring value Bytes.iutf8 [C:\cygwin\home\Pierre-Yves\mitls\Platform\Bytes.fs7(99,0)] *)
function v_Bytes__iutf8 : top
(* assume (!x. (!y. Bytes.Utf8 (x) = Bytes.Utf8 (y) => x = y)) [C:\cygwin\home\Pierre-Yves\mitls\Platform\Bytes.fs7(102,0)] *)
axiom a92_asm: (forall v_x:top. (forall v_y:top. (((v_Bytes__Utf8 v_x) = (v_Bytes__Utf8 v_y)) -> (v_x = v_y))))
(* declaring value Bytes.hexString [C:\cygwin\home\Pierre-Yves\mitls\Platform\Bytes.fs7(104,0)] *)
function v_Bytes__hexString : top
(* declaring value Bytes.todo [C:\cygwin\home\Pierre-Yves\mitls\Platform\Bytes.fs7(108,0)] *)
function v_Bytes__todo : top
(* declaring fun List.ListLength [C:\cygwin\home\Pierre-Yves\mitls\Platform\List.fs7(5,9)] *)
function v_List__ListLength (x1:top) : top
(* assume List.ListLength (op_Nil ()) = 0 [C:\cygwin\home\Pierre-Yves\mitls\Platform\List.fs7(6,0)] *)
axiom a93_asm: ((v_List__ListLength (v_Pervasives__op_Nil )) = 0)
(* assume (!x. (!y. List.ListLength (op_ColonColon (x, y)) = bop_Addition (1, List.ListLength (y)))) [C:\cygwin\home\Pierre-Yves\mitls\Platform\List.fs7(7,0)] *)
axiom a94_asm: (forall v_x:top. (forall v_y:top. ((v_List__ListLength (v_Pervasives__op_ColonColon v_x v_y)) = (1 + (v_List__ListLength v_y)))))
(* assume (!l. Bytes.BLength (array_of_list (l)) = List.ListLength (l)) [C:\cygwin\home\Pierre-Yves\mitls\Platform\List.fs7(8,0)] *)
axiom a95_asm: (forall v_l:top. ((v_Bytes__BLength (v_Pervasives__array_of_list v_l)) = (v_List__ListLength v_l)))
(* declaring fun List.Unfold [C:\cygwin\home\Pierre-Yves\mitls\Platform\List.fs7(11,9)] *)
function v_List__Unfold (x1:top) (x2:top) : top
(* declaring fun List.UnfoldBack [C:\cygwin\home\Pierre-Yves\mitls\Platform\List.fs7(12,9)] *)
function v_List__UnfoldBack (x1:top) (x2:top) : top
(* declaring value List.fold [C:\cygwin\home\Pierre-Yves\mitls\Platform\List.fs7(13,0)] *)
function v_List__fold : top
(* declaring value List.filter [C:\cygwin\home\Pierre-Yves\mitls\Platform\List.fs7(14,0)] *)
function v_List__filter : top
(* declaring value List.foldBack [C:\cygwin\home\Pierre-Yves\mitls\Platform\List.fs7(15,0)] *)
function v_List__foldBack : top
(* declaring value List.exists [C:\cygwin\home\Pierre-Yves\mitls\Platform\List.fs7(16,0)] *)
function v_List__exists : top
(* declaring value List.memr [C:\cygwin\home\Pierre-Yves\mitls\Platform\List.fs7(17,0)] *)
function v_List__memr : top
(* declaring value List.choose [C:\cygwin\home\Pierre-Yves\mitls\Platform\List.fs7(18,0)] *)
function v_List__choose : top
(* declaring value List.tryFind [C:\cygwin\home\Pierre-Yves\mitls\Platform\List.fs7(19,0)] *)
function v_List__tryFind : top
(* declaring value List.listLength [C:\cygwin\home\Pierre-Yves\mitls\Platform\List.fs7(20,0)] *)
function v_List__listLength : top
(* declaring value List.listHead [C:\cygwin\home\Pierre-Yves\mitls\Platform\List.fs7(21,0)] *)
function v_List__listHead : top
(* declaring value List.find [C:\cygwin\home\Pierre-Yves\mitls\Platform\List.fs7(22,0)] *)
function v_List__find : top
(* declaring value List.map [C:\cygwin\home\Pierre-Yves\mitls\Platform\List.fs7(23,0)] *)
function v_List__map : top
(* declaring value CoreRandom.random [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreRandom.fsi(3,0)] *)
function v_CoreRandom__random : top
(* declaring value CoreHash.name [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreHash.fsi(6,0)] *)
function v_CoreHash__name : top
(* declaring value CoreHash.digest [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreHash.fsi(7,0)] *)
function v_CoreHash__digest : top
(* declaring value CoreHash.md5engine [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreHash.fsi(9,0)] *)
function v_CoreHash__md5engine : top
(* declaring value CoreHash.sha1engine [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreHash.fsi(10,0)] *)
function v_CoreHash__sha1engine : top
(* declaring value CoreHash.sha256engine [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreHash.fsi(11,0)] *)
function v_CoreHash__sha256engine : top
(* declaring value CoreHash.sha384engine [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreHash.fsi(12,0)] *)
function v_CoreHash__sha384engine : top
(* declaring value CoreHash.sha512engine [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreHash.fsi(13,0)] *)
function v_CoreHash__sha512engine : top
(* declaring value CoreHash.md5 [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreHash.fsi(15,0)] *)
function v_CoreHash__md5 : top
(* declaring value CoreHash.sha1 [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreHash.fsi(16,0)] *)
function v_CoreHash__sha1 : top
(* declaring value CoreHash.sha256 [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreHash.fsi(17,0)] *)
function v_CoreHash__sha256 : top
(* declaring value CoreHash.sha384 [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreHash.fsi(18,0)] *)
function v_CoreHash__sha384 : top
(* declaring value CoreHash.sha512 [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreHash.fsi(19,0)] *)
function v_CoreHash__sha512 : top
(* declaring value CoreCiphers.aes_cbc_encrypt [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreCiphers.fsi(8,0)] *)
function v_CoreCiphers__aes_cbc_encrypt : top
(* declaring value CoreCiphers.aes_cbc_decrypt [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreCiphers.fsi(9,0)] *)
function v_CoreCiphers__aes_cbc_decrypt : top
(* declaring value CoreCiphers.aes_gcm_encrypt [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreCiphers.fsi(11,0)] *)
function v_CoreCiphers__aes_gcm_encrypt : top
(* declaring value CoreCiphers.aes_gcm_decrypt [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreCiphers.fsi(12,0)] *)
function v_CoreCiphers__aes_gcm_decrypt : top
(* declaring value CoreCiphers.des3_cbc_encrypt [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreCiphers.fsi(14,0)] *)
function v_CoreCiphers__des3_cbc_encrypt : top
(* declaring value CoreCiphers.des3_cbc_decrypt [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreCiphers.fsi(15,0)] *)
function v_CoreCiphers__des3_cbc_decrypt : top
(* declaring value CoreCiphers.rc4create [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreCiphers.fsi(19,0)] *)
function v_CoreCiphers__rc4create : top
(* declaring value CoreCiphers.rc4process [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreCiphers.fsi(20,0)] *)
function v_CoreCiphers__rc4process : top
(* declaring type CoreACiphers.sk [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreACiphers.fsi(4,0)] *)
predicate v_CoreACiphers__RSASKey_p (x1:top)
function v_CoreACiphers__RSASKey (x1:top) : top
function v_CoreACiphers__RSASKey__1 (x1:top) : top
axiom a96_v_CoreACiphers__RSASKey_Inj: (forall x1:top. (v_CoreACiphers__RSASKey__1 (v_CoreACiphers__RSASKey x1)) = x1) /\ (forall x1:top,y1:top. (v_CoreACiphers__RSASKey x1) = (v_CoreACiphers__RSASKey y1) -> x1 = y1)
(* declaring type CoreACiphers.pk [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreACiphers.fsi(5,0)] *)
predicate v_CoreACiphers__RSAPKey_p (x1:top)
function v_CoreACiphers__RSAPKey (x1:top) : top
function v_CoreACiphers__RSAPKey__1 (x1:top) : top
axiom a97_v_CoreACiphers__RSAPKey_Inj: (forall x1:top. (v_CoreACiphers__RSAPKey__1 (v_CoreACiphers__RSAPKey x1)) = x1) /\ (forall x1:top,y1:top. (v_CoreACiphers__RSAPKey x1) = (v_CoreACiphers__RSAPKey y1) -> x1 = y1)
(* declaring value CoreACiphers.gen_key [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreACiphers.fsi(10,0)] *)
function v_CoreACiphers__gen_key : top
(* declaring value CoreACiphers.encrypt_pkcs1 [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreACiphers.fsi(11,0)] *)
function v_CoreACiphers__encrypt_pkcs1 : top
(* declaring value CoreACiphers.decrypt_pkcs1 [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreACiphers.fsi(12,0)] *)
function v_CoreACiphers__decrypt_pkcs1 : top
(* declaring value CoreHMac.name [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreHMac.fsi(7,0)] *)
function v_CoreHMac__name : top
(* declaring value CoreHMac.mac [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreHMac.fsi(8,0)] *)
function v_CoreHMac__mac : top
(* declaring value CoreHMac.md5engine [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreHMac.fsi(10,0)] *)
function v_CoreHMac__md5engine : top
(* declaring value CoreHMac.sha1engine [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreHMac.fsi(11,0)] *)
function v_CoreHMac__sha1engine : top
(* declaring value CoreHMac.sha256engine [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreHMac.fsi(12,0)] *)
function v_CoreHMac__sha256engine : top
(* declaring value CoreHMac.sha384engine [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreHMac.fsi(13,0)] *)
function v_CoreHMac__sha384engine : top
(* declaring value CoreHMac.sha512engine [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreHMac.fsi(14,0)] *)
function v_CoreHMac__sha512engine : top
(* declaring value CoreHMac.md5 [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreHMac.fsi(16,0)] *)
function v_CoreHMac__md5 : top
(* declaring value CoreHMac.sha1 [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreHMac.fsi(17,0)] *)
function v_CoreHMac__sha1 : top
(* declaring value CoreHMac.sha256 [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreHMac.fsi(18,0)] *)
function v_CoreHMac__sha256 : top
(* declaring value CoreHMac.sha384 [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreHMac.fsi(19,0)] *)
function v_CoreHMac__sha384 : top
(* declaring value CoreHMac.sha512 [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreHMac.fsi(20,0)] *)
function v_CoreHMac__sha512 : top
(* declaring type CoreSig.sighash [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreSig.fsi(5,0)] *)
predicate v_CoreSig__SH_MD5_p 
function v_CoreSig__SH_MD5  : top
predicate v_CoreSig__SH_SHA1_p 
function v_CoreSig__SH_SHA1  : top
axiom a98_v_CoreSig__SH_SHA1_Disj: not(v_CoreSig__SH_MD5 = v_CoreSig__SH_SHA1)
predicate v_CoreSig__SH_SHA256_p 
function v_CoreSig__SH_SHA256  : top
axiom a99_v_CoreSig__SH_SHA256_Disj: not(v_CoreSig__SH_SHA1 = v_CoreSig__SH_SHA256)
axiom a100_v_CoreSig__SH_SHA256_Disj: not(v_CoreSig__SH_MD5 = v_CoreSig__SH_SHA256)
predicate v_CoreSig__SH_SHA384_p 
function v_CoreSig__SH_SHA384  : top
axiom a101_v_CoreSig__SH_SHA384_Disj: not(v_CoreSig__SH_SHA256 = v_CoreSig__SH_SHA384)
axiom a102_v_CoreSig__SH_SHA384_Disj: not(v_CoreSig__SH_SHA1 = v_CoreSig__SH_SHA384)
axiom a103_v_CoreSig__SH_SHA384_Disj: not(v_CoreSig__SH_MD5 = v_CoreSig__SH_SHA384)
(* declaring type CoreSig.sigalg [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreSig.fsi(11,0)] *)
predicate v_CoreSig__CORE_SA_RSA_p 
function v_CoreSig__CORE_SA_RSA  : top
predicate v_CoreSig__CORE_SA_DSA_p 
function v_CoreSig__CORE_SA_DSA  : top
axiom a104_v_CoreSig__CORE_SA_DSA_Disj: not(v_CoreSig__CORE_SA_RSA = v_CoreSig__CORE_SA_DSA)
(* declaring type CoreSig.sigskey [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreSig.fsi(16,0)] *)
predicate v_CoreSig__SK_RSA_p (x1:top)
function v_CoreSig__SK_RSA (x1:top) : top
function v_CoreSig__SK_RSA__1 (x1:top) : top
axiom a105_v_CoreSig__SK_RSA_Inj: (forall x1:top. (v_CoreSig__SK_RSA__1 (v_CoreSig__SK_RSA x1)) = x1) /\ (forall x1:top,y1:top. (v_CoreSig__SK_RSA x1) = (v_CoreSig__SK_RSA y1) -> x1 = y1)
predicate v_CoreSig__SK_DSA_p (x1:top)
function v_CoreSig__SK_DSA (x1:top) : top
function v_CoreSig__SK_DSA__1 (x1:top) : top
axiom a106_v_CoreSig__SK_DSA_Inj: (forall x1:top. (v_CoreSig__SK_DSA__1 (v_CoreSig__SK_DSA x1)) = x1) /\ (forall x1:top,y1:top. (v_CoreSig__SK_DSA x1) = (v_CoreSig__SK_DSA y1) -> x1 = y1)
axiom a107_v_CoreSig__SK_DSA_Disj: forall x0:top, x1:top. not((v_CoreSig__SK_RSA x0) = (v_CoreSig__SK_DSA x1))
(* declaring type CoreSig.sigpkey [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreSig.fsi(20,0)] *)
predicate v_CoreSig__PK_RSA_p (x1:top)
function v_CoreSig__PK_RSA (x1:top) : top
function v_CoreSig__PK_RSA__1 (x1:top) : top
axiom a108_v_CoreSig__PK_RSA_Inj: (forall x1:top. (v_CoreSig__PK_RSA__1 (v_CoreSig__PK_RSA x1)) = x1) /\ (forall x1:top,y1:top. (v_CoreSig__PK_RSA x1) = (v_CoreSig__PK_RSA y1) -> x1 = y1)
predicate v_CoreSig__PK_DSA_p (x1:top)
function v_CoreSig__PK_DSA (x1:top) : top
function v_CoreSig__PK_DSA__1 (x1:top) : top
axiom a109_v_CoreSig__PK_DSA_Inj: (forall x1:top. (v_CoreSig__PK_DSA__1 (v_CoreSig__PK_DSA x1)) = x1) /\ (forall x1:top,y1:top. (v_CoreSig__PK_DSA x1) = (v_CoreSig__PK_DSA y1) -> x1 = y1)
axiom a110_v_CoreSig__PK_DSA_Disj: forall x0:top, x1:top. not((v_CoreSig__PK_RSA x0) = (v_CoreSig__PK_DSA x1))
(* declaring value CoreSig.sigalg_of_skey [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreSig.fsi(24,0)] *)
function v_CoreSig__sigalg_of_skey : top
(* declaring value CoreSig.sigalg_of_pkey [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreSig.fsi(25,0)] *)
function v_CoreSig__sigalg_of_pkey : top
(* declaring value CoreSig.gen [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreSig.fsi(31,0)] *)
function v_CoreSig__gen : top
(* declaring value CoreSig.sign [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreSig.fsi(32,0)] *)
function v_CoreSig__sign : top
(* declaring value CoreSig.verify [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreSig.fsi(33,0)] *)
function v_CoreSig__verify : top
(* declaring value CoreDH.check_element [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreDH.fsi(10,0)] *)
function v_CoreDH__check_element : top
(* declaring value CoreDH.gen_params [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreDH.fsi(11,0)] *)
function v_CoreDH__gen_params : top
(* declaring value CoreDH.gen_key [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreDH.fsi(12,0)] *)
function v_CoreDH__gen_key : top
(* declaring value CoreDH.agreement [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreDH.fsi(13,0)] *)
function v_CoreDH__agreement : top
(* declaring value CoreDH.save_params_to_file [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreDH.fsi(16,0)] *)
function v_CoreDH__save_params_to_file : top
(* declaring value CoreDH.load_params_from_file [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreDH.fsi(17,0)] *)
function v_CoreDH__load_params_from_file : top
(* declaring value CoreDH.load_default_params [C:\cygwin\home\Pierre-Yves\mitls\CoreCrypto\CoreDH.fsi(18,0)] *)
function v_CoreDH__load_default_params : top
(* declaring type TLSError.alertDescription [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSError.fs7(5,0)] *)
predicate v_TLSError__AD_close_notify_p 
function v_TLSError__AD_close_notify  : top
predicate v_TLSError__AD_unexpected_message_p 
function v_TLSError__AD_unexpected_message  : top
axiom a111_v_TLSError__AD_unexpected_message_Disj: not(v_TLSError__AD_close_notify = v_TLSError__AD_unexpected_message)
predicate v_TLSError__AD_bad_record_mac_p 
function v_TLSError__AD_bad_record_mac  : top
axiom a112_v_TLSError__AD_bad_record_mac_Disj: not(v_TLSError__AD_unexpected_message = v_TLSError__AD_bad_record_mac)
axiom a113_v_TLSError__AD_bad_record_mac_Disj: not(v_TLSError__AD_close_notify = v_TLSError__AD_bad_record_mac)
predicate v_TLSError__AD_decryption_failed_p 
function v_TLSError__AD_decryption_failed  : top
axiom a114_v_TLSError__AD_decryption_failed_Disj: not(v_TLSError__AD_bad_record_mac = v_TLSError__AD_decryption_failed)
axiom a115_v_TLSError__AD_decryption_failed_Disj: not(v_TLSError__AD_unexpected_message = v_TLSError__AD_decryption_failed)
axiom a116_v_TLSError__AD_decryption_failed_Disj: not(v_TLSError__AD_close_notify = v_TLSError__AD_decryption_failed)
predicate v_TLSError__AD_record_overflow_p 
function v_TLSError__AD_record_overflow  : top
axiom a117_v_TLSError__AD_record_overflow_Disj: not(v_TLSError__AD_decryption_failed = v_TLSError__AD_record_overflow)
axiom a118_v_TLSError__AD_record_overflow_Disj: not(v_TLSError__AD_bad_record_mac = v_TLSError__AD_record_overflow)
axiom a119_v_TLSError__AD_record_overflow_Disj: not(v_TLSError__AD_unexpected_message = v_TLSError__AD_record_overflow)
axiom a120_v_TLSError__AD_record_overflow_Disj: not(v_TLSError__AD_close_notify = v_TLSError__AD_record_overflow)
predicate v_TLSError__AD_decompression_failure_p 
function v_TLSError__AD_decompression_failure  : top
axiom a121_v_TLSError__AD_decompression_failure_Disj: not(v_TLSError__AD_record_overflow = v_TLSError__AD_decompression_failure)
axiom a122_v_TLSError__AD_decompression_failure_Disj: not(v_TLSError__AD_decryption_failed = v_TLSError__AD_decompression_failure)
axiom a123_v_TLSError__AD_decompression_failure_Disj: not(v_TLSError__AD_bad_record_mac = v_TLSError__AD_decompression_failure)
axiom a124_v_TLSError__AD_decompression_failure_Disj: not(v_TLSError__AD_unexpected_message = v_TLSError__AD_decompression_failure)
axiom a125_v_TLSError__AD_decompression_failure_Disj: not(v_TLSError__AD_close_notify = v_TLSError__AD_decompression_failure)
predicate v_TLSError__AD_handshake_failure_p 
function v_TLSError__AD_handshake_failure  : top
axiom a126_v_TLSError__AD_handshake_failure_Disj: not(v_TLSError__AD_decompression_failure = v_TLSError__AD_handshake_failure)
axiom a127_v_TLSError__AD_handshake_failure_Disj: not(v_TLSError__AD_record_overflow = v_TLSError__AD_handshake_failure)
axiom a128_v_TLSError__AD_handshake_failure_Disj: not(v_TLSError__AD_decryption_failed = v_TLSError__AD_handshake_failure)
axiom a129_v_TLSError__AD_handshake_failure_Disj: not(v_TLSError__AD_bad_record_mac = v_TLSError__AD_handshake_failure)
axiom a130_v_TLSError__AD_handshake_failure_Disj: not(v_TLSError__AD_unexpected_message = v_TLSError__AD_handshake_failure)
axiom a131_v_TLSError__AD_handshake_failure_Disj: not(v_TLSError__AD_close_notify = v_TLSError__AD_handshake_failure)
predicate v_TLSError__AD_no_certificate_p 
function v_TLSError__AD_no_certificate  : top
axiom a132_v_TLSError__AD_no_certificate_Disj: not(v_TLSError__AD_handshake_failure = v_TLSError__AD_no_certificate)
axiom a133_v_TLSError__AD_no_certificate_Disj: not(v_TLSError__AD_decompression_failure = v_TLSError__AD_no_certificate)
axiom a134_v_TLSError__AD_no_certificate_Disj: not(v_TLSError__AD_record_overflow = v_TLSError__AD_no_certificate)
axiom a135_v_TLSError__AD_no_certificate_Disj: not(v_TLSError__AD_decryption_failed = v_TLSError__AD_no_certificate)
axiom a136_v_TLSError__AD_no_certificate_Disj: not(v_TLSError__AD_bad_record_mac = v_TLSError__AD_no_certificate)
axiom a137_v_TLSError__AD_no_certificate_Disj: not(v_TLSError__AD_unexpected_message = v_TLSError__AD_no_certificate)
axiom a138_v_TLSError__AD_no_certificate_Disj: not(v_TLSError__AD_close_notify = v_TLSError__AD_no_certificate)
predicate v_TLSError__AD_bad_certificate_warning_p 
function v_TLSError__AD_bad_certificate_warning  : top
axiom a139_v_TLSError__AD_bad_certificate_warning_Disj: not(v_TLSError__AD_no_certificate = v_TLSError__AD_bad_certificate_warning)
axiom a140_v_TLSError__AD_bad_certificate_warning_Disj: not(v_TLSError__AD_handshake_failure = v_TLSError__AD_bad_certificate_warning)
axiom a141_v_TLSError__AD_bad_certificate_warning_Disj: not(v_TLSError__AD_decompression_failure = v_TLSError__AD_bad_certificate_warning)
axiom a142_v_TLSError__AD_bad_certificate_warning_Disj: not(v_TLSError__AD_record_overflow = v_TLSError__AD_bad_certificate_warning)
axiom a143_v_TLSError__AD_bad_certificate_warning_Disj: not(v_TLSError__AD_decryption_failed = v_TLSError__AD_bad_certificate_warning)
axiom a144_v_TLSError__AD_bad_certificate_warning_Disj: not(v_TLSError__AD_bad_record_mac = v_TLSError__AD_bad_certificate_warning)
axiom a145_v_TLSError__AD_bad_certificate_warning_Disj: not(v_TLSError__AD_unexpected_message = v_TLSError__AD_bad_certificate_warning)
axiom a146_v_TLSError__AD_bad_certificate_warning_Disj: not(v_TLSError__AD_close_notify = v_TLSError__AD_bad_certificate_warning)
predicate v_TLSError__AD_bad_certificate_fatal_p 
function v_TLSError__AD_bad_certificate_fatal  : top
axiom a147_v_TLSError__AD_bad_certificate_fatal_Disj: not(v_TLSError__AD_bad_certificate_warning = v_TLSError__AD_bad_certificate_fatal)
axiom a148_v_TLSError__AD_bad_certificate_fatal_Disj: not(v_TLSError__AD_no_certificate = v_TLSError__AD_bad_certificate_fatal)
axiom a149_v_TLSError__AD_bad_certificate_fatal_Disj: not(v_TLSError__AD_handshake_failure = v_TLSError__AD_bad_certificate_fatal)
axiom a150_v_TLSError__AD_bad_certificate_fatal_Disj: not(v_TLSError__AD_decompression_failure = v_TLSError__AD_bad_certificate_fatal)
axiom a151_v_TLSError__AD_bad_certificate_fatal_Disj: not(v_TLSError__AD_record_overflow = v_TLSError__AD_bad_certificate_fatal)
axiom a152_v_TLSError__AD_bad_certificate_fatal_Disj: not(v_TLSError__AD_decryption_failed = v_TLSError__AD_bad_certificate_fatal)
axiom a153_v_TLSError__AD_bad_certificate_fatal_Disj: not(v_TLSError__AD_bad_record_mac = v_TLSError__AD_bad_certificate_fatal)
axiom a154_v_TLSError__AD_bad_certificate_fatal_Disj: not(v_TLSError__AD_unexpected_message = v_TLSError__AD_bad_certificate_fatal)
axiom a155_v_TLSError__AD_bad_certificate_fatal_Disj: not(v_TLSError__AD_close_notify = v_TLSError__AD_bad_certificate_fatal)
predicate v_TLSError__AD_unsupported_certificate_warning_p 
function v_TLSError__AD_unsupported_certificate_warning  : top
axiom a156_v_TLSError__AD_unsupported_certificate_warning_Disj: not(v_TLSError__AD_bad_certificate_fatal = v_TLSError__AD_unsupported_certificate_warning)
axiom a157_v_TLSError__AD_unsupported_certificate_warning_Disj: not(v_TLSError__AD_bad_certificate_warning = v_TLSError__AD_unsupported_certificate_warning)
axiom a158_v_TLSError__AD_unsupported_certificate_warning_Disj: not(v_TLSError__AD_no_certificate = v_TLSError__AD_unsupported_certificate_warning)
axiom a159_v_TLSError__AD_unsupported_certificate_warning_Disj: not(v_TLSError__AD_handshake_failure = v_TLSError__AD_unsupported_certificate_warning)
axiom a160_v_TLSError__AD_unsupported_certificate_warning_Disj: not(v_TLSError__AD_decompression_failure = v_TLSError__AD_unsupported_certificate_warning)
axiom a161_v_TLSError__AD_unsupported_certificate_warning_Disj: not(v_TLSError__AD_record_overflow = v_TLSError__AD_unsupported_certificate_warning)
axiom a162_v_TLSError__AD_unsupported_certificate_warning_Disj: not(v_TLSError__AD_decryption_failed = v_TLSError__AD_unsupported_certificate_warning)
axiom a163_v_TLSError__AD_unsupported_certificate_warning_Disj: not(v_TLSError__AD_bad_record_mac = v_TLSError__AD_unsupported_certificate_warning)
axiom a164_v_TLSError__AD_unsupported_certificate_warning_Disj: not(v_TLSError__AD_unexpected_message = v_TLSError__AD_unsupported_certificate_warning)
axiom a165_v_TLSError__AD_unsupported_certificate_warning_Disj: not(v_TLSError__AD_close_notify = v_TLSError__AD_unsupported_certificate_warning)
predicate v_TLSError__AD_unsupported_certificate_fatal_p 
function v_TLSError__AD_unsupported_certificate_fatal  : top
axiom a166_v_TLSError__AD_unsupported_certificate_fatal_Disj: not(v_TLSError__AD_unsupported_certificate_warning = v_TLSError__AD_unsupported_certificate_fatal)
axiom a167_v_TLSError__AD_unsupported_certificate_fatal_Disj: not(v_TLSError__AD_bad_certificate_fatal = v_TLSError__AD_unsupported_certificate_fatal)
axiom a168_v_TLSError__AD_unsupported_certificate_fatal_Disj: not(v_TLSError__AD_bad_certificate_warning = v_TLSError__AD_unsupported_certificate_fatal)
axiom a169_v_TLSError__AD_unsupported_certificate_fatal_Disj: not(v_TLSError__AD_no_certificate = v_TLSError__AD_unsupported_certificate_fatal)
axiom a170_v_TLSError__AD_unsupported_certificate_fatal_Disj: not(v_TLSError__AD_handshake_failure = v_TLSError__AD_unsupported_certificate_fatal)
axiom a171_v_TLSError__AD_unsupported_certificate_fatal_Disj: not(v_TLSError__AD_decompression_failure = v_TLSError__AD_unsupported_certificate_fatal)
axiom a172_v_TLSError__AD_unsupported_certificate_fatal_Disj: not(v_TLSError__AD_record_overflow = v_TLSError__AD_unsupported_certificate_fatal)
axiom a173_v_TLSError__AD_unsupported_certificate_fatal_Disj: not(v_TLSError__AD_decryption_failed = v_TLSError__AD_unsupported_certificate_fatal)
axiom a174_v_TLSError__AD_unsupported_certificate_fatal_Disj: not(v_TLSError__AD_bad_record_mac = v_TLSError__AD_unsupported_certificate_fatal)
axiom a175_v_TLSError__AD_unsupported_certificate_fatal_Disj: not(v_TLSError__AD_unexpected_message = v_TLSError__AD_unsupported_certificate_fatal)
axiom a176_v_TLSError__AD_unsupported_certificate_fatal_Disj: not(v_TLSError__AD_close_notify = v_TLSError__AD_unsupported_certificate_fatal)
predicate v_TLSError__AD_certificate_revoked_warning_p 
function v_TLSError__AD_certificate_revoked_warning  : top
axiom a177_v_TLSError__AD_certificate_revoked_warning_Disj: not(v_TLSError__AD_unsupported_certificate_fatal = v_TLSError__AD_certificate_revoked_warning)
axiom a178_v_TLSError__AD_certificate_revoked_warning_Disj: not(v_TLSError__AD_unsupported_certificate_warning = v_TLSError__AD_certificate_revoked_warning)
axiom a179_v_TLSError__AD_certificate_revoked_warning_Disj: not(v_TLSError__AD_bad_certificate_fatal = v_TLSError__AD_certificate_revoked_warning)
axiom a180_v_TLSError__AD_certificate_revoked_warning_Disj: not(v_TLSError__AD_bad_certificate_warning = v_TLSError__AD_certificate_revoked_warning)
axiom a181_v_TLSError__AD_certificate_revoked_warning_Disj: not(v_TLSError__AD_no_certificate = v_TLSError__AD_certificate_revoked_warning)
axiom a182_v_TLSError__AD_certificate_revoked_warning_Disj: not(v_TLSError__AD_handshake_failure = v_TLSError__AD_certificate_revoked_warning)
axiom a183_v_TLSError__AD_certificate_revoked_warning_Disj: not(v_TLSError__AD_decompression_failure = v_TLSError__AD_certificate_revoked_warning)
axiom a184_v_TLSError__AD_certificate_revoked_warning_Disj: not(v_TLSError__AD_record_overflow = v_TLSError__AD_certificate_revoked_warning)
axiom a185_v_TLSError__AD_certificate_revoked_warning_Disj: not(v_TLSError__AD_decryption_failed = v_TLSError__AD_certificate_revoked_warning)
axiom a186_v_TLSError__AD_certificate_revoked_warning_Disj: not(v_TLSError__AD_bad_record_mac = v_TLSError__AD_certificate_revoked_warning)
axiom a187_v_TLSError__AD_certificate_revoked_warning_Disj: not(v_TLSError__AD_unexpected_message = v_TLSError__AD_certificate_revoked_warning)
axiom a188_v_TLSError__AD_certificate_revoked_warning_Disj: not(v_TLSError__AD_close_notify = v_TLSError__AD_certificate_revoked_warning)
predicate v_TLSError__AD_certificate_revoked_fatal_p 
function v_TLSError__AD_certificate_revoked_fatal  : top
axiom a189_v_TLSError__AD_certificate_revoked_fatal_Disj: not(v_TLSError__AD_certificate_revoked_warning = v_TLSError__AD_certificate_revoked_fatal)
axiom a190_v_TLSError__AD_certificate_revoked_fatal_Disj: not(v_TLSError__AD_unsupported_certificate_fatal = v_TLSError__AD_certificate_revoked_fatal)
axiom a191_v_TLSError__AD_certificate_revoked_fatal_Disj: not(v_TLSError__AD_unsupported_certificate_warning = v_TLSError__AD_certificate_revoked_fatal)
axiom a192_v_TLSError__AD_certificate_revoked_fatal_Disj: not(v_TLSError__AD_bad_certificate_fatal = v_TLSError__AD_certificate_revoked_fatal)
axiom a193_v_TLSError__AD_certificate_revoked_fatal_Disj: not(v_TLSError__AD_bad_certificate_warning = v_TLSError__AD_certificate_revoked_fatal)
axiom a194_v_TLSError__AD_certificate_revoked_fatal_Disj: not(v_TLSError__AD_no_certificate = v_TLSError__AD_certificate_revoked_fatal)
axiom a195_v_TLSError__AD_certificate_revoked_fatal_Disj: not(v_TLSError__AD_handshake_failure = v_TLSError__AD_certificate_revoked_fatal)
axiom a196_v_TLSError__AD_certificate_revoked_fatal_Disj: not(v_TLSError__AD_decompression_failure = v_TLSError__AD_certificate_revoked_fatal)
axiom a197_v_TLSError__AD_certificate_revoked_fatal_Disj: not(v_TLSError__AD_record_overflow = v_TLSError__AD_certificate_revoked_fatal)
axiom a198_v_TLSError__AD_certificate_revoked_fatal_Disj: not(v_TLSError__AD_decryption_failed = v_TLSError__AD_certificate_revoked_fatal)
axiom a199_v_TLSError__AD_certificate_revoked_fatal_Disj: not(v_TLSError__AD_bad_record_mac = v_TLSError__AD_certificate_revoked_fatal)
axiom a200_v_TLSError__AD_certificate_revoked_fatal_Disj: not(v_TLSError__AD_unexpected_message = v_TLSError__AD_certificate_revoked_fatal)
axiom a201_v_TLSError__AD_certificate_revoked_fatal_Disj: not(v_TLSError__AD_close_notify = v_TLSError__AD_certificate_revoked_fatal)
predicate v_TLSError__AD_certificate_expired_warning_p 
function v_TLSError__AD_certificate_expired_warning  : top
axiom a202_v_TLSError__AD_certificate_expired_warning_Disj: not(v_TLSError__AD_certificate_revoked_fatal = v_TLSError__AD_certificate_expired_warning)
axiom a203_v_TLSError__AD_certificate_expired_warning_Disj: not(v_TLSError__AD_certificate_revoked_warning = v_TLSError__AD_certificate_expired_warning)
axiom a204_v_TLSError__AD_certificate_expired_warning_Disj: not(v_TLSError__AD_unsupported_certificate_fatal = v_TLSError__AD_certificate_expired_warning)
axiom a205_v_TLSError__AD_certificate_expired_warning_Disj: not(v_TLSError__AD_unsupported_certificate_warning = v_TLSError__AD_certificate_expired_warning)
axiom a206_v_TLSError__AD_certificate_expired_warning_Disj: not(v_TLSError__AD_bad_certificate_fatal = v_TLSError__AD_certificate_expired_warning)
axiom a207_v_TLSError__AD_certificate_expired_warning_Disj: not(v_TLSError__AD_bad_certificate_warning = v_TLSError__AD_certificate_expired_warning)
axiom a208_v_TLSError__AD_certificate_expired_warning_Disj: not(v_TLSError__AD_no_certificate = v_TLSError__AD_certificate_expired_warning)
axiom a209_v_TLSError__AD_certificate_expired_warning_Disj: not(v_TLSError__AD_handshake_failure = v_TLSError__AD_certificate_expired_warning)
axiom a210_v_TLSError__AD_certificate_expired_warning_Disj: not(v_TLSError__AD_decompression_failure = v_TLSError__AD_certificate_expired_warning)
axiom a211_v_TLSError__AD_certificate_expired_warning_Disj: not(v_TLSError__AD_record_overflow = v_TLSError__AD_certificate_expired_warning)
axiom a212_v_TLSError__AD_certificate_expired_warning_Disj: not(v_TLSError__AD_decryption_failed = v_TLSError__AD_certificate_expired_warning)
axiom a213_v_TLSError__AD_certificate_expired_warning_Disj: not(v_TLSError__AD_bad_record_mac = v_TLSError__AD_certificate_expired_warning)
axiom a214_v_TLSError__AD_certificate_expired_warning_Disj: not(v_TLSError__AD_unexpected_message = v_TLSError__AD_certificate_expired_warning)
axiom a215_v_TLSError__AD_certificate_expired_warning_Disj: not(v_TLSError__AD_close_notify = v_TLSError__AD_certificate_expired_warning)
predicate v_TLSError__AD_certificate_expired_fatal_p 
function v_TLSError__AD_certificate_expired_fatal  : top
axiom a216_v_TLSError__AD_certificate_expired_fatal_Disj: not(v_TLSError__AD_certificate_expired_warning = v_TLSError__AD_certificate_expired_fatal)
axiom a217_v_TLSError__AD_certificate_expired_fatal_Disj: not(v_TLSError__AD_certificate_revoked_fatal = v_TLSError__AD_certificate_expired_fatal)
axiom a218_v_TLSError__AD_certificate_expired_fatal_Disj: not(v_TLSError__AD_certificate_revoked_warning = v_TLSError__AD_certificate_expired_fatal)
axiom a219_v_TLSError__AD_certificate_expired_fatal_Disj: not(v_TLSError__AD_unsupported_certificate_fatal = v_TLSError__AD_certificate_expired_fatal)
axiom a220_v_TLSError__AD_certificate_expired_fatal_Disj: not(v_TLSError__AD_unsupported_certificate_warning = v_TLSError__AD_certificate_expired_fatal)
axiom a221_v_TLSError__AD_certificate_expired_fatal_Disj: not(v_TLSError__AD_bad_certificate_fatal = v_TLSError__AD_certificate_expired_fatal)
axiom a222_v_TLSError__AD_certificate_expired_fatal_Disj: not(v_TLSError__AD_bad_certificate_warning = v_TLSError__AD_certificate_expired_fatal)
axiom a223_v_TLSError__AD_certificate_expired_fatal_Disj: not(v_TLSError__AD_no_certificate = v_TLSError__AD_certificate_expired_fatal)
axiom a224_v_TLSError__AD_certificate_expired_fatal_Disj: not(v_TLSError__AD_handshake_failure = v_TLSError__AD_certificate_expired_fatal)
axiom a225_v_TLSError__AD_certificate_expired_fatal_Disj: not(v_TLSError__AD_decompression_failure = v_TLSError__AD_certificate_expired_fatal)
axiom a226_v_TLSError__AD_certificate_expired_fatal_Disj: not(v_TLSError__AD_record_overflow = v_TLSError__AD_certificate_expired_fatal)
axiom a227_v_TLSError__AD_certificate_expired_fatal_Disj: not(v_TLSError__AD_decryption_failed = v_TLSError__AD_certificate_expired_fatal)
axiom a228_v_TLSError__AD_certificate_expired_fatal_Disj: not(v_TLSError__AD_bad_record_mac = v_TLSError__AD_certificate_expired_fatal)
axiom a229_v_TLSError__AD_certificate_expired_fatal_Disj: not(v_TLSError__AD_unexpected_message = v_TLSError__AD_certificate_expired_fatal)
axiom a230_v_TLSError__AD_certificate_expired_fatal_Disj: not(v_TLSError__AD_close_notify = v_TLSError__AD_certificate_expired_fatal)
predicate v_TLSError__AD_certificate_unknown_warning_p 
function v_TLSError__AD_certificate_unknown_warning  : top
axiom a231_v_TLSError__AD_certificate_unknown_warning_Disj: not(v_TLSError__AD_certificate_expired_fatal = v_TLSError__AD_certificate_unknown_warning)
axiom a232_v_TLSError__AD_certificate_unknown_warning_Disj: not(v_TLSError__AD_certificate_expired_warning = v_TLSError__AD_certificate_unknown_warning)
axiom a233_v_TLSError__AD_certificate_unknown_warning_Disj: not(v_TLSError__AD_certificate_revoked_fatal = v_TLSError__AD_certificate_unknown_warning)
axiom a234_v_TLSError__AD_certificate_unknown_warning_Disj: not(v_TLSError__AD_certificate_revoked_warning = v_TLSError__AD_certificate_unknown_warning)
axiom a235_v_TLSError__AD_certificate_unknown_warning_Disj: not(v_TLSError__AD_unsupported_certificate_fatal = v_TLSError__AD_certificate_unknown_warning)
axiom a236_v_TLSError__AD_certificate_unknown_warning_Disj: not(v_TLSError__AD_unsupported_certificate_warning = v_TLSError__AD_certificate_unknown_warning)
axiom a237_v_TLSError__AD_certificate_unknown_warning_Disj: not(v_TLSError__AD_bad_certificate_fatal = v_TLSError__AD_certificate_unknown_warning)
axiom a238_v_TLSError__AD_certificate_unknown_warning_Disj: not(v_TLSError__AD_bad_certificate_warning = v_TLSError__AD_certificate_unknown_warning)
axiom a239_v_TLSError__AD_certificate_unknown_warning_Disj: not(v_TLSError__AD_no_certificate = v_TLSError__AD_certificate_unknown_warning)
axiom a240_v_TLSError__AD_certificate_unknown_warning_Disj: not(v_TLSError__AD_handshake_failure = v_TLSError__AD_certificate_unknown_warning)
axiom a241_v_TLSError__AD_certificate_unknown_warning_Disj: not(v_TLSError__AD_decompression_failure = v_TLSError__AD_certificate_unknown_warning)
axiom a242_v_TLSError__AD_certificate_unknown_warning_Disj: not(v_TLSError__AD_record_overflow = v_TLSError__AD_certificate_unknown_warning)
axiom a243_v_TLSError__AD_certificate_unknown_warning_Disj: not(v_TLSError__AD_decryption_failed = v_TLSError__AD_certificate_unknown_warning)
axiom a244_v_TLSError__AD_certificate_unknown_warning_Disj: not(v_TLSError__AD_bad_record_mac = v_TLSError__AD_certificate_unknown_warning)
axiom a245_v_TLSError__AD_certificate_unknown_warning_Disj: not(v_TLSError__AD_unexpected_message = v_TLSError__AD_certificate_unknown_warning)
axiom a246_v_TLSError__AD_certificate_unknown_warning_Disj: not(v_TLSError__AD_close_notify = v_TLSError__AD_certificate_unknown_warning)
predicate v_TLSError__AD_certificate_unknown_fatal_p 
function v_TLSError__AD_certificate_unknown_fatal  : top
axiom a247_v_TLSError__AD_certificate_unknown_fatal_Disj: not(v_TLSError__AD_certificate_unknown_warning = v_TLSError__AD_certificate_unknown_fatal)
axiom a248_v_TLSError__AD_certificate_unknown_fatal_Disj: not(v_TLSError__AD_certificate_expired_fatal = v_TLSError__AD_certificate_unknown_fatal)
axiom a249_v_TLSError__AD_certificate_unknown_fatal_Disj: not(v_TLSError__AD_certificate_expired_warning = v_TLSError__AD_certificate_unknown_fatal)
axiom a250_v_TLSError__AD_certificate_unknown_fatal_Disj: not(v_TLSError__AD_certificate_revoked_fatal = v_TLSError__AD_certificate_unknown_fatal)
axiom a251_v_TLSError__AD_certificate_unknown_fatal_Disj: not(v_TLSError__AD_certificate_revoked_warning = v_TLSError__AD_certificate_unknown_fatal)
axiom a252_v_TLSError__AD_certificate_unknown_fatal_Disj: not(v_TLSError__AD_unsupported_certificate_fatal = v_TLSError__AD_certificate_unknown_fatal)
axiom a253_v_TLSError__AD_certificate_unknown_fatal_Disj: not(v_TLSError__AD_unsupported_certificate_warning = v_TLSError__AD_certificate_unknown_fatal)
axiom a254_v_TLSError__AD_certificate_unknown_fatal_Disj: not(v_TLSError__AD_bad_certificate_fatal = v_TLSError__AD_certificate_unknown_fatal)
axiom a255_v_TLSError__AD_certificate_unknown_fatal_Disj: not(v_TLSError__AD_bad_certificate_warning = v_TLSError__AD_certificate_unknown_fatal)
axiom a256_v_TLSError__AD_certificate_unknown_fatal_Disj: not(v_TLSError__AD_no_certificate = v_TLSError__AD_certificate_unknown_fatal)
axiom a257_v_TLSError__AD_certificate_unknown_fatal_Disj: not(v_TLSError__AD_handshake_failure = v_TLSError__AD_certificate_unknown_fatal)
axiom a258_v_TLSError__AD_certificate_unknown_fatal_Disj: not(v_TLSError__AD_decompression_failure = v_TLSError__AD_certificate_unknown_fatal)
axiom a259_v_TLSError__AD_certificate_unknown_fatal_Disj: not(v_TLSError__AD_record_overflow = v_TLSError__AD_certificate_unknown_fatal)
axiom a260_v_TLSError__AD_certificate_unknown_fatal_Disj: not(v_TLSError__AD_decryption_failed = v_TLSError__AD_certificate_unknown_fatal)
axiom a261_v_TLSError__AD_certificate_unknown_fatal_Disj: not(v_TLSError__AD_bad_record_mac = v_TLSError__AD_certificate_unknown_fatal)
axiom a262_v_TLSError__AD_certificate_unknown_fatal_Disj: not(v_TLSError__AD_unexpected_message = v_TLSError__AD_certificate_unknown_fatal)
axiom a263_v_TLSError__AD_certificate_unknown_fatal_Disj: not(v_TLSError__AD_close_notify = v_TLSError__AD_certificate_unknown_fatal)
predicate v_TLSError__AD_illegal_parameter_p 
function v_TLSError__AD_illegal_parameter  : top
axiom a264_v_TLSError__AD_illegal_parameter_Disj: not(v_TLSError__AD_certificate_unknown_fatal = v_TLSError__AD_illegal_parameter)
axiom a265_v_TLSError__AD_illegal_parameter_Disj: not(v_TLSError__AD_certificate_unknown_warning = v_TLSError__AD_illegal_parameter)
axiom a266_v_TLSError__AD_illegal_parameter_Disj: not(v_TLSError__AD_certificate_expired_fatal = v_TLSError__AD_illegal_parameter)
axiom a267_v_TLSError__AD_illegal_parameter_Disj: not(v_TLSError__AD_certificate_expired_warning = v_TLSError__AD_illegal_parameter)
axiom a268_v_TLSError__AD_illegal_parameter_Disj: not(v_TLSError__AD_certificate_revoked_fatal = v_TLSError__AD_illegal_parameter)
axiom a269_v_TLSError__AD_illegal_parameter_Disj: not(v_TLSError__AD_certificate_revoked_warning = v_TLSError__AD_illegal_parameter)
axiom a270_v_TLSError__AD_illegal_parameter_Disj: not(v_TLSError__AD_unsupported_certificate_fatal = v_TLSError__AD_illegal_parameter)
axiom a271_v_TLSError__AD_illegal_parameter_Disj: not(v_TLSError__AD_unsupported_certificate_warning = v_TLSError__AD_illegal_parameter)
axiom a272_v_TLSError__AD_illegal_parameter_Disj: not(v_TLSError__AD_bad_certificate_fatal = v_TLSError__AD_illegal_parameter)
axiom a273_v_TLSError__AD_illegal_parameter_Disj: not(v_TLSError__AD_bad_certificate_warning = v_TLSError__AD_illegal_parameter)
axiom a274_v_TLSError__AD_illegal_parameter_Disj: not(v_TLSError__AD_no_certificate = v_TLSError__AD_illegal_parameter)
axiom a275_v_TLSError__AD_illegal_parameter_Disj: not(v_TLSError__AD_handshake_failure = v_TLSError__AD_illegal_parameter)
axiom a276_v_TLSError__AD_illegal_parameter_Disj: not(v_TLSError__AD_decompression_failure = v_TLSError__AD_illegal_parameter)
axiom a277_v_TLSError__AD_illegal_parameter_Disj: not(v_TLSError__AD_record_overflow = v_TLSError__AD_illegal_parameter)
axiom a278_v_TLSError__AD_illegal_parameter_Disj: not(v_TLSError__AD_decryption_failed = v_TLSError__AD_illegal_parameter)
axiom a279_v_TLSError__AD_illegal_parameter_Disj: not(v_TLSError__AD_bad_record_mac = v_TLSError__AD_illegal_parameter)
axiom a280_v_TLSError__AD_illegal_parameter_Disj: not(v_TLSError__AD_unexpected_message = v_TLSError__AD_illegal_parameter)
axiom a281_v_TLSError__AD_illegal_parameter_Disj: not(v_TLSError__AD_close_notify = v_TLSError__AD_illegal_parameter)
predicate v_TLSError__AD_unknown_ca_p 
function v_TLSError__AD_unknown_ca  : top
axiom a282_v_TLSError__AD_unknown_ca_Disj: not(v_TLSError__AD_illegal_parameter = v_TLSError__AD_unknown_ca)
axiom a283_v_TLSError__AD_unknown_ca_Disj: not(v_TLSError__AD_certificate_unknown_fatal = v_TLSError__AD_unknown_ca)
axiom a284_v_TLSError__AD_unknown_ca_Disj: not(v_TLSError__AD_certificate_unknown_warning = v_TLSError__AD_unknown_ca)
axiom a285_v_TLSError__AD_unknown_ca_Disj: not(v_TLSError__AD_certificate_expired_fatal = v_TLSError__AD_unknown_ca)
axiom a286_v_TLSError__AD_unknown_ca_Disj: not(v_TLSError__AD_certificate_expired_warning = v_TLSError__AD_unknown_ca)
axiom a287_v_TLSError__AD_unknown_ca_Disj: not(v_TLSError__AD_certificate_revoked_fatal = v_TLSError__AD_unknown_ca)
axiom a288_v_TLSError__AD_unknown_ca_Disj: not(v_TLSError__AD_certificate_revoked_warning = v_TLSError__AD_unknown_ca)
axiom a289_v_TLSError__AD_unknown_ca_Disj: not(v_TLSError__AD_unsupported_certificate_fatal = v_TLSError__AD_unknown_ca)
axiom a290_v_TLSError__AD_unknown_ca_Disj: not(v_TLSError__AD_unsupported_certificate_warning = v_TLSError__AD_unknown_ca)
axiom a291_v_TLSError__AD_unknown_ca_Disj: not(v_TLSError__AD_bad_certificate_fatal = v_TLSError__AD_unknown_ca)
axiom a292_v_TLSError__AD_unknown_ca_Disj: not(v_TLSError__AD_bad_certificate_warning = v_TLSError__AD_unknown_ca)
axiom a293_v_TLSError__AD_unknown_ca_Disj: not(v_TLSError__AD_no_certificate = v_TLSError__AD_unknown_ca)
axiom a294_v_TLSError__AD_unknown_ca_Disj: not(v_TLSError__AD_handshake_failure = v_TLSError__AD_unknown_ca)
axiom a295_v_TLSError__AD_unknown_ca_Disj: not(v_TLSError__AD_decompression_failure = v_TLSError__AD_unknown_ca)
axiom a296_v_TLSError__AD_unknown_ca_Disj: not(v_TLSError__AD_record_overflow = v_TLSError__AD_unknown_ca)
axiom a297_v_TLSError__AD_unknown_ca_Disj: not(v_TLSError__AD_decryption_failed = v_TLSError__AD_unknown_ca)
axiom a298_v_TLSError__AD_unknown_ca_Disj: not(v_TLSError__AD_bad_record_mac = v_TLSError__AD_unknown_ca)
axiom a299_v_TLSError__AD_unknown_ca_Disj: not(v_TLSError__AD_unexpected_message = v_TLSError__AD_unknown_ca)
axiom a300_v_TLSError__AD_unknown_ca_Disj: not(v_TLSError__AD_close_notify = v_TLSError__AD_unknown_ca)
predicate v_TLSError__AD_access_denied_p 
function v_TLSError__AD_access_denied  : top
axiom a301_v_TLSError__AD_access_denied_Disj: not(v_TLSError__AD_unknown_ca = v_TLSError__AD_access_denied)
axiom a302_v_TLSError__AD_access_denied_Disj: not(v_TLSError__AD_illegal_parameter = v_TLSError__AD_access_denied)
axiom a303_v_TLSError__AD_access_denied_Disj: not(v_TLSError__AD_certificate_unknown_fatal = v_TLSError__AD_access_denied)
axiom a304_v_TLSError__AD_access_denied_Disj: not(v_TLSError__AD_certificate_unknown_warning = v_TLSError__AD_access_denied)
axiom a305_v_TLSError__AD_access_denied_Disj: not(v_TLSError__AD_certificate_expired_fatal = v_TLSError__AD_access_denied)
axiom a306_v_TLSError__AD_access_denied_Disj: not(v_TLSError__AD_certificate_expired_warning = v_TLSError__AD_access_denied)
axiom a307_v_TLSError__AD_access_denied_Disj: not(v_TLSError__AD_certificate_revoked_fatal = v_TLSError__AD_access_denied)
axiom a308_v_TLSError__AD_access_denied_Disj: not(v_TLSError__AD_certificate_revoked_warning = v_TLSError__AD_access_denied)
axiom a309_v_TLSError__AD_access_denied_Disj: not(v_TLSError__AD_unsupported_certificate_fatal = v_TLSError__AD_access_denied)
axiom a310_v_TLSError__AD_access_denied_Disj: not(v_TLSError__AD_unsupported_certificate_warning = v_TLSError__AD_access_denied)
axiom a311_v_TLSError__AD_access_denied_Disj: not(v_TLSError__AD_bad_certificate_fatal = v_TLSError__AD_access_denied)
axiom a312_v_TLSError__AD_access_denied_Disj: not(v_TLSError__AD_bad_certificate_warning = v_TLSError__AD_access_denied)
axiom a313_v_TLSError__AD_access_denied_Disj: not(v_TLSError__AD_no_certificate = v_TLSError__AD_access_denied)
axiom a314_v_TLSError__AD_access_denied_Disj: not(v_TLSError__AD_handshake_failure = v_TLSError__AD_access_denied)
axiom a315_v_TLSError__AD_access_denied_Disj: not(v_TLSError__AD_decompression_failure = v_TLSError__AD_access_denied)
axiom a316_v_TLSError__AD_access_denied_Disj: not(v_TLSError__AD_record_overflow = v_TLSError__AD_access_denied)
axiom a317_v_TLSError__AD_access_denied_Disj: not(v_TLSError__AD_decryption_failed = v_TLSError__AD_access_denied)
axiom a318_v_TLSError__AD_access_denied_Disj: not(v_TLSError__AD_bad_record_mac = v_TLSError__AD_access_denied)
axiom a319_v_TLSError__AD_access_denied_Disj: not(v_TLSError__AD_unexpected_message = v_TLSError__AD_access_denied)
axiom a320_v_TLSError__AD_access_denied_Disj: not(v_TLSError__AD_close_notify = v_TLSError__AD_access_denied)
predicate v_TLSError__AD_decode_error_p 
function v_TLSError__AD_decode_error  : top
axiom a321_v_TLSError__AD_decode_error_Disj: not(v_TLSError__AD_access_denied = v_TLSError__AD_decode_error)
axiom a322_v_TLSError__AD_decode_error_Disj: not(v_TLSError__AD_unknown_ca = v_TLSError__AD_decode_error)
axiom a323_v_TLSError__AD_decode_error_Disj: not(v_TLSError__AD_illegal_parameter = v_TLSError__AD_decode_error)
axiom a324_v_TLSError__AD_decode_error_Disj: not(v_TLSError__AD_certificate_unknown_fatal = v_TLSError__AD_decode_error)
axiom a325_v_TLSError__AD_decode_error_Disj: not(v_TLSError__AD_certificate_unknown_warning = v_TLSError__AD_decode_error)
axiom a326_v_TLSError__AD_decode_error_Disj: not(v_TLSError__AD_certificate_expired_fatal = v_TLSError__AD_decode_error)
axiom a327_v_TLSError__AD_decode_error_Disj: not(v_TLSError__AD_certificate_expired_warning = v_TLSError__AD_decode_error)
axiom a328_v_TLSError__AD_decode_error_Disj: not(v_TLSError__AD_certificate_revoked_fatal = v_TLSError__AD_decode_error)
axiom a329_v_TLSError__AD_decode_error_Disj: not(v_TLSError__AD_certificate_revoked_warning = v_TLSError__AD_decode_error)
axiom a330_v_TLSError__AD_decode_error_Disj: not(v_TLSError__AD_unsupported_certificate_fatal = v_TLSError__AD_decode_error)
axiom a331_v_TLSError__AD_decode_error_Disj: not(v_TLSError__AD_unsupported_certificate_warning = v_TLSError__AD_decode_error)
axiom a332_v_TLSError__AD_decode_error_Disj: not(v_TLSError__AD_bad_certificate_fatal = v_TLSError__AD_decode_error)
axiom a333_v_TLSError__AD_decode_error_Disj: not(v_TLSError__AD_bad_certificate_warning = v_TLSError__AD_decode_error)
axiom a334_v_TLSError__AD_decode_error_Disj: not(v_TLSError__AD_no_certificate = v_TLSError__AD_decode_error)
axiom a335_v_TLSError__AD_decode_error_Disj: not(v_TLSError__AD_handshake_failure = v_TLSError__AD_decode_error)
axiom a336_v_TLSError__AD_decode_error_Disj: not(v_TLSError__AD_decompression_failure = v_TLSError__AD_decode_error)
axiom a337_v_TLSError__AD_decode_error_Disj: not(v_TLSError__AD_record_overflow = v_TLSError__AD_decode_error)
axiom a338_v_TLSError__AD_decode_error_Disj: not(v_TLSError__AD_decryption_failed = v_TLSError__AD_decode_error)
axiom a339_v_TLSError__AD_decode_error_Disj: not(v_TLSError__AD_bad_record_mac = v_TLSError__AD_decode_error)
axiom a340_v_TLSError__AD_decode_error_Disj: not(v_TLSError__AD_unexpected_message = v_TLSError__AD_decode_error)
axiom a341_v_TLSError__AD_decode_error_Disj: not(v_TLSError__AD_close_notify = v_TLSError__AD_decode_error)
predicate v_TLSError__AD_decrypt_error_p 
function v_TLSError__AD_decrypt_error  : top
axiom a342_v_TLSError__AD_decrypt_error_Disj: not(v_TLSError__AD_decode_error = v_TLSError__AD_decrypt_error)
axiom a343_v_TLSError__AD_decrypt_error_Disj: not(v_TLSError__AD_access_denied = v_TLSError__AD_decrypt_error)
axiom a344_v_TLSError__AD_decrypt_error_Disj: not(v_TLSError__AD_unknown_ca = v_TLSError__AD_decrypt_error)
axiom a345_v_TLSError__AD_decrypt_error_Disj: not(v_TLSError__AD_illegal_parameter = v_TLSError__AD_decrypt_error)
axiom a346_v_TLSError__AD_decrypt_error_Disj: not(v_TLSError__AD_certificate_unknown_fatal = v_TLSError__AD_decrypt_error)
axiom a347_v_TLSError__AD_decrypt_error_Disj: not(v_TLSError__AD_certificate_unknown_warning = v_TLSError__AD_decrypt_error)
axiom a348_v_TLSError__AD_decrypt_error_Disj: not(v_TLSError__AD_certificate_expired_fatal = v_TLSError__AD_decrypt_error)
axiom a349_v_TLSError__AD_decrypt_error_Disj: not(v_TLSError__AD_certificate_expired_warning = v_TLSError__AD_decrypt_error)
axiom a350_v_TLSError__AD_decrypt_error_Disj: not(v_TLSError__AD_certificate_revoked_fatal = v_TLSError__AD_decrypt_error)
axiom a351_v_TLSError__AD_decrypt_error_Disj: not(v_TLSError__AD_certificate_revoked_warning = v_TLSError__AD_decrypt_error)
axiom a352_v_TLSError__AD_decrypt_error_Disj: not(v_TLSError__AD_unsupported_certificate_fatal = v_TLSError__AD_decrypt_error)
axiom a353_v_TLSError__AD_decrypt_error_Disj: not(v_TLSError__AD_unsupported_certificate_warning = v_TLSError__AD_decrypt_error)
axiom a354_v_TLSError__AD_decrypt_error_Disj: not(v_TLSError__AD_bad_certificate_fatal = v_TLSError__AD_decrypt_error)
axiom a355_v_TLSError__AD_decrypt_error_Disj: not(v_TLSError__AD_bad_certificate_warning = v_TLSError__AD_decrypt_error)
axiom a356_v_TLSError__AD_decrypt_error_Disj: not(v_TLSError__AD_no_certificate = v_TLSError__AD_decrypt_error)
axiom a357_v_TLSError__AD_decrypt_error_Disj: not(v_TLSError__AD_handshake_failure = v_TLSError__AD_decrypt_error)
axiom a358_v_TLSError__AD_decrypt_error_Disj: not(v_TLSError__AD_decompression_failure = v_TLSError__AD_decrypt_error)
axiom a359_v_TLSError__AD_decrypt_error_Disj: not(v_TLSError__AD_record_overflow = v_TLSError__AD_decrypt_error)
axiom a360_v_TLSError__AD_decrypt_error_Disj: not(v_TLSError__AD_decryption_failed = v_TLSError__AD_decrypt_error)
axiom a361_v_TLSError__AD_decrypt_error_Disj: not(v_TLSError__AD_bad_record_mac = v_TLSError__AD_decrypt_error)
axiom a362_v_TLSError__AD_decrypt_error_Disj: not(v_TLSError__AD_unexpected_message = v_TLSError__AD_decrypt_error)
axiom a363_v_TLSError__AD_decrypt_error_Disj: not(v_TLSError__AD_close_notify = v_TLSError__AD_decrypt_error)
predicate v_TLSError__AD_export_restriction_p 
function v_TLSError__AD_export_restriction  : top
axiom a364_v_TLSError__AD_export_restriction_Disj: not(v_TLSError__AD_decrypt_error = v_TLSError__AD_export_restriction)
axiom a365_v_TLSError__AD_export_restriction_Disj: not(v_TLSError__AD_decode_error = v_TLSError__AD_export_restriction)
axiom a366_v_TLSError__AD_export_restriction_Disj: not(v_TLSError__AD_access_denied = v_TLSError__AD_export_restriction)
axiom a367_v_TLSError__AD_export_restriction_Disj: not(v_TLSError__AD_unknown_ca = v_TLSError__AD_export_restriction)
axiom a368_v_TLSError__AD_export_restriction_Disj: not(v_TLSError__AD_illegal_parameter = v_TLSError__AD_export_restriction)
axiom a369_v_TLSError__AD_export_restriction_Disj: not(v_TLSError__AD_certificate_unknown_fatal = v_TLSError__AD_export_restriction)
axiom a370_v_TLSError__AD_export_restriction_Disj: not(v_TLSError__AD_certificate_unknown_warning = v_TLSError__AD_export_restriction)
axiom a371_v_TLSError__AD_export_restriction_Disj: not(v_TLSError__AD_certificate_expired_fatal = v_TLSError__AD_export_restriction)
axiom a372_v_TLSError__AD_export_restriction_Disj: not(v_TLSError__AD_certificate_expired_warning = v_TLSError__AD_export_restriction)
axiom a373_v_TLSError__AD_export_restriction_Disj: not(v_TLSError__AD_certificate_revoked_fatal = v_TLSError__AD_export_restriction)
axiom a374_v_TLSError__AD_export_restriction_Disj: not(v_TLSError__AD_certificate_revoked_warning = v_TLSError__AD_export_restriction)
axiom a375_v_TLSError__AD_export_restriction_Disj: not(v_TLSError__AD_unsupported_certificate_fatal = v_TLSError__AD_export_restriction)
axiom a376_v_TLSError__AD_export_restriction_Disj: not(v_TLSError__AD_unsupported_certificate_warning = v_TLSError__AD_export_restriction)
axiom a377_v_TLSError__AD_export_restriction_Disj: not(v_TLSError__AD_bad_certificate_fatal = v_TLSError__AD_export_restriction)
axiom a378_v_TLSError__AD_export_restriction_Disj: not(v_TLSError__AD_bad_certificate_warning = v_TLSError__AD_export_restriction)
axiom a379_v_TLSError__AD_export_restriction_Disj: not(v_TLSError__AD_no_certificate = v_TLSError__AD_export_restriction)
axiom a380_v_TLSError__AD_export_restriction_Disj: not(v_TLSError__AD_handshake_failure = v_TLSError__AD_export_restriction)
axiom a381_v_TLSError__AD_export_restriction_Disj: not(v_TLSError__AD_decompression_failure = v_TLSError__AD_export_restriction)
axiom a382_v_TLSError__AD_export_restriction_Disj: not(v_TLSError__AD_record_overflow = v_TLSError__AD_export_restriction)
axiom a383_v_TLSError__AD_export_restriction_Disj: not(v_TLSError__AD_decryption_failed = v_TLSError__AD_export_restriction)
axiom a384_v_TLSError__AD_export_restriction_Disj: not(v_TLSError__AD_bad_record_mac = v_TLSError__AD_export_restriction)
axiom a385_v_TLSError__AD_export_restriction_Disj: not(v_TLSError__AD_unexpected_message = v_TLSError__AD_export_restriction)
axiom a386_v_TLSError__AD_export_restriction_Disj: not(v_TLSError__AD_close_notify = v_TLSError__AD_export_restriction)
predicate v_TLSError__AD_protocol_version_p 
function v_TLSError__AD_protocol_version  : top
axiom a387_v_TLSError__AD_protocol_version_Disj: not(v_TLSError__AD_export_restriction = v_TLSError__AD_protocol_version)
axiom a388_v_TLSError__AD_protocol_version_Disj: not(v_TLSError__AD_decrypt_error = v_TLSError__AD_protocol_version)
axiom a389_v_TLSError__AD_protocol_version_Disj: not(v_TLSError__AD_decode_error = v_TLSError__AD_protocol_version)
axiom a390_v_TLSError__AD_protocol_version_Disj: not(v_TLSError__AD_access_denied = v_TLSError__AD_protocol_version)
axiom a391_v_TLSError__AD_protocol_version_Disj: not(v_TLSError__AD_unknown_ca = v_TLSError__AD_protocol_version)
axiom a392_v_TLSError__AD_protocol_version_Disj: not(v_TLSError__AD_illegal_parameter = v_TLSError__AD_protocol_version)
axiom a393_v_TLSError__AD_protocol_version_Disj: not(v_TLSError__AD_certificate_unknown_fatal = v_TLSError__AD_protocol_version)
axiom a394_v_TLSError__AD_protocol_version_Disj: not(v_TLSError__AD_certificate_unknown_warning = v_TLSError__AD_protocol_version)
axiom a395_v_TLSError__AD_protocol_version_Disj: not(v_TLSError__AD_certificate_expired_fatal = v_TLSError__AD_protocol_version)
axiom a396_v_TLSError__AD_protocol_version_Disj: not(v_TLSError__AD_certificate_expired_warning = v_TLSError__AD_protocol_version)
axiom a397_v_TLSError__AD_protocol_version_Disj: not(v_TLSError__AD_certificate_revoked_fatal = v_TLSError__AD_protocol_version)
axiom a398_v_TLSError__AD_protocol_version_Disj: not(v_TLSError__AD_certificate_revoked_warning = v_TLSError__AD_protocol_version)
axiom a399_v_TLSError__AD_protocol_version_Disj: not(v_TLSError__AD_unsupported_certificate_fatal = v_TLSError__AD_protocol_version)
axiom a400_v_TLSError__AD_protocol_version_Disj: not(v_TLSError__AD_unsupported_certificate_warning = v_TLSError__AD_protocol_version)
axiom a401_v_TLSError__AD_protocol_version_Disj: not(v_TLSError__AD_bad_certificate_fatal = v_TLSError__AD_protocol_version)
axiom a402_v_TLSError__AD_protocol_version_Disj: not(v_TLSError__AD_bad_certificate_warning = v_TLSError__AD_protocol_version)
axiom a403_v_TLSError__AD_protocol_version_Disj: not(v_TLSError__AD_no_certificate = v_TLSError__AD_protocol_version)
axiom a404_v_TLSError__AD_protocol_version_Disj: not(v_TLSError__AD_handshake_failure = v_TLSError__AD_protocol_version)
axiom a405_v_TLSError__AD_protocol_version_Disj: not(v_TLSError__AD_decompression_failure = v_TLSError__AD_protocol_version)
axiom a406_v_TLSError__AD_protocol_version_Disj: not(v_TLSError__AD_record_overflow = v_TLSError__AD_protocol_version)
axiom a407_v_TLSError__AD_protocol_version_Disj: not(v_TLSError__AD_decryption_failed = v_TLSError__AD_protocol_version)
axiom a408_v_TLSError__AD_protocol_version_Disj: not(v_TLSError__AD_bad_record_mac = v_TLSError__AD_protocol_version)
axiom a409_v_TLSError__AD_protocol_version_Disj: not(v_TLSError__AD_unexpected_message = v_TLSError__AD_protocol_version)
axiom a410_v_TLSError__AD_protocol_version_Disj: not(v_TLSError__AD_close_notify = v_TLSError__AD_protocol_version)
predicate v_TLSError__AD_insufficient_security_p 
function v_TLSError__AD_insufficient_security  : top
axiom a411_v_TLSError__AD_insufficient_security_Disj: not(v_TLSError__AD_protocol_version = v_TLSError__AD_insufficient_security)
axiom a412_v_TLSError__AD_insufficient_security_Disj: not(v_TLSError__AD_export_restriction = v_TLSError__AD_insufficient_security)
axiom a413_v_TLSError__AD_insufficient_security_Disj: not(v_TLSError__AD_decrypt_error = v_TLSError__AD_insufficient_security)
axiom a414_v_TLSError__AD_insufficient_security_Disj: not(v_TLSError__AD_decode_error = v_TLSError__AD_insufficient_security)
axiom a415_v_TLSError__AD_insufficient_security_Disj: not(v_TLSError__AD_access_denied = v_TLSError__AD_insufficient_security)
axiom a416_v_TLSError__AD_insufficient_security_Disj: not(v_TLSError__AD_unknown_ca = v_TLSError__AD_insufficient_security)
axiom a417_v_TLSError__AD_insufficient_security_Disj: not(v_TLSError__AD_illegal_parameter = v_TLSError__AD_insufficient_security)
axiom a418_v_TLSError__AD_insufficient_security_Disj: not(v_TLSError__AD_certificate_unknown_fatal = v_TLSError__AD_insufficient_security)
axiom a419_v_TLSError__AD_insufficient_security_Disj: not(v_TLSError__AD_certificate_unknown_warning = v_TLSError__AD_insufficient_security)
axiom a420_v_TLSError__AD_insufficient_security_Disj: not(v_TLSError__AD_certificate_expired_fatal = v_TLSError__AD_insufficient_security)
axiom a421_v_TLSError__AD_insufficient_security_Disj: not(v_TLSError__AD_certificate_expired_warning = v_TLSError__AD_insufficient_security)
axiom a422_v_TLSError__AD_insufficient_security_Disj: not(v_TLSError__AD_certificate_revoked_fatal = v_TLSError__AD_insufficient_security)
axiom a423_v_TLSError__AD_insufficient_security_Disj: not(v_TLSError__AD_certificate_revoked_warning = v_TLSError__AD_insufficient_security)
axiom a424_v_TLSError__AD_insufficient_security_Disj: not(v_TLSError__AD_unsupported_certificate_fatal = v_TLSError__AD_insufficient_security)
axiom a425_v_TLSError__AD_insufficient_security_Disj: not(v_TLSError__AD_unsupported_certificate_warning = v_TLSError__AD_insufficient_security)
axiom a426_v_TLSError__AD_insufficient_security_Disj: not(v_TLSError__AD_bad_certificate_fatal = v_TLSError__AD_insufficient_security)
axiom a427_v_TLSError__AD_insufficient_security_Disj: not(v_TLSError__AD_bad_certificate_warning = v_TLSError__AD_insufficient_security)
axiom a428_v_TLSError__AD_insufficient_security_Disj: not(v_TLSError__AD_no_certificate = v_TLSError__AD_insufficient_security)
axiom a429_v_TLSError__AD_insufficient_security_Disj: not(v_TLSError__AD_handshake_failure = v_TLSError__AD_insufficient_security)
axiom a430_v_TLSError__AD_insufficient_security_Disj: not(v_TLSError__AD_decompression_failure = v_TLSError__AD_insufficient_security)
axiom a431_v_TLSError__AD_insufficient_security_Disj: not(v_TLSError__AD_record_overflow = v_TLSError__AD_insufficient_security)
axiom a432_v_TLSError__AD_insufficient_security_Disj: not(v_TLSError__AD_decryption_failed = v_TLSError__AD_insufficient_security)
axiom a433_v_TLSError__AD_insufficient_security_Disj: not(v_TLSError__AD_bad_record_mac = v_TLSError__AD_insufficient_security)
axiom a434_v_TLSError__AD_insufficient_security_Disj: not(v_TLSError__AD_unexpected_message = v_TLSError__AD_insufficient_security)
axiom a435_v_TLSError__AD_insufficient_security_Disj: not(v_TLSError__AD_close_notify = v_TLSError__AD_insufficient_security)
predicate v_TLSError__AD_internal_error_p 
function v_TLSError__AD_internal_error  : top
axiom a436_v_TLSError__AD_internal_error_Disj: not(v_TLSError__AD_insufficient_security = v_TLSError__AD_internal_error)
axiom a437_v_TLSError__AD_internal_error_Disj: not(v_TLSError__AD_protocol_version = v_TLSError__AD_internal_error)
axiom a438_v_TLSError__AD_internal_error_Disj: not(v_TLSError__AD_export_restriction = v_TLSError__AD_internal_error)
axiom a439_v_TLSError__AD_internal_error_Disj: not(v_TLSError__AD_decrypt_error = v_TLSError__AD_internal_error)
axiom a440_v_TLSError__AD_internal_error_Disj: not(v_TLSError__AD_decode_error = v_TLSError__AD_internal_error)
axiom a441_v_TLSError__AD_internal_error_Disj: not(v_TLSError__AD_access_denied = v_TLSError__AD_internal_error)
axiom a442_v_TLSError__AD_internal_error_Disj: not(v_TLSError__AD_unknown_ca = v_TLSError__AD_internal_error)
axiom a443_v_TLSError__AD_internal_error_Disj: not(v_TLSError__AD_illegal_parameter = v_TLSError__AD_internal_error)
axiom a444_v_TLSError__AD_internal_error_Disj: not(v_TLSError__AD_certificate_unknown_fatal = v_TLSError__AD_internal_error)
axiom a445_v_TLSError__AD_internal_error_Disj: not(v_TLSError__AD_certificate_unknown_warning = v_TLSError__AD_internal_error)
axiom a446_v_TLSError__AD_internal_error_Disj: not(v_TLSError__AD_certificate_expired_fatal = v_TLSError__AD_internal_error)
axiom a447_v_TLSError__AD_internal_error_Disj: not(v_TLSError__AD_certificate_expired_warning = v_TLSError__AD_internal_error)
axiom a448_v_TLSError__AD_internal_error_Disj: not(v_TLSError__AD_certificate_revoked_fatal = v_TLSError__AD_internal_error)
axiom a449_v_TLSError__AD_internal_error_Disj: not(v_TLSError__AD_certificate_revoked_warning = v_TLSError__AD_internal_error)
axiom a450_v_TLSError__AD_internal_error_Disj: not(v_TLSError__AD_unsupported_certificate_fatal = v_TLSError__AD_internal_error)
axiom a451_v_TLSError__AD_internal_error_Disj: not(v_TLSError__AD_unsupported_certificate_warning = v_TLSError__AD_internal_error)
axiom a452_v_TLSError__AD_internal_error_Disj: not(v_TLSError__AD_bad_certificate_fatal = v_TLSError__AD_internal_error)
axiom a453_v_TLSError__AD_internal_error_Disj: not(v_TLSError__AD_bad_certificate_warning = v_TLSError__AD_internal_error)
axiom a454_v_TLSError__AD_internal_error_Disj: not(v_TLSError__AD_no_certificate = v_TLSError__AD_internal_error)
axiom a455_v_TLSError__AD_internal_error_Disj: not(v_TLSError__AD_handshake_failure = v_TLSError__AD_internal_error)
axiom a456_v_TLSError__AD_internal_error_Disj: not(v_TLSError__AD_decompression_failure = v_TLSError__AD_internal_error)
axiom a457_v_TLSError__AD_internal_error_Disj: not(v_TLSError__AD_record_overflow = v_TLSError__AD_internal_error)
axiom a458_v_TLSError__AD_internal_error_Disj: not(v_TLSError__AD_decryption_failed = v_TLSError__AD_internal_error)
axiom a459_v_TLSError__AD_internal_error_Disj: not(v_TLSError__AD_bad_record_mac = v_TLSError__AD_internal_error)
axiom a460_v_TLSError__AD_internal_error_Disj: not(v_TLSError__AD_unexpected_message = v_TLSError__AD_internal_error)
axiom a461_v_TLSError__AD_internal_error_Disj: not(v_TLSError__AD_close_notify = v_TLSError__AD_internal_error)
predicate v_TLSError__AD_user_cancelled_warning_p 
function v_TLSError__AD_user_cancelled_warning  : top
axiom a462_v_TLSError__AD_user_cancelled_warning_Disj: not(v_TLSError__AD_internal_error = v_TLSError__AD_user_cancelled_warning)
axiom a463_v_TLSError__AD_user_cancelled_warning_Disj: not(v_TLSError__AD_insufficient_security = v_TLSError__AD_user_cancelled_warning)
axiom a464_v_TLSError__AD_user_cancelled_warning_Disj: not(v_TLSError__AD_protocol_version = v_TLSError__AD_user_cancelled_warning)
axiom a465_v_TLSError__AD_user_cancelled_warning_Disj: not(v_TLSError__AD_export_restriction = v_TLSError__AD_user_cancelled_warning)
axiom a466_v_TLSError__AD_user_cancelled_warning_Disj: not(v_TLSError__AD_decrypt_error = v_TLSError__AD_user_cancelled_warning)
axiom a467_v_TLSError__AD_user_cancelled_warning_Disj: not(v_TLSError__AD_decode_error = v_TLSError__AD_user_cancelled_warning)
axiom a468_v_TLSError__AD_user_cancelled_warning_Disj: not(v_TLSError__AD_access_denied = v_TLSError__AD_user_cancelled_warning)
axiom a469_v_TLSError__AD_user_cancelled_warning_Disj: not(v_TLSError__AD_unknown_ca = v_TLSError__AD_user_cancelled_warning)
axiom a470_v_TLSError__AD_user_cancelled_warning_Disj: not(v_TLSError__AD_illegal_parameter = v_TLSError__AD_user_cancelled_warning)
axiom a471_v_TLSError__AD_user_cancelled_warning_Disj: not(v_TLSError__AD_certificate_unknown_fatal = v_TLSError__AD_user_cancelled_warning)
axiom a472_v_TLSError__AD_user_cancelled_warning_Disj: not(v_TLSError__AD_certificate_unknown_warning = v_TLSError__AD_user_cancelled_warning)
axiom a473_v_TLSError__AD_user_cancelled_warning_Disj: not(v_TLSError__AD_certificate_expired_fatal = v_TLSError__AD_user_cancelled_warning)
axiom a474_v_TLSError__AD_user_cancelled_warning_Disj: not(v_TLSError__AD_certificate_expired_warning = v_TLSError__AD_user_cancelled_warning)
axiom a475_v_TLSError__AD_user_cancelled_warning_Disj: not(v_TLSError__AD_certificate_revoked_fatal = v_TLSError__AD_user_cancelled_warning)
axiom a476_v_TLSError__AD_user_cancelled_warning_Disj: not(v_TLSError__AD_certificate_revoked_warning = v_TLSError__AD_user_cancelled_warning)
axiom a477_v_TLSError__AD_user_cancelled_warning_Disj: not(v_TLSError__AD_unsupported_certificate_fatal = v_TLSError__AD_user_cancelled_warning)
axiom a478_v_TLSError__AD_user_cancelled_warning_Disj: not(v_TLSError__AD_unsupported_certificate_warning = v_TLSError__AD_user_cancelled_warning)
axiom a479_v_TLSError__AD_user_cancelled_warning_Disj: not(v_TLSError__AD_bad_certificate_fatal = v_TLSError__AD_user_cancelled_warning)
axiom a480_v_TLSError__AD_user_cancelled_warning_Disj: not(v_TLSError__AD_bad_certificate_warning = v_TLSError__AD_user_cancelled_warning)
axiom a481_v_TLSError__AD_user_cancelled_warning_Disj: not(v_TLSError__AD_no_certificate = v_TLSError__AD_user_cancelled_warning)
axiom a482_v_TLSError__AD_user_cancelled_warning_Disj: not(v_TLSError__AD_handshake_failure = v_TLSError__AD_user_cancelled_warning)
axiom a483_v_TLSError__AD_user_cancelled_warning_Disj: not(v_TLSError__AD_decompression_failure = v_TLSError__AD_user_cancelled_warning)
axiom a484_v_TLSError__AD_user_cancelled_warning_Disj: not(v_TLSError__AD_record_overflow = v_TLSError__AD_user_cancelled_warning)
axiom a485_v_TLSError__AD_user_cancelled_warning_Disj: not(v_TLSError__AD_decryption_failed = v_TLSError__AD_user_cancelled_warning)
axiom a486_v_TLSError__AD_user_cancelled_warning_Disj: not(v_TLSError__AD_bad_record_mac = v_TLSError__AD_user_cancelled_warning)
axiom a487_v_TLSError__AD_user_cancelled_warning_Disj: not(v_TLSError__AD_unexpected_message = v_TLSError__AD_user_cancelled_warning)
axiom a488_v_TLSError__AD_user_cancelled_warning_Disj: not(v_TLSError__AD_close_notify = v_TLSError__AD_user_cancelled_warning)
predicate v_TLSError__AD_user_cancelled_fatal_p 
function v_TLSError__AD_user_cancelled_fatal  : top
axiom a489_v_TLSError__AD_user_cancelled_fatal_Disj: not(v_TLSError__AD_user_cancelled_warning = v_TLSError__AD_user_cancelled_fatal)
axiom a490_v_TLSError__AD_user_cancelled_fatal_Disj: not(v_TLSError__AD_internal_error = v_TLSError__AD_user_cancelled_fatal)
axiom a491_v_TLSError__AD_user_cancelled_fatal_Disj: not(v_TLSError__AD_insufficient_security = v_TLSError__AD_user_cancelled_fatal)
axiom a492_v_TLSError__AD_user_cancelled_fatal_Disj: not(v_TLSError__AD_protocol_version = v_TLSError__AD_user_cancelled_fatal)
axiom a493_v_TLSError__AD_user_cancelled_fatal_Disj: not(v_TLSError__AD_export_restriction = v_TLSError__AD_user_cancelled_fatal)
axiom a494_v_TLSError__AD_user_cancelled_fatal_Disj: not(v_TLSError__AD_decrypt_error = v_TLSError__AD_user_cancelled_fatal)
axiom a495_v_TLSError__AD_user_cancelled_fatal_Disj: not(v_TLSError__AD_decode_error = v_TLSError__AD_user_cancelled_fatal)
axiom a496_v_TLSError__AD_user_cancelled_fatal_Disj: not(v_TLSError__AD_access_denied = v_TLSError__AD_user_cancelled_fatal)
axiom a497_v_TLSError__AD_user_cancelled_fatal_Disj: not(v_TLSError__AD_unknown_ca = v_TLSError__AD_user_cancelled_fatal)
axiom a498_v_TLSError__AD_user_cancelled_fatal_Disj: not(v_TLSError__AD_illegal_parameter = v_TLSError__AD_user_cancelled_fatal)
axiom a499_v_TLSError__AD_user_cancelled_fatal_Disj: not(v_TLSError__AD_certificate_unknown_fatal = v_TLSError__AD_user_cancelled_fatal)
axiom a500_v_TLSError__AD_user_cancelled_fatal_Disj: not(v_TLSError__AD_certificate_unknown_warning = v_TLSError__AD_user_cancelled_fatal)
axiom a501_v_TLSError__AD_user_cancelled_fatal_Disj: not(v_TLSError__AD_certificate_expired_fatal = v_TLSError__AD_user_cancelled_fatal)
axiom a502_v_TLSError__AD_user_cancelled_fatal_Disj: not(v_TLSError__AD_certificate_expired_warning = v_TLSError__AD_user_cancelled_fatal)
axiom a503_v_TLSError__AD_user_cancelled_fatal_Disj: not(v_TLSError__AD_certificate_revoked_fatal = v_TLSError__AD_user_cancelled_fatal)
axiom a504_v_TLSError__AD_user_cancelled_fatal_Disj: not(v_TLSError__AD_certificate_revoked_warning = v_TLSError__AD_user_cancelled_fatal)
axiom a505_v_TLSError__AD_user_cancelled_fatal_Disj: not(v_TLSError__AD_unsupported_certificate_fatal = v_TLSError__AD_user_cancelled_fatal)
axiom a506_v_TLSError__AD_user_cancelled_fatal_Disj: not(v_TLSError__AD_unsupported_certificate_warning = v_TLSError__AD_user_cancelled_fatal)
axiom a507_v_TLSError__AD_user_cancelled_fatal_Disj: not(v_TLSError__AD_bad_certificate_fatal = v_TLSError__AD_user_cancelled_fatal)
axiom a508_v_TLSError__AD_user_cancelled_fatal_Disj: not(v_TLSError__AD_bad_certificate_warning = v_TLSError__AD_user_cancelled_fatal)
axiom a509_v_TLSError__AD_user_cancelled_fatal_Disj: not(v_TLSError__AD_no_certificate = v_TLSError__AD_user_cancelled_fatal)
axiom a510_v_TLSError__AD_user_cancelled_fatal_Disj: not(v_TLSError__AD_handshake_failure = v_TLSError__AD_user_cancelled_fatal)
axiom a511_v_TLSError__AD_user_cancelled_fatal_Disj: not(v_TLSError__AD_decompression_failure = v_TLSError__AD_user_cancelled_fatal)
axiom a512_v_TLSError__AD_user_cancelled_fatal_Disj: not(v_TLSError__AD_record_overflow = v_TLSError__AD_user_cancelled_fatal)
axiom a513_v_TLSError__AD_user_cancelled_fatal_Disj: not(v_TLSError__AD_decryption_failed = v_TLSError__AD_user_cancelled_fatal)
axiom a514_v_TLSError__AD_user_cancelled_fatal_Disj: not(v_TLSError__AD_bad_record_mac = v_TLSError__AD_user_cancelled_fatal)
axiom a515_v_TLSError__AD_user_cancelled_fatal_Disj: not(v_TLSError__AD_unexpected_message = v_TLSError__AD_user_cancelled_fatal)
axiom a516_v_TLSError__AD_user_cancelled_fatal_Disj: not(v_TLSError__AD_close_notify = v_TLSError__AD_user_cancelled_fatal)
predicate v_TLSError__AD_no_renegotiation_p 
function v_TLSError__AD_no_renegotiation  : top
axiom a517_v_TLSError__AD_no_renegotiation_Disj: not(v_TLSError__AD_user_cancelled_fatal = v_TLSError__AD_no_renegotiation)
axiom a518_v_TLSError__AD_no_renegotiation_Disj: not(v_TLSError__AD_user_cancelled_warning = v_TLSError__AD_no_renegotiation)
axiom a519_v_TLSError__AD_no_renegotiation_Disj: not(v_TLSError__AD_internal_error = v_TLSError__AD_no_renegotiation)
axiom a520_v_TLSError__AD_no_renegotiation_Disj: not(v_TLSError__AD_insufficient_security = v_TLSError__AD_no_renegotiation)
axiom a521_v_TLSError__AD_no_renegotiation_Disj: not(v_TLSError__AD_protocol_version = v_TLSError__AD_no_renegotiation)
axiom a522_v_TLSError__AD_no_renegotiation_Disj: not(v_TLSError__AD_export_restriction = v_TLSError__AD_no_renegotiation)
axiom a523_v_TLSError__AD_no_renegotiation_Disj: not(v_TLSError__AD_decrypt_error = v_TLSError__AD_no_renegotiation)
axiom a524_v_TLSError__AD_no_renegotiation_Disj: not(v_TLSError__AD_decode_error = v_TLSError__AD_no_renegotiation)
axiom a525_v_TLSError__AD_no_renegotiation_Disj: not(v_TLSError__AD_access_denied = v_TLSError__AD_no_renegotiation)
axiom a526_v_TLSError__AD_no_renegotiation_Disj: not(v_TLSError__AD_unknown_ca = v_TLSError__AD_no_renegotiation)
axiom a527_v_TLSError__AD_no_renegotiation_Disj: not(v_TLSError__AD_illegal_parameter = v_TLSError__AD_no_renegotiation)
axiom a528_v_TLSError__AD_no_renegotiation_Disj: not(v_TLSError__AD_certificate_unknown_fatal = v_TLSError__AD_no_renegotiation)
axiom a529_v_TLSError__AD_no_renegotiation_Disj: not(v_TLSError__AD_certificate_unknown_warning = v_TLSError__AD_no_renegotiation)
axiom a530_v_TLSError__AD_no_renegotiation_Disj: not(v_TLSError__AD_certificate_expired_fatal = v_TLSError__AD_no_renegotiation)
axiom a531_v_TLSError__AD_no_renegotiation_Disj: not(v_TLSError__AD_certificate_expired_warning = v_TLSError__AD_no_renegotiation)
axiom a532_v_TLSError__AD_no_renegotiation_Disj: not(v_TLSError__AD_certificate_revoked_fatal = v_TLSError__AD_no_renegotiation)
axiom a533_v_TLSError__AD_no_renegotiation_Disj: not(v_TLSError__AD_certificate_revoked_warning = v_TLSError__AD_no_renegotiation)
axiom a534_v_TLSError__AD_no_renegotiation_Disj: not(v_TLSError__AD_unsupported_certificate_fatal = v_TLSError__AD_no_renegotiation)
axiom a535_v_TLSError__AD_no_renegotiation_Disj: not(v_TLSError__AD_unsupported_certificate_warning = v_TLSError__AD_no_renegotiation)
axiom a536_v_TLSError__AD_no_renegotiation_Disj: not(v_TLSError__AD_bad_certificate_fatal = v_TLSError__AD_no_renegotiation)
axiom a537_v_TLSError__AD_no_renegotiation_Disj: not(v_TLSError__AD_bad_certificate_warning = v_TLSError__AD_no_renegotiation)
axiom a538_v_TLSError__AD_no_renegotiation_Disj: not(v_TLSError__AD_no_certificate = v_TLSError__AD_no_renegotiation)
axiom a539_v_TLSError__AD_no_renegotiation_Disj: not(v_TLSError__AD_handshake_failure = v_TLSError__AD_no_renegotiation)
axiom a540_v_TLSError__AD_no_renegotiation_Disj: not(v_TLSError__AD_decompression_failure = v_TLSError__AD_no_renegotiation)
axiom a541_v_TLSError__AD_no_renegotiation_Disj: not(v_TLSError__AD_record_overflow = v_TLSError__AD_no_renegotiation)
axiom a542_v_TLSError__AD_no_renegotiation_Disj: not(v_TLSError__AD_decryption_failed = v_TLSError__AD_no_renegotiation)
axiom a543_v_TLSError__AD_no_renegotiation_Disj: not(v_TLSError__AD_bad_record_mac = v_TLSError__AD_no_renegotiation)
axiom a544_v_TLSError__AD_no_renegotiation_Disj: not(v_TLSError__AD_unexpected_message = v_TLSError__AD_no_renegotiation)
axiom a545_v_TLSError__AD_no_renegotiation_Disj: not(v_TLSError__AD_close_notify = v_TLSError__AD_no_renegotiation)
predicate v_TLSError__AD_unsupported_extension_p 
function v_TLSError__AD_unsupported_extension  : top
axiom a546_v_TLSError__AD_unsupported_extension_Disj: not(v_TLSError__AD_no_renegotiation = v_TLSError__AD_unsupported_extension)
axiom a547_v_TLSError__AD_unsupported_extension_Disj: not(v_TLSError__AD_user_cancelled_fatal = v_TLSError__AD_unsupported_extension)
axiom a548_v_TLSError__AD_unsupported_extension_Disj: not(v_TLSError__AD_user_cancelled_warning = v_TLSError__AD_unsupported_extension)
axiom a549_v_TLSError__AD_unsupported_extension_Disj: not(v_TLSError__AD_internal_error = v_TLSError__AD_unsupported_extension)
axiom a550_v_TLSError__AD_unsupported_extension_Disj: not(v_TLSError__AD_insufficient_security = v_TLSError__AD_unsupported_extension)
axiom a551_v_TLSError__AD_unsupported_extension_Disj: not(v_TLSError__AD_protocol_version = v_TLSError__AD_unsupported_extension)
axiom a552_v_TLSError__AD_unsupported_extension_Disj: not(v_TLSError__AD_export_restriction = v_TLSError__AD_unsupported_extension)
axiom a553_v_TLSError__AD_unsupported_extension_Disj: not(v_TLSError__AD_decrypt_error = v_TLSError__AD_unsupported_extension)
axiom a554_v_TLSError__AD_unsupported_extension_Disj: not(v_TLSError__AD_decode_error = v_TLSError__AD_unsupported_extension)
axiom a555_v_TLSError__AD_unsupported_extension_Disj: not(v_TLSError__AD_access_denied = v_TLSError__AD_unsupported_extension)
axiom a556_v_TLSError__AD_unsupported_extension_Disj: not(v_TLSError__AD_unknown_ca = v_TLSError__AD_unsupported_extension)
axiom a557_v_TLSError__AD_unsupported_extension_Disj: not(v_TLSError__AD_illegal_parameter = v_TLSError__AD_unsupported_extension)
axiom a558_v_TLSError__AD_unsupported_extension_Disj: not(v_TLSError__AD_certificate_unknown_fatal = v_TLSError__AD_unsupported_extension)
axiom a559_v_TLSError__AD_unsupported_extension_Disj: not(v_TLSError__AD_certificate_unknown_warning = v_TLSError__AD_unsupported_extension)
axiom a560_v_TLSError__AD_unsupported_extension_Disj: not(v_TLSError__AD_certificate_expired_fatal = v_TLSError__AD_unsupported_extension)
axiom a561_v_TLSError__AD_unsupported_extension_Disj: not(v_TLSError__AD_certificate_expired_warning = v_TLSError__AD_unsupported_extension)
axiom a562_v_TLSError__AD_unsupported_extension_Disj: not(v_TLSError__AD_certificate_revoked_fatal = v_TLSError__AD_unsupported_extension)
axiom a563_v_TLSError__AD_unsupported_extension_Disj: not(v_TLSError__AD_certificate_revoked_warning = v_TLSError__AD_unsupported_extension)
axiom a564_v_TLSError__AD_unsupported_extension_Disj: not(v_TLSError__AD_unsupported_certificate_fatal = v_TLSError__AD_unsupported_extension)
axiom a565_v_TLSError__AD_unsupported_extension_Disj: not(v_TLSError__AD_unsupported_certificate_warning = v_TLSError__AD_unsupported_extension)
axiom a566_v_TLSError__AD_unsupported_extension_Disj: not(v_TLSError__AD_bad_certificate_fatal = v_TLSError__AD_unsupported_extension)
axiom a567_v_TLSError__AD_unsupported_extension_Disj: not(v_TLSError__AD_bad_certificate_warning = v_TLSError__AD_unsupported_extension)
axiom a568_v_TLSError__AD_unsupported_extension_Disj: not(v_TLSError__AD_no_certificate = v_TLSError__AD_unsupported_extension)
axiom a569_v_TLSError__AD_unsupported_extension_Disj: not(v_TLSError__AD_handshake_failure = v_TLSError__AD_unsupported_extension)
axiom a570_v_TLSError__AD_unsupported_extension_Disj: not(v_TLSError__AD_decompression_failure = v_TLSError__AD_unsupported_extension)
axiom a571_v_TLSError__AD_unsupported_extension_Disj: not(v_TLSError__AD_record_overflow = v_TLSError__AD_unsupported_extension)
axiom a572_v_TLSError__AD_unsupported_extension_Disj: not(v_TLSError__AD_decryption_failed = v_TLSError__AD_unsupported_extension)
axiom a573_v_TLSError__AD_unsupported_extension_Disj: not(v_TLSError__AD_bad_record_mac = v_TLSError__AD_unsupported_extension)
axiom a574_v_TLSError__AD_unsupported_extension_Disj: not(v_TLSError__AD_unexpected_message = v_TLSError__AD_unsupported_extension)
axiom a575_v_TLSError__AD_unsupported_extension_Disj: not(v_TLSError__AD_close_notify = v_TLSError__AD_unsupported_extension)
(* declaring value Nonce.random [C:\cygwin\home\Pierre-Yves\mitls\lib\Nonce.fs7(7,0)] *)
function v_Nonce__random : top
(* declaring value Nonce.mkHelloRandom [C:\cygwin\home\Pierre-Yves\mitls\lib\Nonce.fs7(9,0)] *)
function v_Nonce__mkHelloRandom : top
(* declaring value Nonce.noCsr [C:\cygwin\home\Pierre-Yves\mitls\lib\Nonce.fs7(16,0)] *)
function v_Nonce__noCsr : top
(* declaring value Nonce.log [C:\cygwin\home\Pierre-Yves\mitls\lib\Nonce.fs7(19,8)] *)
function v_Nonce__log : top
(* declaring value Nonce.timestamp [C:\cygwin\home\Pierre-Yves\mitls\lib\Nonce.fs7(20,8)] *)
function v_Nonce__timestamp : top
(* declaring type TLSConstants.PreProtocolVersion [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(19,0)] *)
predicate v_TLSConstants__SSL_3p0_p 
function v_TLSConstants__SSL_3p0  : top
predicate v_TLSConstants__TLS_1p0_p 
function v_TLSConstants__TLS_1p0  : top
axiom a576_v_TLSConstants__TLS_1p0_Disj: not(v_TLSConstants__SSL_3p0 = v_TLSConstants__TLS_1p0)
predicate v_TLSConstants__TLS_1p1_p 
function v_TLSConstants__TLS_1p1  : top
axiom a577_v_TLSConstants__TLS_1p1_Disj: not(v_TLSConstants__TLS_1p0 = v_TLSConstants__TLS_1p1)
axiom a578_v_TLSConstants__TLS_1p1_Disj: not(v_TLSConstants__SSL_3p0 = v_TLSConstants__TLS_1p1)
predicate v_TLSConstants__TLS_1p2_p 
function v_TLSConstants__TLS_1p2  : top
axiom a579_v_TLSConstants__TLS_1p2_Disj: not(v_TLSConstants__TLS_1p1 = v_TLSConstants__TLS_1p2)
axiom a580_v_TLSConstants__TLS_1p2_Disj: not(v_TLSConstants__TLS_1p0 = v_TLSConstants__TLS_1p2)
axiom a581_v_TLSConstants__TLS_1p2_Disj: not(v_TLSConstants__SSL_3p0 = v_TLSConstants__TLS_1p2)
(* declaring type TLSConstants.IsProtocolVersion [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(25,0)] *)
predicate v_TLSConstants__IsProtocolVersion_p (x1:top)
(* assume (!p. TLSConstants.IsProtocolVersion(p) <=> p = TLSConstants.SSL_3p0 () \/ p = TLSConstants.TLS_1p0 () \/ p = TLSConstants.TLS_1p1 () \/ p = TLSConstants.TLS_1p2 ()) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(26,0)] *)
axiom a582_asm: (forall v_p:top. ((v_TLSConstants__IsProtocolVersion_p v_p) <-> ((v_p = (v_TLSConstants__SSL_3p0 )) \/ ((v_p = (v_TLSConstants__TLS_1p0 )) \/ ((v_p = (v_TLSConstants__TLS_1p1 )) \/ (v_p = (v_TLSConstants__TLS_1p2 )))))))
(* declaring type TLSConstants.blockCipher [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(35,0)] *)
predicate v_TLSConstants__TDES_EDE_p 
function v_TLSConstants__TDES_EDE  : top
predicate v_TLSConstants__AES_128_p 
function v_TLSConstants__AES_128  : top
axiom a583_v_TLSConstants__AES_128_Disj: not(v_TLSConstants__TDES_EDE = v_TLSConstants__AES_128)
predicate v_TLSConstants__AES_256_p 
function v_TLSConstants__AES_256  : top
axiom a584_v_TLSConstants__AES_256_Disj: not(v_TLSConstants__AES_128 = v_TLSConstants__AES_256)
axiom a585_v_TLSConstants__AES_256_Disj: not(v_TLSConstants__TDES_EDE = v_TLSConstants__AES_256)
(* declaring type TLSConstants.encAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(40,0)] *)
predicate v_TLSConstants__CBC_Stale_p (x1:top)
function v_TLSConstants__CBC_Stale (x1:top) : top
function v_TLSConstants__CBC_Stale__1 (x1:top) : top
axiom a586_v_TLSConstants__CBC_Stale_Inj: (forall x1:top. (v_TLSConstants__CBC_Stale__1 (v_TLSConstants__CBC_Stale x1)) = x1) /\ (forall x1:top,y1:top. (v_TLSConstants__CBC_Stale x1) = (v_TLSConstants__CBC_Stale y1) -> x1 = y1)
predicate v_TLSConstants__CBC_Fresh_p (x1:top)
function v_TLSConstants__CBC_Fresh (x1:top) : top
function v_TLSConstants__CBC_Fresh__1 (x1:top) : top
axiom a587_v_TLSConstants__CBC_Fresh_Inj: (forall x1:top. (v_TLSConstants__CBC_Fresh__1 (v_TLSConstants__CBC_Fresh x1)) = x1) /\ (forall x1:top,y1:top. (v_TLSConstants__CBC_Fresh x1) = (v_TLSConstants__CBC_Fresh y1) -> x1 = y1)
axiom a588_v_TLSConstants__CBC_Fresh_Disj: forall x0:top, x1:top. not((v_TLSConstants__CBC_Stale x0) = (v_TLSConstants__CBC_Fresh x1))
predicate v_TLSConstants__Stream_RC4_128_p 
function v_TLSConstants__Stream_RC4_128  : top
axiom a589_v_TLSConstants__Stream_RC4_128_Disj: forall x0:top. not((v_TLSConstants__CBC_Fresh x0) = (v_TLSConstants__Stream_RC4_128))
axiom a590_v_TLSConstants__Stream_RC4_128_Disj: forall x0:top. not((v_TLSConstants__CBC_Stale x0) = (v_TLSConstants__Stream_RC4_128))
(* declaring type TLSConstants.IND_CPA [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(45,0)] *)
predicate v_TLSConstants__IND_CPA_p (x1:top)
(* declaring type TLSConstants.hashAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(59,0)] *)
predicate v_TLSConstants__NULL_p 
function v_TLSConstants__NULL  : top
predicate v_TLSConstants__MD5SHA1_p 
function v_TLSConstants__MD5SHA1  : top
axiom a591_v_TLSConstants__MD5SHA1_Disj: not(v_TLSConstants__NULL = v_TLSConstants__MD5SHA1)
predicate v_TLSConstants__MD5_p 
function v_TLSConstants__MD5  : top
axiom a592_v_TLSConstants__MD5_Disj: not(v_TLSConstants__MD5SHA1 = v_TLSConstants__MD5)
axiom a593_v_TLSConstants__MD5_Disj: not(v_TLSConstants__NULL = v_TLSConstants__MD5)
predicate v_TLSConstants__SHA_p 
function v_TLSConstants__SHA  : top
axiom a594_v_TLSConstants__SHA_Disj: not(v_TLSConstants__MD5 = v_TLSConstants__SHA)
axiom a595_v_TLSConstants__SHA_Disj: not(v_TLSConstants__MD5SHA1 = v_TLSConstants__SHA)
axiom a596_v_TLSConstants__SHA_Disj: not(v_TLSConstants__NULL = v_TLSConstants__SHA)
predicate v_TLSConstants__SHA256_p 
function v_TLSConstants__SHA256  : top
axiom a597_v_TLSConstants__SHA256_Disj: not(v_TLSConstants__SHA = v_TLSConstants__SHA256)
axiom a598_v_TLSConstants__SHA256_Disj: not(v_TLSConstants__MD5 = v_TLSConstants__SHA256)
axiom a599_v_TLSConstants__SHA256_Disj: not(v_TLSConstants__MD5SHA1 = v_TLSConstants__SHA256)
axiom a600_v_TLSConstants__SHA256_Disj: not(v_TLSConstants__NULL = v_TLSConstants__SHA256)
predicate v_TLSConstants__SHA384_p 
function v_TLSConstants__SHA384  : top
axiom a601_v_TLSConstants__SHA384_Disj: not(v_TLSConstants__SHA256 = v_TLSConstants__SHA384)
axiom a602_v_TLSConstants__SHA384_Disj: not(v_TLSConstants__SHA = v_TLSConstants__SHA384)
axiom a603_v_TLSConstants__SHA384_Disj: not(v_TLSConstants__MD5 = v_TLSConstants__SHA384)
axiom a604_v_TLSConstants__SHA384_Disj: not(v_TLSConstants__MD5SHA1 = v_TLSConstants__SHA384)
axiom a605_v_TLSConstants__SHA384_Disj: not(v_TLSConstants__NULL = v_TLSConstants__SHA384)
(* declaring type TLSConstants.macAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(67,0)] *)
predicate v_TLSConstants__MA_HMAC_p (x1:top)
function v_TLSConstants__MA_HMAC (x1:top) : top
function v_TLSConstants__MA_HMAC__1 (x1:top) : top
axiom a606_v_TLSConstants__MA_HMAC_Inj: (forall x1:top. (v_TLSConstants__MA_HMAC__1 (v_TLSConstants__MA_HMAC x1)) = x1) /\ (forall x1:top,y1:top. (v_TLSConstants__MA_HMAC x1) = (v_TLSConstants__MA_HMAC y1) -> x1 = y1)
predicate v_TLSConstants__MA_SSLKHASH_p (x1:top)
function v_TLSConstants__MA_SSLKHASH (x1:top) : top
function v_TLSConstants__MA_SSLKHASH__1 (x1:top) : top
axiom a607_v_TLSConstants__MA_SSLKHASH_Inj: (forall x1:top. (v_TLSConstants__MA_SSLKHASH__1 (v_TLSConstants__MA_SSLKHASH x1)) = x1) /\ (forall x1:top,y1:top. (v_TLSConstants__MA_SSLKHASH x1) = (v_TLSConstants__MA_SSLKHASH y1) -> x1 = y1)
axiom a608_v_TLSConstants__MA_SSLKHASH_Disj: forall x0:top, x1:top. not((v_TLSConstants__MA_HMAC x0) = (v_TLSConstants__MA_SSLKHASH x1))
(* declaring type TLSConstants.INT_CMA_M [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(71,0)] *)
predicate v_TLSConstants__INT_CMA_M_p (x1:top)
(* assume TLSConstants.INT_CMA_M(TLSConstants.MA_HMAC (TLSConstants.SHA256 ())) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(73,1)] *)
axiom a609_asm: (v_TLSConstants__INT_CMA_M_p (v_TLSConstants__MA_HMAC (v_TLSConstants__SHA256 )))
(* assume TLSConstants.INT_CMA_M(TLSConstants.MA_HMAC (TLSConstants.SHA ())) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(74,1)] *)
axiom a610_asm: (v_TLSConstants__INT_CMA_M_p (v_TLSConstants__MA_HMAC (v_TLSConstants__SHA )))
(* declaring type TLSConstants.sigAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(82,0)] *)
predicate v_TLSConstants__SA_RSA_p 
function v_TLSConstants__SA_RSA  : top
predicate v_TLSConstants__SA_DSA_p 
function v_TLSConstants__SA_DSA  : top
axiom a611_v_TLSConstants__SA_DSA_Disj: not(v_TLSConstants__SA_RSA = v_TLSConstants__SA_DSA)
predicate v_TLSConstants__SA_ECDSA_p 
function v_TLSConstants__SA_ECDSA  : top
axiom a612_v_TLSConstants__SA_ECDSA_Disj: not(v_TLSConstants__SA_DSA = v_TLSConstants__SA_ECDSA)
axiom a613_v_TLSConstants__SA_ECDSA_Disj: not(v_TLSConstants__SA_RSA = v_TLSConstants__SA_ECDSA)
(* declaring type TLSConstants.INT_CMA_S [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(89,0)] *)
predicate v_TLSConstants__INT_CMA_S_p (x1:top) (x2:top) (x3:top)
(* declaring type TLSConstants.aeadAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(100,0)] *)
predicate v_TLSConstants__AES_128_GCM_p 
function v_TLSConstants__AES_128_GCM  : top
predicate v_TLSConstants__AES_256_GCM_p 
function v_TLSConstants__AES_256_GCM  : top
axiom a614_v_TLSConstants__AES_256_GCM_Disj: not(v_TLSConstants__AES_128_GCM = v_TLSConstants__AES_256_GCM)
(* declaring type TLSConstants.aeAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(104,0)] *)
predicate v_TLSConstants__MACOnly_p (x1:top)
function v_TLSConstants__MACOnly (x1:top) : top
function v_TLSConstants__MACOnly__1 (x1:top) : top
axiom a615_v_TLSConstants__MACOnly_Inj: (forall x1:top. (v_TLSConstants__MACOnly__1 (v_TLSConstants__MACOnly x1)) = x1) /\ (forall x1:top,y1:top. (v_TLSConstants__MACOnly x1) = (v_TLSConstants__MACOnly y1) -> x1 = y1)
predicate v_TLSConstants__MtE_p (x1:top) (x2:top)
function v_TLSConstants__MtE (x1:top) (x2:top) : top
function v_TLSConstants__MtE__1 (x1:top) : top
function v_TLSConstants__MtE__2 (x1:top) : top
axiom a616_v_TLSConstants__MtE_Inj: (forall x1:top, x2:top. ((v_TLSConstants__MtE__1 (v_TLSConstants__MtE x1 x2)) = x1) /\ ((v_TLSConstants__MtE__2 (v_TLSConstants__MtE x1 x2)) = x2)) /\ (forall x1:top, x2:top,y1:top, y2:top. (v_TLSConstants__MtE x1 x2) = (v_TLSConstants__MtE y1 y2) -> (x1 = y1) /\ (x2 = y2))
axiom a617_v_TLSConstants__MtE_Disj: forall x0:top, x1:top, x2:top. not((v_TLSConstants__MACOnly x0) = (v_TLSConstants__MtE x1 x2))
predicate v_TLSConstants__AEAD_p (x1:top) (x2:top)
function v_TLSConstants__AEAD (x1:top) (x2:top) : top
function v_TLSConstants__AEAD__1 (x1:top) : top
function v_TLSConstants__AEAD__2 (x1:top) : top
axiom a618_v_TLSConstants__AEAD_Inj: (forall x1:top, x2:top. ((v_TLSConstants__AEAD__1 (v_TLSConstants__AEAD x1 x2)) = x1) /\ ((v_TLSConstants__AEAD__2 (v_TLSConstants__AEAD x1 x2)) = x2)) /\ (forall x1:top, x2:top,y1:top, y2:top. (v_TLSConstants__AEAD x1 x2) = (v_TLSConstants__AEAD y1 y2) -> (x1 = y1) /\ (x2 = y2))
axiom a619_v_TLSConstants__AEAD_Disj: forall x0:top, x1:top, x2:top, x3:top. not((v_TLSConstants__MtE x0 x1) = (v_TLSConstants__AEAD x2 x3))
axiom a620_v_TLSConstants__AEAD_Disj: forall x0:top, x1:top, x2:top. not((v_TLSConstants__MACOnly x0) = (v_TLSConstants__AEAD x1 x2))
(* declaring type TLSConstants.INT_CTXT [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(109,0)] *)
predicate v_TLSConstants__INT_CTXT_p (x1:top) (x2:top)
(* declaring type TLSConstants.StrongAEAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(117,0)] *)
predicate v_TLSConstants__StrongAEAlg_p (x1:top) (x2:top)
(* assume (!pv. (!ae. TLSConstants.StrongAEAlg(pv, ae) <=> (?e. (?m. ae = TLSConstants.MtE (e, m) /\ TLSConstants.IND_CPA(e) /\ TLSConstants.INT_CMA_M(m) /\ TLSConstants.INT_CTXT(pv, ae))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(118,0)] *)
axiom a621_asm: (forall v_pv:top. (forall v_ae:top. ((v_TLSConstants__StrongAEAlg_p v_pv v_ae) <-> (exists v_e:top. (exists v_m:top. ((v_ae = (v_TLSConstants__MtE v_e v_m)) /\ ((v_TLSConstants__IND_CPA_p v_e) /\ ((v_TLSConstants__INT_CMA_M_p v_m) /\ (v_TLSConstants__INT_CTXT_p v_pv v_ae)))))))))
(* assume (!ae. (!m. (!pv. ae = TLSConstants.MACOnly (m) => not TLSConstants.StrongAEAlg(pv, ae)))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(124,0)] *)
axiom a622_asm: (forall v_ae:top. (forall v_m:top. (forall v_pv:top. ((v_ae = (v_TLSConstants__MACOnly v_m)) -> (not (v_TLSConstants__StrongAEAlg_p v_pv v_ae))))))
(* declaring type TLSConstants.kexAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(131,0)] *)
predicate v_TLSConstants__RSA_p 
function v_TLSConstants__RSA  : top
predicate v_TLSConstants__DH_DSS_p 
function v_TLSConstants__DH_DSS  : top
axiom a623_v_TLSConstants__DH_DSS_Disj: not(v_TLSConstants__RSA = v_TLSConstants__DH_DSS)
predicate v_TLSConstants__DH_RSA_p 
function v_TLSConstants__DH_RSA  : top
axiom a624_v_TLSConstants__DH_RSA_Disj: not(v_TLSConstants__DH_DSS = v_TLSConstants__DH_RSA)
axiom a625_v_TLSConstants__DH_RSA_Disj: not(v_TLSConstants__RSA = v_TLSConstants__DH_RSA)
predicate v_TLSConstants__DHE_DSS_p 
function v_TLSConstants__DHE_DSS  : top
axiom a626_v_TLSConstants__DHE_DSS_Disj: not(v_TLSConstants__DH_RSA = v_TLSConstants__DHE_DSS)
axiom a627_v_TLSConstants__DHE_DSS_Disj: not(v_TLSConstants__DH_DSS = v_TLSConstants__DHE_DSS)
axiom a628_v_TLSConstants__DHE_DSS_Disj: not(v_TLSConstants__RSA = v_TLSConstants__DHE_DSS)
predicate v_TLSConstants__DHE_RSA_p 
function v_TLSConstants__DHE_RSA  : top
axiom a629_v_TLSConstants__DHE_RSA_Disj: not(v_TLSConstants__DHE_DSS = v_TLSConstants__DHE_RSA)
axiom a630_v_TLSConstants__DHE_RSA_Disj: not(v_TLSConstants__DH_RSA = v_TLSConstants__DHE_RSA)
axiom a631_v_TLSConstants__DHE_RSA_Disj: not(v_TLSConstants__DH_DSS = v_TLSConstants__DHE_RSA)
axiom a632_v_TLSConstants__DHE_RSA_Disj: not(v_TLSConstants__RSA = v_TLSConstants__DHE_RSA)
predicate v_TLSConstants__DH_anon_p 
function v_TLSConstants__DH_anon  : top
axiom a633_v_TLSConstants__DH_anon_Disj: not(v_TLSConstants__DHE_RSA = v_TLSConstants__DH_anon)
axiom a634_v_TLSConstants__DH_anon_Disj: not(v_TLSConstants__DHE_DSS = v_TLSConstants__DH_anon)
axiom a635_v_TLSConstants__DH_anon_Disj: not(v_TLSConstants__DH_RSA = v_TLSConstants__DH_anon)
axiom a636_v_TLSConstants__DH_anon_Disj: not(v_TLSConstants__DH_DSS = v_TLSConstants__DH_anon)
axiom a637_v_TLSConstants__DH_anon_Disj: not(v_TLSConstants__RSA = v_TLSConstants__DH_anon)
(* declaring type TLSConstants.PRF [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(139,0)] *)
predicate v_TLSConstants__PRF_p (x1:top) (x2:top)
(* declaring type TLSConstants.KEF_DH [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(140,0)] *)
predicate v_TLSConstants__KEF_DH_p (x1:top) (x2:top)
(* declaring type TLSConstants.KEF_RSA [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(141,0)] *)
predicate v_TLSConstants__KEF_RSA_p (x1:top) (x2:top)
(* declaring fun TLSConstants.SigAlgBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(153,9)] *)
function v_TLSConstants__SigAlgBytes (x1:top) : top
(* declaring value TLSConstants.sigAlgBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(159,0)] *)
function v_TLSConstants__sigAlgBytes : top
(* declaring value TLSConstants.parseSigAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(160,0)] *)
function v_TLSConstants__parseSigAlg : top
(* declaring fun TLSConstants.HashAlgBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(161,9)] *)
function v_TLSConstants__HashAlgBytes (x1:top) : top
(* assume TLSConstants.HashAlgBytes (TLSConstants.MD5 ()) = array_of_list op_ColonColon (1, op_Nil ()) /\ TLSConstants.HashAlgBytes (TLSConstants.SHA ()) = array_of_list op_ColonColon (2, op_Nil ()) /\ TLSConstants.HashAlgBytes (TLSConstants.SHA256 ()) = array_of_list op_ColonColon (4, op_Nil ()) /\ TLSConstants.HashAlgBytes (TLSConstants.SHA384 ()) = array_of_list op_ColonColon (5, op_Nil ()) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(162,0)] *)
axiom a638_asm: (((v_TLSConstants__HashAlgBytes (v_TLSConstants__MD5 )) = (v_Pervasives__array_of_list (v_Pervasives__op_ColonColon 1 (v_Pervasives__op_Nil )))) /\ (((v_TLSConstants__HashAlgBytes (v_TLSConstants__SHA )) = (v_Pervasives__array_of_list (v_Pervasives__op_ColonColon 2 (v_Pervasives__op_Nil )))) /\ (((v_TLSConstants__HashAlgBytes (v_TLSConstants__SHA256 )) = (v_Pervasives__array_of_list (v_Pervasives__op_ColonColon 4 (v_Pervasives__op_Nil )))) /\ ((v_TLSConstants__HashAlgBytes (v_TLSConstants__SHA384 )) = (v_Pervasives__array_of_list (v_Pervasives__op_ColonColon 5 (v_Pervasives__op_Nil )))))))
(* declaring value TLSConstants.hashAlgBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(168,0)] *)
function v_TLSConstants__hashAlgBytes : top
(* declaring value TLSConstants.parseHashAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(169,0)] *)
function v_TLSConstants__parseHashAlg : top
(* declaring fun TLSConstants.EncKeySize [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(171,9)] *)
function v_TLSConstants__EncKeySize (x1:top) : top
(* assume (!x. pr_GreaterThanOrEqual(TLSConstants.EncKeySize (x), 0)) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(172,0)] *)
axiom a639_asm: (forall v_x:top. ((v_TLSConstants__EncKeySize v_x) >= 0))
(* declaring value TLSConstants.encKeySize [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(180,0)] *)
function v_TLSConstants__encKeySize : top
(* declaring fun TLSConstants.BlockSize [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(182,9)] *)
function v_TLSConstants__BlockSize (x1:top) : top
(* assume (!x. pr_GreaterThan(TLSConstants.BlockSize (x), 0)) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(183,0)] *)
axiom a640_asm: (forall v_x:top. ((v_TLSConstants__BlockSize v_x) > 0))
(* declaring value TLSConstants.blockSize [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(187,0)] *)
function v_TLSConstants__blockSize : top
(* declaring fun TLSConstants.AEADKeySize [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(197,9)] *)
function v_TLSConstants__AEADKeySize (x1:top) : top
(* assume (!x. pr_GreaterThanOrEqual(TLSConstants.AEADKeySize (x), 0)) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(198,0)] *)
axiom a641_asm: (forall v_x:top. ((v_TLSConstants__AEADKeySize v_x) >= 0))
(* declaring value TLSConstants.aeadKeySize [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(201,0)] *)
function v_TLSConstants__aeadKeySize : top
(* declaring fun TLSConstants.AEADIVSize [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(203,9)] *)
function v_TLSConstants__AEADIVSize (x1:top) : top
(* assume (!x. pr_GreaterThanOrEqual(TLSConstants.AEADIVSize (x), 0)) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(204,0)] *)
axiom a642_asm: (forall v_x:top. ((v_TLSConstants__AEADIVSize v_x) >= 0))
(* declaring value TLSConstants.aeadIVSize [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(207,0)] *)
function v_TLSConstants__aeadIVSize : top
(* declaring fun TLSConstants.AEADRecordIVSize [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(209,9)] *)
function v_TLSConstants__AEADRecordIVSize (x1:top) : top
(* assume (!x. pr_GreaterThanOrEqual(TLSConstants.AEADRecordIVSize (x), 0)) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(210,0)] *)
axiom a643_asm: (forall v_x:top. ((v_TLSConstants__AEADRecordIVSize v_x) >= 0))
(* declaring value TLSConstants.aeadRecordIVSize [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(213,0)] *)
function v_TLSConstants__aeadRecordIVSize : top
(* declaring fun TLSConstants.AEADTagSize [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(215,9)] *)
function v_TLSConstants__AEADTagSize (x1:top) : top
(* assume (!x. pr_GreaterThanOrEqual(TLSConstants.AEADTagSize (x), 0)) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(216,0)] *)
axiom a644_asm: (forall v_x:top. ((v_TLSConstants__AEADTagSize v_x) >= 0))
(* declaring value TLSConstants.aeadTagSize [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(219,0)] *)
function v_TLSConstants__aeadTagSize : top
(* declaring fun TLSConstants.HashSize [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(222,9)] *)
function v_TLSConstants__HashSize (x1:top) : top
(* declaring value TLSConstants.hashSize [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(229,0)] *)
function v_TLSConstants__hashSize : top
(* declaring fun TLSConstants.MacKeySize [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(231,9)] *)
function v_TLSConstants__MacKeySize (x1:top) : top
(* assume (!x. pr_GreaterThanOrEqual(TLSConstants.MacKeySize (x), 0)) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(232,0)] *)
axiom a645_asm: (forall v_x:top. ((v_TLSConstants__MacKeySize v_x) >= 0))
(* assume (!a. TLSConstants.MacKeySize (TLSConstants.MA_HMAC (a)) = TLSConstants.HashSize (a)) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(233,0)] *)
axiom a646_asm: (forall v_a:top. ((v_TLSConstants__MacKeySize (v_TLSConstants__MA_HMAC v_a)) = (v_TLSConstants__HashSize v_a)))
(* assume (!a. TLSConstants.MacKeySize (TLSConstants.MA_SSLKHASH (a)) = TLSConstants.HashSize (a)) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(234,0)] *)
axiom a647_asm: (forall v_a:top. ((v_TLSConstants__MacKeySize (v_TLSConstants__MA_SSLKHASH v_a)) = (v_TLSConstants__HashSize v_a)))
(* declaring value TLSConstants.macKeySize [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(235,0)] *)
function v_TLSConstants__macKeySize : top
(* declaring fun TLSConstants.MacSize [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(237,9)] *)
function v_TLSConstants__MacSize (x1:top) : top
(* assume (!x. pr_GreaterThanOrEqual(TLSConstants.MacSize (x), 0)) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(238,0)] *)
axiom a648_asm: (forall v_x:top. ((v_TLSConstants__MacSize v_x) >= 0))
(* assume (!x. TLSConstants.MacSize (x) = TLSConstants.MacKeySize (x)) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(242,0)] *)
axiom a649_asm: (forall v_x:top. ((v_TLSConstants__MacSize v_x) = (v_TLSConstants__MacKeySize v_x)))
(* declaring value TLSConstants.macSize [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(243,0)] *)
function v_TLSConstants__macSize : top
(* declaring type TLSConstants.skeyparams [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(250,0)] *)
predicate v_TLSConstants__SK_RSA_p (x1:top) (x2:top)
function v_TLSConstants__SK_RSA (x1:top) (x2:top) : top
function v_TLSConstants__SK_RSA__1 (x1:top) : top
function v_TLSConstants__SK_RSA__2 (x1:top) : top
axiom a650_v_TLSConstants__SK_RSA_Inj: (forall x1:top, x2:top. ((v_TLSConstants__SK_RSA__1 (v_TLSConstants__SK_RSA x1 x2)) = x1) /\ ((v_TLSConstants__SK_RSA__2 (v_TLSConstants__SK_RSA x1 x2)) = x2)) /\ (forall x1:top, x2:top,y1:top, y2:top. (v_TLSConstants__SK_RSA x1 x2) = (v_TLSConstants__SK_RSA y1 y2) -> (x1 = y1) /\ (x2 = y2))
predicate v_TLSConstants__SK_DSA_p (x1:top) (x2:top)
function v_TLSConstants__SK_DSA (x1:top) (x2:top) : top
function v_TLSConstants__SK_DSA__1 (x1:top) : top
function v_TLSConstants__SK_DSA__2 (x1:top) : top
axiom a651_v_TLSConstants__SK_DSA_Inj: (forall x1:top, x2:top. ((v_TLSConstants__SK_DSA__1 (v_TLSConstants__SK_DSA x1 x2)) = x1) /\ ((v_TLSConstants__SK_DSA__2 (v_TLSConstants__SK_DSA x1 x2)) = x2)) /\ (forall x1:top, x2:top,y1:top, y2:top. (v_TLSConstants__SK_DSA x1 x2) = (v_TLSConstants__SK_DSA y1 y2) -> (x1 = y1) /\ (x2 = y2))
axiom a652_v_TLSConstants__SK_DSA_Disj: forall x0:top, x1:top, x2:top, x3:top. not((v_TLSConstants__SK_RSA x0 x1) = (v_TLSConstants__SK_DSA x2 x3))
(* declaring type TLSConstants.pkeyparams [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(254,0)] *)
predicate v_TLSConstants__PK_RSA_p (x1:top) (x2:top)
function v_TLSConstants__PK_RSA (x1:top) (x2:top) : top
function v_TLSConstants__PK_RSA__1 (x1:top) : top
function v_TLSConstants__PK_RSA__2 (x1:top) : top
axiom a653_v_TLSConstants__PK_RSA_Inj: (forall x1:top, x2:top. ((v_TLSConstants__PK_RSA__1 (v_TLSConstants__PK_RSA x1 x2)) = x1) /\ ((v_TLSConstants__PK_RSA__2 (v_TLSConstants__PK_RSA x1 x2)) = x2)) /\ (forall x1:top, x2:top,y1:top, y2:top. (v_TLSConstants__PK_RSA x1 x2) = (v_TLSConstants__PK_RSA y1 y2) -> (x1 = y1) /\ (x2 = y2))
predicate v_TLSConstants__PK_DSA_p (x1:top) (x2:top)
function v_TLSConstants__PK_DSA (x1:top) (x2:top) : top
function v_TLSConstants__PK_DSA__1 (x1:top) : top
function v_TLSConstants__PK_DSA__2 (x1:top) : top
axiom a654_v_TLSConstants__PK_DSA_Inj: (forall x1:top, x2:top. ((v_TLSConstants__PK_DSA__1 (v_TLSConstants__PK_DSA x1 x2)) = x1) /\ ((v_TLSConstants__PK_DSA__2 (v_TLSConstants__PK_DSA x1 x2)) = x2)) /\ (forall x1:top, x2:top,y1:top, y2:top. (v_TLSConstants__PK_DSA x1 x2) = (v_TLSConstants__PK_DSA y1 y2) -> (x1 = y1) /\ (x2 = y2))
axiom a655_v_TLSConstants__PK_DSA_Disj: forall x0:top, x1:top, x2:top, x3:top. not((v_TLSConstants__PK_RSA x0 x1) = (v_TLSConstants__PK_DSA x2 x3))
(* declaring value TLSConstants.sigalg_of_skeyparams [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(258,0)] *)
function v_TLSConstants__sigalg_of_skeyparams : top
(* declaring value TLSConstants.sigalg_of_pkeyparams [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(259,0)] *)
function v_TLSConstants__sigalg_of_pkeyparams : top
(* declaring type TLSConstants.cipherAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(266,0)] *)
predicate v_TLSConstants__RC4_128_p 
function v_TLSConstants__RC4_128  : top
predicate v_TLSConstants__TDES_EDE_CBC_p 
function v_TLSConstants__TDES_EDE_CBC  : top
axiom a656_v_TLSConstants__TDES_EDE_CBC_Disj: not(v_TLSConstants__RC4_128 = v_TLSConstants__TDES_EDE_CBC)
predicate v_TLSConstants__AES_128_CBC_p 
function v_TLSConstants__AES_128_CBC  : top
axiom a657_v_TLSConstants__AES_128_CBC_Disj: not(v_TLSConstants__TDES_EDE_CBC = v_TLSConstants__AES_128_CBC)
axiom a658_v_TLSConstants__AES_128_CBC_Disj: not(v_TLSConstants__RC4_128 = v_TLSConstants__AES_128_CBC)
predicate v_TLSConstants__AES_256_CBC_p 
function v_TLSConstants__AES_256_CBC  : top
axiom a659_v_TLSConstants__AES_256_CBC_Disj: not(v_TLSConstants__AES_128_CBC = v_TLSConstants__AES_256_CBC)
axiom a660_v_TLSConstants__AES_256_CBC_Disj: not(v_TLSConstants__TDES_EDE_CBC = v_TLSConstants__AES_256_CBC)
axiom a661_v_TLSConstants__AES_256_CBC_Disj: not(v_TLSConstants__RC4_128 = v_TLSConstants__AES_256_CBC)
(* declaring type TLSConstants.csAuthEncAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(272,0)] *)
predicate v_TLSConstants__CS_MtE_p (x1:top) (x2:top)
function v_TLSConstants__CS_MtE (x1:top) (x2:top) : top
function v_TLSConstants__CS_MtE__1 (x1:top) : top
function v_TLSConstants__CS_MtE__2 (x1:top) : top
axiom a662_v_TLSConstants__CS_MtE_Inj: (forall x1:top, x2:top. ((v_TLSConstants__CS_MtE__1 (v_TLSConstants__CS_MtE x1 x2)) = x1) /\ ((v_TLSConstants__CS_MtE__2 (v_TLSConstants__CS_MtE x1 x2)) = x2)) /\ (forall x1:top, x2:top,y1:top, y2:top. (v_TLSConstants__CS_MtE x1 x2) = (v_TLSConstants__CS_MtE y1 y2) -> (x1 = y1) /\ (x2 = y2))
predicate v_TLSConstants__CS_AEAD_p (x1:top) (x2:top)
function v_TLSConstants__CS_AEAD (x1:top) (x2:top) : top
function v_TLSConstants__CS_AEAD__1 (x1:top) : top
function v_TLSConstants__CS_AEAD__2 (x1:top) : top
axiom a663_v_TLSConstants__CS_AEAD_Inj: (forall x1:top, x2:top. ((v_TLSConstants__CS_AEAD__1 (v_TLSConstants__CS_AEAD x1 x2)) = x1) /\ ((v_TLSConstants__CS_AEAD__2 (v_TLSConstants__CS_AEAD x1 x2)) = x2)) /\ (forall x1:top, x2:top,y1:top, y2:top. (v_TLSConstants__CS_AEAD x1 x2) = (v_TLSConstants__CS_AEAD y1 y2) -> (x1 = y1) /\ (x2 = y2))
axiom a664_v_TLSConstants__CS_AEAD_Disj: forall x0:top, x1:top, x2:top, x3:top. not((v_TLSConstants__CS_MtE x0 x1) = (v_TLSConstants__CS_AEAD x2 x3))
(* declaring type TLSConstants.cipherSuite [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(276,0)] *)
predicate v_TLSConstants__NullCipherSuite_p 
function v_TLSConstants__NullCipherSuite  : top
predicate v_TLSConstants__CipherSuite_p (x1:top) (x2:top)
function v_TLSConstants__CipherSuite (x1:top) (x2:top) : top
function v_TLSConstants__CipherSuite__1 (x1:top) : top
function v_TLSConstants__CipherSuite__2 (x1:top) : top
axiom a665_v_TLSConstants__CipherSuite_Inj: (forall x1:top, x2:top. ((v_TLSConstants__CipherSuite__1 (v_TLSConstants__CipherSuite x1 x2)) = x1) /\ ((v_TLSConstants__CipherSuite__2 (v_TLSConstants__CipherSuite x1 x2)) = x2)) /\ (forall x1:top, x2:top,y1:top, y2:top. (v_TLSConstants__CipherSuite x1 x2) = (v_TLSConstants__CipherSuite y1 y2) -> (x1 = y1) /\ (x2 = y2))
axiom a666_v_TLSConstants__CipherSuite_Disj: forall x0:top, x1:top. not(v_TLSConstants__NullCipherSuite = (v_TLSConstants__CipherSuite x0 x1))
predicate v_TLSConstants__OnlyMACCipherSuite_p (x1:top) (x2:top)
function v_TLSConstants__OnlyMACCipherSuite (x1:top) (x2:top) : top
function v_TLSConstants__OnlyMACCipherSuite__1 (x1:top) : top
function v_TLSConstants__OnlyMACCipherSuite__2 (x1:top) : top
axiom a667_v_TLSConstants__OnlyMACCipherSuite_Inj: (forall x1:top, x2:top. ((v_TLSConstants__OnlyMACCipherSuite__1 (v_TLSConstants__OnlyMACCipherSuite x1 x2)) = x1) /\ ((v_TLSConstants__OnlyMACCipherSuite__2 (v_TLSConstants__OnlyMACCipherSuite x1 x2)) = x2)) /\ (forall x1:top, x2:top,y1:top, y2:top. (v_TLSConstants__OnlyMACCipherSuite x1 x2) = (v_TLSConstants__OnlyMACCipherSuite y1 y2) -> (x1 = y1) /\ (x2 = y2))
axiom a668_v_TLSConstants__OnlyMACCipherSuite_Disj: forall x0:top, x1:top, x2:top, x3:top. not((v_TLSConstants__CipherSuite x0 x1) = (v_TLSConstants__OnlyMACCipherSuite x2 x3))
axiom a669_v_TLSConstants__OnlyMACCipherSuite_Disj: forall x0:top, x1:top. not(v_TLSConstants__NullCipherSuite = (v_TLSConstants__OnlyMACCipherSuite x0 x1))
predicate v_TLSConstants__SCSV_p (x1:top)
function v_TLSConstants__SCSV (x1:top) : top
function v_TLSConstants__SCSV__1 (x1:top) : top
axiom a670_v_TLSConstants__SCSV_Inj: (forall x1:top. (v_TLSConstants__SCSV__1 (v_TLSConstants__SCSV x1)) = x1) /\ (forall x1:top,y1:top. (v_TLSConstants__SCSV x1) = (v_TLSConstants__SCSV y1) -> x1 = y1)
axiom a671_v_TLSConstants__SCSV_Disj: forall x0:top, x1:top, x2:top. not((v_TLSConstants__OnlyMACCipherSuite x0 x1) = (v_TLSConstants__SCSV x2))
axiom a672_v_TLSConstants__SCSV_Disj: forall x0:top, x1:top, x2:top. not((v_TLSConstants__CipherSuite x0 x1) = (v_TLSConstants__SCSV x2))
axiom a673_v_TLSConstants__SCSV_Disj: forall x0:top. not(v_TLSConstants__NullCipherSuite = (v_TLSConstants__SCSV x0))
(* declaring type TLSConstants.PreCompression [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(290,0)] *)
predicate v_TLSConstants__NullCompression_p 
function v_TLSConstants__NullCompression  : top
(* declaring type TLSConstants.IsCompression [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(293,0)] *)
predicate v_TLSConstants__IsCompression_p (x1:top)
(* assume (!c. TLSConstants.IsCompression(c) <=> c = TLSConstants.NullCompression ()) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(294,0)] *)
axiom a674_asm: (forall v_c:top. ((v_TLSConstants__IsCompression_p v_c) <-> (v_c = (v_TLSConstants__NullCompression ))))
(* declaring type TLSConstants.IsCompressions [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(296,0)] *)
predicate v_TLSConstants__IsCompressions_p (x1:top)
(* assume TLSConstants.IsCompressions(op_Nil ()) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(298,0)] *)
axiom a675_asm: (v_TLSConstants__IsCompressions_p (v_Pervasives__op_Nil ))
(* assume (!c. (!cs. TLSConstants.IsCompression(c) /\ TLSConstants.IsCompressions(cs) => TLSConstants.IsCompressions(op_ColonColon (c, cs)))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(299,0)] *)
axiom a676_asm: (forall v_c:top. (forall v_cs:top. (((v_TLSConstants__IsCompression_p v_c) /\ (v_TLSConstants__IsCompressions_p v_cs)) -> (v_TLSConstants__IsCompressions_p (v_Pervasives__op_ColonColon v_c v_cs)))))
(* declaring fun TLSConstants.CompressionBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(303,9)] *)
function v_TLSConstants__CompressionBytes (x1:top) : top
(* assume TLSConstants.CompressionBytes (TLSConstants.NullCompression ()) = array_of_list op_ColonColon (0, op_Nil ()) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(304,0)] *)
axiom a677_asm: ((v_TLSConstants__CompressionBytes (v_TLSConstants__NullCompression )) = (v_Pervasives__array_of_list (v_Pervasives__op_ColonColon 0 (v_Pervasives__op_Nil ))))
(* declaring type TLSConstants.ContainsCompressions [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(306,0)] *)
predicate v_TLSConstants__ContainsCompressions_p (x1:top) (x2:top)
(* declaring fun TLSConstants.CompressionsBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(307,9)] *)
function v_TLSConstants__CompressionsBytes (x1:top) : top
(* assume TLSConstants.CompressionsBytes (op_Nil ()) = array_of_list op_Nil () [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(309,0)] *)
axiom a678_asm: ((v_TLSConstants__CompressionsBytes (v_Pervasives__op_Nil )) = (v_Pervasives__array_of_list (v_Pervasives__op_Nil )))
(* assume (!h. (!t. TLSConstants.CompressionsBytes (op_ColonColon (h, t)) = bop_ArrayAppend (TLSConstants.CompressionBytes (h), TLSConstants.CompressionsBytes (t)))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(310,0)] *)
axiom a679_asm: (forall v_h:top. (forall v_t:top. ((v_TLSConstants__CompressionsBytes (v_Pervasives__op_ColonColon v_h v_t)) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__CompressionBytes v_h) (v_TLSConstants__CompressionsBytes v_t)))))
(* declaring value TLSConstants.compressionBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(319,0)] *)
function v_TLSConstants__compressionBytes : top
(* declaring value TLSConstants.compressionMethodsBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(320,0)] *)
function v_TLSConstants__compressionMethodsBytes : top
(* declaring value TLSConstants.parseCompression [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(321,0)] *)
function v_TLSConstants__parseCompression : top
(* declaring value TLSConstants.parseCompressions [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(322,0)] *)
function v_TLSConstants__parseCompressions : top
(* declaring fun TLSConstants.VersionBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(329,9)] *)
function v_TLSConstants__VersionBytes (x1:top) : top
(* assume (!p. Bytes.BLength (TLSConstants.VersionBytes (p)) = 2) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(330,0)] *)
axiom a680_asm: (forall v_p:top. ((v_Bytes__BLength (v_TLSConstants__VersionBytes v_p)) = 2))
(* assume (!v. (!v'. TLSConstants.IsProtocolVersion(v) /\ TLSConstants.IsProtocolVersion(v') => TLSConstants.VersionBytes (v) = TLSConstants.VersionBytes (v') => v = v')) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(336,0)] *)
axiom a681_asm: (forall v_v:top. (forall v_v':top. (((v_TLSConstants__IsProtocolVersion_p v_v) /\ (v_TLSConstants__IsProtocolVersion_p v_v')) -> (((v_TLSConstants__VersionBytes v_v) = (v_TLSConstants__VersionBytes v_v')) -> (v_v = v_v')))))
(* assume (!v. TLSConstants.IsProtocolVersion(v) => Bytes.BLength (TLSConstants.VersionBytes (v)) = 2) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(339,0)] *)
axiom a682_asm: (forall v_v:top. ((v_TLSConstants__IsProtocolVersion_p v_v) -> ((v_Bytes__BLength (v_TLSConstants__VersionBytes v_v)) = 2)))
(* declaring value TLSConstants.versionBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(341,0)] *)
function v_TLSConstants__versionBytes : top
(* declaring value TLSConstants.parseVersion [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(342,0)] *)
function v_TLSConstants__parseVersion : top
(* declaring value TLSConstants.minPV [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(343,0)] *)
function v_TLSConstants__minPV : top
(* declaring value TLSConstants.geqPV [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(344,0)] *)
function v_TLSConstants__geqPV : top
(* declaring value TLSConstants.somePV [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(345,0)] *)
function v_TLSConstants__somePV : top
(* declaring predicate TLSConstants.IsNullCiphersuite [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(352,10)] *)
predicate v_TLSConstants__IsNullCiphersuite_p (x1:top)
(* declaring value TLSConstants.nullCipherSuite [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(354,0)] *)
function v_TLSConstants__nullCipherSuite : top
(* assume TLSConstants.IsNullCiphersuite(TLSConstants.nullCipherSuite) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(354,0)] *)
axiom a683_asm: (v_TLSConstants__IsNullCiphersuite_p v_TLSConstants__nullCipherSuite)
(* declaring value TLSConstants.isNullCipherSuite [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(355,0)] *)
function v_TLSConstants__isNullCipherSuite : top
(* declaring predicate TLSConstants.IsSCSVCiphersuite [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(357,10)] *)
predicate v_TLSConstants__IsSCSVCiphersuite_p (x1:top)
(* declaring value TLSConstants.isAnonCipherSuite [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(362,0)] *)
function v_TLSConstants__isAnonCipherSuite : top
(* declaring value TLSConstants.isDHCipherSuite [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(363,0)] *)
function v_TLSConstants__isDHCipherSuite : top
(* declaring value TLSConstants.isDHECipherSuite [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(364,0)] *)
function v_TLSConstants__isDHECipherSuite : top
(* declaring value TLSConstants.isRSACipherSuite [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(365,0)] *)
function v_TLSConstants__isRSACipherSuite : top
(* declaring value TLSConstants.isOnlyMACCipherSuite [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(366,0)] *)
function v_TLSConstants__isOnlyMACCipherSuite : top
(* declaring value TLSConstants.contains_TLS_EMPTY_RENEGOTIATION_INFO_SCSV [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(367,0)] *)
function v_TLSConstants__contains_TLS_EMPTY_RENEGOTIATION_INFO_SCSV : top
(* declaring value TLSConstants.verifyDataLen_of_ciphersuite [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(371,0)] *)
function v_TLSConstants__verifyDataLen_of_ciphersuite : top
(* declaring fun TLSConstants.CiphersuitePrfMacAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(373,9)] *)
function v_TLSConstants__CiphersuitePrfMacAlg (x1:top) : top
(* declaring value TLSConstants.prfMacAlg_of_ciphersuite [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(380,0)] *)
function v_TLSConstants__prfMacAlg_of_ciphersuite : top
(* declaring value TLSConstants.verifyDataHashAlg_of_ciphersuite [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(381,0)] *)
function v_TLSConstants__verifyDataHashAlg_of_ciphersuite : top
(* declaring value TLSConstants.sessionHashAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(382,0)] *)
function v_TLSConstants__sessionHashAlg : top
(* declaring value TLSConstants.extract_label [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(389,0)] *)
function v_TLSConstants__extract_label : top
(* assume TLSConstants.extract_label = Bytes.Utf8 ("master secret") [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(389,0)] *)
function i_str_mastersecret  : top
axiom a684_asm: (v_TLSConstants__extract_label = (v_Bytes__Utf8 i_str_mastersecret))
(* declaring value TLSConstants.extended_extract_label [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(390,0)] *)
function v_TLSConstants__extended_extract_label : top
(* assume TLSConstants.extended_extract_label = Bytes.Utf8 ("extended master secret") [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(390,0)] *)
function i_str_extendedmastersecret  : top
axiom a685_asm: ((v_TLSConstants__extended_extract_label = (v_Bytes__Utf8 i_str_extendedmastersecret))) /\ (not(i_str_extendedmastersecret = i_str_mastersecret))
(* declaring value TLSConstants.kdf_label [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(391,0)] *)
function v_TLSConstants__kdf_label : top
(* assume TLSConstants.kdf_label = Bytes.Utf8 ("key expansion") [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(391,0)] *)
function i_str_keyexpansion  : top
axiom a686_asm: ((v_TLSConstants__kdf_label = (v_Bytes__Utf8 i_str_keyexpansion))) /\ ((not(i_str_keyexpansion = i_str_extendedmastersecret)) /\ (not(i_str_keyexpansion = i_str_mastersecret)))
(* declaring type TLSConstants.prePrfAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(400,0)] *)
predicate v_TLSConstants__PRF_SSL3_nested_p 
function v_TLSConstants__PRF_SSL3_nested  : top
predicate v_TLSConstants__PRF_SSL3_concat_p 
function v_TLSConstants__PRF_SSL3_concat  : top
axiom a687_v_TLSConstants__PRF_SSL3_concat_Disj: not(v_TLSConstants__PRF_SSL3_nested = v_TLSConstants__PRF_SSL3_concat)
predicate v_TLSConstants__PRF_TLS_1p01_p (x1:top)
function v_TLSConstants__PRF_TLS_1p01 (x1:top) : top
function v_TLSConstants__PRF_TLS_1p01__1 (x1:top) : top
axiom a688_v_TLSConstants__PRF_TLS_1p01_Inj: (forall x1:top. (v_TLSConstants__PRF_TLS_1p01__1 (v_TLSConstants__PRF_TLS_1p01 x1)) = x1) /\ (forall x1:top,y1:top. (v_TLSConstants__PRF_TLS_1p01 x1) = (v_TLSConstants__PRF_TLS_1p01 y1) -> x1 = y1)
axiom a689_v_TLSConstants__PRF_TLS_1p01_Disj: forall x0:top. not(v_TLSConstants__PRF_SSL3_concat = (v_TLSConstants__PRF_TLS_1p01 x0))
axiom a690_v_TLSConstants__PRF_TLS_1p01_Disj: forall x0:top. not(v_TLSConstants__PRF_SSL3_nested = (v_TLSConstants__PRF_TLS_1p01 x0))
predicate v_TLSConstants__PRF_TLS_1p2_p (x1:top) (x2:top)
function v_TLSConstants__PRF_TLS_1p2 (x1:top) (x2:top) : top
function v_TLSConstants__PRF_TLS_1p2__1 (x1:top) : top
function v_TLSConstants__PRF_TLS_1p2__2 (x1:top) : top
axiom a691_v_TLSConstants__PRF_TLS_1p2_Inj: (forall x1:top, x2:top. ((v_TLSConstants__PRF_TLS_1p2__1 (v_TLSConstants__PRF_TLS_1p2 x1 x2)) = x1) /\ ((v_TLSConstants__PRF_TLS_1p2__2 (v_TLSConstants__PRF_TLS_1p2 x1 x2)) = x2)) /\ (forall x1:top, x2:top,y1:top, y2:top. (v_TLSConstants__PRF_TLS_1p2 x1 x2) = (v_TLSConstants__PRF_TLS_1p2 y1 y2) -> (x1 = y1) /\ (x2 = y2))
axiom a692_v_TLSConstants__PRF_TLS_1p2_Disj: forall x0:top, x1:top, x2:top. not((v_TLSConstants__PRF_TLS_1p01 x0) = (v_TLSConstants__PRF_TLS_1p2 x1 x2))
axiom a693_v_TLSConstants__PRF_TLS_1p2_Disj: forall x0:top, x1:top. not(v_TLSConstants__PRF_SSL3_concat = (v_TLSConstants__PRF_TLS_1p2 x0 x1))
axiom a694_v_TLSConstants__PRF_TLS_1p2_Disj: forall x0:top, x1:top. not(v_TLSConstants__PRF_SSL3_nested = (v_TLSConstants__PRF_TLS_1p2 x0 x1))
(* declaring fun TLSConstants.TLSMACAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(423,9)] *)
function v_TLSConstants__TLSMACAlg (x1:top) (x2:top) : top
(* declaring fun TLSConstants.TLSENCAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(424,9)] *)
function v_TLSConstants__TLSENCAlg (x1:top) (x2:top) : top
(* declaring fun TLSConstants.CipherSuiteSigAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(445,9)] *)
function v_TLSConstants__CipherSuiteSigAlg (x1:top) : top
(* declaring fun TLSConstants.CipherSuiteSigHashAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(454,9)] *)
function v_TLSConstants__CipherSuiteSigHashAlg (x1:top) : top
(* declaring fun TLSConstants.CipherSuiteMACAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(455,9)] *)
function v_TLSConstants__CipherSuiteMACAlg (x1:top) (x2:top) : top
(* declaring fun TLSConstants.CipherSuiteENCAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(456,9)] *)
function v_TLSConstants__CipherSuiteENCAlg (x1:top) (x2:top) : top
(* declaring fun TLSConstants.CipherSuiteAuthEncAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(457,9)] *)
function v_TLSConstants__CipherSuiteAuthEncAlg (x1:top) (x2:top) : top
(* declaring fun TLSConstants.CipherSuiteKEXAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(461,9)] *)
function v_TLSConstants__CipherSuiteKEXAlg (x1:top) : top
(* declaring fun TLSConstants.AEMacAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(474,9)] *)
function v_TLSConstants__AEMacAlg (x1:top) : top
(* assume (!mac. TLSConstants.AEMacAlg (TLSConstants.MACOnly (mac)) = mac) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(475,0)] *)
axiom a695_asm: (forall v_mac:top. ((v_TLSConstants__AEMacAlg (v_TLSConstants__MACOnly v_mac)) = v_mac))
(* assume (!mac. (!enc. TLSConstants.AEMacAlg (TLSConstants.MtE (enc, mac)) = mac)) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(476,0)] *)
axiom a696_asm: (forall v_mac:top. (forall v_enc:top. ((v_TLSConstants__AEMacAlg (v_TLSConstants__MtE v_enc v_mac)) = v_mac)))
(* declaring fun TLSConstants.AEEncAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(478,9)] *)
function v_TLSConstants__AEEncAlg (x1:top) : top
(* assume (!enc. (!mac. TLSConstants.AEEncAlg (TLSConstants.MtE (enc, mac)) = enc)) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(479,0)] *)
axiom a697_asm: (forall v_enc:top. (forall v_mac:top. ((v_TLSConstants__AEEncAlg (v_TLSConstants__MtE v_enc v_mac)) = v_enc)))
(* assume (!cs. (!pv. TLSConstants.CipherSuiteMACAlg (cs, pv) = TLSConstants.AEMacAlg (TLSConstants.CipherSuiteAuthEncAlg (cs, pv)))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(481,0)] *)
axiom a698_asm: (forall v_cs:top. (forall v_pv:top. ((v_TLSConstants__CipherSuiteMACAlg v_cs v_pv) = (v_TLSConstants__AEMacAlg (v_TLSConstants__CipherSuiteAuthEncAlg v_cs v_pv)))))
(* assume (!cs. (!pv. TLSConstants.CipherSuiteENCAlg (cs, pv) = TLSConstants.AEEncAlg (TLSConstants.CipherSuiteAuthEncAlg (cs, pv)))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(482,0)] *)
axiom a699_asm: (forall v_cs:top. (forall v_pv:top. ((v_TLSConstants__CipherSuiteENCAlg v_cs v_pv) = (v_TLSConstants__AEEncAlg (v_TLSConstants__CipherSuiteAuthEncAlg v_cs v_pv)))))
(* assume (!cs. (!pv. (!mac. TLSConstants.CipherSuiteAuthEncAlg (cs, pv) = TLSConstants.MACOnly (mac) => TLSConstants.CipherSuiteMACAlg (cs, pv) = mac))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(484,0)] *)
axiom a700_asm: (forall v_cs:top. (forall v_pv:top. (forall v_mac:top. (((v_TLSConstants__CipherSuiteAuthEncAlg v_cs v_pv) = (v_TLSConstants__MACOnly v_mac)) -> ((v_TLSConstants__CipherSuiteMACAlg v_cs v_pv) = v_mac)))))
(* assume (!cs. (!pv. (!mac. (!enc. TLSConstants.CipherSuiteAuthEncAlg (cs, pv) = TLSConstants.MtE (enc, mac) => TLSConstants.CipherSuiteMACAlg (cs, pv) = mac)))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(485,0)] *)
axiom a701_asm: (forall v_cs:top. (forall v_pv:top. (forall v_mac:top. (forall v_enc:top. (((v_TLSConstants__CipherSuiteAuthEncAlg v_cs v_pv) = (v_TLSConstants__MtE v_enc v_mac)) -> ((v_TLSConstants__CipherSuiteMACAlg v_cs v_pv) = v_mac))))))
(* assume (!cs. (!pv. (!mac. (!enc. TLSConstants.CipherSuiteAuthEncAlg (cs, pv) = TLSConstants.MtE (enc, mac) => TLSConstants.CipherSuiteENCAlg (cs, pv) = enc)))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(486,0)] *)
axiom a702_asm: (forall v_cs:top. (forall v_pv:top. (forall v_mac:top. (forall v_enc:top. (((v_TLSConstants__CipherSuiteAuthEncAlg v_cs v_pv) = (v_TLSConstants__MtE v_enc v_mac)) -> ((v_TLSConstants__CipherSuiteENCAlg v_cs v_pv) = v_enc))))))
(* declaring value TLSConstants.tlsEncAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(489,8)] *)
function v_TLSConstants__tlsEncAlg : top
(* declaring value TLSConstants.tlsMacAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(490,8)] *)
function v_TLSConstants__tlsMacAlg : top
(* declaring value TLSConstants.aeAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(492,0)] *)
function v_TLSConstants__aeAlg : top
(* declaring value TLSConstants.encAlg_of_aeAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(493,0)] *)
function v_TLSConstants__encAlg_of_aeAlg : top
(* declaring value TLSConstants.macAlg_of_aeAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(494,0)] *)
function v_TLSConstants__macAlg_of_aeAlg : top
(* declaring value TLSConstants.macAlg_of_ciphersuite [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(495,0)] *)
function v_TLSConstants__macAlg_of_ciphersuite : top
(* declaring value TLSConstants.encAlg_of_ciphersuite [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(496,0)] *)
function v_TLSConstants__encAlg_of_ciphersuite : top
(* declaring value TLSConstants.sigAlg_of_ciphersuite [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(497,0)] *)
function v_TLSConstants__sigAlg_of_ciphersuite : top
(* declaring fun TLSConstants.CipherSuiteBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(499,9)] *)
function v_TLSConstants__CipherSuiteBytes (x1:top) : top
(* declaring fun TLSConstants.CipherSuitesBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(561,9)] *)
function v_TLSConstants__CipherSuitesBytes (x1:top) : top
(* declaring value TLSConstants.consCipherSuites [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(605,8)] *)
function v_TLSConstants__consCipherSuites : top
(* declaring value TLSConstants.cipherSuiteBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(607,0)] *)
function v_TLSConstants__cipherSuiteBytes : top
(* declaring value TLSConstants.parseCipherSuite [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(608,0)] *)
function v_TLSConstants__parseCipherSuite : top
(* declaring value TLSConstants.parseCipherSuites [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(612,0)] *)
function v_TLSConstants__parseCipherSuites : top
(* declaring value TLSConstants.cipherSuitesBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(616,0)] *)
function v_TLSConstants__cipherSuitesBytes : top
(* declaring value TLSConstants.mkIntTriple [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(618,0)] *)
function v_TLSConstants__mkIntTriple : top
(* declaring type TLSConstants.cipherSuiteName [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(625,0)] *)
predicate v_TLSConstants__TLS_NULL_WITH_NULL_NULL_p 
function v_TLSConstants__TLS_NULL_WITH_NULL_NULL  : top
predicate v_TLSConstants__TLS_RSA_WITH_NULL_MD5_p 
function v_TLSConstants__TLS_RSA_WITH_NULL_MD5  : top
axiom a703_v_TLSConstants__TLS_RSA_WITH_NULL_MD5_Disj: not(v_TLSConstants__TLS_NULL_WITH_NULL_NULL = v_TLSConstants__TLS_RSA_WITH_NULL_MD5)
predicate v_TLSConstants__TLS_RSA_WITH_NULL_SHA_p 
function v_TLSConstants__TLS_RSA_WITH_NULL_SHA  : top
axiom a704_v_TLSConstants__TLS_RSA_WITH_NULL_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_MD5 = v_TLSConstants__TLS_RSA_WITH_NULL_SHA)
axiom a705_v_TLSConstants__TLS_RSA_WITH_NULL_SHA_Disj: not(v_TLSConstants__TLS_NULL_WITH_NULL_NULL = v_TLSConstants__TLS_RSA_WITH_NULL_SHA)
predicate v_TLSConstants__TLS_RSA_WITH_NULL_SHA256_p 
function v_TLSConstants__TLS_RSA_WITH_NULL_SHA256  : top
axiom a706_v_TLSConstants__TLS_RSA_WITH_NULL_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA = v_TLSConstants__TLS_RSA_WITH_NULL_SHA256)
axiom a707_v_TLSConstants__TLS_RSA_WITH_NULL_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_MD5 = v_TLSConstants__TLS_RSA_WITH_NULL_SHA256)
axiom a708_v_TLSConstants__TLS_RSA_WITH_NULL_SHA256_Disj: not(v_TLSConstants__TLS_NULL_WITH_NULL_NULL = v_TLSConstants__TLS_RSA_WITH_NULL_SHA256)
predicate v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5_p 
function v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5  : top
axiom a709_v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA256 = v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5)
axiom a710_v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA = v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5)
axiom a711_v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_MD5 = v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5)
axiom a712_v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5_Disj: not(v_TLSConstants__TLS_NULL_WITH_NULL_NULL = v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5)
predicate v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA_p 
function v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA  : top
axiom a713_v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5 = v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA)
axiom a714_v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA256 = v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA)
axiom a715_v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA = v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA)
axiom a716_v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_MD5 = v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA)
axiom a717_v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA_Disj: not(v_TLSConstants__TLS_NULL_WITH_NULL_NULL = v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA)
predicate v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA_p 
function v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA  : top
axiom a718_v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA = v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA)
axiom a719_v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5 = v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA)
axiom a720_v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA256 = v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA)
axiom a721_v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA = v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA)
axiom a722_v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_MD5 = v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA)
axiom a723_v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_NULL_WITH_NULL_NULL = v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA)
predicate v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA_p 
function v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA  : top
axiom a724_v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA)
axiom a725_v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA = v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA)
axiom a726_v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5 = v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA)
axiom a727_v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA256 = v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA)
axiom a728_v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA = v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA)
axiom a729_v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_MD5 = v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA)
axiom a730_v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_NULL_WITH_NULL_NULL = v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA)
predicate v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA_p 
function v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA  : top
axiom a731_v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA)
axiom a732_v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA)
axiom a733_v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA = v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA)
axiom a734_v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5 = v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA)
axiom a735_v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA256 = v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA)
axiom a736_v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA = v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA)
axiom a737_v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_MD5 = v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA)
axiom a738_v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_NULL_WITH_NULL_NULL = v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA)
predicate v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256_p 
function v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256  : top
axiom a739_v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256)
axiom a740_v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256)
axiom a741_v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256)
axiom a742_v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA = v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256)
axiom a743_v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5 = v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256)
axiom a744_v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA256 = v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256)
axiom a745_v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA = v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256)
axiom a746_v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_MD5 = v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256)
axiom a747_v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_NULL_WITH_NULL_NULL = v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256)
predicate v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256_p 
function v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256  : top
axiom a748_v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256)
axiom a749_v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256)
axiom a750_v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256)
axiom a751_v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256)
axiom a752_v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA = v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256)
axiom a753_v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5 = v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256)
axiom a754_v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA256 = v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256)
axiom a755_v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA = v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256)
axiom a756_v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_MD5 = v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256)
axiom a757_v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_NULL_WITH_NULL_NULL = v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256)
predicate v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA_p 
function v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA  : top
axiom a758_v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA)
axiom a759_v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA)
axiom a760_v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA)
axiom a761_v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA)
axiom a762_v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA)
axiom a763_v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA)
axiom a764_v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5 = v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA)
axiom a765_v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA)
axiom a766_v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA)
axiom a767_v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_MD5 = v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA)
axiom a768_v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_NULL_WITH_NULL_NULL = v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA)
predicate v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA_p 
function v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA  : top
axiom a769_v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA)
axiom a770_v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA)
axiom a771_v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA)
axiom a772_v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA)
axiom a773_v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA)
axiom a774_v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA)
axiom a775_v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA)
axiom a776_v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5 = v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA)
axiom a777_v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA256 = v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA)
axiom a778_v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA)
axiom a779_v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_MD5 = v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA)
axiom a780_v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_NULL_WITH_NULL_NULL = v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA)
predicate v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA_p 
function v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA  : top
axiom a781_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA)
axiom a782_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA)
axiom a783_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA)
axiom a784_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA)
axiom a785_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA)
axiom a786_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA)
axiom a787_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA)
axiom a788_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA)
axiom a789_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA)
axiom a790_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA)
axiom a791_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA)
axiom a792_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_MD5 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA)
axiom a793_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_NULL_WITH_NULL_NULL = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA)
predicate v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA_p 
function v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA  : top
axiom a794_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA)
axiom a795_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA)
axiom a796_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA)
axiom a797_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA)
axiom a798_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA)
axiom a799_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA)
axiom a800_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA)
axiom a801_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA)
axiom a802_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA)
axiom a803_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA)
axiom a804_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA256 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA)
axiom a805_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA)
axiom a806_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_MD5 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA)
axiom a807_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_NULL_WITH_NULL_NULL = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA)
predicate v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA_p 
function v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA  : top
axiom a808_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA)
axiom a809_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA)
axiom a810_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA)
axiom a811_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA)
axiom a812_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA)
axiom a813_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA)
axiom a814_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA)
axiom a815_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA)
axiom a816_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA)
axiom a817_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA)
axiom a818_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA)
axiom a819_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA)
axiom a820_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA)
axiom a821_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_MD5 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA)
axiom a822_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_NULL_WITH_NULL_NULL = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA)
predicate v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA_p 
function v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA  : top
axiom a823_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA)
axiom a824_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA)
axiom a825_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA)
axiom a826_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA)
axiom a827_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA)
axiom a828_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA)
axiom a829_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA)
axiom a830_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA)
axiom a831_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA)
axiom a832_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA)
axiom a833_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA)
axiom a834_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA)
axiom a835_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA256 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA)
axiom a836_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA)
axiom a837_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_MD5 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA)
axiom a838_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_NULL_WITH_NULL_NULL = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA)
predicate v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256_p 
function v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256  : top
axiom a839_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256)
axiom a840_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256)
axiom a841_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256)
axiom a842_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256)
axiom a843_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256)
axiom a844_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256)
axiom a845_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256)
axiom a846_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256)
axiom a847_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256)
axiom a848_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256)
axiom a849_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256)
axiom a850_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256)
axiom a851_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256)
axiom a852_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256)
axiom a853_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256)
axiom a854_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_MD5 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256)
axiom a855_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_NULL_WITH_NULL_NULL = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256)
predicate v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256_p 
function v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256  : top
axiom a856_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256)
axiom a857_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256)
axiom a858_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256)
axiom a859_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256)
axiom a860_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256)
axiom a861_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256)
axiom a862_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256)
axiom a863_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256)
axiom a864_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256)
axiom a865_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256)
axiom a866_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256)
axiom a867_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256)
axiom a868_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256)
axiom a869_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256)
axiom a870_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA256 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256)
axiom a871_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256)
axiom a872_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_MD5 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256)
axiom a873_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_NULL_WITH_NULL_NULL = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256)
predicate v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256_p 
function v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256  : top
axiom a874_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256)
axiom a875_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256)
axiom a876_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256)
axiom a877_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256)
axiom a878_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256)
axiom a879_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256)
axiom a880_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256)
axiom a881_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256)
axiom a882_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256)
axiom a883_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256)
axiom a884_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256)
axiom a885_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256)
axiom a886_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256)
axiom a887_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256)
axiom a888_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256)
axiom a889_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256)
axiom a890_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256)
axiom a891_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_MD5 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256)
axiom a892_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_NULL_WITH_NULL_NULL = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256)
predicate v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256_p 
function v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256  : top
axiom a893_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256)
axiom a894_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256)
axiom a895_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256)
axiom a896_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256)
axiom a897_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256)
axiom a898_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256)
axiom a899_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256)
axiom a900_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256)
axiom a901_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256)
axiom a902_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256)
axiom a903_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256)
axiom a904_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256)
axiom a905_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256)
axiom a906_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256)
axiom a907_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256)
axiom a908_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256)
axiom a909_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA256 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256)
axiom a910_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256)
axiom a911_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_MD5 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256)
axiom a912_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_NULL_WITH_NULL_NULL = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256)
predicate v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5_p 
function v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5  : top
axiom a913_v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5)
axiom a914_v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5)
axiom a915_v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5)
axiom a916_v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5)
axiom a917_v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5)
axiom a918_v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5)
axiom a919_v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5)
axiom a920_v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5)
axiom a921_v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5)
axiom a922_v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5)
axiom a923_v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5)
axiom a924_v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5)
axiom a925_v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5)
axiom a926_v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5)
axiom a927_v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5_Disj: not(v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5)
axiom a928_v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA = v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5)
axiom a929_v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5 = v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5)
axiom a930_v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5)
axiom a931_v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA = v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5)
axiom a932_v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_MD5 = v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5)
axiom a933_v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5_Disj: not(v_TLSConstants__TLS_NULL_WITH_NULL_NULL = v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5)
predicate v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA_p 
function v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA  : top
axiom a934_v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5 = v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA)
axiom a935_v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA)
axiom a936_v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA)
axiom a937_v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA)
axiom a938_v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA)
axiom a939_v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA)
axiom a940_v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA)
axiom a941_v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA)
axiom a942_v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA)
axiom a943_v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA)
axiom a944_v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA)
axiom a945_v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA)
axiom a946_v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA)
axiom a947_v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA)
axiom a948_v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA)
axiom a949_v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA)
axiom a950_v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA = v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA)
axiom a951_v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5 = v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA)
axiom a952_v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA)
axiom a953_v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA = v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA)
axiom a954_v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_MD5 = v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA)
axiom a955_v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA_Disj: not(v_TLSConstants__TLS_NULL_WITH_NULL_NULL = v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA)
predicate v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA_p 
function v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA  : top
axiom a956_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA)
axiom a957_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA)
axiom a958_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA)
axiom a959_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA)
axiom a960_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA)
axiom a961_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA)
axiom a962_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA)
axiom a963_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA)
axiom a964_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA)
axiom a965_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA)
axiom a966_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA)
axiom a967_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA)
axiom a968_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA)
axiom a969_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA)
axiom a970_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA)
axiom a971_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA)
axiom a972_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA)
axiom a973_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA)
axiom a974_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA)
axiom a975_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA)
axiom a976_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA)
axiom a977_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_MD5 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA)
axiom a978_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA_Disj: not(v_TLSConstants__TLS_NULL_WITH_NULL_NULL = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA)
predicate v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA_p 
function v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA  : top
axiom a979_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA)
axiom a980_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA)
axiom a981_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA)
axiom a982_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA)
axiom a983_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA)
axiom a984_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA)
axiom a985_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA)
axiom a986_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA)
axiom a987_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA)
axiom a988_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA)
axiom a989_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA)
axiom a990_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA)
axiom a991_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA)
axiom a992_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA)
axiom a993_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA)
axiom a994_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA)
axiom a995_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA)
axiom a996_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA)
axiom a997_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA)
axiom a998_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA)
axiom a999_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA)
axiom a1000_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA)
axiom a1001_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_MD5 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA)
axiom a1002_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA_Disj: not(v_TLSConstants__TLS_NULL_WITH_NULL_NULL = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA)
predicate v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256_p 
function v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256  : top
axiom a1003_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256)
axiom a1004_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256)
axiom a1005_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256)
axiom a1006_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256)
axiom a1007_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256)
axiom a1008_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256)
axiom a1009_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256)
axiom a1010_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256)
axiom a1011_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256)
axiom a1012_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256)
axiom a1013_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256)
axiom a1014_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256)
axiom a1015_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256)
axiom a1016_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256)
axiom a1017_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256)
axiom a1018_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256)
axiom a1019_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256)
axiom a1020_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256)
axiom a1021_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256)
axiom a1022_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256)
axiom a1023_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256)
axiom a1024_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256)
axiom a1025_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256)
axiom a1026_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_MD5 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256)
axiom a1027_v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256_Disj: not(v_TLSConstants__TLS_NULL_WITH_NULL_NULL = v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256)
predicate v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256_p 
function v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256  : top
axiom a1028_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256)
axiom a1029_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256)
axiom a1030_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256)
axiom a1031_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256)
axiom a1032_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256)
axiom a1033_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256)
axiom a1034_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256)
axiom a1035_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256)
axiom a1036_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256)
axiom a1037_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256)
axiom a1038_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256)
axiom a1039_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256)
axiom a1040_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256)
axiom a1041_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256)
axiom a1042_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256)
axiom a1043_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256)
axiom a1044_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256)
axiom a1045_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256)
axiom a1046_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256)
axiom a1047_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256)
axiom a1048_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256)
axiom a1049_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256)
axiom a1050_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256)
axiom a1051_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256)
axiom a1052_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_MD5 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256)
axiom a1053_v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256_Disj: not(v_TLSConstants__TLS_NULL_WITH_NULL_NULL = v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256)
predicate v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256_p 
function v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256  : top
axiom a1054_v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256)
axiom a1055_v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256)
axiom a1056_v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256)
axiom a1057_v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256)
axiom a1058_v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256)
axiom a1059_v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5 = v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256)
axiom a1060_v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256)
axiom a1061_v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256)
axiom a1062_v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256)
axiom a1063_v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256)
axiom a1064_v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256)
axiom a1065_v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256)
axiom a1066_v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256)
axiom a1067_v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256)
axiom a1068_v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256)
axiom a1069_v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256)
axiom a1070_v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256)
axiom a1071_v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256)
axiom a1072_v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256)
axiom a1073_v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256)
axiom a1074_v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256)
axiom a1075_v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA = v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256)
axiom a1076_v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5 = v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256)
axiom a1077_v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA256 = v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256)
axiom a1078_v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA = v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256)
axiom a1079_v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_MD5 = v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256)
axiom a1080_v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_NULL_WITH_NULL_NULL = v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256)
predicate v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384_p 
function v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384  : top
axiom a1081_v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256 = v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384)
axiom a1082_v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384)
axiom a1083_v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384)
axiom a1084_v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384)
axiom a1085_v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384)
axiom a1086_v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384)
axiom a1087_v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5 = v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384)
axiom a1088_v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384)
axiom a1089_v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384)
axiom a1090_v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384)
axiom a1091_v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384)
axiom a1092_v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384)
axiom a1093_v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384)
axiom a1094_v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384)
axiom a1095_v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384)
axiom a1096_v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384)
axiom a1097_v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384)
axiom a1098_v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384)
axiom a1099_v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384)
axiom a1100_v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384)
axiom a1101_v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384)
axiom a1102_v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384)
axiom a1103_v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA = v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384)
axiom a1104_v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5 = v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384)
axiom a1105_v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA256 = v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384)
axiom a1106_v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA = v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384)
axiom a1107_v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_MD5 = v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384)
axiom a1108_v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_NULL_WITH_NULL_NULL = v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384)
predicate v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256_p 
function v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256  : top
axiom a1109_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256)
axiom a1110_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256)
axiom a1111_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256)
axiom a1112_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256)
axiom a1113_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256)
axiom a1114_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256)
axiom a1115_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256)
axiom a1116_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256)
axiom a1117_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256)
axiom a1118_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256)
axiom a1119_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256)
axiom a1120_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256)
axiom a1121_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256)
axiom a1122_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256)
axiom a1123_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256)
axiom a1124_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256)
axiom a1125_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256)
axiom a1126_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256)
axiom a1127_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256)
axiom a1128_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256)
axiom a1129_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256)
axiom a1130_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256)
axiom a1131_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256)
axiom a1132_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256)
axiom a1133_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256)
axiom a1134_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA256 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256)
axiom a1135_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256)
axiom a1136_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_MD5 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256)
axiom a1137_v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_NULL_WITH_NULL_NULL = v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256)
predicate v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384_p 
function v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384  : top
axiom a1138_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384)
axiom a1139_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384)
axiom a1140_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384)
axiom a1141_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384)
axiom a1142_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384)
axiom a1143_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384)
axiom a1144_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384)
axiom a1145_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384)
axiom a1146_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384)
axiom a1147_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384)
axiom a1148_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384)
axiom a1149_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384)
axiom a1150_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384)
axiom a1151_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384)
axiom a1152_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384)
axiom a1153_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384)
axiom a1154_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384)
axiom a1155_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384)
axiom a1156_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384)
axiom a1157_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384)
axiom a1158_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384)
axiom a1159_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384)
axiom a1160_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384)
axiom a1161_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384)
axiom a1162_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384)
axiom a1163_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384)
axiom a1164_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA256 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384)
axiom a1165_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384)
axiom a1166_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_MD5 = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384)
axiom a1167_v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_NULL_WITH_NULL_NULL = v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384)
predicate v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256_p 
function v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256  : top
axiom a1168_v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 = v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256)
axiom a1169_v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 = v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256)
axiom a1170_v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384 = v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256)
axiom a1171_v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256 = v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256)
axiom a1172_v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256)
axiom a1173_v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256)
axiom a1174_v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256)
axiom a1175_v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256)
axiom a1176_v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256)
axiom a1177_v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5 = v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256)
axiom a1178_v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256)
axiom a1179_v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256)
axiom a1180_v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256)
axiom a1181_v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256)
axiom a1182_v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256)
axiom a1183_v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256)
axiom a1184_v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256)
axiom a1185_v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256)
axiom a1186_v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256)
axiom a1187_v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256)
axiom a1188_v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256)
axiom a1189_v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256)
axiom a1190_v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256)
axiom a1191_v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256)
axiom a1192_v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256)
axiom a1193_v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA = v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256)
axiom a1194_v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5 = v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256)
axiom a1195_v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA256 = v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256)
axiom a1196_v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA = v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256)
axiom a1197_v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_MD5 = v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256)
axiom a1198_v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_NULL_WITH_NULL_NULL = v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256)
predicate v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384_p 
function v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384  : top
axiom a1199_v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256 = v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384)
axiom a1200_v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 = v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384)
axiom a1201_v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 = v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384)
axiom a1202_v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384 = v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384)
axiom a1203_v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256 = v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384)
axiom a1204_v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384)
axiom a1205_v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384)
axiom a1206_v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384)
axiom a1207_v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384)
axiom a1208_v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384)
axiom a1209_v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5 = v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384)
axiom a1210_v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384)
axiom a1211_v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384)
axiom a1212_v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384)
axiom a1213_v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384)
axiom a1214_v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384)
axiom a1215_v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384)
axiom a1216_v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384)
axiom a1217_v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384)
axiom a1218_v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384)
axiom a1219_v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384)
axiom a1220_v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384)
axiom a1221_v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384)
axiom a1222_v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384)
axiom a1223_v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384)
axiom a1224_v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384)
axiom a1225_v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA = v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384)
axiom a1226_v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5 = v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384)
axiom a1227_v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA256 = v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384)
axiom a1228_v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA = v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384)
axiom a1229_v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_MD5 = v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384)
axiom a1230_v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_NULL_WITH_NULL_NULL = v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384)
predicate v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256_p 
function v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256  : top
axiom a1231_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256)
axiom a1232_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256)
axiom a1233_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256)
axiom a1234_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256)
axiom a1235_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256)
axiom a1236_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256)
axiom a1237_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256)
axiom a1238_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256)
axiom a1239_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256)
axiom a1240_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256)
axiom a1241_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256)
axiom a1242_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256)
axiom a1243_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256)
axiom a1244_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256)
axiom a1245_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256)
axiom a1246_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256)
axiom a1247_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256)
axiom a1248_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256)
axiom a1249_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256)
axiom a1250_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256)
axiom a1251_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256)
axiom a1252_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256)
axiom a1253_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256)
axiom a1254_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256)
axiom a1255_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256)
axiom a1256_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256)
axiom a1257_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256)
axiom a1258_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256)
axiom a1259_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256)
axiom a1260_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256)
axiom a1261_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256)
axiom a1262_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_MD5 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256)
axiom a1263_v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_NULL_WITH_NULL_NULL = v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256)
predicate v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384_p 
function v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384  : top
axiom a1264_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384)
axiom a1265_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384)
axiom a1266_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384)
axiom a1267_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384)
axiom a1268_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384)
axiom a1269_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384)
axiom a1270_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384)
axiom a1271_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384)
axiom a1272_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384)
axiom a1273_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384)
axiom a1274_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384)
axiom a1275_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384)
axiom a1276_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384)
axiom a1277_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384)
axiom a1278_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384)
axiom a1279_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384)
axiom a1280_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384)
axiom a1281_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384)
axiom a1282_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384)
axiom a1283_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384)
axiom a1284_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384)
axiom a1285_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384)
axiom a1286_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384)
axiom a1287_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384)
axiom a1288_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384)
axiom a1289_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384)
axiom a1290_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384)
axiom a1291_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384)
axiom a1292_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384)
axiom a1293_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384)
axiom a1294_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA256 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384)
axiom a1295_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384)
axiom a1296_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_MD5 = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384)
axiom a1297_v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_NULL_WITH_NULL_NULL = v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384)
predicate v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256_p 
function v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256  : top
axiom a1298_v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384 = v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256)
axiom a1299_v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256 = v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256)
axiom a1300_v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384 = v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256)
axiom a1301_v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256 = v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256)
axiom a1302_v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 = v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256)
axiom a1303_v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 = v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256)
axiom a1304_v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384 = v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256)
axiom a1305_v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256 = v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256)
axiom a1306_v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256)
axiom a1307_v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256)
axiom a1308_v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256)
axiom a1309_v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256)
axiom a1310_v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256)
axiom a1311_v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5 = v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256)
axiom a1312_v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256)
axiom a1313_v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256)
axiom a1314_v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256)
axiom a1315_v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256)
axiom a1316_v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256)
axiom a1317_v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256)
axiom a1318_v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256)
axiom a1319_v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256)
axiom a1320_v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256)
axiom a1321_v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256)
axiom a1322_v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256)
axiom a1323_v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256)
axiom a1324_v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256)
axiom a1325_v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256)
axiom a1326_v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256)
axiom a1327_v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA = v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256)
axiom a1328_v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5 = v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256)
axiom a1329_v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA256 = v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256)
axiom a1330_v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA = v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256)
axiom a1331_v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_MD5 = v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256)
axiom a1332_v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_NULL_WITH_NULL_NULL = v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256)
predicate v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384_p 
function v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384  : top
axiom a1333_v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256 = v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384)
axiom a1334_v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384 = v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384)
axiom a1335_v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256 = v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384)
axiom a1336_v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384 = v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384)
axiom a1337_v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256 = v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384)
axiom a1338_v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 = v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384)
axiom a1339_v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 = v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384)
axiom a1340_v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384 = v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384)
axiom a1341_v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256 = v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384)
axiom a1342_v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384)
axiom a1343_v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384)
axiom a1344_v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384)
axiom a1345_v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384)
axiom a1346_v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384)
axiom a1347_v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5 = v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384)
axiom a1348_v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384)
axiom a1349_v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384)
axiom a1350_v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384)
axiom a1351_v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384)
axiom a1352_v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384)
axiom a1353_v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384)
axiom a1354_v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384)
axiom a1355_v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384)
axiom a1356_v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384)
axiom a1357_v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384)
axiom a1358_v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384)
axiom a1359_v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384)
axiom a1360_v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384)
axiom a1361_v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384)
axiom a1362_v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384)
axiom a1363_v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA = v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384)
axiom a1364_v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5 = v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384)
axiom a1365_v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA256 = v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384)
axiom a1366_v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA = v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384)
axiom a1367_v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_MD5 = v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384)
axiom a1368_v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_NULL_WITH_NULL_NULL = v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384)
predicate v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256_p 
function v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256  : top
axiom a1369_v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256)
axiom a1370_v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256)
axiom a1371_v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256)
axiom a1372_v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256)
axiom a1373_v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256)
axiom a1374_v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256)
axiom a1375_v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256)
axiom a1376_v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256)
axiom a1377_v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256)
axiom a1378_v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256)
axiom a1379_v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256)
axiom a1380_v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256)
axiom a1381_v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256)
axiom a1382_v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256)
axiom a1383_v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256)
axiom a1384_v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256)
axiom a1385_v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256)
axiom a1386_v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256)
axiom a1387_v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256)
axiom a1388_v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256)
axiom a1389_v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256)
axiom a1390_v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256)
axiom a1391_v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256)
axiom a1392_v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256)
axiom a1393_v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256)
axiom a1394_v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256)
axiom a1395_v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256)
axiom a1396_v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256)
axiom a1397_v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256)
axiom a1398_v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256)
axiom a1399_v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256)
axiom a1400_v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256)
axiom a1401_v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256)
axiom a1402_v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256)
axiom a1403_v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256)
axiom a1404_v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_MD5 = v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256)
axiom a1405_v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256_Disj: not(v_TLSConstants__TLS_NULL_WITH_NULL_NULL = v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256)
predicate v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384_p 
function v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384  : top
axiom a1406_v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_128_GCM_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384)
axiom a1407_v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_DSS_WITH_AES_256_GCM_SHA384 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384)
axiom a1408_v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_DSS_WITH_AES_128_GCM_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384)
axiom a1409_v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_GCM_SHA384 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384)
axiom a1410_v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_GCM_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384)
axiom a1411_v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_RSA_WITH_AES_256_GCM_SHA384 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384)
axiom a1412_v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_RSA_WITH_AES_128_GCM_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384)
axiom a1413_v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384)
axiom a1414_v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384)
axiom a1415_v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_GCM_SHA384 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384)
axiom a1416_v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_GCM_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384)
axiom a1417_v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384)
axiom a1418_v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384)
axiom a1419_v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384)
axiom a1420_v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384)
axiom a1421_v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384)
axiom a1422_v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DH_anon_WITH_RC4_128_MD5 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384)
axiom a1423_v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384)
axiom a1424_v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384)
axiom a1425_v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384)
axiom a1426_v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384)
axiom a1427_v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384)
axiom a1428_v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384)
axiom a1429_v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384)
axiom a1430_v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384)
axiom a1431_v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384)
axiom a1432_v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384)
axiom a1433_v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384)
axiom a1434_v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384)
axiom a1435_v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_256_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384)
axiom a1436_v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_AES_128_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384)
axiom a1437_v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_3DES_EDE_CBC_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384)
axiom a1438_v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384)
axiom a1439_v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_RC4_128_MD5 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384)
axiom a1440_v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA256 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384)
axiom a1441_v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_SHA = v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384)
axiom a1442_v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_RSA_WITH_NULL_MD5 = v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384)
axiom a1443_v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384_Disj: not(v_TLSConstants__TLS_NULL_WITH_NULL_NULL = v_TLSConstants__TLS_DH_anon_WITH_AES_256_GCM_SHA384)
(* declaring value TLSConstants.cipherSuites_of_nameList [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(670,0)] *)
function v_TLSConstants__cipherSuites_of_nameList : top
(* declaring value TLSConstants.name_of_cipherSuite [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(671,0)] *)
function v_TLSConstants__name_of_cipherSuite : top
(* declaring type TLSConstants.preContentType [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(673,0)] *)
predicate v_TLSConstants__Change_cipher_spec_p 
function v_TLSConstants__Change_cipher_spec  : top
predicate v_TLSConstants__Alert_p 
function v_TLSConstants__Alert  : top
axiom a1444_v_TLSConstants__Alert_Disj: not(v_TLSConstants__Change_cipher_spec = v_TLSConstants__Alert)
predicate v_TLSConstants__Handshake_p 
function v_TLSConstants__Handshake  : top
axiom a1445_v_TLSConstants__Handshake_Disj: not(v_TLSConstants__Alert = v_TLSConstants__Handshake)
axiom a1446_v_TLSConstants__Handshake_Disj: not(v_TLSConstants__Change_cipher_spec = v_TLSConstants__Handshake)
predicate v_TLSConstants__Application_data_p 
function v_TLSConstants__Application_data  : top
axiom a1447_v_TLSConstants__Application_data_Disj: not(v_TLSConstants__Handshake = v_TLSConstants__Application_data)
axiom a1448_v_TLSConstants__Application_data_Disj: not(v_TLSConstants__Alert = v_TLSConstants__Application_data)
axiom a1449_v_TLSConstants__Application_data_Disj: not(v_TLSConstants__Change_cipher_spec = v_TLSConstants__Application_data)
(* declaring value TLSConstants.bytes_of_seq [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(684,0)] *)
function v_TLSConstants__bytes_of_seq : top
(* declaring value TLSConstants.seq_of_bytes [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(685,0)] *)
function v_TLSConstants__seq_of_bytes : top
(* declaring fun TLSConstants.CTBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(687,9)] *)
function v_TLSConstants__CTBytes (x1:top) : top
(* assume (!c. Bytes.BLength (TLSConstants.CTBytes (c)) = 1) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(688,0)] *)
axiom a1450_asm: (forall v_c:top. ((v_Bytes__BLength (v_TLSConstants__CTBytes v_c)) = 1))
(* declaring value TLSConstants.ctBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(694,0)] *)
function v_TLSConstants__ctBytes : top
(* declaring value TLSConstants.parseCT [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(695,0)] *)
function v_TLSConstants__parseCT : top
(* declaring value TLSConstants.CTtoString [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(696,0)] *)
function v_TLSConstants__CTtoString : top
(* declaring fun TLSConstants.VLBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(701,9)] *)
function v_TLSConstants__VLBytes (x1:top) (x2:top) : top
(* assume (!i. (!b. TLSConstants.VLBytes (i, b) = bop_ArrayAppend (Bytes.B (Bytes.IntBytes (i, Bytes.BLength (b))), b))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(702,0)] *)
axiom a1451_asm: (forall v_i:top. (forall v_b:top. ((v_TLSConstants__VLBytes v_i v_b) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B (v_Bytes__IntBytes v_i (v_Bytes__BLength v_b))) v_b))))
(* assume (!i. (!b. (!b'. TLSConstants.VLBytes (i, b) = TLSConstants.VLBytes (i, b') => b = b'))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(704,0)] *)
axiom a1452_asm: (forall v_i:top. (forall v_b:top. (forall v_b':top. (((v_TLSConstants__VLBytes v_i v_b) = (v_TLSConstants__VLBytes v_i v_b')) -> (v_b = v_b')))))
(* declaring value TLSConstants.vlbytes [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(706,0)] *)
function v_TLSConstants__vlbytes : top
(* declaring value TLSConstants.vlsplit [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(707,0)] *)
function v_TLSConstants__vlsplit : top
(* declaring value TLSConstants.vlparse [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(711,0)] *)
function v_TLSConstants__vlparse : top
(* assume (!i. (!b. Bytes.BLength (bop_ArrayAppend (Bytes.B (Bytes.IntBytes (i, Bytes.BLength (b))), b)) = bop_Addition (i, Bytes.BLength (b)))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(722,0)] *)
axiom a1453_asm: (forall v_i:top. (forall v_b:top. ((v_Bytes__BLength (v_Pervasives__bop_ArrayAppend (v_Bytes__B (v_Bytes__IntBytes v_i (v_Bytes__BLength v_b))) v_b)) = (v_i + (v_Bytes__BLength v_b)))))
(* assume (!i. (!b. Bytes.BLength (TLSConstants.VLBytes (i, b)) = bop_Addition (i, Bytes.BLength (b)))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(723,0)] *)
axiom a1454_asm: (forall v_i:top. (forall v_b:top. ((v_Bytes__BLength (v_TLSConstants__VLBytes v_i v_b)) = (v_i + (v_Bytes__BLength v_b)))))
(* assume (!i. (!b1. (!b2. (!c1. (!c2. pr_GreaterThanOrEqual(i, 0) => bop_ArrayAppend (TLSConstants.VLBytes (i, b1), b2) = bop_ArrayAppend (TLSConstants.VLBytes (i, c1), c2) => b1 = c1 /\ b2 = c2))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(727,0)] *)
axiom a1455_asm: (forall v_i:top. (forall v_b1:top. (forall v_b2:top. (forall v_c1:top. (forall v_c2:top. ((v_i >= 0) -> (((v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes v_i v_b1) v_b2) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes v_i v_c1) v_c2)) -> ((v_b1 = v_c1) /\ (v_b2 = v_c2)))))))))
(* declaring type TLSConstants.certType [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(732,0)] *)
predicate v_TLSConstants__RSA_sign_p 
function v_TLSConstants__RSA_sign  : top
predicate v_TLSConstants__DSA_sign_p 
function v_TLSConstants__DSA_sign  : top
axiom a1456_v_TLSConstants__DSA_sign_Disj: not(v_TLSConstants__RSA_sign = v_TLSConstants__DSA_sign)
predicate v_TLSConstants__RSA_fixed_dh_p 
function v_TLSConstants__RSA_fixed_dh  : top
axiom a1457_v_TLSConstants__RSA_fixed_dh_Disj: not(v_TLSConstants__DSA_sign = v_TLSConstants__RSA_fixed_dh)
axiom a1458_v_TLSConstants__RSA_fixed_dh_Disj: not(v_TLSConstants__RSA_sign = v_TLSConstants__RSA_fixed_dh)
predicate v_TLSConstants__DSA_fixed_dh_p 
function v_TLSConstants__DSA_fixed_dh  : top
axiom a1459_v_TLSConstants__DSA_fixed_dh_Disj: not(v_TLSConstants__RSA_fixed_dh = v_TLSConstants__DSA_fixed_dh)
axiom a1460_v_TLSConstants__DSA_fixed_dh_Disj: not(v_TLSConstants__DSA_sign = v_TLSConstants__DSA_fixed_dh)
axiom a1461_v_TLSConstants__DSA_fixed_dh_Disj: not(v_TLSConstants__RSA_sign = v_TLSConstants__DSA_fixed_dh)
(* declaring fun TLSConstants.CertTypeBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(738,9)] *)
function v_TLSConstants__CertTypeBytes (x1:top) : top
(* declaring value TLSConstants.certTypeBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(744,0)] *)
function v_TLSConstants__certTypeBytes : top
(* declaring value TLSConstants.parseCertType [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(745,0)] *)
function v_TLSConstants__parseCertType : top
(* declaring fun TLSConstants.CertTypesBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(747,9)] *)
function v_TLSConstants__CertTypesBytes (x1:top) : top
(* declaring value TLSConstants.certificateTypeListBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(752,0)] *)
function v_TLSConstants__certificateTypeListBytes : top
(* declaring value TLSConstants.parseCertificateTypeList [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(754,0)] *)
function v_TLSConstants__parseCertificateTypeList : top
(* declaring fun TLSConstants.DefaultCertTypes [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(759,9)] *)
function v_TLSConstants__DefaultCertTypes (x1:top) (x2:top) : top
(* declaring value TLSConstants.defaultCertTypes [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(765,0)] *)
function v_TLSConstants__defaultCertTypes : top
(* declaring fun TLSConstants.DistinguishedNameListBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(767,9)] *)
function v_TLSConstants__DistinguishedNameListBytes (x1:top) : top
(* assume TLSConstants.DistinguishedNameListBytes (op_Nil ()) = array_of_list op_Nil () [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(768,0)] *)
axiom a1462_asm: ((v_TLSConstants__DistinguishedNameListBytes (v_Pervasives__op_Nil )) = (v_Pervasives__array_of_list (v_Pervasives__op_Nil )))
(* assume (!h. (!t. TLSConstants.DistinguishedNameListBytes (op_ColonColon (h, t)) = bop_ArrayAppend (TLSConstants.VLBytes (2, Bytes.B (Bytes.Utf8 (h))), TLSConstants.DistinguishedNameListBytes (t)))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(769,0)] *)
axiom a1463_asm: (forall v_h:top. (forall v_t:top. ((v_TLSConstants__DistinguishedNameListBytes (v_Pervasives__op_ColonColon v_h v_t)) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B (v_Bytes__Utf8 v_h))) (v_TLSConstants__DistinguishedNameListBytes v_t)))))
(* declaring fun TLSConstants.DistinguishedNamesBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(771,9)] *)
function v_TLSConstants__DistinguishedNamesBytes (x1:top) : top
(* declaring value TLSConstants.distinguishedNameListBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(774,0)] *)
function v_TLSConstants__distinguishedNameListBytes : top
(* declaring value TLSConstants.parseDistinguishedNameList [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSConstants.fs7(775,0)] *)
function v_TLSConstants__parseDistinguishedNameList : top
(* declaring type RSAKey.Honest [C:\cygwin\home\Pierre-Yves\mitls\lib\RSAKey.fs7(16,0)] *)
predicate v_RSAKey__Honest_p (x1:top)
(* declaring value RSAKey.honest [C:\cygwin\home\Pierre-Yves\mitls\lib\RSAKey.fs7(17,0)] *)
function v_RSAKey__honest : top
(* declaring type RSAKey.Strong [C:\cygwin\home\Pierre-Yves\mitls\lib\RSAKey.fs7(19,0)] *)
predicate v_RSAKey__Strong_p (x1:top)
(* declaring value RSAKey.strong [C:\cygwin\home\Pierre-Yves\mitls\lib\RSAKey.fs7(20,0)] *)
function v_RSAKey__strong : top
(* declaring type RSAKey.pred [C:\cygwin\home\Pierre-Yves\mitls\lib\RSAKey.fs7(24,10)] *)
predicate v_RSAKey__SK_PK_p (x1:top) (x2:top)
(* declaring fun RSAKey.PK [C:\cygwin\home\Pierre-Yves\mitls\lib\RSAKey.fs7(25,9)] *)
function v_RSAKey__PK (x1:top) : top
(* declaring value RSAKey.gen [C:\cygwin\home\Pierre-Yves\mitls\lib\RSAKey.fs7(28,0)] *)
function v_RSAKey__gen : top
(* declaring value RSAKey.coerce [C:\cygwin\home\Pierre-Yves\mitls\lib\RSAKey.fs7(29,0)] *)
function v_RSAKey__coerce : top
(* declaring value RSAKey.repr_of_rsapkey [C:\cygwin\home\Pierre-Yves\mitls\lib\RSAKey.fs7(35,0)] *)
function v_RSAKey__repr_of_rsapkey : top
(* declaring value RSAKey.repr_of_rsaskey [C:\cygwin\home\Pierre-Yves\mitls\lib\RSAKey.fs7(38,0)] *)
function v_RSAKey__repr_of_rsaskey : top
(* declaring value RSAKey.create_rsapkey [C:\cygwin\home\Pierre-Yves\mitls\lib\RSAKey.fs7(41,0)] *)
function v_RSAKey__create_rsapkey : top
(* declaring type DHGroup.preds [C:\cygwin\home\Pierre-Yves\mitls\lib\DHGroup.fs7(13,10)] *)
predicate v_DHGroup__Elt_p (x1:top) (x2:top) (x3:top)
(* declaring type DHGroup.predPP [C:\cygwin\home\Pierre-Yves\mitls\lib\DHGroup.fs7(21,10)] *)
predicate v_DHGroup__PP_p (x1:top) (x2:top)
(* declaring value DHGroup.dhparams [C:\cygwin\home\Pierre-Yves\mitls\lib\DHGroup.fs7(23,0)] *)
function v_DHGroup__dhparams : top
(* declaring value DHGroup.genElement [C:\cygwin\home\Pierre-Yves\mitls\lib\DHGroup.fs7(24,0)] *)
function v_DHGroup__genElement : top
(* declaring value DHGroup.checkElement [C:\cygwin\home\Pierre-Yves\mitls\lib\DHGroup.fs7(26,0)] *)
function v_DHGroup__checkElement : top
(* declaring type PMS.SafeRSA [C:\cygwin\home\Pierre-Yves\mitls\lib\PMS.fs7(14,0)] *)
predicate v_PMS__SafeRSA_p (x1:top) (x2:top)
(* assume (!pk. (!cv. PMS.SafeRSA(pk, cv) <=> RSAKey.Honest(pk) /\ RSAKey.Strong(cv))) [C:\cygwin\home\Pierre-Yves\mitls\lib\PMS.fs7(15,0)] *)
axiom a1464_asm: (forall v_pk:top. (forall v_cv:top. ((v_PMS__SafeRSA_p v_pk v_cv) <-> ((v_RSAKey__Honest_p v_pk) /\ (v_RSAKey__Strong_p v_cv)))))
(* declaring type PMS.rsapms [C:\cygwin\home\Pierre-Yves\mitls\lib\PMS.fs7(34,0)] *)
predicate v_PMS__IdealRSAPMS_p (x1:top)
function v_PMS__IdealRSAPMS (x1:top) : top
function v_PMS__IdealRSAPMS__1 (x1:top) : top
axiom a1465_v_PMS__IdealRSAPMS_Inj: (forall x1:top. (v_PMS__IdealRSAPMS__1 (v_PMS__IdealRSAPMS x1)) = x1) /\ (forall x1:top,y1:top. (v_PMS__IdealRSAPMS x1) = (v_PMS__IdealRSAPMS y1) -> x1 = y1)
predicate v_PMS__ConcreteRSAPMS_p (x1:top)
function v_PMS__ConcreteRSAPMS (x1:top) : top
function v_PMS__ConcreteRSAPMS__1 (x1:top) : top
axiom a1466_v_PMS__ConcreteRSAPMS_Inj: (forall x1:top. (v_PMS__ConcreteRSAPMS__1 (v_PMS__ConcreteRSAPMS x1)) = x1) /\ (forall x1:top,y1:top. (v_PMS__ConcreteRSAPMS x1) = (v_PMS__ConcreteRSAPMS y1) -> x1 = y1)
axiom a1467_v_PMS__ConcreteRSAPMS_Disj: forall x0:top, x1:top. not((v_PMS__IdealRSAPMS x0) = (v_PMS__ConcreteRSAPMS x1))
(* declaring type PMS.HonestRSAPMS [C:\cygwin\home\Pierre-Yves\mitls\lib\PMS.fs7(39,0)] *)
predicate v_PMS__HonestRSAPMS_p (x1:top) (x2:top) (x3:top)
(* assume (!pk. (!cv. (!s. not PMS.HonestRSAPMS(pk, cv, PMS.ConcreteRSAPMS (s))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\PMS.fs7(43,0)] *)
axiom a1468_asm: (forall v_pk:top. (forall v_cv:top. (forall v_s:top. (not (v_PMS__HonestRSAPMS_p v_pk v_cv (v_PMS__ConcreteRSAPMS v_s))))))
(* declaring value PMS.honestRSAPMS [C:\cygwin\home\Pierre-Yves\mitls\lib\PMS.fs7(45,0)] *)
function v_PMS__honestRSAPMS : top
(* declaring value PMS.genRSA [C:\cygwin\home\Pierre-Yves\mitls\lib\PMS.fs7(53,0)] *)
function v_PMS__genRSA : top
(* declaring value PMS.coerceRSA [C:\cygwin\home\Pierre-Yves\mitls\lib\PMS.fs7(56,0)] *)
function v_PMS__coerceRSA : top
(* declaring value PMS.leakRSA [C:\cygwin\home\Pierre-Yves\mitls\lib\PMS.fs7(59,0)] *)
function v_PMS__leakRSA : top
(* declaring type PMS.SafeDH [C:\cygwin\home\Pierre-Yves\mitls\lib\PMS.fs7(71,0)] *)
predicate v_PMS__SafeDH_p (x1:top) (x2:top) (x3:top) (x4:top)
(* declaring type PMS.dhpms [C:\cygwin\home\Pierre-Yves\mitls\lib\PMS.fs7(81,0)] *)
predicate v_PMS__IdealDHPMS_p (x1:top)
function v_PMS__IdealDHPMS (x1:top) : top
function v_PMS__IdealDHPMS__1 (x1:top) : top
axiom a1469_v_PMS__IdealDHPMS_Inj: (forall x1:top. (v_PMS__IdealDHPMS__1 (v_PMS__IdealDHPMS x1)) = x1) /\ (forall x1:top,y1:top. (v_PMS__IdealDHPMS x1) = (v_PMS__IdealDHPMS y1) -> x1 = y1)
predicate v_PMS__ConcreteDHPMS_p (x1:top)
function v_PMS__ConcreteDHPMS (x1:top) : top
function v_PMS__ConcreteDHPMS__1 (x1:top) : top
axiom a1470_v_PMS__ConcreteDHPMS_Inj: (forall x1:top. (v_PMS__ConcreteDHPMS__1 (v_PMS__ConcreteDHPMS x1)) = x1) /\ (forall x1:top,y1:top. (v_PMS__ConcreteDHPMS x1) = (v_PMS__ConcreteDHPMS y1) -> x1 = y1)
axiom a1471_v_PMS__ConcreteDHPMS_Disj: forall x0:top, x1:top. not((v_PMS__IdealDHPMS x0) = (v_PMS__ConcreteDHPMS x1))
(* declaring type PMS.HonestDHPMS [C:\cygwin\home\Pierre-Yves\mitls\lib\PMS.fs7(85,0)] *)
predicate v_PMS__HonestDHPMS_p (x1:top) (x2:top) (x3:top) (x4:top) (x5:top)
(* declaring value PMS.honestDHPMS [C:\cygwin\home\Pierre-Yves\mitls\lib\PMS.fs7(89,0)] *)
function v_PMS__honestDHPMS : top
(* declaring value PMS.sampleDH [C:\cygwin\home\Pierre-Yves\mitls\lib\PMS.fs7(92,0)] *)
function v_PMS__sampleDH : top
(* declaring value PMS.coerceDH [C:\cygwin\home\Pierre-Yves\mitls\lib\PMS.fs7(93,0)] *)
function v_PMS__coerceDH : top
(* declaring type PMS.pms [C:\cygwin\home\Pierre-Yves\mitls\lib\PMS.fs7(98,0)] *)
predicate v_PMS__RSAPMS_p (x1:top) (x2:top) (x3:top)
function v_PMS__RSAPMS (x1:top) (x2:top) (x3:top) : top
function v_PMS__RSAPMS__1 (x1:top) : top
function v_PMS__RSAPMS__2 (x1:top) : top
function v_PMS__RSAPMS__3 (x1:top) : top
axiom a1472_v_PMS__RSAPMS_Inj: (forall x1:top, x2:top, x3:top. ((v_PMS__RSAPMS__1 (v_PMS__RSAPMS x1 x2 x3)) = x1) /\ (((v_PMS__RSAPMS__2 (v_PMS__RSAPMS x1 x2 x3)) = x2) /\ ((v_PMS__RSAPMS__3 (v_PMS__RSAPMS x1 x2 x3)) = x3))) /\ (forall x1:top, x2:top, x3:top,y1:top, y2:top, y3:top. (v_PMS__RSAPMS x1 x2 x3) = (v_PMS__RSAPMS y1 y2 y3) -> (x1 = y1) /\ ((x2 = y2) /\ (x3 = y3)))
predicate v_PMS__DHPMS_p (x1:top) (x2:top) (x3:top) (x4:top) (x5:top)
function v_PMS__DHPMS (x1:top) (x2:top) (x3:top) (x4:top) (x5:top) : top
function v_PMS__DHPMS__1 (x1:top) : top
function v_PMS__DHPMS__2 (x1:top) : top
function v_PMS__DHPMS__3 (x1:top) : top
function v_PMS__DHPMS__4 (x1:top) : top
function v_PMS__DHPMS__5 (x1:top) : top
axiom a1473_v_PMS__DHPMS_Inj: (forall x1:top, x2:top, x3:top, x4:top, x5:top. ((v_PMS__DHPMS__1 (v_PMS__DHPMS x1 x2 x3 x4 x5)) = x1) /\ (((v_PMS__DHPMS__2 (v_PMS__DHPMS x1 x2 x3 x4 x5)) = x2) /\ (((v_PMS__DHPMS__3 (v_PMS__DHPMS x1 x2 x3 x4 x5)) = x3) /\ (((v_PMS__DHPMS__4 (v_PMS__DHPMS x1 x2 x3 x4 x5)) = x4) /\ ((v_PMS__DHPMS__5 (v_PMS__DHPMS x1 x2 x3 x4 x5)) = x5))))) /\ (forall x1:top, x2:top, x3:top, x4:top, x5:top,y1:top, y2:top, y3:top, y4:top, y5:top. (v_PMS__DHPMS x1 x2 x3 x4 x5) = (v_PMS__DHPMS y1 y2 y3 y4 y5) -> (x1 = y1) /\ ((x2 = y2) /\ ((x3 = y3) /\ ((x4 = y4) /\ (x5 = y5)))))
axiom a1474_v_PMS__DHPMS_Disj: forall x0:top, x1:top, x2:top, x3:top, x4:top, x5:top, x6:top, x7:top. not((v_PMS__RSAPMS x0 x1 x2) = (v_PMS__DHPMS x3 x4 x5 x6 x7))
(* declaring value HASH.hash' [C:\cygwin\home\Pierre-Yves\mitls\lib\HASH.fs7(10,8)] *)
function v_HASH__hash' : top
(* declaring value HASH.hash [C:\cygwin\home\Pierre-Yves\mitls\lib\HASH.fs7(12,0)] *)
function v_HASH__hash : top
(* declaring value HMAC.ssl_pad1_md5 [C:\cygwin\home\Pierre-Yves\mitls\lib\HMAC.fs7(12,0)] *)
function v_HMAC__ssl_pad1_md5 : top
(* declaring value HMAC.ssl_pad2_md5 [C:\cygwin\home\Pierre-Yves\mitls\lib\HMAC.fs7(13,0)] *)
function v_HMAC__ssl_pad2_md5 : top
(* declaring value HMAC.ssl_pad1_sha1 [C:\cygwin\home\Pierre-Yves\mitls\lib\HMAC.fs7(14,0)] *)
function v_HMAC__ssl_pad1_sha1 : top
(* declaring value HMAC.ssl_pad2_sha1 [C:\cygwin\home\Pierre-Yves\mitls\lib\HMAC.fs7(15,0)] *)
function v_HMAC__ssl_pad2_sha1 : top
(* declaring value HMAC.sslKeyedHashPads [C:\cygwin\home\Pierre-Yves\mitls\lib\HMAC.fs7(17,8)] *)
function v_HMAC__sslKeyedHashPads : top
(* declaring value HMAC.sslKeyedHash [C:\cygwin\home\Pierre-Yves\mitls\lib\HMAC.fs7(18,8)] *)
function v_HMAC__sslKeyedHash : top
(* declaring value HMAC.sslKeyedHashVerify [C:\cygwin\home\Pierre-Yves\mitls\lib\HMAC.fs7(19,8)] *)
function v_HMAC__sslKeyedHashVerify : top
(* declaring value HMAC.HMAC [C:\cygwin\home\Pierre-Yves\mitls\lib\HMAC.fs7(20,8)] *)
function v_HMAC__HMAC : top
(* declaring value HMAC.HMACVERIFY [C:\cygwin\home\Pierre-Yves\mitls\lib\HMAC.fs7(21,8)] *)
function v_HMAC__HMACVERIFY : top
(* declaring value HMAC.MAC [C:\cygwin\home\Pierre-Yves\mitls\lib\HMAC.fs7(23,0)] *)
function v_HMAC__MAC : top
(* declaring value HMAC.MACVERIFY [C:\cygwin\home\Pierre-Yves\mitls\lib\HMAC.fs7(26,0)] *)
function v_HMAC__MACVERIFY : top
(* declaring type Sig.Strong [C:\cygwin\home\Pierre-Yves\mitls\lib\Sig.fs7(57,0)] *)
predicate v_Sig__Strong_p (x1:top)
(* declaring fun Sig.PK [C:\cygwin\home\Pierre-Yves\mitls\lib\Sig.fs7(65,9)] *)
function v_Sig__PK (x1:top) : top
(* declaring type Sig.pred [C:\cygwin\home\Pierre-Yves\mitls\lib\Sig.fs7(70,10)] *)
predicate v_Sig__Honest_p (x1:top) (x2:top)
(* declaring type Sig.Safe [C:\cygwin\home\Pierre-Yves\mitls\lib\Sig.fs7(72,0)] *)
predicate v_Sig__Safe_p (x1:top) (x2:top)
(* assume (!a. (!pk. Sig.Safe(a, pk) <=> Sig.Strong(a) /\ Sig.Honest(a, pk))) [C:\cygwin\home\Pierre-Yves\mitls\lib\Sig.fs7(73,0)] *)
axiom a1475_asm: (forall v_a:top. (forall v_pk:top. ((v_Sig__Safe_p v_a v_pk) <-> ((v_Sig__Strong_p v_a) /\ (v_Sig__Honest_p v_a v_pk)))))
(* declaring value Sig.gen [C:\cygwin\home\Pierre-Yves\mitls\lib\Sig.fs7(75,0)] *)
function v_Sig__gen : top
(* declaring value Sig.coerce [C:\cygwin\home\Pierre-Yves\mitls\lib\Sig.fs7(76,0)] *)
function v_Sig__coerce : top
(* declaring value Sig.leak [C:\cygwin\home\Pierre-Yves\mitls\lib\Sig.fs7(77,0)] *)
function v_Sig__leak : top
(* declaring value Sig.create_pkey [C:\cygwin\home\Pierre-Yves\mitls\lib\Sig.fs7(78,0)] *)
function v_Sig__create_pkey : top
(* declaring value Sig.pk_of [C:\cygwin\home\Pierre-Yves\mitls\lib\Sig.fs7(80,0)] *)
function v_Sig__pk_of : top
(* declaring value Sig.strong [C:\cygwin\home\Pierre-Yves\mitls\lib\Sig.fs7(81,0)] *)
function v_Sig__strong : top
(* declaring value Sig.honest [C:\cygwin\home\Pierre-Yves\mitls\lib\Sig.fs7(82,0)] *)
function v_Sig__honest : top
(* declaring type Sig.Msg [C:\cygwin\home\Pierre-Yves\mitls\lib\Sig.fs7(85,0)] *)
predicate v_Sig__Msg_p (x1:top) (x2:top) (x3:top)
(* declaring value Sig.sign [C:\cygwin\home\Pierre-Yves\mitls\lib\Sig.fs7(87,0)] *)
function v_Sig__sign : top
(* declaring value Sig.verify [C:\cygwin\home\Pierre-Yves\mitls\lib\Sig.fs7(88,0)] *)
function v_Sig__verify : top
(* declaring value Sig.honest_log [C:\cygwin\home\Pierre-Yves\mitls\lib\Sig.fs7(103,8)] *)
function v_Sig__honest_log : top
(* declaring value Sig.has_pk [C:\cygwin\home\Pierre-Yves\mitls\lib\Sig.fs7(104,8)] *)
function v_Sig__has_pk : top
(* declaring value Sig.consHonestLog [C:\cygwin\home\Pierre-Yves\mitls\lib\Sig.fs7(107,8)] *)
function v_Sig__consHonestLog : top
(* declaring value Sig.log [C:\cygwin\home\Pierre-Yves\mitls\lib\Sig.fs7(110,8)] *)
function v_Sig__log : top
(* declaring value Sig.consLog [C:\cygwin\home\Pierre-Yves\mitls\lib\Sig.fs7(111,8)] *)
function v_Sig__consLog : top
(* declaring value Sig.has_mac [C:\cygwin\home\Pierre-Yves\mitls\lib\Sig.fs7(112,8)] *)
function v_Sig__has_mac : top
(* declaring value UntrustedCert.OID_RSAEncryption [C:\cygwin\home\Pierre-Yves\mitls\lib\UntrustedCert.fs7(8,0)] *)
function v_UntrustedCert__OID_RSAEncryption : top
(* declaring value UntrustedCert.OID_SHAWithRSAEncryption [C:\cygwin\home\Pierre-Yves\mitls\lib\UntrustedCert.fs7(9,0)] *)
function v_UntrustedCert__OID_SHAWithRSAEncryption : top
(* declaring value UntrustedCert.OID_SHA256WithRSAEncryption [C:\cygwin\home\Pierre-Yves\mitls\lib\UntrustedCert.fs7(10,0)] *)
function v_UntrustedCert__OID_SHA256WithRSAEncryption : top
(* declaring value UntrustedCert.OID_DSASignatureKey [C:\cygwin\home\Pierre-Yves\mitls\lib\UntrustedCert.fs7(11,0)] *)
function v_UntrustedCert__OID_DSASignatureKey : top
(* declaring value UntrustedCert.oid_of_keyalg [C:\cygwin\home\Pierre-Yves\mitls\lib\UntrustedCert.fs7(13,0)] *)
function v_UntrustedCert__oid_of_keyalg : top
(* declaring type UntrustedCert.X509Certificate2 [C:\cygwin\home\Pierre-Yves\mitls\lib\UntrustedCert.fs7(15,0)] *)
predicate v_System__Security__Cryptography__X509Certificates__X509Certificate2_p 
function v_System__Security__Cryptography__X509Certificates__X509Certificate2  : top
(* declaring value UntrustedCert.x509_is_for_signing [C:\cygwin\home\Pierre-Yves\mitls\lib\UntrustedCert.fs7(20,0)] *)
function v_UntrustedCert__x509_is_for_signing : top
(* declaring value UntrustedCert.x509_verify [C:\cygwin\home\Pierre-Yves\mitls\lib\UntrustedCert.fs7(22,0)] *)
function v_UntrustedCert__x509_verify : top
(* declaring value UntrustedCert.x509_chain [C:\cygwin\home\Pierre-Yves\mitls\lib\UntrustedCert.fs7(23,0)] *)
function v_UntrustedCert__x509_chain : top
(* declaring value UntrustedCert.x509_check_key_sig_alg_one [C:\cygwin\home\Pierre-Yves\mitls\lib\UntrustedCert.fs7(25,0)] *)
function v_UntrustedCert__x509_check_key_sig_alg_one : top
(* declaring value UntrustedCert.x509_to_secret_key [C:\cygwin\home\Pierre-Yves\mitls\lib\UntrustedCert.fs7(27,0)] *)
function v_UntrustedCert__x509_to_secret_key : top
(* declaring value UntrustedCert.x509_to_public_key [C:\cygwin\home\Pierre-Yves\mitls\lib\UntrustedCert.fs7(28,0)] *)
function v_UntrustedCert__x509_to_public_key : top
(* declaring value UntrustedCert.x509_is_for_key_encryption [C:\cygwin\home\Pierre-Yves\mitls\lib\UntrustedCert.fs7(30,0)] *)
function v_UntrustedCert__x509_is_for_key_encryption : top
(* declaring value UntrustedCert.x509_export_public [C:\cygwin\home\Pierre-Yves\mitls\lib\UntrustedCert.fs7(32,0)] *)
function v_UntrustedCert__x509_export_public : top
(* declaring value UntrustedCert.cert_to_x509 [C:\cygwin\home\Pierre-Yves\mitls\lib\UntrustedCert.fs7(34,0)] *)
function v_UntrustedCert__cert_to_x509 : top
(* declaring value UntrustedCert.chain_to_x509list [C:\cygwin\home\Pierre-Yves\mitls\lib\UntrustedCert.fs7(36,0)] *)
function v_UntrustedCert__chain_to_x509list : top
(* declaring value UntrustedCert.x509list_to_chain [C:\cygwin\home\Pierre-Yves\mitls\lib\UntrustedCert.fs7(38,0)] *)
function v_UntrustedCert__x509list_to_chain : top
(* declaring value UntrustedCert.validate_x509_chain [C:\cygwin\home\Pierre-Yves\mitls\lib\UntrustedCert.fs7(44,0)] *)
function v_UntrustedCert__validate_x509_chain : top
(* declaring value UntrustedCert.validate_x509list [C:\cygwin\home\Pierre-Yves\mitls\lib\UntrustedCert.fs7(46,0)] *)
function v_UntrustedCert__validate_x509list : top
(* declaring value UntrustedCert.is_for_signing [C:\cygwin\home\Pierre-Yves\mitls\lib\UntrustedCert.fs7(48,0)] *)
function v_UntrustedCert__is_for_signing : top
(* declaring value UntrustedCert.is_for_key_encryption [C:\cygwin\home\Pierre-Yves\mitls\lib\UntrustedCert.fs7(49,0)] *)
function v_UntrustedCert__is_for_key_encryption : top
(* declaring value UntrustedCert.find_sigcert_and_alg [C:\cygwin\home\Pierre-Yves\mitls\lib\UntrustedCert.fs7(51,0)] *)
function v_UntrustedCert__find_sigcert_and_alg : top
(* declaring value UntrustedCert.find_enccert [C:\cygwin\home\Pierre-Yves\mitls\lib\UntrustedCert.fs7(52,0)] *)
function v_UntrustedCert__find_enccert : top
(* declaring value UntrustedCert.get_chain_key_algorithm [C:\cygwin\home\Pierre-Yves\mitls\lib\UntrustedCert.fs7(54,0)] *)
function v_UntrustedCert__get_chain_key_algorithm : top
(* declaring value UntrustedCert.get_name_info [C:\cygwin\home\Pierre-Yves\mitls\lib\UntrustedCert.fs7(56,0)] *)
function v_UntrustedCert__get_name_info : top
(* declaring fun Cert.SigPKCert [C:\cygwin\home\Pierre-Yves\mitls\lib\Cert.fs7(27,9)] *)
function v_Cert__SigPKCert (x1:top) (x2:top) : top
(* declaring fun Cert.RSAPKCert [C:\cygwin\home\Pierre-Yves\mitls\lib\Cert.fs7(28,9)] *)
function v_Cert__RSAPKCert (x1:top) : top
(* declaring value Cert.forall [C:\cygwin\home\Pierre-Yves\mitls\lib\Cert.fs7(33,0)] *)
function v_Cert__forall : top
(* declaring value Cert.for_signing [C:\cygwin\home\Pierre-Yves\mitls\lib\Cert.fs7(40,0)] *)
function v_Cert__for_signing : top
(* declaring value Cert.for_key_encryption [C:\cygwin\home\Pierre-Yves\mitls\lib\Cert.fs7(42,0)] *)
function v_Cert__for_key_encryption : top
(* declaring value Cert.get_public_signing_key [C:\cygwin\home\Pierre-Yves\mitls\lib\Cert.fs7(44,0)] *)
function v_Cert__get_public_signing_key : top
(* declaring value Cert.get_public_encryption_key [C:\cygwin\home\Pierre-Yves\mitls\lib\Cert.fs7(45,0)] *)
function v_Cert__get_public_encryption_key : top
(* declaring value Cert.get_chain_public_signing_key [C:\cygwin\home\Pierre-Yves\mitls\lib\Cert.fs7(47,0)] *)
function v_Cert__get_chain_public_signing_key : top
(* declaring value Cert.signing_gen [C:\cygwin\home\Pierre-Yves\mitls\lib\Cert.fs7(50,0)] *)
function v_Cert__signing_gen : top
(* declaring value Cert.get_chain_public_encryption_key [C:\cygwin\home\Pierre-Yves\mitls\lib\Cert.fs7(52,0)] *)
function v_Cert__get_chain_public_encryption_key : top
(* declaring value Cert.is_chain_for_signing [C:\cygwin\home\Pierre-Yves\mitls\lib\Cert.fs7(54,0)] *)
function v_Cert__is_chain_for_signing : top
(* declaring value Cert.is_chain_for_key_encryption [C:\cygwin\home\Pierre-Yves\mitls\lib\Cert.fs7(55,0)] *)
function v_Cert__is_chain_for_key_encryption : top
(* declaring fun Cert.CN [C:\cygwin\home\Pierre-Yves\mitls\lib\Cert.fs7(57,9)] *)
function v_Cert__CN (x1:top) : top
(* declaring value Cert.get_hint [C:\cygwin\home\Pierre-Yves\mitls\lib\Cert.fs7(58,0)] *)
function v_Cert__get_hint : top
(* declaring value Cert.validate_cert_chain [C:\cygwin\home\Pierre-Yves\mitls\lib\Cert.fs7(60,0)] *)
function v_Cert__validate_cert_chain : top
(* declaring value Cert.consCertificateBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\Cert.fs7(65,8)] *)
function v_Cert__consCertificateBytes : top
(* declaring fun Cert.CertificateListBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\Cert.fs7(68,9)] *)
function v_Cert__CertificateListBytes (x1:top) : top
(* declaring value Cert.certificateListBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\Cert.fs7(71,0)] *)
function v_Cert__certificateListBytes : top
(* declaring value Cert.parseCertificateList [C:\cygwin\home\Pierre-Yves\mitls\lib\Cert.fs7(74,0)] *)
function v_Cert__parseCertificateList : top
(* declaring value Cert.parseCertificateListInt [C:\cygwin\home\Pierre-Yves\mitls\lib\Cert.fs7(77,0)] *)
function v_Cert__parseCertificateListInt : top
(* declaring type TLSInfo.rw [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(31,0)] *)
predicate v_TLSInfo__Reader_p 
function v_TLSInfo__Reader  : top
predicate v_TLSInfo__Writer_p 
function v_TLSInfo__Writer  : top
axiom a1476_v_TLSInfo__Writer_Disj: not(v_TLSInfo__Reader = v_TLSInfo__Writer)
(* declaring type TLSInfo.preRole [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(33,0)] *)
predicate v_TLSInfo__Client_p 
function v_TLSInfo__Client  : top
predicate v_TLSInfo__Server_p 
function v_TLSInfo__Server  : top
axiom a1477_v_TLSInfo__Server_Disj: not(v_TLSInfo__Client = v_TLSInfo__Server)
(* declaring fun TLSInfo.DualRole [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(36,9)] *)
function v_TLSInfo__DualRole (x1:top) : top
(* assume TLSInfo.DualRole (TLSInfo.Client ()) = TLSInfo.Server () [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(37,0)] *)
axiom a1478_asm: ((v_TLSInfo__DualRole (v_TLSInfo__Client )) = (v_TLSInfo__Server ))
(* assume TLSInfo.DualRole (TLSInfo.Server ()) = TLSInfo.Client () [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(38,0)] *)
axiom a1479_asm: ((v_TLSInfo__DualRole (v_TLSInfo__Server )) = (v_TLSInfo__Client ))
(* declaring type TLSInfo.helloReqPolicy [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(44,0)] *)
predicate v_TLSInfo__HRPIgnore_p 
function v_TLSInfo__HRPIgnore  : top
predicate v_TLSInfo__HRPFull_p 
function v_TLSInfo__HRPFull  : top
axiom a1480_v_TLSInfo__HRPFull_Disj: not(v_TLSInfo__HRPIgnore = v_TLSInfo__HRPFull)
predicate v_TLSInfo__HRPResume_p 
function v_TLSInfo__HRPResume  : top
axiom a1481_v_TLSInfo__HRPResume_Disj: not(v_TLSInfo__HRPFull = v_TLSInfo__HRPResume)
axiom a1482_v_TLSInfo__HRPResume_Disj: not(v_TLSInfo__HRPIgnore = v_TLSInfo__HRPResume)
(* declaring value TLSInfo.defaultConfig [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(77,0)] *)
function v_TLSInfo__defaultConfig : top
(* declaring type TLSInfo.negotiatedExtension [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(96,0)] *)
predicate v_TLSInfo__NE_extended_ms_p 
function v_TLSInfo__NE_extended_ms  : top
predicate v_TLSInfo__NE_extended_padding_p 
function v_TLSInfo__NE_extended_padding  : top
axiom a1483_v_TLSInfo__NE_extended_padding_Disj: not(v_TLSInfo__NE_extended_ms = v_TLSInfo__NE_extended_padding)
(* declaring type TLSInfo.pmsId [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(105,0)] *)
predicate v_TLSInfo__NoPmsId_p 
function v_TLSInfo__NoPmsId  : top
predicate v_TLSInfo__SomePmsId_p (x1:top)
function v_TLSInfo__SomePmsId (x1:top) : top
function v_TLSInfo__SomePmsId__1 (x1:top) : top
axiom a1484_v_TLSInfo__SomePmsId_Inj: (forall x1:top. (v_TLSInfo__SomePmsId__1 (v_TLSInfo__SomePmsId x1)) = x1) /\ (forall x1:top,y1:top. (v_TLSInfo__SomePmsId x1) = (v_TLSInfo__SomePmsId y1) -> x1 = y1)
axiom a1485_v_TLSInfo__SomePmsId_Disj: forall x0:top. not(v_TLSInfo__NoPmsId = (v_TLSInfo__SomePmsId x0))
(* declaring fun TLSInfo.PmsId [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(109,9)] *)
function v_TLSInfo__PmsId (x1:top) : top
(* assume (!pms. TLSInfo.PmsId (pms) = TLSInfo.SomePmsId (pms)) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(110,0)] *)
axiom a1486_asm: (forall v_pms:top. ((v_TLSInfo__PmsId v_pms) = (v_TLSInfo__SomePmsId v_pms)))
(* declaring value TLSInfo.pmsId [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(111,0)] *)
function v_TLSInfo__pmsId : top
(* declaring type TLSInfo.HonestPMS [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(114,0)] *)
predicate v_TLSInfo__HonestPMS_p (x1:top)
(* assume not TLSInfo.HonestPMS(TLSInfo.NoPmsId ()) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(115,0)] *)
axiom a1487_asm: (not (v_TLSInfo__HonestPMS_p (v_TLSInfo__NoPmsId )))
(* assume (!pk. (!cv. (!rsapms. TLSInfo.HonestPMS(TLSInfo.PmsId (PMS.RSAPMS (pk, cv, rsapms))) <=> PMS.HonestRSAPMS(pk, cv, rsapms)))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(116,0)] *)
axiom a1488_asm: (forall v_pk:top. (forall v_cv:top. (forall v_rsapms:top. ((v_TLSInfo__HonestPMS_p (v_TLSInfo__PmsId (v_PMS__RSAPMS v_pk v_cv v_rsapms))) <-> (v_PMS__HonestRSAPMS_p v_pk v_cv v_rsapms)))))
(* assume (!p. (!g. (!gx. (!gy. (!dhpms. TLSInfo.HonestPMS(TLSInfo.PmsId (PMS.DHPMS (p, g, gx, gy, dhpms))) <=> PMS.HonestDHPMS(p, g, gx, gy, dhpms)))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(117,0)] *)
axiom a1489_asm: (forall v_p:top. (forall v_g:top. (forall v_gx:top. (forall v_gy:top. (forall v_dhpms:top. ((v_TLSInfo__HonestPMS_p (v_TLSInfo__PmsId (v_PMS__DHPMS v_p v_g v_gx v_gy v_dhpms))) <-> (v_PMS__HonestDHPMS_p v_p v_g v_gx v_gy v_dhpms)))))))
(* declaring value TLSInfo.noPmsId [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(118,0)] *)
function v_TLSInfo__noPmsId : top
(* assume not TLSInfo.HonestPMS(TLSInfo.noPmsId) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(118,0)] *)
axiom a1490_asm: (not (v_TLSInfo__HonestPMS_p v_TLSInfo__noPmsId))
(* declaring value TLSInfo.honestPMS [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(119,0)] *)
function v_TLSInfo__honestPMS : top
(* declaring type TLSInfo.StrongKEX [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(126,0)] *)
predicate v_TLSInfo__StrongKEX_p (x1:top)
(* declaring type TLSInfo.StrongKEF [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(135,0)] *)
predicate v_TLSInfo__StrongKEF_p (x1:top)
(* declaring value TLSInfo.strongKEF [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(136,0)] *)
function v_TLSInfo__strongKEF : top
(* declaring type TLSInfo.StrongKDF [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(139,0)] *)
predicate v_TLSInfo__StrongKDF_p (x1:top)
(* declaring type TLSInfo.StrongVD [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(140,0)] *)
predicate v_TLSInfo__StrongVD_p (x1:top)
(* declaring type TLSInfo.HonestMS [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(149,0)] *)
predicate v_TLSInfo__HonestMS_p (x1:top)
(* assume (!msi. TLSInfo.HonestMS(msi) <=> (?pmsId. (?csr. (?kefAlg. msi = (pmsId, csr, kefAlg) /\ TLSInfo.HonestPMS(pmsId) /\ TLSInfo.StrongKEF(kefAlg))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(150,0)] *)
axiom a1491_asm: (forall v_msi:top. ((v_TLSInfo__HonestMS_p v_msi) <-> (exists v_pmsId:top. (exists v_csr:top. (exists v_kefAlg:top. ((v_msi = (v_Tuples__Tup3 v_pmsId v_csr v_kefAlg)) /\ ((v_TLSInfo__HonestPMS_p v_pmsId) /\ (v_TLSInfo__StrongKEF_p v_kefAlg))))))))
(* declaring value TLSInfo.noMsId [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(157,0)] *)
function v_TLSInfo__noMsId : top
(* assume not TLSInfo.HonestMS(TLSInfo.noMsId) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(157,0)] *)
axiom a1492_asm: (not (v_TLSInfo__HonestMS_p v_TLSInfo__noMsId))
(* declaring fun TLSInfo.CSRands [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(191,9)] *)
function v_TLSInfo__CSRands (x1:top) : top
(* assume (!si. (!csr. csr = TLSInfo.CSRands (si) <=> Bytes.B (csr) = bop_ArrayAppend (Bytes.B (Tuples.Tup14.7 si), Bytes.B (Tuples.Tup14.8 si)))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(192,0)] *)
axiom a1493_asm: (forall v_si:top. (forall v_csr:top. ((v_csr = (v_TLSInfo__CSRands v_si)) <-> ((v_Bytes__B v_csr) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B (v_Tuples__Tup14__7 v_si)) (v_Bytes__B (v_Tuples__Tup14__8 v_si)))))))
(* declaring value TLSInfo.csrands [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(193,0)] *)
function v_TLSInfo__csrands : top
(* declaring fun TLSInfo.KefAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(197,9)] *)
function v_TLSInfo__KefAlg (x1:top) : top
(* assume (!si. Tuples.Tup14.10 si = TLSConstants.SSL_3p0 () => TLSInfo.KefAlg (si) = TLSConstants.PRF_SSL3_nested () /\ Tuples.Tup14.10 si = TLSConstants.TLS_1p0 () => TLSInfo.KefAlg (si) = TLSConstants.PRF_TLS_1p01 (TLSConstants.extract_label) /\ Tuples.Tup14.10 si = TLSConstants.TLS_1p1 () => TLSInfo.KefAlg (si) = TLSConstants.PRF_TLS_1p01 (TLSConstants.extract_label) /\ Tuples.Tup14.10 si = TLSConstants.TLS_1p2 () => TLSInfo.KefAlg (si) = TLSConstants.PRF_TLS_1p2 (TLSConstants.extract_label, TLSConstants.CiphersuitePrfMacAlg (Tuples.Tup14.1 si))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(198,0)] *)
axiom a1494_asm: (forall v_si:top. ((((v_Tuples__Tup14__10 v_si) = (v_TLSConstants__SSL_3p0 )) -> ((v_TLSInfo__KefAlg v_si) = (v_TLSConstants__PRF_SSL3_nested ))) /\ ((((v_Tuples__Tup14__10 v_si) = (v_TLSConstants__TLS_1p0 )) -> ((v_TLSInfo__KefAlg v_si) = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__extract_label))) /\ ((((v_Tuples__Tup14__10 v_si) = (v_TLSConstants__TLS_1p1 )) -> ((v_TLSInfo__KefAlg v_si) = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__extract_label))) /\ (((v_Tuples__Tup14__10 v_si) = (v_TLSConstants__TLS_1p2 )) -> ((v_TLSInfo__KefAlg v_si) = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__extract_label (v_TLSConstants__CiphersuitePrfMacAlg (v_Tuples__Tup14__1 v_si)))))))))
(* declaring value TLSInfo.kefAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(203,0)] *)
function v_TLSInfo__kefAlg : top
(* declaring fun TLSInfo.KefAlgExtended [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(205,9)] *)
function v_TLSInfo__KefAlgExtended (x1:top) : top
(* assume (!si. Tuples.Tup14.10 si = TLSConstants.SSL_3p0 () => TLSInfo.KefAlgExtended (si) = TLSConstants.PRF_SSL3_nested () /\ Tuples.Tup14.10 si = TLSConstants.TLS_1p0 () => TLSInfo.KefAlgExtended (si) = TLSConstants.PRF_TLS_1p01 (TLSConstants.extended_extract_label) /\ Tuples.Tup14.10 si = TLSConstants.TLS_1p1 () => TLSInfo.KefAlgExtended (si) = TLSConstants.PRF_TLS_1p01 (TLSConstants.extended_extract_label) /\ Tuples.Tup14.10 si = TLSConstants.TLS_1p2 () => TLSInfo.KefAlgExtended (si) = TLSConstants.PRF_TLS_1p2 (TLSConstants.extended_extract_label, TLSConstants.CiphersuitePrfMacAlg (Tuples.Tup14.1 si))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(206,0)] *)
axiom a1495_asm: (forall v_si:top. ((((v_Tuples__Tup14__10 v_si) = (v_TLSConstants__SSL_3p0 )) -> ((v_TLSInfo__KefAlgExtended v_si) = (v_TLSConstants__PRF_SSL3_nested ))) /\ ((((v_Tuples__Tup14__10 v_si) = (v_TLSConstants__TLS_1p0 )) -> ((v_TLSInfo__KefAlgExtended v_si) = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__extended_extract_label))) /\ ((((v_Tuples__Tup14__10 v_si) = (v_TLSConstants__TLS_1p1 )) -> ((v_TLSInfo__KefAlgExtended v_si) = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__extended_extract_label))) /\ (((v_Tuples__Tup14__10 v_si) = (v_TLSConstants__TLS_1p2 )) -> ((v_TLSInfo__KefAlgExtended v_si) = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__extended_extract_label (v_TLSConstants__CiphersuitePrfMacAlg (v_Tuples__Tup14__1 v_si)))))))))
(* declaring value TLSInfo.kefAlg_extended [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(211,0)] *)
function v_TLSInfo__kefAlg_extended : top
(* declaring fun TLSInfo.KdfAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(213,9)] *)
function v_TLSInfo__KdfAlg (x1:top) : top
(* assume (!si. Tuples.Tup14.10 si = TLSConstants.SSL_3p0 () => TLSInfo.KdfAlg (si) = TLSConstants.PRF_SSL3_nested () /\ Tuples.Tup14.10 si = TLSConstants.TLS_1p0 () => TLSInfo.KdfAlg (si) = TLSConstants.PRF_TLS_1p01 (TLSConstants.kdf_label) /\ Tuples.Tup14.10 si = TLSConstants.TLS_1p1 () => TLSInfo.KdfAlg (si) = TLSConstants.PRF_TLS_1p01 (TLSConstants.kdf_label) /\ Tuples.Tup14.10 si = TLSConstants.TLS_1p2 () => TLSInfo.KdfAlg (si) = TLSConstants.PRF_TLS_1p2 (TLSConstants.kdf_label, TLSConstants.CiphersuitePrfMacAlg (Tuples.Tup14.1 si))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(214,0)] *)
axiom a1496_asm: (forall v_si:top. ((((v_Tuples__Tup14__10 v_si) = (v_TLSConstants__SSL_3p0 )) -> ((v_TLSInfo__KdfAlg v_si) = (v_TLSConstants__PRF_SSL3_nested ))) /\ ((((v_Tuples__Tup14__10 v_si) = (v_TLSConstants__TLS_1p0 )) -> ((v_TLSInfo__KdfAlg v_si) = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__kdf_label))) /\ ((((v_Tuples__Tup14__10 v_si) = (v_TLSConstants__TLS_1p1 )) -> ((v_TLSInfo__KdfAlg v_si) = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__kdf_label))) /\ (((v_Tuples__Tup14__10 v_si) = (v_TLSConstants__TLS_1p2 )) -> ((v_TLSInfo__KdfAlg v_si) = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__kdf_label (v_TLSConstants__CiphersuitePrfMacAlg (v_Tuples__Tup14__1 v_si)))))))))
(* declaring value TLSInfo.kdfAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(219,0)] *)
function v_TLSInfo__kdfAlg : top
(* declaring fun TLSInfo.VdAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(221,9)] *)
function v_TLSInfo__VdAlg (x1:top) : top
(* assume (!si. TLSInfo.VdAlg (si) = (Tuples.Tup14.10 si, Tuples.Tup14.1 si)) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(222,0)] *)
axiom a1497_asm: (forall v_si:top. ((v_TLSInfo__VdAlg v_si) = (v_Tuples__Tup2 (v_Tuples__Tup14__10 v_si) (v_Tuples__Tup14__1 v_si))))
(* declaring value TLSInfo.vdAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(223,0)] *)
function v_TLSInfo__vdAlg : top
(* declaring fun TLSInfo.SIaeAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(225,9)] *)
function v_TLSInfo__SIaeAlg (x1:top) : top
(* assume (!si. TLSInfo.SIaeAlg (si) = TLSConstants.CipherSuiteAuthEncAlg (Tuples.Tup14.1 si, Tuples.Tup14.10 si)) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(226,0)] *)
axiom a1498_asm: (forall v_si:top. ((v_TLSInfo__SIaeAlg v_si) = (v_TLSConstants__CipherSuiteAuthEncAlg (v_Tuples__Tup14__1 v_si) (v_Tuples__Tup14__10 v_si))))
(* declaring fun TLSInfo.MsI [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(230,9)] *)
function v_TLSInfo__MsI (x1:top) : top
(* assume (!si. TLSInfo.MsI (si) = (Tuples.Tup14.9 si, TLSInfo.CSRands (si), TLSInfo.KefAlg (si))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(231,0)] *)
axiom a1499_asm: (forall v_si:top. ((v_TLSInfo__MsI v_si) = (v_Tuples__Tup3 (v_Tuples__Tup14__9 v_si) (v_TLSInfo__CSRands v_si) (v_TLSInfo__KefAlg v_si))))
(* declaring value TLSInfo.msi [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(232,0)] *)
function v_TLSInfo__msi : top
(* declaring type TLSInfo.StrongSig [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(236,0)] *)
predicate v_TLSInfo__StrongSig_p (x1:top)
(* assume (!si. TLSInfo.StrongSig(si) <=> Sig.Strong(TLSConstants.CipherSuiteSigHashAlg (Tuples.Tup14.1 si))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(237,0)] *)
axiom a1500_asm: (forall v_si:top. ((v_TLSInfo__StrongSig_p v_si) <-> (v_Sig__Strong_p (v_TLSConstants__CipherSuiteSigHashAlg (v_Tuples__Tup14__1 v_si)))))
(* declaring type TLSInfo.StrongPRF [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(241,0)] *)
predicate v_TLSInfo__StrongPRF_p (x1:top)
(* assume (!si. TLSInfo.StrongPRF(si) <=> TLSInfo.StrongKDF(TLSInfo.KdfAlg (si)) /\ TLSInfo.StrongVD(TLSInfo.VdAlg (si))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(242,0)] *)
axiom a1501_asm: (forall v_si:top. ((v_TLSInfo__StrongPRF_p v_si) <-> ((v_TLSInfo__StrongKDF_p (v_TLSInfo__KdfAlg v_si)) /\ (v_TLSInfo__StrongVD_p (v_TLSInfo__VdAlg v_si)))))
(* declaring type TLSInfo.StrongHS [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(248,0)] *)
predicate v_TLSInfo__StrongHS_p (x1:top)
(* assume (!si. TLSInfo.StrongHS(si) <=> TLSInfo.StrongKEX(Tuples.Tup14.9 si) /\ TLSInfo.StrongKEF(TLSInfo.KefAlg (si)) /\ TLSInfo.StrongPRF(si) /\ TLSInfo.StrongSig(si)) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(249,0)] *)
axiom a1502_asm: (forall v_si:top. ((v_TLSInfo__StrongHS_p v_si) <-> ((v_TLSInfo__StrongKEX_p (v_Tuples__Tup14__9 v_si)) /\ ((v_TLSInfo__StrongKEF_p (v_TLSInfo__KefAlg v_si)) /\ ((v_TLSInfo__StrongPRF_p v_si) /\ (v_TLSInfo__StrongSig_p v_si))))))
(* declaring type TLSInfo.SafeCRE [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(257,0)] *)
predicate v_TLSInfo__SafeCRE_p (x1:top)
(* assume (!si. TLSInfo.HonestMS(TLSInfo.MsI (si)) <=> TLSInfo.SafeCRE(si)) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(258,0)] *)
axiom a1503_asm: (forall v_si:top. ((v_TLSInfo__HonestMS_p (v_TLSInfo__MsI v_si)) <-> (v_TLSInfo__SafeCRE_p v_si)))
(* declaring value TLSInfo.safeCRE [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(259,0)] *)
function v_TLSInfo__safeCRE : top
(* declaring type TLSInfo.SafeVD [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(261,0)] *)
predicate v_TLSInfo__SafeVD_p (x1:top)
(* assume (!si. TLSInfo.SafeVD(si) <=> TLSInfo.HonestMS(TLSInfo.MsI (si)) /\ TLSInfo.StrongVD(TLSInfo.VdAlg (si))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(262,0)] *)
axiom a1504_asm: (forall v_si:top. ((v_TLSInfo__SafeVD_p v_si) <-> ((v_TLSInfo__HonestMS_p (v_TLSInfo__MsI v_si)) /\ (v_TLSInfo__StrongVD_p (v_TLSInfo__VdAlg v_si)))))
(* declaring value TLSInfo.safeVD [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(263,0)] *)
function v_TLSInfo__safeVD : top
(* declaring type TLSInfo.StrongAuthSI [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(267,0)] *)
predicate v_TLSInfo__StrongAuthSI_p (x1:top)
(* assume (!si. TLSInfo.StrongAuthSI(si) <=> (?e. (?m. TLSConstants.CipherSuiteAuthEncAlg (Tuples.Tup14.1 si, Tuples.Tup14.10 si) = TLSConstants.MtE (e, m) /\ TLSConstants.INT_CMA_M(m)))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(268,0)] *)
axiom a1505_asm: (forall v_si:top. ((v_TLSInfo__StrongAuthSI_p v_si) <-> (exists v_e:top. (exists v_m:top. (((v_TLSConstants__CipherSuiteAuthEncAlg (v_Tuples__Tup14__1 v_si) (v_Tuples__Tup14__10 v_si)) = (v_TLSConstants__MtE v_e v_m)) /\ (v_TLSConstants__INT_CMA_M_p v_m))))))
(* declaring type TLSInfo.StrongAESI [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(271,0)] *)
predicate v_TLSInfo__StrongAESI_p (x1:top)
(* assume (!si. TLSInfo.StrongAESI(si) <=> TLSConstants.StrongAEAlg(Tuples.Tup14.10 si, TLSConstants.CipherSuiteAuthEncAlg (Tuples.Tup14.1 si, Tuples.Tup14.10 si))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(272,0)] *)
axiom a1506_asm: (forall v_si:top. ((v_TLSInfo__StrongAESI_p v_si) <-> (v_TLSConstants__StrongAEAlg_p (v_Tuples__Tup14__10 v_si) (v_TLSConstants__CipherSuiteAuthEncAlg (v_Tuples__Tup14__1 v_si) (v_Tuples__Tup14__10 v_si)))))
(* declaring type TLSInfo.preEpoch [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(278,0)] *)
predicate v_TLSInfo__InitEpoch_p (x1:top)
function v_TLSInfo__InitEpoch (x1:top) : top
function v_TLSInfo__InitEpoch__1 (x1:top) : top
axiom a1507_v_TLSInfo__InitEpoch_Inj: (forall x1:top. (v_TLSInfo__InitEpoch__1 (v_TLSInfo__InitEpoch x1)) = x1) /\ (forall x1:top,y1:top. (v_TLSInfo__InitEpoch x1) = (v_TLSInfo__InitEpoch y1) -> x1 = y1)
predicate v_TLSInfo__SuccEpoch_p (x1:top) (x2:top) (x3:top) (x4:top)
function v_TLSInfo__SuccEpoch (x1:top) (x2:top) (x3:top) (x4:top) : top
function v_TLSInfo__SuccEpoch__1 (x1:top) : top
function v_TLSInfo__SuccEpoch__2 (x1:top) : top
function v_TLSInfo__SuccEpoch__3 (x1:top) : top
function v_TLSInfo__SuccEpoch__4 (x1:top) : top
axiom a1508_v_TLSInfo__SuccEpoch_Inj: (forall x1:top, x2:top, x3:top, x4:top. ((v_TLSInfo__SuccEpoch__1 (v_TLSInfo__SuccEpoch x1 x2 x3 x4)) = x1) /\ (((v_TLSInfo__SuccEpoch__2 (v_TLSInfo__SuccEpoch x1 x2 x3 x4)) = x2) /\ (((v_TLSInfo__SuccEpoch__3 (v_TLSInfo__SuccEpoch x1 x2 x3 x4)) = x3) /\ ((v_TLSInfo__SuccEpoch__4 (v_TLSInfo__SuccEpoch x1 x2 x3 x4)) = x4)))) /\ (forall x1:top, x2:top, x3:top, x4:top,y1:top, y2:top, y3:top, y4:top. (v_TLSInfo__SuccEpoch x1 x2 x3 x4) = (v_TLSInfo__SuccEpoch y1 y2 y3 y4) -> (x1 = y1) /\ ((x2 = y2) /\ ((x3 = y3) /\ (x4 = y4))))
axiom a1509_v_TLSInfo__SuccEpoch_Disj: forall x0:top, x1:top, x2:top, x3:top, x4:top. not((v_TLSInfo__InitEpoch x0) = (v_TLSInfo__SuccEpoch x1 x2 x3 x4))
(* declaring predicate TLSInfo.IsInitEpoch [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(284,10)] *)
predicate v_TLSInfo__IsInitEpoch_p (x1:top)
(* declaring predicate TLSInfo.IsSuccEpoch [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(285,10)] *)
predicate v_TLSInfo__IsSuccEpoch_p (x1:top)
(* declaring fun TLSInfo.Pred [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(295,9)] *)
function v_TLSInfo__Pred (x1:top) : top
(* declaring predicate TLSInfo.IsValidEpoch [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(298,10)] *)
predicate v_TLSInfo__IsValidEpoch_p (x1:top)
(* declaring value TLSInfo.isInitEpoch [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(305,0)] *)
function v_TLSInfo__isInitEpoch : top
(* declaring fun TLSInfo.Peer [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(307,9)] *)
function v_TLSInfo__Peer (x1:top) : top
(* declaring fun TLSInfo.EpochSI [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(312,9)] *)
function v_TLSInfo__EpochSI (x1:top) : top
(* declaring fun TLSInfo.EpochCRand [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(315,9)] *)
function v_TLSInfo__EpochCRand (x1:top) : top
(* declaring fun TLSInfo.EpochSRand [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(316,9)] *)
function v_TLSInfo__EpochSRand (x1:top) : top
(* declaring fun TLSInfo.EpochCSRands [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(317,9)] *)
function v_TLSInfo__EpochCSRands (x1:top) : top
(* assume (!b1. (!b2. (!si. (!pe. TLSInfo.EpochSRand (TLSInfo.SuccEpoch (b1, b2, si, pe)) = b2)))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(318,0)] *)
axiom a1510_asm: (forall v_b1:top. (forall v_b2:top. (forall v_si:top. (forall v_pe:top. ((v_TLSInfo__EpochSRand (v_TLSInfo__SuccEpoch v_b1 v_b2 v_si v_pe)) = v_b2)))))
(* assume (!b1. (!b2. (!si. (!pe. TLSInfo.EpochCRand (TLSInfo.SuccEpoch (b1, b2, si, pe)) = b1)))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(319,0)] *)
axiom a1511_asm: (forall v_b1:top. (forall v_b2:top. (forall v_si:top. (forall v_pe:top. ((v_TLSInfo__EpochCRand (v_TLSInfo__SuccEpoch v_b1 v_b2 v_si v_pe)) = v_b1)))))
(* assume (!csr. (!e. csr = TLSInfo.EpochCSRands (e) <=> Bytes.B (csr) = bop_ArrayAppend (Bytes.B (TLSInfo.EpochCRand (e)), Bytes.B (TLSInfo.EpochSRand (e))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(320,0)] *)
axiom a1512_asm: (forall v_csr:top. (forall v_e:top. ((v_csr = (v_TLSInfo__EpochCSRands v_e)) <-> ((v_Bytes__B v_csr) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B (v_TLSInfo__EpochCRand v_e)) (v_Bytes__B (v_TLSInfo__EpochSRand v_e)))))))
(* declaring value TLSInfo.epochCRand [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(323,0)] *)
function v_TLSInfo__epochCRand : top
(* declaring value TLSInfo.epochSRand [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(324,0)] *)
function v_TLSInfo__epochSRand : top
(* declaring value TLSInfo.epochCSRands [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(325,0)] *)
function v_TLSInfo__epochCSRands : top
(* declaring value TLSInfo.epochSI [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(327,0)] *)
function v_TLSInfo__epochSI : top
(* declaring fun TLSInfo.EpochWriter [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(329,9)] *)
function v_TLSInfo__EpochWriter (x1:top) : top
(* declaring value TLSInfo.epochWriter [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(332,0)] *)
function v_TLSInfo__epochWriter : top
(* declaring type TLSInfo.StrongAuth [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(334,0)] *)
predicate v_TLSInfo__StrongAuth_p (x1:top)
(* declaring type TLSInfo.StrongAE [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(335,0)] *)
predicate v_TLSInfo__StrongAE_p (x1:top)
(* assume (!e. TLSInfo.StrongAuth(e) <=> TLSInfo.StrongAuthSI(TLSInfo.EpochSI (e))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(337,0)] *)
axiom a1513_asm: (forall v_e:top. ((v_TLSInfo__StrongAuth_p v_e) <-> (v_TLSInfo__StrongAuthSI_p (v_TLSInfo__EpochSI v_e))))
(* assume (!e. TLSInfo.StrongAE(e) <=> TLSInfo.StrongAESI(TLSInfo.EpochSI (e))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(338,0)] *)
axiom a1514_asm: (forall v_e:top. ((v_TLSInfo__StrongAE_p v_e) <-> (v_TLSInfo__StrongAESI_p (v_TLSInfo__EpochSI v_e))))
(* declaring value TLSInfo.connectionRole [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(352,0)] *)
function v_TLSInfo__connectionRole : top
(* declaring value TLSInfo.initConnection [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(354,0)] *)
function v_TLSInfo__initConnection : top
(* declaring value TLSInfo.nextEpoch [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(356,0)] *)
function v_TLSInfo__nextEpoch : top
(* declaring value TLSInfo.predEpoch [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(358,0)] *)
function v_TLSInfo__predEpoch : top
(* declaring fun TLSInfo.Swap [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(377,9)] *)
function v_TLSInfo__Swap (x1:top) : top
(* assume (!i. TLSInfo.Swap (i) = (Tuples.Tup7.1 i, Tuples.Tup7.2 i, Tuples.Tup7.3 i, Tuples.Tup7.4 i, Tuples.Tup7.5 i, Tuples.Tup7.6 i, TLSInfo.DualRole (Tuples.Tup7.7 i))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(378,0)] *)
axiom a1515_asm: (forall v_i:top. ((v_TLSInfo__Swap v_i) = (v_Tuples__Tup7 (v_Tuples__Tup7__1 v_i) (v_Tuples__Tup7__2 v_i) (v_Tuples__Tup7__3 v_i) (v_Tuples__Tup7__4 v_i) (v_Tuples__Tup7__5 v_i) (v_Tuples__Tup7__6 v_i) (v_TLSInfo__DualRole (v_Tuples__Tup7__7 v_i)))))
(* assume (!x. (!y. x = TLSInfo.DualRole (y) => y = TLSInfo.DualRole (x))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(387,0)] *)
axiom a1516_asm: (forall v_x:top. (forall v_y:top. ((v_x = (v_TLSInfo__DualRole v_y)) -> (v_y = (v_TLSInfo__DualRole v_x)))))
(* declaring fun TLSInfo.SiId [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(395,9)] *)
function v_TLSInfo__SiId (x1:top) (x2:top) : top
(* assume (!si. (!writer. TLSInfo.SiId (si, writer) = (TLSInfo.SIaeAlg (si), TLSInfo.CSRands (si), Tuples.Tup14.6 si, TLSInfo.KdfAlg (si), TLSInfo.MsI (si), Tuples.Tup14.10 si, writer))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(396,0)] *)
axiom a1517_asm: (forall v_si:top. (forall v_writer:top. ((v_TLSInfo__SiId v_si v_writer) = (v_Tuples__Tup7 (v_TLSInfo__SIaeAlg v_si) (v_TLSInfo__CSRands v_si) (v_Tuples__Tup14__6 v_si) (v_TLSInfo__KdfAlg v_si) (v_TLSInfo__MsI v_si) (v_Tuples__Tup14__10 v_si) v_writer))))
(* declaring fun TLSInfo.MacAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(407,9)] *)
function v_TLSInfo__MacAlg (x1:top) : top
(* assume (!id. TLSInfo.MacAlg (id) = TLSConstants.AEMacAlg (Tuples.Tup7.1 id)) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(408,0)] *)
axiom a1518_asm: (forall v_id:top. ((v_TLSInfo__MacAlg v_id) = (v_TLSConstants__AEMacAlg (v_Tuples__Tup7__1 v_id))))
(* declaring value TLSInfo.macAlg_of_id [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(409,0)] *)
function v_TLSInfo__macAlg_of_id : top
(* declaring fun TLSInfo.EncAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(411,9)] *)
function v_TLSInfo__EncAlg (x1:top) : top
(* assume (!id. TLSInfo.EncAlg (id) = TLSConstants.AEEncAlg (Tuples.Tup7.1 id)) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(412,0)] *)
axiom a1519_asm: (forall v_id:top. ((v_TLSInfo__EncAlg v_id) = (v_TLSConstants__AEEncAlg (v_Tuples__Tup7__1 v_id))))
(* declaring value TLSInfo.encAlg_of_id [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(413,0)] *)
function v_TLSInfo__encAlg_of_id : top
(* declaring fun TLSInfo.PvOfId [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(415,9)] *)
function v_TLSInfo__PvOfId (x1:top) : top
(* assume (!i. TLSInfo.PvOfId (i) = Tuples.Tup7.6 i) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(416,0)] *)
axiom a1520_asm: (forall v_i:top. ((v_TLSInfo__PvOfId v_i) = (v_Tuples__Tup7__6 v_i)))
(* declaring value TLSInfo.pv_of_id [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(417,0)] *)
function v_TLSInfo__pv_of_id : top
(* declaring value TLSInfo.kdfAlg_of_id [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(419,0)] *)
function v_TLSInfo__kdfAlg_of_id : top
(* declaring type TLSInfo.event [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(424,0)] *)
predicate v_TLSInfo__KeyCommit_p (x1:top) (x2:top) (x3:top) (x4:top)
function v_TLSInfo__KeyCommit (x1:top) (x2:top) (x3:top) (x4:top) : top
function v_TLSInfo__KeyCommit__1 (x1:top) : top
function v_TLSInfo__KeyCommit__2 (x1:top) : top
function v_TLSInfo__KeyCommit__3 (x1:top) : top
function v_TLSInfo__KeyCommit__4 (x1:top) : top
axiom a1521_v_TLSInfo__KeyCommit_Inj: (forall x1:top, x2:top, x3:top, x4:top. ((v_TLSInfo__KeyCommit__1 (v_TLSInfo__KeyCommit x1 x2 x3 x4)) = x1) /\ (((v_TLSInfo__KeyCommit__2 (v_TLSInfo__KeyCommit x1 x2 x3 x4)) = x2) /\ (((v_TLSInfo__KeyCommit__3 (v_TLSInfo__KeyCommit x1 x2 x3 x4)) = x3) /\ ((v_TLSInfo__KeyCommit__4 (v_TLSInfo__KeyCommit x1 x2 x3 x4)) = x4)))) /\ (forall x1:top, x2:top, x3:top, x4:top,y1:top, y2:top, y3:top, y4:top. (v_TLSInfo__KeyCommit x1 x2 x3 x4) = (v_TLSInfo__KeyCommit y1 y2 y3 y4) -> (x1 = y1) /\ ((x2 = y2) /\ ((x3 = y3) /\ (x4 = y4))))
predicate v_TLSInfo__KeyGenClient_p (x1:top) (x2:top) (x3:top) (x4:top)
function v_TLSInfo__KeyGenClient (x1:top) (x2:top) (x3:top) (x4:top) : top
function v_TLSInfo__KeyGenClient__1 (x1:top) : top
function v_TLSInfo__KeyGenClient__2 (x1:top) : top
function v_TLSInfo__KeyGenClient__3 (x1:top) : top
function v_TLSInfo__KeyGenClient__4 (x1:top) : top
axiom a1522_v_TLSInfo__KeyGenClient_Inj: (forall x1:top, x2:top, x3:top, x4:top. ((v_TLSInfo__KeyGenClient__1 (v_TLSInfo__KeyGenClient x1 x2 x3 x4)) = x1) /\ (((v_TLSInfo__KeyGenClient__2 (v_TLSInfo__KeyGenClient x1 x2 x3 x4)) = x2) /\ (((v_TLSInfo__KeyGenClient__3 (v_TLSInfo__KeyGenClient x1 x2 x3 x4)) = x3) /\ ((v_TLSInfo__KeyGenClient__4 (v_TLSInfo__KeyGenClient x1 x2 x3 x4)) = x4)))) /\ (forall x1:top, x2:top, x3:top, x4:top,y1:top, y2:top, y3:top, y4:top. (v_TLSInfo__KeyGenClient x1 x2 x3 x4) = (v_TLSInfo__KeyGenClient y1 y2 y3 y4) -> (x1 = y1) /\ ((x2 = y2) /\ ((x3 = y3) /\ (x4 = y4))))
axiom a1523_v_TLSInfo__KeyGenClient_Disj: forall x0:top, x1:top, x2:top, x3:top, x4:top, x5:top, x6:top, x7:top. not((v_TLSInfo__KeyCommit x0 x1 x2 x3) = (v_TLSInfo__KeyGenClient x4 x5 x6 x7))
predicate v_TLSInfo__SentCCS_p (x1:top) (x2:top) (x3:top) (x4:top)
function v_TLSInfo__SentCCS (x1:top) (x2:top) (x3:top) (x4:top) : top
function v_TLSInfo__SentCCS__1 (x1:top) : top
function v_TLSInfo__SentCCS__2 (x1:top) : top
function v_TLSInfo__SentCCS__3 (x1:top) : top
function v_TLSInfo__SentCCS__4 (x1:top) : top
axiom a1524_v_TLSInfo__SentCCS_Inj: (forall x1:top, x2:top, x3:top, x4:top. ((v_TLSInfo__SentCCS__1 (v_TLSInfo__SentCCS x1 x2 x3 x4)) = x1) /\ (((v_TLSInfo__SentCCS__2 (v_TLSInfo__SentCCS x1 x2 x3 x4)) = x2) /\ (((v_TLSInfo__SentCCS__3 (v_TLSInfo__SentCCS x1 x2 x3 x4)) = x3) /\ ((v_TLSInfo__SentCCS__4 (v_TLSInfo__SentCCS x1 x2 x3 x4)) = x4)))) /\ (forall x1:top, x2:top, x3:top, x4:top,y1:top, y2:top, y3:top, y4:top. (v_TLSInfo__SentCCS x1 x2 x3 x4) = (v_TLSInfo__SentCCS y1 y2 y3 y4) -> (x1 = y1) /\ ((x2 = y2) /\ ((x3 = y3) /\ (x4 = y4))))
axiom a1525_v_TLSInfo__SentCCS_Disj: forall x0:top, x1:top, x2:top, x3:top, x4:top, x5:top, x6:top, x7:top. not((v_TLSInfo__KeyGenClient x0 x1 x2 x3) = (v_TLSInfo__SentCCS x4 x5 x6 x7))
axiom a1526_v_TLSInfo__SentCCS_Disj: forall x0:top, x1:top, x2:top, x3:top, x4:top, x5:top, x6:top, x7:top. not((v_TLSInfo__KeyCommit x0 x1 x2 x3) = (v_TLSInfo__SentCCS x4 x5 x6 x7))
(* assume (!csr. (!pv0. (!ae0. (!ext0. (!pv1. (!ae1. (!ext1. TLSInfo.KeyCommit(csr, pv0, ae0, ext0) /\ TLSInfo.KeyCommit(csr, pv1, ae1, ext1) => pv0 = pv1 /\ ae0 = ae1 /\ ext0 = ext1))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(431,0)] *)
axiom a1527_asm: (forall v_csr:top. (forall v_pv0:top. (forall v_ae0:top. (forall v_ext0:top. (forall v_pv1:top. (forall v_ae1:top. (forall v_ext1:top. (((v_TLSInfo__KeyCommit_p v_csr v_pv0 v_ae0 v_ext0) /\ (v_TLSInfo__KeyCommit_p v_csr v_pv1 v_ae1 v_ext1)) -> ((v_pv0 = v_pv1) /\ ((v_ae0 = v_ae1) /\ (v_ext0 = v_ext1)))))))))))
(* assume (!csr. (!pv0. (!ae0. (!ext0. (!pv1. (!ae1. (!ext1. TLSInfo.KeyGenClient(csr, pv0, ae0, ext0) /\ TLSInfo.KeyGenClient(csr, pv1, ae1, ext1) => pv0 = pv1 /\ ae0 = ae1 /\ ext0 = ext1))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(433,0)] *)
axiom a1528_asm: (forall v_csr:top. (forall v_pv0:top. (forall v_ae0:top. (forall v_ext0:top. (forall v_pv1:top. (forall v_ae1:top. (forall v_ext1:top. (((v_TLSInfo__KeyGenClient_p v_csr v_pv0 v_ae0 v_ext0) /\ (v_TLSInfo__KeyGenClient_p v_csr v_pv1 v_ae1 v_ext1)) -> ((v_pv0 = v_pv1) /\ ((v_ae0 = v_ae1) /\ (v_ext0 = v_ext1)))))))))))
(* declaring type TLSInfo.Match [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(437,0)] *)
predicate v_TLSInfo__Match_p (x1:top)
(* assume (!i. TLSInfo.Match(i) <=> TLSInfo.KeyCommit(Tuples.Tup7.2 i, Tuples.Tup7.6 i, Tuples.Tup7.1 i, Tuples.Tup7.3 i) /\ TLSInfo.KeyGenClient(Tuples.Tup7.2 i, Tuples.Tup7.6 i, Tuples.Tup7.1 i, Tuples.Tup7.3 i)) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(438,0)] *)
axiom a1529_asm: (forall v_i:top. ((v_TLSInfo__Match_p v_i) <-> ((v_TLSInfo__KeyCommit_p (v_Tuples__Tup7__2 v_i) (v_Tuples__Tup7__6 v_i) (v_Tuples__Tup7__1 v_i) (v_Tuples__Tup7__3 v_i)) /\ (v_TLSInfo__KeyGenClient_p (v_Tuples__Tup7__2 v_i) (v_Tuples__Tup7__6 v_i) (v_Tuples__Tup7__1 v_i) (v_Tuples__Tup7__3 v_i)))))
(* declaring type TLSInfo.SafeKDF [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(441,0)] *)
predicate v_TLSInfo__SafeKDF_p (x1:top)
(* assume (!i. TLSInfo.SafeKDF(i) <=> TLSInfo.HonestMS(Tuples.Tup7.5 i) /\ TLSInfo.StrongKDF(Tuples.Tup7.4 i) /\ TLSInfo.Match(i)) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(442,0)] *)
axiom a1530_asm: (forall v_i:top. ((v_TLSInfo__SafeKDF_p v_i) <-> ((v_TLSInfo__HonestMS_p (v_Tuples__Tup7__5 v_i)) /\ ((v_TLSInfo__StrongKDF_p (v_Tuples__Tup7__4 v_i)) /\ (v_TLSInfo__Match_p v_i)))))
(* declaring value TLSInfo.safeKDF [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(443,0)] *)
function v_TLSInfo__safeKDF : top
(* assume (!i1. (!i2. i2 = TLSInfo.Swap (i1) /\ not TLSInfo.SafeKDF(i1) => not TLSInfo.SafeKDF(i2))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(446,0)] *)
axiom a1531_asm: (forall v_i1:top. (forall v_i2:top. (((v_i2 = (v_TLSInfo__Swap v_i1)) /\ (not (v_TLSInfo__SafeKDF_p v_i1))) -> (not (v_TLSInfo__SafeKDF_p v_i2)))))
(* assume (!si. not TLSInfo.HonestMS(TLSInfo.MsI (si)) => not TLSInfo.SafeVD(si)) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(449,0)] *)
axiom a1532_asm: (forall v_si:top. ((not (v_TLSInfo__HonestMS_p (v_TLSInfo__MsI v_si))) -> (not (v_TLSInfo__SafeVD_p v_si))))
(* assume (!i. not TLSInfo.HonestMS(Tuples.Tup7.5 i) => not TLSInfo.SafeKDF(i)) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(450,0)] *)
axiom a1533_asm: (forall v_i:top. ((not (v_TLSInfo__HonestMS_p (v_Tuples__Tup7__5 v_i))) -> (not (v_TLSInfo__SafeKDF_p v_i))))
(* declaring type TLSInfo.StrongAuthId [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(456,0)] *)
predicate v_TLSInfo__StrongAuthId_p (x1:top)
(* assume (!id. TLSInfo.StrongAuthId(id) <=> TLSConstants.INT_CMA_M(TLSInfo.MacAlg (id))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(457,0)] *)
axiom a1534_asm: (forall v_id:top. ((v_TLSInfo__StrongAuthId_p v_id) <-> (v_TLSConstants__INT_CMA_M_p (v_TLSInfo__MacAlg v_id))))
(* declaring type TLSInfo.StrongAEId [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(460,0)] *)
predicate v_TLSInfo__StrongAEId_p (x1:top)
(* assume (!id. TLSInfo.StrongAEId(id) <=> TLSConstants.StrongAEAlg(Tuples.Tup7.6 id, Tuples.Tup7.1 id)) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(461,0)] *)
axiom a1535_asm: (forall v_id:top. ((v_TLSInfo__StrongAEId_p v_id) <-> (v_TLSConstants__StrongAEAlg_p (v_Tuples__Tup7__6 v_id) (v_Tuples__Tup7__1 v_id))))
(* declaring type TLSInfo.AuthId [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(464,0)] *)
predicate v_TLSInfo__AuthId_p (x1:top)
(* declaring type TLSInfo.SafeId [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(465,0)] *)
predicate v_TLSInfo__SafeId_p (x1:top)
(* declaring value TLSInfo.authId [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(466,0)] *)
function v_TLSInfo__authId : top
(* declaring value TLSInfo.safeId [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(467,0)] *)
function v_TLSInfo__safeId : top
(* assume (!i. TLSInfo.AuthId(i) <=> TLSInfo.SafeKDF(i) /\ TLSInfo.StrongAuthId(i)) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(469,0)] *)
axiom a1536_asm: (forall v_i:top. ((v_TLSInfo__AuthId_p v_i) <-> ((v_TLSInfo__SafeKDF_p v_i) /\ (v_TLSInfo__StrongAuthId_p v_i))))
(* assume (!i. TLSInfo.SafeId(i) <=> TLSInfo.SafeKDF(i) /\ TLSInfo.StrongAEId(i)) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(470,0)] *)
axiom a1537_asm: (forall v_i:top. ((v_TLSInfo__SafeId_p v_i) <-> ((v_TLSInfo__SafeKDF_p v_i) /\ (v_TLSInfo__StrongAEId_p v_i))))
(* assume (!i. TLSInfo.SafeId(i) => TLSInfo.AuthId(i)) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(472,0)] *)
axiom a1538_asm: (forall v_i:top. ((v_TLSInfo__SafeId_p v_i) -> (v_TLSInfo__AuthId_p v_i)))
(* assume (!i. (!mac. Tuples.Tup7.1 i = TLSConstants.MACOnly (mac) => not TLSInfo.SafeId(i))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(473,0)] *)
axiom a1539_asm: (forall v_i:top. (forall v_mac:top. (((v_Tuples__Tup7__1 v_i) = (v_TLSConstants__MACOnly v_mac)) -> (not (v_TLSInfo__SafeId_p v_i)))))
(* assume (!i. TLSInfo.AuthId(i) => TLSInfo.Match(i)) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(475,0)] *)
axiom a1540_asm: (forall v_i:top. ((v_TLSInfo__AuthId_p v_i) -> (v_TLSInfo__Match_p v_i)))
(* assume (!i. TLSInfo.AuthId(i) => TLSInfo.SafeKDF(i)) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(476,0)] *)
axiom a1541_asm: (forall v_i:top. ((v_TLSInfo__AuthId_p v_i) -> (v_TLSInfo__SafeKDF_p v_i)))
(* assume (!i. TLSInfo.AuthId(i) => TLSInfo.StrongAuthId(i)) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(477,0)] *)
axiom a1542_asm: (forall v_i:top. ((v_TLSInfo__AuthId_p v_i) -> (v_TLSInfo__StrongAuthId_p v_i)))
(* assume (!i. TLSInfo.AuthId(i) => TLSConstants.INT_CMA_M(TLSInfo.MacAlg (i))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(478,0)] *)
axiom a1543_asm: (forall v_i:top. ((v_TLSInfo__AuthId_p v_i) -> (v_TLSConstants__INT_CMA_M_p (v_TLSInfo__MacAlg v_i))))
(* declaring value TLSInfo.noId [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(485,0)] *)
function v_TLSInfo__noId : top
(* assume not TLSInfo.AuthId(TLSInfo.noId) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(485,0)] *)
axiom a1544_asm: (not (v_TLSInfo__AuthId_p v_TLSInfo__noId))
(* assume not TLSInfo.AuthId(TLSInfo.noId) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(487,0)] *)
axiom a1545_asm: (not (v_TLSInfo__AuthId_p v_TLSInfo__noId))
(* declaring fun TLSInfo.Id [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(489,9)] *)
function v_TLSInfo__Id (x1:top) : top
(* declaring value TLSInfo.id [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(490,0)] *)
function v_TLSInfo__id : top
(* assume (!e. TLSInfo.IsInitEpoch(e) => TLSInfo.Id (e) = TLSInfo.noId) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(491,0)] *)
axiom a1546_asm: (forall v_e:top. ((v_TLSInfo__IsInitEpoch_p v_e) -> ((v_TLSInfo__Id v_e) = v_TLSInfo__noId)))
(* assume (!e. TLSInfo.IsSuccEpoch(e) => TLSInfo.Id (e) = (TLSInfo.SIaeAlg (TLSInfo.EpochSI (e)), TLSInfo.EpochCSRands (e), Tuples.Tup14.6 TLSInfo.EpochSI (e), TLSInfo.KdfAlg (TLSInfo.EpochSI (e)), TLSInfo.MsI (TLSInfo.EpochSI (e)), Tuples.Tup14.10 TLSInfo.EpochSI (e), TLSInfo.EpochWriter (e))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(492,0)] *)
axiom a1547_asm: (forall v_e:top. ((v_TLSInfo__IsSuccEpoch_p v_e) -> ((v_TLSInfo__Id v_e) = (v_Tuples__Tup7 (v_TLSInfo__SIaeAlg (v_TLSInfo__EpochSI v_e)) (v_TLSInfo__EpochCSRands v_e) (v_Tuples__Tup14__6 (v_TLSInfo__EpochSI v_e)) (v_TLSInfo__KdfAlg (v_TLSInfo__EpochSI v_e)) (v_TLSInfo__MsI (v_TLSInfo__EpochSI v_e)) (v_Tuples__Tup14__10 (v_TLSInfo__EpochSI v_e)) (v_TLSInfo__EpochWriter v_e)))))
(* assume (!e. TLSInfo.IsInitEpoch(e) => TLSInfo.Id (e) = TLSInfo.noId) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(501,0)] *)
axiom a1548_asm: (forall v_e:top. ((v_TLSInfo__IsInitEpoch_p v_e) -> ((v_TLSInfo__Id v_e) = v_TLSInfo__noId)))
(* assume (!e. TLSInfo.IsInitEpoch(e) => not TLSInfo.AuthId(TLSInfo.Id (e))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(502,0)] *)
axiom a1549_asm: (forall v_e:top. ((v_TLSInfo__IsInitEpoch_p v_e) -> (not (v_TLSInfo__AuthId_p (v_TLSInfo__Id v_e)))))
(* declaring value TLSInfo.unAuthIdInv [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(505,0)] *)
function v_TLSInfo__unAuthIdInv : top
(* declaring type TLSInfo.SafeHS_SI [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(513,0)] *)
predicate v_TLSInfo__SafeHS_SI_p (x1:top)
(* assume (!si. TLSInfo.SafeHS_SI(si) <=> TLSInfo.HonestPMS(Tuples.Tup14.9 si) /\ (?r. TLSInfo.Match(TLSInfo.SiId (si, r))) /\ TLSInfo.StrongHS(si)) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(514,0)] *)
axiom a1550_asm: (forall v_si:top. ((v_TLSInfo__SafeHS_SI_p v_si) <-> ((v_TLSInfo__HonestPMS_p (v_Tuples__Tup14__9 v_si)) /\ ((exists v_r:top. (v_TLSInfo__Match_p (v_TLSInfo__SiId v_si v_r))) /\ (v_TLSInfo__StrongHS_p v_si)))))
(* declaring value TLSInfo.safeHS_SI [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(515,0)] *)
function v_TLSInfo__safeHS_SI : top
(* declaring type TLSInfo.SafeHS [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(521,0)] *)
predicate v_TLSInfo__SafeHS_p (x1:top)
(* assume (!id. TLSInfo.SafeHS(id) <=> TLSInfo.SafeHS_SI(TLSInfo.EpochSI (id))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(522,0)] *)
axiom a1551_asm: (forall v_id:top. ((v_TLSInfo__SafeHS_p v_id) <-> (v_TLSInfo__SafeHS_SI_p (v_TLSInfo__EpochSI v_id))))
(* declaring value TLSInfo.safeHS [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(523,0)] *)
function v_TLSInfo__safeHS : top
(* declaring type TLSInfo.Open [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(527,0)] *)
predicate v_TLSInfo__Open_p (x1:top)
(* assume (!e. TLSInfo.Open(e) <=> (?r. r = TLSInfo.Client () \/ r = TLSInfo.Server () /\ TLSInfo.SentCCS(r, TLSInfo.EpochCRand (e), TLSInfo.EpochSRand (e), TLSInfo.EpochSI (e)) /\ TLSInfo.SentCCS(TLSInfo.DualRole (r), TLSInfo.EpochCRand (e), TLSInfo.EpochSRand (e), TLSInfo.EpochSI (e)))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(528,0)] *)
axiom a1552_asm: (forall v_e:top. ((v_TLSInfo__Open_p v_e) <-> (exists v_r:top. (((v_r = (v_TLSInfo__Client )) \/ (v_r = (v_TLSInfo__Server ))) /\ ((v_TLSInfo__SentCCS_p v_r (v_TLSInfo__EpochCRand v_e) (v_TLSInfo__EpochSRand v_e) (v_TLSInfo__EpochSI v_e)) /\ (v_TLSInfo__SentCCS_p (v_TLSInfo__DualRole v_r) (v_TLSInfo__EpochCRand v_e) (v_TLSInfo__EpochSRand v_e) (v_TLSInfo__EpochSI v_e)))))))
(* declaring type TLSInfo.OpenState [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(532,0)] *)
predicate v_TLSInfo__OpenState_p (x1:top)
(* assume (!e. TLSInfo.OpenState(e) <=> (?r. r = TLSInfo.Client () \/ r = TLSInfo.Server () /\ TLSInfo.SentCCS(r, TLSInfo.EpochCRand (e), TLSInfo.EpochSRand (e), TLSInfo.EpochSI (e)) /\ TLSInfo.SafeVD(TLSInfo.EpochSI (e)) => TLSInfo.SentCCS(TLSInfo.DualRole (r), TLSInfo.EpochCRand (e), TLSInfo.EpochSRand (e), TLSInfo.EpochSI (e)))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(533,0)] *)
axiom a1553_asm: (forall v_e:top. ((v_TLSInfo__OpenState_p v_e) <-> (exists v_r:top. (((v_r = (v_TLSInfo__Client )) \/ (v_r = (v_TLSInfo__Server ))) /\ ((v_TLSInfo__SentCCS_p v_r (v_TLSInfo__EpochCRand v_e) (v_TLSInfo__EpochSRand v_e) (v_TLSInfo__EpochSI v_e)) /\ ((v_TLSInfo__SafeVD_p (v_TLSInfo__EpochSI v_e)) -> (v_TLSInfo__SentCCS_p (v_TLSInfo__DualRole v_r) (v_TLSInfo__EpochCRand v_e) (v_TLSInfo__EpochSRand v_e) (v_TLSInfo__EpochSI v_e))))))))
(* declaring type TLSInfo.Safe [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(539,0)] *)
predicate v_TLSInfo__Safe_p (x1:top)
(* assume (!e. TLSInfo.Safe(e) <=> TLSInfo.SafeId(TLSInfo.Id (e)) /\ TLSInfo.OpenState(e)) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(540,0)] *)
axiom a1554_asm: (forall v_e:top. ((v_TLSInfo__Safe_p v_e) <-> ((v_TLSInfo__SafeId_p (v_TLSInfo__Id v_e)) /\ (v_TLSInfo__OpenState_p v_e))))
(* declaring value TLSInfo.safe [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(541,0)] *)
function v_TLSInfo__safe : top
(* declaring type TLSInfo.Auth [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(543,0)] *)
predicate v_TLSInfo__Auth_p (x1:top)
(* assume (!e. TLSInfo.Auth(e) <=> TLSInfo.AuthId(TLSInfo.Id (e)) /\ TLSInfo.OpenState(e)) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(544,0)] *)
axiom a1555_asm: (forall v_e:top. ((v_TLSInfo__Auth_p v_e) <-> ((v_TLSInfo__AuthId_p (v_TLSInfo__Id v_e)) /\ (v_TLSInfo__OpenState_p v_e))))
(* declaring value TLSInfo.auth [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(545,0)] *)
function v_TLSInfo__auth : top
(* assume (!e. TLSInfo.Safe(e) => TLSInfo.Auth(e)) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(547,0)] *)
axiom a1556_asm: (forall v_e:top. ((v_TLSInfo__Safe_p v_e) -> (v_TLSInfo__Auth_p v_e)))
(* assume (!e. not TLSInfo.Auth(e) => not TLSInfo.Safe(e)) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(548,0)] *)
axiom a1557_asm: (forall v_e:top. ((not (v_TLSInfo__Auth_p v_e)) -> (not (v_TLSInfo__Safe_p v_e))))
(* assume (!e. TLSInfo.IsInitEpoch(e) => not TLSInfo.Auth(e)) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(551,0)] *)
axiom a1558_asm: (forall v_e:top. ((v_TLSInfo__IsInitEpoch_p v_e) -> (not (v_TLSInfo__Auth_p v_e))))
(* assume (!e. TLSInfo.OpenState(e) => TLSInfo.AuthId(TLSInfo.Id (e)) => TLSInfo.Auth(e)) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(553,0)] *)
axiom a1559_asm: (forall v_e:top. ((v_TLSInfo__OpenState_p v_e) -> ((v_TLSInfo__AuthId_p (v_TLSInfo__Id v_e)) -> (v_TLSInfo__Auth_p v_e))))
(* assume (!e. TLSInfo.OpenState(e) => TLSInfo.SafeId(TLSInfo.Id (e)) => TLSInfo.Safe(e)) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(554,0)] *)
axiom a1560_asm: (forall v_e:top. ((v_TLSInfo__OpenState_p v_e) -> ((v_TLSInfo__SafeId_p (v_TLSInfo__Id v_e)) -> (v_TLSInfo__Safe_p v_e))))
(* assume (!e. TLSInfo.Auth(e) => TLSInfo.OpenState(e)) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(555,0)] *)
axiom a1561_asm: (forall v_e:top. ((v_TLSInfo__Auth_p v_e) -> (v_TLSInfo__OpenState_p v_e)))
(* assume (!e. (!e'. TLSInfo.OpenState(e) /\ TLSInfo.OpenState(e') /\ TLSInfo.Id (e) = TLSInfo.Id (e') => e = e')) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(563,0)] *)
axiom a1562_asm: (forall v_e:top. (forall v_e':top. (((v_TLSInfo__OpenState_p v_e) /\ ((v_TLSInfo__OpenState_p v_e') /\ ((v_TLSInfo__Id v_e) = (v_TLSInfo__Id v_e')))) -> (v_e = v_e'))))
(* declaring value TLSInfo.sinfo_to_string [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(565,0)] *)
function v_TLSInfo__sinfo_to_string : top
(* declaring value TLSInfo.max_TLSPlaintext_fragment_length [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(568,8)] *)
function v_TLSInfo__max_TLSPlaintext_fragment_length : top
(* declaring value TLSInfo.max_TLSCompressed_fragment_length [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(569,8)] *)
function v_TLSInfo__max_TLSCompressed_fragment_length : top
(* declaring value TLSInfo.max_TLSCipher_fragment_length [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(570,0)] *)
function v_TLSInfo__max_TLSCipher_fragment_length : top
(* declaring value TLSInfo.fragmentLength [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSInfo.fs7(571,0)] *)
function v_TLSInfo__fragmentLength : top
(* declaring value TLSExtensions.clientExtensionsBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSExtensions.fs7(19,0)] *)
function v_TLSExtensions__clientExtensionsBytes : top
(* declaring value TLSExtensions.prepareClientExtensions [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSExtensions.fs7(20,0)] *)
function v_TLSExtensions__prepareClientExtensions : top
(* declaring value TLSExtensions.parseServerExtensions [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSExtensions.fs7(21,0)] *)
function v_TLSExtensions__parseServerExtensions : top
(* declaring value TLSExtensions.negotiateClientExtensions [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSExtensions.fs7(22,0)] *)
function v_TLSExtensions__negotiateClientExtensions : top
(* declaring value TLSExtensions.serverExtensionsBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSExtensions.fs7(25,0)] *)
function v_TLSExtensions__serverExtensionsBytes : top
(* declaring value TLSExtensions.negotiateServerExtensions [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSExtensions.fs7(26,0)] *)
function v_TLSExtensions__negotiateServerExtensions : top
(* declaring value TLSExtensions.parseClientExtensions [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSExtensions.fs7(27,0)] *)
function v_TLSExtensions__parseClientExtensions : top
(* declaring value TLSExtensions.checkClientRenegotiationInfoExtension [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSExtensions.fs7(34,0)] *)
function v_TLSExtensions__checkClientRenegotiationInfoExtension : top
(* declaring value TLSExtensions.checkServerRenegotiationInfoExtension [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSExtensions.fs7(35,0)] *)
function v_TLSExtensions__checkServerRenegotiationInfoExtension : top
(* declaring value TLSExtensions.checkClientResumptionInfoExtension [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSExtensions.fs7(39,0)] *)
function v_TLSExtensions__checkClientResumptionInfoExtension : top
(* declaring value TLSExtensions.checkServerResumptionInfoExtension [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSExtensions.fs7(40,0)] *)
function v_TLSExtensions__checkServerResumptionInfoExtension : top
(* declaring value TLSExtensions.hasExtendedMS [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSExtensions.fs7(42,0)] *)
function v_TLSExtensions__hasExtendedMS : top
(* declaring type TLSExtensions.HasExtendedPadding [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSExtensions.fs7(44,0)] *)
predicate v_TLSExtensions__HasExtendedPadding_p (x1:top)
(* declaring value TLSExtensions.hasExtendedPadding [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSExtensions.fs7(45,0)] *)
function v_TLSExtensions__hasExtendedPadding : top
(* declaring fun TLSExtensions.SigHashAlgBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSExtensions.fs7(103,9)] *)
function v_TLSExtensions__SigHashAlgBytes (x1:top) : top
(* declaring value TLSExtensions.sigHashAlgBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSExtensions.fs7(106,0)] *)
function v_TLSExtensions__sigHashAlgBytes : top
(* declaring value TLSExtensions.parseSigHashAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSExtensions.fs7(107,0)] *)
function v_TLSExtensions__parseSigHashAlg : top
(* declaring fun TLSExtensions.SigHashAlgsBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSExtensions.fs7(109,9)] *)
function v_TLSExtensions__SigHashAlgsBytes (x1:top) : top
(* declaring value TLSExtensions.sigHashAlgListBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSExtensions.fs7(110,0)] *)
function v_TLSExtensions__sigHashAlgListBytes : top
(* declaring value TLSExtensions.parseSigHashAlgList [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSExtensions.fs7(111,0)] *)
function v_TLSExtensions__parseSigHashAlgList : top
(* declaring fun TLSExtensions.DefaultSigHashAlgs [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSExtensions.fs7(113,9)] *)
function v_TLSExtensions__DefaultSigHashAlgs (x1:top) (x2:top) : top
(* declaring value TLSExtensions.default_sigHashAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSExtensions.fs7(114,0)] *)
function v_TLSExtensions__default_sigHashAlg : top
(* declaring value TLSExtensions.sigHashAlg_contains [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSExtensions.fs7(116,0)] *)
function v_TLSExtensions__sigHashAlg_contains : top
(* declaring value TLSExtensions.cert_type_list_to_SigHashAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSExtensions.fs7(117,0)] *)
function v_TLSExtensions__cert_type_list_to_SigHashAlg : top
(* declaring value TLSExtensions.cert_type_list_to_SigAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSExtensions.fs7(118,0)] *)
function v_TLSExtensions__cert_type_list_to_SigAlg : top
(* declaring value TLSExtensions.sigHashAlg_bySigList [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSExtensions.fs7(119,0)] *)
function v_TLSExtensions__sigHashAlg_bySigList : top
(* declaring value TLSPRF.verifyData [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSPRF.fs7(10,0)] *)
function v_TLSPRF__verifyData : top
(* declaring value TLSPRF.extract [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSPRF.fs7(11,0)] *)
function v_TLSPRF__extract : top
(* declaring value TLSPRF.kdf [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSPRF.fs7(12,0)] *)
function v_TLSPRF__kdf : top
(* declaring value TLSPRF.ssl_verifyCertificate [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSPRF.fs7(16,0)] *)
function v_TLSPRF__ssl_verifyCertificate : top
(* declaring fun Range.Sum [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(17,9)] *)
function v_Range__Sum (x1:top) (x2:top) : top
(* assume (!l0. (!h0. (!l1. (!h1. Range.Sum ((l0, h0), (l1, h1)) = (bop_Addition (l0, l1), bop_Addition (h0, h1)))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(18,0)] *)
axiom a1563_asm: (forall v_l0:top. (forall v_h0:top. (forall v_l1:top. (forall v_h1:top. ((v_Range__Sum (v_Tuples__Tup2 v_l0 v_h0) (v_Tuples__Tup2 v_l1 v_h1)) = (v_Tuples__Tup2 (v_l0 + v_l1) (v_h0 + v_h1)))))))
(* declaring value Range.sum [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(19,0)] *)
function v_Range__sum : top
(* declaring type Range.SubRange [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(21,0)] *)
predicate v_Range__SubRange_p (x1:top) (x2:top)
(* assume (!l0. (!l1. (!h0. (!h1. Range.SubRange((l0, h0), (l1, h1)) <=> pr_LessThanOrEqual(l1, l0) /\ pr_LessThanOrEqual(h0, h1))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(22,0)] *)
axiom a1564_asm: (forall v_l0:top. (forall v_l1:top. (forall v_h0:top. (forall v_h1:top. ((v_Range__SubRange_p (v_Tuples__Tup2 v_l0 v_h0) (v_Tuples__Tup2 v_l1 v_h1)) <-> ((v_l1 <= v_l0) /\ (v_h0 <= v_h1)))))))
(* declaring fun Range.IVSize [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(27,9)] *)
function v_Range__IVSize (x1:top) : top
(* assume (!i. (!mac. Tuples.Tup7.1 i = TLSConstants.MACOnly (mac) => Range.IVSize (i) = 0)) /\ (!i. (!mac. Tuples.Tup7.1 i = TLSConstants.MtE (TLSConstants.Stream_RC4_128 (), mac) => Range.IVSize (i) = 0)) /\ (!i. (!mac. (!alg. Tuples.Tup7.1 i = TLSConstants.MtE (TLSConstants.CBC_Stale (alg), mac) => Range.IVSize (i) = 0))) /\ (!i. (!mac. (!alg. Tuples.Tup7.1 i = TLSConstants.MtE (TLSConstants.CBC_Fresh (alg), mac) => Range.IVSize (i) = TLSConstants.BlockSize (alg)))) /\ (!i. (!aealg. (!macalg. Tuples.Tup7.1 i = TLSConstants.AEAD (aealg, macalg) => Range.IVSize (i) = 0))) [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(28,0)] *)
axiom a1565_asm: ((forall v_i:top. (forall v_mac:top. (((v_Tuples__Tup7__1 v_i) = (v_TLSConstants__MACOnly v_mac)) -> ((v_Range__IVSize v_i) = 0)))) /\ ((forall v_i:top. (forall v_mac:top. (((v_Tuples__Tup7__1 v_i) = (v_TLSConstants__MtE (v_TLSConstants__Stream_RC4_128 ) v_mac)) -> ((v_Range__IVSize v_i) = 0)))) /\ ((forall v_i:top. (forall v_mac:top. (forall v_alg:top. (((v_Tuples__Tup7__1 v_i) = (v_TLSConstants__MtE (v_TLSConstants__CBC_Stale v_alg) v_mac)) -> ((v_Range__IVSize v_i) = 0))))) /\ ((forall v_i:top. (forall v_mac:top. (forall v_alg:top. (((v_Tuples__Tup7__1 v_i) = (v_TLSConstants__MtE (v_TLSConstants__CBC_Fresh v_alg) v_mac)) -> ((v_Range__IVSize v_i) = (v_TLSConstants__BlockSize v_alg)))))) /\ (forall v_i:top. (forall v_aealg:top. (forall v_macalg:top. (((v_Tuples__Tup7__1 v_i) = (v_TLSConstants__AEAD v_aealg v_macalg)) -> ((v_Range__IVSize v_i) = 0)))))))))
(* declaring value Range.ivSize [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(34,0)] *)
function v_Range__ivSize : top
(* assume (!i. (?mac. Tuples.Tup7.1 i = TLSConstants.MACOnly (mac) \/ Tuples.Tup7.1 i = TLSConstants.MtE (TLSConstants.Stream_RC4_128 (), mac)) => Range.IVSize (i) = 0) [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(37,0)] *)
axiom a1566_asm: (forall v_i:top. ((exists v_mac:top. (((v_Tuples__Tup7__1 v_i) = (v_TLSConstants__MACOnly v_mac)) \/ ((v_Tuples__Tup7__1 v_i) = (v_TLSConstants__MtE (v_TLSConstants__Stream_RC4_128 ) v_mac)))) -> ((v_Range__IVSize v_i) = 0)))
(* declaring fun Range.FixedPadSize [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(40,9)] *)
function v_Range__FixedPadSize (x1:top) (x2:top) : top
(* assume (!i. (!mac. Tuples.Tup7.1 i = TLSConstants.MACOnly (mac) => Range.FixedPadSize (i, ()) = 0)) /\ (!i. (!aeAlg. (!mac. Tuples.Tup7.1 i = TLSConstants.AEAD (aeAlg, mac) => Range.FixedPadSize (i, ()) = 0))) /\ (!i. (!mac. Tuples.Tup7.1 i = TLSConstants.MtE (TLSConstants.Stream_RC4_128 (), mac) => Range.FixedPadSize (i, ()) = 0)) /\ (!i. (!alg. (!mac. Tuples.Tup7.1 i = TLSConstants.MtE (TLSConstants.CBC_Stale (alg), mac) => Range.FixedPadSize (i, ()) = 1))) /\ (!i. (!alg. (!mac. Tuples.Tup7.1 i = TLSConstants.MtE (TLSConstants.CBC_Fresh (alg), mac) => Range.FixedPadSize (i, ()) = 1))) [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(41,0)] *)
axiom a1567_asm: ((forall v_i:top. (forall v_mac:top. (((v_Tuples__Tup7__1 v_i) = (v_TLSConstants__MACOnly v_mac)) -> ((v_Range__FixedPadSize v_i (v_Tuples__Tup0 )) = 0)))) /\ ((forall v_i:top. (forall v_aeAlg:top. (forall v_mac:top. (((v_Tuples__Tup7__1 v_i) = (v_TLSConstants__AEAD v_aeAlg v_mac)) -> ((v_Range__FixedPadSize v_i (v_Tuples__Tup0 )) = 0))))) /\ ((forall v_i:top. (forall v_mac:top. (((v_Tuples__Tup7__1 v_i) = (v_TLSConstants__MtE (v_TLSConstants__Stream_RC4_128 ) v_mac)) -> ((v_Range__FixedPadSize v_i (v_Tuples__Tup0 )) = 0)))) /\ ((forall v_i:top. (forall v_alg:top. (forall v_mac:top. (((v_Tuples__Tup7__1 v_i) = (v_TLSConstants__MtE (v_TLSConstants__CBC_Stale v_alg) v_mac)) -> ((v_Range__FixedPadSize v_i (v_Tuples__Tup0 )) = 1))))) /\ (forall v_i:top. (forall v_alg:top. (forall v_mac:top. (((v_Tuples__Tup7__1 v_i) = (v_TLSConstants__MtE (v_TLSConstants__CBC_Fresh v_alg) v_mac)) -> ((v_Range__FixedPadSize v_i (v_Tuples__Tup0 )) = 1)))))))))
(* declaring value Range.fixedPadSize [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(55,0)] *)
function v_Range__fixedPadSize : top
(* declaring fun Range.MaxPadSize [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(57,9)] *)
function v_Range__MaxPadSize (x1:top) (x2:top) : top
(* assume (!i. (!mac. Tuples.Tup7.1 i = TLSConstants.MACOnly (mac) => Range.MaxPadSize (i, ()) = 0)) /\ (!i. (!aeAlg. (!mac. Tuples.Tup7.1 i = TLSConstants.AEAD (aeAlg, mac) => Range.MaxPadSize (i, ()) = 0))) /\ (!i. (!mac. Tuples.Tup7.1 i = TLSConstants.MtE (TLSConstants.Stream_RC4_128 (), mac) => Range.MaxPadSize (i, ()) = 0)) /\ (!i. (!alg. (!mac. Tuples.Tup7.1 i = TLSConstants.MtE (TLSConstants.CBC_Fresh (alg), mac) /\ TLSInfo.PvOfId (i) = TLSConstants.TLS_1p0 () \/ TLSInfo.PvOfId (i) = TLSConstants.TLS_1p1 () \/ TLSInfo.PvOfId (i) = TLSConstants.TLS_1p2 () => Range.MaxPadSize (i, ()) = 256))) /\ (!i. (!alg. (!mac. Tuples.Tup7.1 i = TLSConstants.MtE (TLSConstants.CBC_Stale (alg), mac) /\ TLSInfo.PvOfId (i) = TLSConstants.TLS_1p0 () \/ TLSInfo.PvOfId (i) = TLSConstants.TLS_1p1 () \/ TLSInfo.PvOfId (i) = TLSConstants.TLS_1p2 () => Range.MaxPadSize (i, ()) = 256))) /\ (!i. (!alg. (!mac. Tuples.Tup7.1 i = TLSConstants.MtE (TLSConstants.CBC_Fresh (alg), mac) /\ TLSInfo.PvOfId (i) = TLSConstants.SSL_3p0 () => Range.MaxPadSize (i, ()) = TLSConstants.BlockSize (alg)))) /\ (!i. (!alg. (!mac. Tuples.Tup7.1 i = TLSConstants.MtE (TLSConstants.CBC_Stale (alg), mac) /\ TLSInfo.PvOfId (i) = TLSConstants.SSL_3p0 () => Range.MaxPadSize (i, ()) = TLSConstants.BlockSize (alg)))) [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(58,0)] *)
axiom a1568_asm: ((forall v_i:top. (forall v_mac:top. (((v_Tuples__Tup7__1 v_i) = (v_TLSConstants__MACOnly v_mac)) -> ((v_Range__MaxPadSize v_i (v_Tuples__Tup0 )) = 0)))) /\ ((forall v_i:top. (forall v_aeAlg:top. (forall v_mac:top. (((v_Tuples__Tup7__1 v_i) = (v_TLSConstants__AEAD v_aeAlg v_mac)) -> ((v_Range__MaxPadSize v_i (v_Tuples__Tup0 )) = 0))))) /\ ((forall v_i:top. (forall v_mac:top. (((v_Tuples__Tup7__1 v_i) = (v_TLSConstants__MtE (v_TLSConstants__Stream_RC4_128 ) v_mac)) -> ((v_Range__MaxPadSize v_i (v_Tuples__Tup0 )) = 0)))) /\ ((forall v_i:top. (forall v_alg:top. (forall v_mac:top. ((((v_Tuples__Tup7__1 v_i) = (v_TLSConstants__MtE (v_TLSConstants__CBC_Fresh v_alg) v_mac)) /\ (((v_TLSInfo__PvOfId v_i) = (v_TLSConstants__TLS_1p0 )) \/ (((v_TLSInfo__PvOfId v_i) = (v_TLSConstants__TLS_1p1 )) \/ ((v_TLSInfo__PvOfId v_i) = (v_TLSConstants__TLS_1p2 ))))) -> ((v_Range__MaxPadSize v_i (v_Tuples__Tup0 )) = 256))))) /\ ((forall v_i:top. (forall v_alg:top. (forall v_mac:top. ((((v_Tuples__Tup7__1 v_i) = (v_TLSConstants__MtE (v_TLSConstants__CBC_Stale v_alg) v_mac)) /\ (((v_TLSInfo__PvOfId v_i) = (v_TLSConstants__TLS_1p0 )) \/ (((v_TLSInfo__PvOfId v_i) = (v_TLSConstants__TLS_1p1 )) \/ ((v_TLSInfo__PvOfId v_i) = (v_TLSConstants__TLS_1p2 ))))) -> ((v_Range__MaxPadSize v_i (v_Tuples__Tup0 )) = 256))))) /\ ((forall v_i:top. (forall v_alg:top. (forall v_mac:top. ((((v_Tuples__Tup7__1 v_i) = (v_TLSConstants__MtE (v_TLSConstants__CBC_Fresh v_alg) v_mac)) /\ ((v_TLSInfo__PvOfId v_i) = (v_TLSConstants__SSL_3p0 ))) -> ((v_Range__MaxPadSize v_i (v_Tuples__Tup0 )) = (v_TLSConstants__BlockSize v_alg)))))) /\ (forall v_i:top. (forall v_alg:top. (forall v_mac:top. ((((v_Tuples__Tup7__1 v_i) = (v_TLSConstants__MtE (v_TLSConstants__CBC_Stale v_alg) v_mac)) /\ ((v_TLSInfo__PvOfId v_i) = (v_TLSConstants__SSL_3p0 ))) -> ((v_Range__MaxPadSize v_i (v_Tuples__Tup0 )) = (v_TLSConstants__BlockSize v_alg))))))))))))
(* declaring value Range.maxPadSize [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(83,0)] *)
function v_Range__maxPadSize : top
(* declaring type Range.RangeFragment [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(87,0)] *)
predicate v_Range__RangeFragment_p (x1:top) (x2:top)
(* assume (!i. (!l. (!h. Range.RangeFragment(i, (l, h)) <=> pr_LessThanOrEqual(h, TLSInfo.fragmentLength)))) [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(88,0)] *)
axiom a1569_asm: (forall v_i:top. (forall v_l:top. (forall v_h:top. ((v_Range__RangeFragment_p v_i (v_Tuples__Tup2 v_l v_h)) <-> (v_h <= v_TLSInfo__fragmentLength)))))
(* declaring fun Range.MinimalPadding [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(95,9)] *)
function v_Range__MinimalPadding (x1:top) (x2:top) : top
(* assume (!e. (!alg. (!mac. (!l. pr_GreaterThanOrEqual(l, 0) /\ Tuples.Tup7.1 e = TLSConstants.MtE (TLSConstants.CBC_Fresh (alg), mac) \/ Tuples.Tup7.1 e = TLSConstants.MtE (TLSConstants.CBC_Stale (alg), mac) => pr_GreaterThan(Range.MinimalPadding (e, l), 0) /\ pr_LessThanOrEqual(Range.MinimalPadding (e, l), TLSConstants.BlockSize (alg)))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(104,0)] *)
axiom a1570_asm: (forall v_e:top. (forall v_alg:top. (forall v_mac:top. (forall v_l:top. (((v_l >= 0) /\ (((v_Tuples__Tup7__1 v_e) = (v_TLSConstants__MtE (v_TLSConstants__CBC_Fresh v_alg) v_mac)) \/ ((v_Tuples__Tup7__1 v_e) = (v_TLSConstants__MtE (v_TLSConstants__CBC_Stale v_alg) v_mac)))) -> (((v_Range__MinimalPadding v_e v_l) > 0) /\ ((v_Range__MinimalPadding v_e v_l) <= (v_TLSConstants__BlockSize v_alg))))))))
(* declaring value Range.minimalPadding [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(108,8)] *)
function v_Range__minimalPadding : top
(* declaring fun Range.TargetLength [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(113,9)] *)
function v_Range__TargetLength (x1:top) (x2:top) : top
(* assume (!e. (!l. (!h. (!mac. pr_GreaterThanOrEqual(h, 0) /\ Tuples.Tup7.1 e = TLSConstants.MACOnly (mac) => Range.TargetLength (e, (l, h)) = bop_Addition (bop_Addition (bop_Addition (Range.IVSize (e), h), TLSConstants.MacKeySize (TLSInfo.MacAlg (e))), Range.MinimalPadding (e, bop_Addition (h, TLSConstants.MacKeySize (TLSInfo.MacAlg (e))))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(115,0)] *)
axiom a1571_asm: (forall v_e:top. (forall v_l:top. (forall v_h:top. (forall v_mac:top. (((v_h >= 0) /\ ((v_Tuples__Tup7__1 v_e) = (v_TLSConstants__MACOnly v_mac))) -> ((v_Range__TargetLength v_e (v_Tuples__Tup2 v_l v_h)) = ((((v_Range__IVSize v_e) + v_h) + (v_TLSConstants__MacKeySize (v_TLSInfo__MacAlg v_e))) + (v_Range__MinimalPadding v_e (v_h + (v_TLSConstants__MacKeySize (v_TLSInfo__MacAlg v_e)))))))))))
(* assume (!e. (!l. (!h. (!mac. (!alg. pr_GreaterThanOrEqual(h, 0) /\ Tuples.Tup7.1 e = TLSConstants.MtE (TLSConstants.CBC_Fresh (alg), mac) => Range.TargetLength (e, (l, h)) = bop_Addition (bop_Addition (bop_Addition (Range.IVSize (e), h), TLSConstants.MacKeySize (TLSInfo.MacAlg (e))), Range.MinimalPadding (e, bop_Addition (h, TLSConstants.MacKeySize (TLSInfo.MacAlg (e)))))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(120,0)] *)
axiom a1572_asm: (forall v_e:top. (forall v_l:top. (forall v_h:top. (forall v_mac:top. (forall v_alg:top. (((v_h >= 0) /\ ((v_Tuples__Tup7__1 v_e) = (v_TLSConstants__MtE (v_TLSConstants__CBC_Fresh v_alg) v_mac))) -> ((v_Range__TargetLength v_e (v_Tuples__Tup2 v_l v_h)) = ((((v_Range__IVSize v_e) + v_h) + (v_TLSConstants__MacKeySize (v_TLSInfo__MacAlg v_e))) + (v_Range__MinimalPadding v_e (v_h + (v_TLSConstants__MacKeySize (v_TLSInfo__MacAlg v_e))))))))))))
(* assume (!e. (!l. (!h. (!mac. (!alg. pr_GreaterThanOrEqual(h, 0) /\ Tuples.Tup7.1 e = TLSConstants.MtE (TLSConstants.CBC_Stale (alg), mac) => Range.TargetLength (e, (l, h)) = bop_Addition (bop_Addition (bop_Addition (Range.IVSize (e), h), TLSConstants.MacKeySize (TLSInfo.MacAlg (e))), Range.MinimalPadding (e, bop_Addition (h, TLSConstants.MacKeySize (TLSInfo.MacAlg (e)))))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(125,0)] *)
axiom a1573_asm: (forall v_e:top. (forall v_l:top. (forall v_h:top. (forall v_mac:top. (forall v_alg:top. (((v_h >= 0) /\ ((v_Tuples__Tup7__1 v_e) = (v_TLSConstants__MtE (v_TLSConstants__CBC_Stale v_alg) v_mac))) -> ((v_Range__TargetLength v_e (v_Tuples__Tup2 v_l v_h)) = ((((v_Range__IVSize v_e) + v_h) + (v_TLSConstants__MacKeySize (v_TLSInfo__MacAlg v_e))) + (v_Range__MinimalPadding v_e (v_h + (v_TLSConstants__MacKeySize (v_TLSInfo__MacAlg v_e))))))))))))
(* assume (!e. (!l. (!h. (!mac. (!alg. pr_GreaterThanOrEqual(h, 0) /\ Tuples.Tup7.1 e = TLSConstants.MtE (TLSConstants.Stream_RC4_128 (), mac) => Range.TargetLength (e, (l, h)) = bop_Addition (bop_Addition (bop_Addition (Range.IVSize (e), h), TLSConstants.MacKeySize (TLSInfo.MacAlg (e))), Range.MinimalPadding (e, bop_Addition (h, TLSConstants.MacKeySize (TLSInfo.MacAlg (e)))))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(130,0)] *)
axiom a1574_asm: (forall v_e:top. (forall v_l:top. (forall v_h:top. (forall v_mac:top. (forall v_alg:top. (((v_h >= 0) /\ ((v_Tuples__Tup7__1 v_e) = (v_TLSConstants__MtE (v_TLSConstants__Stream_RC4_128 ) v_mac))) -> ((v_Range__TargetLength v_e (v_Tuples__Tup2 v_l v_h)) = ((((v_Range__IVSize v_e) + v_h) + (v_TLSConstants__MacKeySize (v_TLSInfo__MacAlg v_e))) + (v_Range__MinimalPadding v_e (v_h + (v_TLSConstants__MacKeySize (v_TLSInfo__MacAlg v_e))))))))))))
(* assume (!e. (!l. (!h. (!mac. (!aeAlg. pr_GreaterThanOrEqual(h, 0) /\ Tuples.Tup7.1 e = TLSConstants.AEAD (aeAlg, mac) => Range.TargetLength (e, (l, h)) = bop_Addition (bop_Addition (TLSConstants.AEADRecordIVSize (aeAlg), h), TLSConstants.AEADTagSize (aeAlg))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(135,0)] *)
axiom a1575_asm: (forall v_e:top. (forall v_l:top. (forall v_h:top. (forall v_mac:top. (forall v_aeAlg:top. (((v_h >= 0) /\ ((v_Tuples__Tup7__1 v_e) = (v_TLSConstants__AEAD v_aeAlg v_mac))) -> ((v_Range__TargetLength v_e (v_Tuples__Tup2 v_l v_h)) = (((v_TLSConstants__AEADRecordIVSize v_aeAlg) + v_h) + (v_TLSConstants__AEADTagSize v_aeAlg)))))))))
(* declaring value Range.targetLength [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(140,0)] *)
function v_Range__targetLength : top
(* assume (!e. (!l. (!h. (!mac. pr_GreaterThanOrEqual(h, 0) /\ Tuples.Tup7.1 e = TLSConstants.MACOnly (mac) => pr_GreaterThanOrEqual(Range.TargetLength (e, (l, h)), 0))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(143,0)] *)
axiom a1576_asm: (forall v_e:top. (forall v_l:top. (forall v_h:top. (forall v_mac:top. (((v_h >= 0) /\ ((v_Tuples__Tup7__1 v_e) = (v_TLSConstants__MACOnly v_mac))) -> ((v_Range__TargetLength v_e (v_Tuples__Tup2 v_l v_h)) >= 0))))))
(* assume (!e. (!l. (!h. (!mac. (!alg. pr_GreaterThanOrEqual(h, 0) /\ Tuples.Tup7.1 e = TLSConstants.MtE (TLSConstants.CBC_Stale (alg), mac) => pr_GreaterThanOrEqual(Range.TargetLength (e, (l, h)), TLSConstants.BlockSize (alg))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(146,0)] *)
axiom a1577_asm: (forall v_e:top. (forall v_l:top. (forall v_h:top. (forall v_mac:top. (forall v_alg:top. (((v_h >= 0) /\ ((v_Tuples__Tup7__1 v_e) = (v_TLSConstants__MtE (v_TLSConstants__CBC_Stale v_alg) v_mac))) -> ((v_Range__TargetLength v_e (v_Tuples__Tup2 v_l v_h)) >= (v_TLSConstants__BlockSize v_alg))))))))
(* declaring fun Range.CipherRangeClass [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(153,9)] *)
function v_Range__CipherRangeClass (x1:top) (x2:top) : top
(* assume (!e. (!tlen. (!alg. (!mac. Tuples.Tup7.1 e = TLSConstants.MtE (TLSConstants.CBC_Fresh (alg), mac) /\ pr_GreaterThanOrEqual(bop_Subtraction (bop_Subtraction (bop_Subtraction (tlen, Range.IVSize (e)), TLSConstants.MacKeySize (mac)), Range.FixedPadSize (e, ())), 0) /\ pr_LessThan(bop_Subtraction (bop_Subtraction (bop_Subtraction (tlen, Range.IVSize (e)), TLSConstants.MacKeySize (mac)), Range.MaxPadSize (e, ())), 0) => Range.CipherRangeClass (e, tlen) = (0, bop_Subtraction (bop_Subtraction (bop_Subtraction (tlen, Range.IVSize (e)), TLSConstants.MacKeySize (mac)), Range.FixedPadSize (e, ()))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(155,0)] *)
axiom a1578_asm: (forall v_e:top. (forall v_tlen:top. (forall v_alg:top. (forall v_mac:top. ((((v_Tuples__Tup7__1 v_e) = (v_TLSConstants__MtE (v_TLSConstants__CBC_Fresh v_alg) v_mac)) /\ (((((v_tlen - (v_Range__IVSize v_e)) - (v_TLSConstants__MacKeySize v_mac)) - (v_Range__FixedPadSize v_e (v_Tuples__Tup0 ))) >= 0) /\ ((((v_tlen - (v_Range__IVSize v_e)) - (v_TLSConstants__MacKeySize v_mac)) - (v_Range__MaxPadSize v_e (v_Tuples__Tup0 ))) < 0))) -> ((v_Range__CipherRangeClass v_e v_tlen) = (v_Tuples__Tup2 0 (((v_tlen - (v_Range__IVSize v_e)) - (v_TLSConstants__MacKeySize v_mac)) - (v_Range__FixedPadSize v_e (v_Tuples__Tup0 ))))))))))
(* assume (!e. (!tlen. (!alg. (!mac. Tuples.Tup7.1 e = TLSConstants.MtE (TLSConstants.CBC_Fresh (alg), mac) /\ pr_GreaterThanOrEqual(bop_Subtraction (bop_Subtraction (bop_Subtraction (tlen, Range.IVSize (e)), TLSConstants.MacKeySize (mac)), Range.FixedPadSize (e, ())), 0) /\ pr_GreaterThanOrEqual(bop_Subtraction (bop_Subtraction (bop_Subtraction (tlen, Range.IVSize (e)), TLSConstants.MacKeySize (mac)), Range.MaxPadSize (e, ())), 0) => Range.CipherRangeClass (e, tlen) = (bop_Subtraction (bop_Subtraction (bop_Subtraction (tlen, Range.IVSize (e)), TLSConstants.MacKeySize (mac)), Range.MaxPadSize (e, ())), bop_Subtraction (bop_Subtraction (bop_Subtraction (tlen, Range.IVSize (e)), TLSConstants.MacKeySize (mac)), Range.FixedPadSize (e, ()))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(161,0)] *)
axiom a1579_asm: (forall v_e:top. (forall v_tlen:top. (forall v_alg:top. (forall v_mac:top. ((((v_Tuples__Tup7__1 v_e) = (v_TLSConstants__MtE (v_TLSConstants__CBC_Fresh v_alg) v_mac)) /\ (((((v_tlen - (v_Range__IVSize v_e)) - (v_TLSConstants__MacKeySize v_mac)) - (v_Range__FixedPadSize v_e (v_Tuples__Tup0 ))) >= 0) /\ ((((v_tlen - (v_Range__IVSize v_e)) - (v_TLSConstants__MacKeySize v_mac)) - (v_Range__MaxPadSize v_e (v_Tuples__Tup0 ))) >= 0))) -> ((v_Range__CipherRangeClass v_e v_tlen) = (v_Tuples__Tup2 (((v_tlen - (v_Range__IVSize v_e)) - (v_TLSConstants__MacKeySize v_mac)) - (v_Range__MaxPadSize v_e (v_Tuples__Tup0 ))) (((v_tlen - (v_Range__IVSize v_e)) - (v_TLSConstants__MacKeySize v_mac)) - (v_Range__FixedPadSize v_e (v_Tuples__Tup0 ))))))))))
(* assume (!e. (!tlen. (!alg. (!mac. Tuples.Tup7.1 e = TLSConstants.MtE (TLSConstants.CBC_Stale (alg), mac) /\ pr_GreaterThanOrEqual(bop_Subtraction (bop_Subtraction (bop_Subtraction (tlen, Range.IVSize (e)), TLSConstants.MacKeySize (mac)), Range.FixedPadSize (e, ())), 0) /\ pr_LessThan(bop_Subtraction (bop_Subtraction (bop_Subtraction (tlen, Range.IVSize (e)), TLSConstants.MacKeySize (mac)), Range.MaxPadSize (e, ())), 0) => Range.CipherRangeClass (e, tlen) = (0, bop_Subtraction (bop_Subtraction (bop_Subtraction (tlen, Range.IVSize (e)), TLSConstants.MacKeySize (mac)), Range.FixedPadSize (e, ()))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(169,0)] *)
axiom a1580_asm: (forall v_e:top. (forall v_tlen:top. (forall v_alg:top. (forall v_mac:top. ((((v_Tuples__Tup7__1 v_e) = (v_TLSConstants__MtE (v_TLSConstants__CBC_Stale v_alg) v_mac)) /\ (((((v_tlen - (v_Range__IVSize v_e)) - (v_TLSConstants__MacKeySize v_mac)) - (v_Range__FixedPadSize v_e (v_Tuples__Tup0 ))) >= 0) /\ ((((v_tlen - (v_Range__IVSize v_e)) - (v_TLSConstants__MacKeySize v_mac)) - (v_Range__MaxPadSize v_e (v_Tuples__Tup0 ))) < 0))) -> ((v_Range__CipherRangeClass v_e v_tlen) = (v_Tuples__Tup2 0 (((v_tlen - (v_Range__IVSize v_e)) - (v_TLSConstants__MacKeySize v_mac)) - (v_Range__FixedPadSize v_e (v_Tuples__Tup0 ))))))))))
(* assume (!e. (!tlen. (!alg. (!mac. Tuples.Tup7.1 e = TLSConstants.MtE (TLSConstants.CBC_Stale (alg), mac) /\ pr_GreaterThanOrEqual(bop_Subtraction (bop_Subtraction (bop_Subtraction (tlen, Range.IVSize (e)), TLSConstants.MacKeySize (mac)), Range.FixedPadSize (e, ())), 0) /\ pr_GreaterThanOrEqual(bop_Subtraction (bop_Subtraction (bop_Subtraction (tlen, Range.IVSize (e)), TLSConstants.MacKeySize (mac)), Range.MaxPadSize (e, ())), 0) => Range.CipherRangeClass (e, tlen) = (bop_Subtraction (bop_Subtraction (bop_Subtraction (tlen, Range.IVSize (e)), TLSConstants.MacKeySize (mac)), Range.MaxPadSize (e, ())), bop_Subtraction (bop_Subtraction (bop_Subtraction (tlen, Range.IVSize (e)), TLSConstants.MacKeySize (mac)), Range.FixedPadSize (e, ()))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(175,0)] *)
axiom a1581_asm: (forall v_e:top. (forall v_tlen:top. (forall v_alg:top. (forall v_mac:top. ((((v_Tuples__Tup7__1 v_e) = (v_TLSConstants__MtE (v_TLSConstants__CBC_Stale v_alg) v_mac)) /\ (((((v_tlen - (v_Range__IVSize v_e)) - (v_TLSConstants__MacKeySize v_mac)) - (v_Range__FixedPadSize v_e (v_Tuples__Tup0 ))) >= 0) /\ ((((v_tlen - (v_Range__IVSize v_e)) - (v_TLSConstants__MacKeySize v_mac)) - (v_Range__MaxPadSize v_e (v_Tuples__Tup0 ))) >= 0))) -> ((v_Range__CipherRangeClass v_e v_tlen) = (v_Tuples__Tup2 (((v_tlen - (v_Range__IVSize v_e)) - (v_TLSConstants__MacKeySize v_mac)) - (v_Range__MaxPadSize v_e (v_Tuples__Tup0 ))) (((v_tlen - (v_Range__IVSize v_e)) - (v_TLSConstants__MacKeySize v_mac)) - (v_Range__FixedPadSize v_e (v_Tuples__Tup0 ))))))))))
(* assume (!e. (!tlen. (!mac. Tuples.Tup7.1 e = TLSConstants.MACOnly (mac) /\ pr_GreaterThanOrEqual(bop_Subtraction (bop_Subtraction (bop_Subtraction (tlen, Range.IVSize (e)), TLSConstants.MacKeySize (mac)), Range.FixedPadSize (e, ())), 0) => Range.CipherRangeClass (e, tlen) = (bop_Subtraction (tlen, TLSConstants.MacKeySize (mac)), bop_Subtraction (tlen, TLSConstants.MacKeySize (mac)))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(208,0)] *)
axiom a1582_asm: (forall v_e:top. (forall v_tlen:top. (forall v_mac:top. ((((v_Tuples__Tup7__1 v_e) = (v_TLSConstants__MACOnly v_mac)) /\ ((((v_tlen - (v_Range__IVSize v_e)) - (v_TLSConstants__MacKeySize v_mac)) - (v_Range__FixedPadSize v_e (v_Tuples__Tup0 ))) >= 0)) -> ((v_Range__CipherRangeClass v_e v_tlen) = (v_Tuples__Tup2 (v_tlen - (v_TLSConstants__MacKeySize v_mac)) (v_tlen - (v_TLSConstants__MacKeySize v_mac))))))))
(* assume (!e. (!tlen. (!mac. Tuples.Tup7.1 e = TLSConstants.MtE (TLSConstants.Stream_RC4_128 (), mac) /\ pr_GreaterThanOrEqual(bop_Subtraction (bop_Subtraction (bop_Subtraction (tlen, Range.IVSize (e)), TLSConstants.MacKeySize (mac)), Range.FixedPadSize (e, ())), 0) => Range.CipherRangeClass (e, tlen) = (bop_Subtraction (tlen, TLSConstants.MacKeySize (mac)), bop_Subtraction (tlen, TLSConstants.MacKeySize (mac)))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(212,0)] *)
axiom a1583_asm: (forall v_e:top. (forall v_tlen:top. (forall v_mac:top. ((((v_Tuples__Tup7__1 v_e) = (v_TLSConstants__MtE (v_TLSConstants__Stream_RC4_128 ) v_mac)) /\ ((((v_tlen - (v_Range__IVSize v_e)) - (v_TLSConstants__MacKeySize v_mac)) - (v_Range__FixedPadSize v_e (v_Tuples__Tup0 ))) >= 0)) -> ((v_Range__CipherRangeClass v_e v_tlen) = (v_Tuples__Tup2 (v_tlen - (v_TLSConstants__MacKeySize v_mac)) (v_tlen - (v_TLSConstants__MacKeySize v_mac))))))))
(* declaring value Range.cipherRangeClass [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(217,0)] *)
function v_Range__cipherRangeClass : top
(* assume (!e. (!t. (!rg. rg = Range.CipherRangeClass (e, t) => t = Range.TargetLength (e, rg)))) [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(221,0)] *)
axiom a1584_asm: (forall v_e:top. (forall v_t:top. (forall v_rg:top. ((v_rg = (v_Range__CipherRangeClass v_e v_t)) -> (v_t = (v_Range__TargetLength v_e v_rg))))))
(* declaring fun Range.RangeClass [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(225,9)] *)
function v_Range__RangeClass (x1:top) (x2:top) : top
(* assume (!e. (!r. Range.RangeClass (e, r) = Range.CipherRangeClass (e, Range.TargetLength (e, r)))) [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(226,0)] *)
axiom a1585_asm: (forall v_e:top. (forall v_r:top. ((v_Range__RangeClass v_e v_r) = (v_Range__CipherRangeClass v_e (v_Range__TargetLength v_e v_r)))))
(* declaring value Range.rangeClass [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(228,0)] *)
function v_Range__rangeClass : top
(* assume (!e. (!r. Range.SubRange(r, Range.RangeClass (e, r)))) [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(230,0)] *)
axiom a1586_asm: (forall v_e:top. (forall v_r:top. (v_Range__SubRange_p v_r (v_Range__RangeClass v_e v_r))))
(* declaring value Range.minMaxPad [C:\cygwin\home\Pierre-Yves\mitls\lib\Range.fs7(234,0)] *)
function v_Range__minMaxPad : top
(* declaring value DataStream.min [C:\cygwin\home\Pierre-Yves\mitls\lib\DataStream.fs7(15,8)] *)
function v_DataStream__min : top
(* declaring value DataStream.maxLHPad [C:\cygwin\home\Pierre-Yves\mitls\lib\DataStream.fs7(17,0)] *)
function v_DataStream__maxLHPad : top
(* declaring value DataStream.splitRange [C:\cygwin\home\Pierre-Yves\mitls\lib\DataStream.fs7(18,0)] *)
function v_DataStream__splitRange : top
(* declaring fun DataStream.Payload [C:\cygwin\home\Pierre-Yves\mitls\lib\DataStream.fs7(36,9)] *)
function v_DataStream__Payload (x1:top) (x2:top) (x3:top) (x4:top) : top
(* declaring fun DataStream.EmptyStream [C:\cygwin\home\Pierre-Yves\mitls\lib\DataStream.fs7(42,9)] *)
function v_DataStream__EmptyStream (x1:top) : top
(* declaring fun DataStream.ExtendStream [C:\cygwin\home\Pierre-Yves\mitls\lib\DataStream.fs7(45,9)] *)
function v_DataStream__ExtendStream (x1:top) (x2:top) (x3:top) (x4:top) : top
(* declaring fun DataStream.ExtendStreamDelta [C:\cygwin\home\Pierre-Yves\mitls\lib\DataStream.fs7(48,9)] *)
function v_DataStream__ExtendStreamDelta (x1:top) (x2:top) (x3:top) (x4:top) : top
(* assume (!e. (!e'. (!s. (!s'. (!r. (!r'. (!d. (!d'. DataStream.Payload (e, s, r, d) = DataStream.Payload (e', s', r', d') => DataStream.ExtendStreamDelta (e, s, r, d) = DataStream.ExtendStreamDelta (e, s, r, d'))))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\DataStream.fs7(51,0)] *)
axiom a1587_asm: (forall v_e:top. (forall v_e':top. (forall v_s:top. (forall v_s':top. (forall v_r:top. (forall v_r':top. (forall v_d:top. (forall v_d':top. (((v_DataStream__Payload v_e v_s v_r v_d) = (v_DataStream__Payload v_e' v_s' v_r' v_d')) -> ((v_DataStream__ExtendStreamDelta v_e v_s v_r v_d) = (v_DataStream__ExtendStreamDelta v_e v_s v_r v_d')))))))))))
(* declaring fun DataStream.StreamBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\DataStream.fs7(55,9)] *)
function v_DataStream__StreamBytes (x1:top) (x2:top) : top
(* assume (!e. DataStream.StreamBytes (e, DataStream.EmptyStream (e)) = array_of_list op_Nil ()) [C:\cygwin\home\Pierre-Yves\mitls\lib\DataStream.fs7(60,0)] *)
axiom a1588_asm: (forall v_e:top. ((v_DataStream__StreamBytes v_e (v_DataStream__EmptyStream v_e)) = (v_Pervasives__array_of_list (v_Pervasives__op_Nil ))))
(* assume (!e. (!s. (!r. (!b. DataStream.StreamBytes (e, DataStream.ExtendStream (e, s, r, b)) = bop_ArrayAppend (DataStream.StreamBytes (e, s), b))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\DataStream.fs7(61,0)] *)
axiom a1589_asm: (forall v_e:top. (forall v_s:top. (forall v_r:top. (forall v_b:top. ((v_DataStream__StreamBytes v_e (v_DataStream__ExtendStream v_e v_s v_r v_b)) = (v_Pervasives__bop_ArrayAppend (v_DataStream__StreamBytes v_e v_s) v_b))))))
(* assume (!e. (!s. (!r. (!d. DataStream.StreamBytes (e, DataStream.ExtendStreamDelta (e, s, r, d)) = bop_ArrayAppend (DataStream.StreamBytes (e, s), DataStream.Payload (e, s, r, d)))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\DataStream.fs7(62,0)] *)
axiom a1590_asm: (forall v_e:top. (forall v_s:top. (forall v_r:top. (forall v_d:top. ((v_DataStream__StreamBytes v_e (v_DataStream__ExtendStreamDelta v_e v_s v_r v_d)) = (v_Pervasives__bop_ArrayAppend (v_DataStream__StreamBytes v_e v_s) (v_DataStream__Payload v_e v_s v_r v_d)))))))
(* declaring value DataStream.createDelta [C:\cygwin\home\Pierre-Yves\mitls\lib\DataStream.fs7(67,0)] *)
function v_DataStream__createDelta : top
(* declaring value DataStream.deltaBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\DataStream.fs7(70,0)] *)
function v_DataStream__deltaBytes : top
(* declaring value DataStream.init [C:\cygwin\home\Pierre-Yves\mitls\lib\DataStream.fs7(78,0)] *)
function v_DataStream__init : top
(* declaring value DataStream.append [C:\cygwin\home\Pierre-Yves\mitls\lib\DataStream.fs7(79,0)] *)
function v_DataStream__append : top
(* declaring value DataStream.deltaPlain [C:\cygwin\home\Pierre-Yves\mitls\lib\DataStream.fs7(84,0)] *)
function v_DataStream__deltaPlain : top
(* declaring value DataStream.deltaRepr [C:\cygwin\home\Pierre-Yves\mitls\lib\DataStream.fs7(87,0)] *)
function v_DataStream__deltaRepr : top
(* declaring value DataStream.split [C:\cygwin\home\Pierre-Yves\mitls\lib\DataStream.fs7(91,0)] *)
function v_DataStream__split : top
(* declaring value DataStream.widen [C:\cygwin\home\Pierre-Yves\mitls\lib\DataStream.fs7(98,0)] *)
function v_DataStream__widen : top
(* declaring type AppFragment.DeltaFragment [C:\cygwin\home\Pierre-Yves\mitls\lib\AppFragment.fs7(15,0)] *)
predicate v_AppFragment__DeltaFragment_p (x1:top) (x2:top) (x3:top) (x4:top)
(* declaring type AppFragment.IsFragment [C:\cygwin\home\Pierre-Yves\mitls\lib\AppFragment.fs7(21,0)] *)
predicate v_AppFragment__IsFragment_p (x1:top) (x2:top) (x3:top)
(* declaring type AppFragment.Sent [C:\cygwin\home\Pierre-Yves\mitls\lib\AppFragment.fs7(29,0)] *)
predicate v_AppFragment__Sent_p (x1:top) (x2:top) (x3:top) (x4:top)
(* assume (!e. (!s. (!r. (!f. AppFragment.Sent(e, s, r, f) => (?d. f = (e, s, d)))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\AppFragment.fs7(37,0)] *)
axiom a1591_asm: (forall v_e:top. (forall v_s:top. (forall v_r:top. (forall v_f:top. ((v_AppFragment__Sent_p v_e v_s v_r v_f) -> (exists v_d:top. (v_f = (v_Tuples__Tup3 v_e v_s v_d))))))))
(* declaring fun AppFragment.Payload [C:\cygwin\home\Pierre-Yves\mitls\lib\AppFragment.fs7(42,9)] *)
function v_AppFragment__Payload (x1:top) (x2:top) (x3:top) : top
(* declaring fun AppFragment.Extend [C:\cygwin\home\Pierre-Yves\mitls\lib\AppFragment.fs7(50,9)] *)
function v_AppFragment__Extend (x1:top) (x2:top) (x3:top) (x4:top) : top
(* assume (!e. (!r. (!f. (!s. (!d. AppFragment.IsFragment(TLSInfo.Id (e), r, f) /\ AppFragment.Payload (TLSInfo.Id (e), r, f) = DataStream.Payload (e, s, r, d) => AppFragment.Extend (e, s, r, f) = DataStream.ExtendStreamDelta (e, s, r, d)))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\AppFragment.fs7(57,0)] *)
axiom a1592_asm: (forall v_e:top. (forall v_r:top. (forall v_f:top. (forall v_s:top. (forall v_d:top. (((v_AppFragment__IsFragment_p (v_TLSInfo__Id v_e) v_r v_f) /\ ((v_AppFragment__Payload (v_TLSInfo__Id v_e) v_r v_f) = (v_DataStream__Payload v_e v_s v_r v_d))) -> ((v_AppFragment__Extend v_e v_s v_r v_f) = (v_DataStream__ExtendStreamDelta v_e v_s v_r v_d))))))))
(* declaring value AppFragment.fragment [C:\cygwin\home\Pierre-Yves\mitls\lib\AppFragment.fs7(62,0)] *)
function v_AppFragment__fragment : top
(* declaring value AppFragment.check [C:\cygwin\home\Pierre-Yves\mitls\lib\AppFragment.fs7(67,0)] *)
function v_AppFragment__check : top
(* declaring value AppFragment.delta [C:\cygwin\home\Pierre-Yves\mitls\lib\AppFragment.fs7(69,0)] *)
function v_AppFragment__delta : top
(* declaring value AppFragment.plain [C:\cygwin\home\Pierre-Yves\mitls\lib\AppFragment.fs7(76,0)] *)
function v_AppFragment__plain : top
(* declaring value AppFragment.repr [C:\cygwin\home\Pierre-Yves\mitls\lib\AppFragment.fs7(79,0)] *)
function v_AppFragment__repr : top
(* declaring value AppFragment.makeExtPad [C:\cygwin\home\Pierre-Yves\mitls\lib\AppFragment.fs7(83,0)] *)
function v_AppFragment__makeExtPad : top
(* declaring value AppFragment.parseExtPad [C:\cygwin\home\Pierre-Yves\mitls\lib\AppFragment.fs7(84,0)] *)
function v_AppFragment__parseExtPad : top
(* declaring value AppFragment.widen [C:\cygwin\home\Pierre-Yves\mitls\lib\AppFragment.fs7(90,0)] *)
function v_AppFragment__widen : top
(* declaring type HSFragment.Sent [C:\cygwin\home\Pierre-Yves\mitls\lib\HSFragment.fs7(11,0)] *)
predicate v_HSFragment__Sent_p (x1:top) (x2:top) (x3:top) (x4:top)
(* assume (!i. (!s. (!r. (!f. HSFragment.Sent(i, s, r, f))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HSFragment.fs7(12,0)] *)
axiom a1593_asm: (forall v_i:top. (forall v_s:top. (forall v_r:top. (forall v_f:top. (v_HSFragment__Sent_p v_i v_s v_r v_f)))))
(* declaring fun HSFragment.Payload [C:\cygwin\home\Pierre-Yves\mitls\lib\HSFragment.fs7(16,9)] *)
function v_HSFragment__Payload (x1:top) (x2:top) (x3:top) : top
(* declaring fun HSFragment.EmptyStream [C:\cygwin\home\Pierre-Yves\mitls\lib\HSFragment.fs7(19,9)] *)
function v_HSFragment__EmptyStream (x1:top) : top
(* declaring value HSFragment.init [C:\cygwin\home\Pierre-Yves\mitls\lib\HSFragment.fs7(21,0)] *)
function v_HSFragment__init : top
(* declaring value HSFragment.fragmentPlain [C:\cygwin\home\Pierre-Yves\mitls\lib\HSFragment.fs7(23,0)] *)
function v_HSFragment__fragmentPlain : top
(* declaring value HSFragment.fragmentRepr [C:\cygwin\home\Pierre-Yves\mitls\lib\HSFragment.fs7(24,0)] *)
function v_HSFragment__fragmentRepr : top
(* declaring value HSFragment.reStream [C:\cygwin\home\Pierre-Yves\mitls\lib\HSFragment.fs7(28,0)] *)
function v_HSFragment__reStream : top
(* declaring value HSFragment.makeExtPad [C:\cygwin\home\Pierre-Yves\mitls\lib\HSFragment.fs7(31,0)] *)
function v_HSFragment__makeExtPad : top
(* declaring value HSFragment.parseExtPad [C:\cygwin\home\Pierre-Yves\mitls\lib\HSFragment.fs7(32,0)] *)
function v_HSFragment__parseExtPad : top
(* declaring value HSFragment.widen [C:\cygwin\home\Pierre-Yves\mitls\lib\HSFragment.fs7(34,0)] *)
function v_HSFragment__widen : top
(* declaring fun HSFragment.Extend [C:\cygwin\home\Pierre-Yves\mitls\lib\HSFragment.fs7(37,9)] *)
function v_HSFragment__Extend (x1:top) (x2:top) (x3:top) (x4:top) : top
(* declaring value HSFragment.extend [C:\cygwin\home\Pierre-Yves\mitls\lib\HSFragment.fs7(39,0)] *)
function v_HSFragment__extend : top
(* declaring type TLSFragment.fragment [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(36,0)] *)
predicate v_TLSFragment__FHandshake_p (x1:top)
function v_TLSFragment__FHandshake (x1:top) : top
function v_TLSFragment__FHandshake__1 (x1:top) : top
axiom a1594_v_TLSFragment__FHandshake_Inj: (forall x1:top. (v_TLSFragment__FHandshake__1 (v_TLSFragment__FHandshake x1)) = x1) /\ (forall x1:top,y1:top. (v_TLSFragment__FHandshake x1) = (v_TLSFragment__FHandshake y1) -> x1 = y1)
predicate v_TLSFragment__FCCS_p (x1:top)
function v_TLSFragment__FCCS (x1:top) : top
function v_TLSFragment__FCCS__1 (x1:top) : top
axiom a1595_v_TLSFragment__FCCS_Inj: (forall x1:top. (v_TLSFragment__FCCS__1 (v_TLSFragment__FCCS x1)) = x1) /\ (forall x1:top,y1:top. (v_TLSFragment__FCCS x1) = (v_TLSFragment__FCCS y1) -> x1 = y1)
axiom a1596_v_TLSFragment__FCCS_Disj: forall x0:top, x1:top. not((v_TLSFragment__FHandshake x0) = (v_TLSFragment__FCCS x1))
predicate v_TLSFragment__FAlert_p (x1:top)
function v_TLSFragment__FAlert (x1:top) : top
function v_TLSFragment__FAlert__1 (x1:top) : top
axiom a1597_v_TLSFragment__FAlert_Inj: (forall x1:top. (v_TLSFragment__FAlert__1 (v_TLSFragment__FAlert x1)) = x1) /\ (forall x1:top,y1:top. (v_TLSFragment__FAlert x1) = (v_TLSFragment__FAlert y1) -> x1 = y1)
axiom a1598_v_TLSFragment__FAlert_Disj: forall x0:top, x1:top. not((v_TLSFragment__FCCS x0) = (v_TLSFragment__FAlert x1))
axiom a1599_v_TLSFragment__FAlert_Disj: forall x0:top, x1:top. not((v_TLSFragment__FHandshake x0) = (v_TLSFragment__FAlert x1))
predicate v_TLSFragment__FAppData_p (x1:top)
function v_TLSFragment__FAppData (x1:top) : top
function v_TLSFragment__FAppData__1 (x1:top) : top
axiom a1600_v_TLSFragment__FAppData_Inj: (forall x1:top. (v_TLSFragment__FAppData__1 (v_TLSFragment__FAppData x1)) = x1) /\ (forall x1:top,y1:top. (v_TLSFragment__FAppData x1) = (v_TLSFragment__FAppData y1) -> x1 = y1)
axiom a1601_v_TLSFragment__FAppData_Disj: forall x0:top, x1:top. not((v_TLSFragment__FAlert x0) = (v_TLSFragment__FAppData x1))
axiom a1602_v_TLSFragment__FAppData_Disj: forall x0:top, x1:top. not((v_TLSFragment__FCCS x0) = (v_TLSFragment__FAppData x1))
axiom a1603_v_TLSFragment__FAppData_Disj: forall x0:top, x1:top. not((v_TLSFragment__FHandshake x0) = (v_TLSFragment__FAppData x1))
(* declaring fun TLSFragment.Payload [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(42,9)] *)
function v_TLSFragment__Payload (x1:top) (x2:top) (x3:top) (x4:top) : top
(* declaring fun TLSFragment.HandshakeHistory [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(54,9)] *)
function v_TLSFragment__HandshakeHistory (x1:top) (x2:top) : top
(* declaring fun TLSFragment.AppDataHistory [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(55,9)] *)
function v_TLSFragment__AppDataHistory (x1:top) (x2:top) : top
(* declaring fun TLSFragment.AlertHistory [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(56,9)] *)
function v_TLSFragment__AlertHistory (x1:top) (x2:top) : top
(* declaring fun TLSFragment.CCSHistory [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(57,9)] *)
function v_TLSFragment__CCSHistory (x1:top) (x2:top) : top
(* declaring value TLSFragment.handshakeHistory [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(64,0)] *)
function v_TLSFragment__handshakeHistory : top
(* declaring value TLSFragment.ccsHistory [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(65,0)] *)
function v_TLSFragment__ccsHistory : top
(* declaring value TLSFragment.alertHistory [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(66,0)] *)
function v_TLSFragment__alertHistory : top
(* declaring type TLSFragment.RecordSent [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(68,0)] *)
predicate v_TLSFragment__RecordSent_p (x1:top) (x2:top) (x3:top) (x4:top) (x5:top)
(* assume (!e. (!ct. (!h. (!rg. (!d. TLSFragment.RecordSent(e, ct, h, rg, d) <=> (?f. ct = TLSConstants.Handshake () /\ d = TLSFragment.FHandshake (f) /\ HSFragment.Sent(TLSInfo.Id (e), TLSFragment.HandshakeHistory (e, h), rg, f)) \/ (?f. ct = TLSConstants.Change_cipher_spec () /\ d = TLSFragment.FCCS (f) /\ HSFragment.Sent(TLSInfo.Id (e), TLSFragment.CCSHistory (e, h), rg, f)) \/ (?f. ct = TLSConstants.Alert () /\ d = TLSFragment.FAlert (f) /\ HSFragment.Sent(TLSInfo.Id (e), TLSFragment.AlertHistory (e, h), rg, f)) \/ (?f. ct = TLSConstants.Application_data () /\ d = TLSFragment.FAppData (f) /\ TLSInfo.OpenState(e) /\ AppFragment.Sent(e, TLSFragment.AppDataHistory (e, h), rg, f))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(70,0)] *)
axiom a1604_asm: (forall v_e:top. (forall v_ct:top. (forall v_h:top. (forall v_rg:top. (forall v_d:top. ((v_TLSFragment__RecordSent_p v_e v_ct v_h v_rg v_d) <-> ((exists v_f:top. ((v_ct = (v_TLSConstants__Handshake )) /\ ((v_d = (v_TLSFragment__FHandshake v_f)) /\ (v_HSFragment__Sent_p (v_TLSInfo__Id v_e) (v_TLSFragment__HandshakeHistory v_e v_h) v_rg v_f)))) \/ ((exists v_f:top. ((v_ct = (v_TLSConstants__Change_cipher_spec )) /\ ((v_d = (v_TLSFragment__FCCS v_f)) /\ (v_HSFragment__Sent_p (v_TLSInfo__Id v_e) (v_TLSFragment__CCSHistory v_e v_h) v_rg v_f)))) \/ ((exists v_f:top. ((v_ct = (v_TLSConstants__Alert )) /\ ((v_d = (v_TLSFragment__FAlert v_f)) /\ (v_HSFragment__Sent_p (v_TLSInfo__Id v_e) (v_TLSFragment__AlertHistory v_e v_h) v_rg v_f)))) \/ (exists v_f:top. ((v_ct = (v_TLSConstants__Application_data )) /\ ((v_d = (v_TLSFragment__FAppData v_f)) /\ ((v_TLSInfo__OpenState_p v_e) /\ (v_AppFragment__Sent_p v_e (v_TLSFragment__AppDataHistory v_e v_h) v_rg v_f))))))))))))))
(* assume (!e. (!h. (!rg. (!f. HSFragment.Sent(TLSInfo.Id (e), TLSFragment.HandshakeHistory (e, h), rg, f) => TLSFragment.RecordSent(e, TLSConstants.Handshake (), h, rg, TLSFragment.FHandshake (f)))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(79,0)] *)
axiom a1605_asm: (forall v_e:top. (forall v_h:top. (forall v_rg:top. (forall v_f:top. ((v_HSFragment__Sent_p (v_TLSInfo__Id v_e) (v_TLSFragment__HandshakeHistory v_e v_h) v_rg v_f) -> (v_TLSFragment__RecordSent_p v_e (v_TLSConstants__Handshake ) v_h v_rg (v_TLSFragment__FHandshake v_f)))))))
(* declaring fun TLSFragment.ExtendHistory [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(87,9)] *)
function v_TLSFragment__ExtendHistory (x1:top) (x2:top) (x3:top) (x4:top) (x5:top) : top
(* declaring value TLSFragment.extendHistory [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(89,0)] *)
function v_TLSFragment__extendHistory : top
(* declaring value TLSFragment.plain [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(92,0)] *)
function v_TLSFragment__plain : top
(* declaring value TLSFragment.fragment [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(95,0)] *)
function v_TLSFragment__fragment : top
(* declaring value TLSFragment.reprFragment [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(98,0)] *)
function v_TLSFragment__reprFragment : top
(* declaring value TLSFragment.repr [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(101,0)] *)
function v_TLSFragment__repr : top
(* declaring value TLSFragment.widen [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(104,0)] *)
function v_TLSFragment__widen : top
(* declaring fun TLSFragment.EmptyHistory [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(113,9)] *)
function v_TLSFragment__EmptyHistory (x1:top) : top
(* declaring value TLSFragment.emptyHistory [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(120,0)] *)
function v_TLSFragment__emptyHistory : top
(* declaring fun TLSFragment.HandshakeRecordPlain [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(143,9)] *)
function v_TLSFragment__HandshakeRecordPlain (x1:top) (x2:top) (x3:top) (x4:top) : top
(* declaring fun TLSFragment.CCSRecordPlain [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(145,9)] *)
function v_TLSFragment__CCSRecordPlain (x1:top) (x2:top) (x3:top) (x4:top) : top
(* declaring fun TLSFragment.AlertRecordPlain [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(147,9)] *)
function v_TLSFragment__AlertRecordPlain (x1:top) (x2:top) (x3:top) (x4:top) : top
(* declaring fun TLSFragment.AppDataRecordPlain [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(149,9)] *)
function v_TLSFragment__AppDataRecordPlain (x1:top) (x2:top) (x3:top) (x4:top) : top
(* assume (!e. (!h. (!h'. (!r. (!f. h' = TLSFragment.ExtendHistory (e, TLSConstants.Handshake (), h, r, TLSFragment.HandshakeRecordPlain (e, h, r, f)) => TLSFragment.HandshakeHistory (e, h') = HSFragment.Extend (TLSInfo.Id (e), TLSFragment.HandshakeHistory (e, h), r, f) /\ TLSFragment.AlertHistory (e, h') = TLSFragment.AlertHistory (e, h) /\ TLSFragment.CCSHistory (e, h') = TLSFragment.CCSHistory (e, h) /\ TLSFragment.AppDataHistory (e, h') = TLSFragment.AppDataHistory (e, h)))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(152,0)] *)
axiom a1606_asm: (forall v_e:top. (forall v_h:top. (forall v_h':top. (forall v_r:top. (forall v_f:top. ((v_h' = (v_TLSFragment__ExtendHistory v_e (v_TLSConstants__Handshake ) v_h v_r (v_TLSFragment__HandshakeRecordPlain v_e v_h v_r v_f))) -> (((v_TLSFragment__HandshakeHistory v_e v_h') = (v_HSFragment__Extend (v_TLSInfo__Id v_e) (v_TLSFragment__HandshakeHistory v_e v_h) v_r v_f)) /\ (((v_TLSFragment__AlertHistory v_e v_h') = (v_TLSFragment__AlertHistory v_e v_h)) /\ (((v_TLSFragment__CCSHistory v_e v_h') = (v_TLSFragment__CCSHistory v_e v_h)) /\ ((v_TLSFragment__AppDataHistory v_e v_h') = (v_TLSFragment__AppDataHistory v_e v_h)))))))))))
(* assume (!e. (!h. (!h'. (!r. (!f. h' = TLSFragment.ExtendHistory (e, TLSConstants.Alert (), h, r, TLSFragment.AlertRecordPlain (e, h, r, f)) => TLSFragment.AlertHistory (e, h') = HSFragment.Extend (TLSInfo.Id (e), TLSFragment.AlertHistory (e, h), r, f) /\ TLSFragment.HandshakeHistory (e, h') = TLSFragment.HandshakeHistory (e, h) /\ TLSFragment.CCSHistory (e, h') = TLSFragment.CCSHistory (e, h) /\ TLSFragment.AppDataHistory (e, h') = TLSFragment.AppDataHistory (e, h)))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(157,0)] *)
axiom a1607_asm: (forall v_e:top. (forall v_h:top. (forall v_h':top. (forall v_r:top. (forall v_f:top. ((v_h' = (v_TLSFragment__ExtendHistory v_e (v_TLSConstants__Alert ) v_h v_r (v_TLSFragment__AlertRecordPlain v_e v_h v_r v_f))) -> (((v_TLSFragment__AlertHistory v_e v_h') = (v_HSFragment__Extend (v_TLSInfo__Id v_e) (v_TLSFragment__AlertHistory v_e v_h) v_r v_f)) /\ (((v_TLSFragment__HandshakeHistory v_e v_h') = (v_TLSFragment__HandshakeHistory v_e v_h)) /\ (((v_TLSFragment__CCSHistory v_e v_h') = (v_TLSFragment__CCSHistory v_e v_h)) /\ ((v_TLSFragment__AppDataHistory v_e v_h') = (v_TLSFragment__AppDataHistory v_e v_h)))))))))))
(* assume (!e. (!h. (!h'. (!r. (!f. h' = TLSFragment.ExtendHistory (e, TLSConstants.Change_cipher_spec (), h, r, TLSFragment.CCSRecordPlain (e, h, r, f)) => TLSFragment.CCSHistory (e, h') = HSFragment.Extend (TLSInfo.Id (e), TLSFragment.CCSHistory (e, h), r, f) /\ TLSFragment.AlertHistory (e, h') = TLSFragment.AlertHistory (e, h) /\ TLSFragment.HandshakeHistory (e, h') = TLSFragment.HandshakeHistory (e, h) /\ TLSFragment.AppDataHistory (e, h') = TLSFragment.AppDataHistory (e, h)))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(162,0)] *)
axiom a1608_asm: (forall v_e:top. (forall v_h:top. (forall v_h':top. (forall v_r:top. (forall v_f:top. ((v_h' = (v_TLSFragment__ExtendHistory v_e (v_TLSConstants__Change_cipher_spec ) v_h v_r (v_TLSFragment__CCSRecordPlain v_e v_h v_r v_f))) -> (((v_TLSFragment__CCSHistory v_e v_h') = (v_HSFragment__Extend (v_TLSInfo__Id v_e) (v_TLSFragment__CCSHistory v_e v_h) v_r v_f)) /\ (((v_TLSFragment__AlertHistory v_e v_h') = (v_TLSFragment__AlertHistory v_e v_h)) /\ (((v_TLSFragment__HandshakeHistory v_e v_h') = (v_TLSFragment__HandshakeHistory v_e v_h)) /\ ((v_TLSFragment__AppDataHistory v_e v_h') = (v_TLSFragment__AppDataHistory v_e v_h)))))))))))
(* assume (!e. (!h. (!h'. (!r. (!f. h' = TLSFragment.ExtendHistory (e, TLSConstants.Application_data (), h, r, TLSFragment.AppDataRecordPlain (e, h, r, f)) => TLSFragment.AppDataHistory (e, h') = AppFragment.Extend (e, TLSFragment.AppDataHistory (e, h), r, f) /\ TLSFragment.AlertHistory (e, h') = TLSFragment.AlertHistory (e, h) /\ TLSFragment.CCSHistory (e, h') = TLSFragment.CCSHistory (e, h) /\ TLSFragment.HandshakeHistory (e, h') = TLSFragment.HandshakeHistory (e, h)))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(167,0)] *)
axiom a1609_asm: (forall v_e:top. (forall v_h:top. (forall v_h':top. (forall v_r:top. (forall v_f:top. ((v_h' = (v_TLSFragment__ExtendHistory v_e (v_TLSConstants__Application_data ) v_h v_r (v_TLSFragment__AppDataRecordPlain v_e v_h v_r v_f))) -> (((v_TLSFragment__AppDataHistory v_e v_h') = (v_AppFragment__Extend v_e (v_TLSFragment__AppDataHistory v_e v_h) v_r v_f)) /\ (((v_TLSFragment__AlertHistory v_e v_h') = (v_TLSFragment__AlertHistory v_e v_h)) /\ (((v_TLSFragment__CCSHistory v_e v_h') = (v_TLSFragment__CCSHistory v_e v_h)) /\ ((v_TLSFragment__HandshakeHistory v_e v_h') = (v_TLSFragment__HandshakeHistory v_e v_h)))))))))))
(* assume (!e. (!h. (!r. (!p. TLSFragment.AppDataHistory (e, h) = TLSFragment.AppDataHistory (e, TLSFragment.ExtendHistory (e, TLSConstants.Handshake (), h, r, TLSFragment.HandshakeRecordPlain (e, h, r, p))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(173,0)] *)
axiom a1610_asm: (forall v_e:top. (forall v_h:top. (forall v_r:top. (forall v_p:top. ((v_TLSFragment__AppDataHistory v_e v_h) = (v_TLSFragment__AppDataHistory v_e (v_TLSFragment__ExtendHistory v_e (v_TLSConstants__Handshake ) v_h v_r (v_TLSFragment__HandshakeRecordPlain v_e v_h v_r v_p))))))))
(* assume (!e. (!h. (!r. (!p. TLSFragment.AppDataHistory (e, h) = TLSFragment.AppDataHistory (e, TLSFragment.ExtendHistory (e, TLSConstants.Alert (), h, r, TLSFragment.AlertRecordPlain (e, h, r, p))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(174,0)] *)
axiom a1611_asm: (forall v_e:top. (forall v_h:top. (forall v_r:top. (forall v_p:top. ((v_TLSFragment__AppDataHistory v_e v_h) = (v_TLSFragment__AppDataHistory v_e (v_TLSFragment__ExtendHistory v_e (v_TLSConstants__Alert ) v_h v_r (v_TLSFragment__AlertRecordPlain v_e v_h v_r v_p))))))))
(* assume (!e. (!h. (!r. (!p. TLSFragment.AppDataHistory (e, h) = TLSFragment.AppDataHistory (e, TLSFragment.ExtendHistory (e, TLSConstants.Change_cipher_spec (), h, r, TLSFragment.CCSRecordPlain (e, h, r, p))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(175,0)] *)
axiom a1612_asm: (forall v_e:top. (forall v_h:top. (forall v_r:top. (forall v_p:top. ((v_TLSFragment__AppDataHistory v_e v_h) = (v_TLSFragment__AppDataHistory v_e (v_TLSFragment__ExtendHistory v_e (v_TLSConstants__Change_cipher_spec ) v_h v_r (v_TLSFragment__CCSRecordPlain v_e v_h v_r v_p))))))))
(* assume (!e. TLSFragment.HandshakeHistory (e, TLSFragment.EmptyHistory (e)) = HSFragment.EmptyStream (TLSInfo.Id (e))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(177,0)] *)
axiom a1613_asm: (forall v_e:top. ((v_TLSFragment__HandshakeHistory v_e (v_TLSFragment__EmptyHistory v_e)) = (v_HSFragment__EmptyStream (v_TLSInfo__Id v_e))))
(* assume (!e. TLSFragment.AlertHistory (e, TLSFragment.EmptyHistory (e)) = HSFragment.EmptyStream (TLSInfo.Id (e))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(178,0)] *)
axiom a1614_asm: (forall v_e:top. ((v_TLSFragment__AlertHistory v_e (v_TLSFragment__EmptyHistory v_e)) = (v_HSFragment__EmptyStream (v_TLSInfo__Id v_e))))
(* assume (!e. TLSFragment.CCSHistory (e, TLSFragment.EmptyHistory (e)) = HSFragment.EmptyStream (TLSInfo.Id (e))) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(179,0)] *)
axiom a1615_asm: (forall v_e:top. ((v_TLSFragment__CCSHistory v_e (v_TLSFragment__EmptyHistory v_e)) = (v_HSFragment__EmptyStream (v_TLSInfo__Id v_e))))
(* assume (!e. TLSFragment.AppDataHistory (e, TLSFragment.EmptyHistory (e)) = DataStream.EmptyStream (e)) [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(180,0)] *)
axiom a1616_asm: (forall v_e:top. ((v_TLSFragment__AppDataHistory v_e (v_TLSFragment__EmptyHistory v_e)) = (v_DataStream__EmptyStream v_e)))
(* declaring value TLSFragment.HSPlainToRecordPlain [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(182,0)] *)
function v_TLSFragment__HSPlainToRecordPlain : top
(* declaring value TLSFragment.RecordPlainToHSPlain [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(186,0)] *)
function v_TLSFragment__RecordPlainToHSPlain : top
(* declaring value TLSFragment.CCSPlainToRecordPlain [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(190,0)] *)
function v_TLSFragment__CCSPlainToRecordPlain : top
(* declaring value TLSFragment.RecordPlainToCCSPlain [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(194,0)] *)
function v_TLSFragment__RecordPlainToCCSPlain : top
(* declaring value TLSFragment.AlertPlainToRecordPlain [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(198,0)] *)
function v_TLSFragment__AlertPlainToRecordPlain : top
(* declaring value TLSFragment.RecordPlainToAlertPlain [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(202,0)] *)
function v_TLSFragment__RecordPlainToAlertPlain : top
(* declaring value TLSFragment.AppPlainToRecordPlain [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(206,0)] *)
function v_TLSFragment__AppPlainToRecordPlain : top
(* declaring value TLSFragment.RecordPlainToAppPlain [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(210,0)] *)
function v_TLSFragment__RecordPlainToAppPlain : top
(* declaring value TLSFragment.makeExtPad [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(214,0)] *)
function v_TLSFragment__makeExtPad : top
(* declaring value TLSFragment.parseExtPad [C:\cygwin\home\Pierre-Yves\mitls\lib\TLSFragment.fs7(215,0)] *)
function v_TLSFragment__parseExtPad : top
(* declaring fun StatefulPlain.ADLength [C:\cygwin\home\Pierre-Yves\mitls\lib\StatefulPlain.fs7(14,9)] *)
function v_StatefulPlain__ADLength (x1:top) : top
(* assume (!i. pr_LessThanOrEqual(0, StatefulPlain.ADLength (i))) [C:\cygwin\home\Pierre-Yves\mitls\lib\StatefulPlain.fs7(18,0)] *)
axiom a1617_asm: (forall v_i:top. (0 <= (v_StatefulPlain__ADLength v_i)))
(* declaring fun StatefulPlain.ADBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\StatefulPlain.fs7(22,9)] *)
function v_StatefulPlain__ADBytes (x1:top) (x2:top) : top
(* declaring fun StatefulPlain.ParseAD [C:\cygwin\home\Pierre-Yves\mitls\lib\StatefulPlain.fs7(27,9)] *)
function v_StatefulPlain__ParseAD (x1:top) (x2:top) : top
(* declaring value StatefulPlain.makeAD [C:\cygwin\home\Pierre-Yves\mitls\lib\StatefulPlain.fs7(36,0)] *)
function v_StatefulPlain__makeAD : top
(* declaring value StatefulPlain.parseAD [C:\cygwin\home\Pierre-Yves\mitls\lib\StatefulPlain.fs7(37,8)] *)
function v_StatefulPlain__parseAD : top
(* assume (!i. (!ct. (!ad. Bytes.B (ad) = StatefulPlain.ADBytes (i, ct) => StatefulPlain.ParseAD (i, Bytes.B (ad)) = ct))) [C:\cygwin\home\Pierre-Yves\mitls\lib\StatefulPlain.fs7(39,0)] *)
axiom a1618_asm: (forall v_i:top. (forall v_ct:top. (forall v_ad:top. (((v_Bytes__B v_ad) = (v_StatefulPlain__ADBytes v_i v_ct)) -> ((v_StatefulPlain__ParseAD v_i (v_Bytes__B v_ad)) = v_ct)))))
(* declaring fun StatefulPlain.Payload [C:\cygwin\home\Pierre-Yves\mitls\lib\StatefulPlain.fs7(44,9)] *)
function v_StatefulPlain__Payload (x1:top) (x2:top) (x3:top) (x4:top) : top
(* declaring fun StatefulPlain.HLength [C:\cygwin\home\Pierre-Yves\mitls\lib\StatefulPlain.fs7(54,9)] *)
function v_StatefulPlain__HLength (x1:top) (x2:top) : top
(* declaring type StatefulPlain.StAEHistory [C:\cygwin\home\Pierre-Yves\mitls\lib\StatefulPlain.fs7(58,0)] *)
predicate v_StatefulPlain__StAEHistory_p (x1:top) (x2:top)
(* declaring fun StatefulPlain.SeqN [C:\cygwin\home\Pierre-Yves\mitls\lib\StatefulPlain.fs7(61,9)] *)
function v_StatefulPlain__SeqN (x1:top) (x2:top) : top
(* assume (!i. (!sn. (!h. StatefulPlain.SeqN (i, (sn, h)) = sn))) [C:\cygwin\home\Pierre-Yves\mitls\lib\StatefulPlain.fs7(62,0)] *)
axiom a1619_asm: (forall v_i:top. (forall v_sn:top. (forall v_h:top. ((v_StatefulPlain__SeqN v_i (v_Tuples__Tup2 v_sn v_h)) = v_sn))))
(* declaring fun StatefulPlain.EmptyHistory [C:\cygwin\home\Pierre-Yves\mitls\lib\StatefulPlain.fs7(64,9)] *)
function v_StatefulPlain__EmptyHistory (x1:top) : top
(* declaring fun StatefulPlain.ExtendHistory [C:\cygwin\home\Pierre-Yves\mitls\lib\StatefulPlain.fs7(65,9)] *)
function v_StatefulPlain__ExtendHistory (x1:top) (x2:top) (x3:top) (x4:top) (x5:top) : top
(* declaring fun StatefulPlain.StAEToRecord [C:\cygwin\home\Pierre-Yves\mitls\lib\StatefulPlain.fs7(69,9)] *)
function v_StatefulPlain__StAEToRecord (x1:top) (x2:top) (x3:top) (x4:top) : top
(* declaring fun StatefulPlain.Multiplexed [C:\cygwin\home\Pierre-Yves\mitls\lib\StatefulPlain.fs7(72,9)] *)
function v_StatefulPlain__Multiplexed (x1:top) (x2:top) : top
(* assume (!e. StatefulPlain.Multiplexed (e, StatefulPlain.EmptyHistory (TLSInfo.Id (e))) = TLSFragment.EmptyHistory (e)) [C:\cygwin\home\Pierre-Yves\mitls\lib\StatefulPlain.fs7(73,0)] *)
axiom a1620_asm: (forall v_e:top. ((v_StatefulPlain__Multiplexed v_e (v_StatefulPlain__EmptyHistory (v_TLSInfo__Id v_e))) = (v_TLSFragment__EmptyHistory v_e)))
(* assume (!e. (!ad. (!sh. (!r. (!f. (!ct. StatefulPlain.Multiplexed (e, StatefulPlain.ExtendHistory (TLSInfo.Id (e), ad, sh, r, f)) = TLSFragment.ExtendHistory (e, StatefulPlain.ParseAD (TLSInfo.Id (e), Bytes.B (ad)), StatefulPlain.Multiplexed (e, sh), r, StatefulPlain.StAEToRecord (TLSInfo.Id (e), StatefulPlain.ParseAD (TLSInfo.Id (e), Bytes.B (ad)), r, f)))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\StatefulPlain.fs7(75,0)] *)
axiom a1621_asm: (forall v_e:top. (forall v_ad:top. (forall v_sh:top. (forall v_r:top. (forall v_f:top. (forall v_ct:top. ((v_StatefulPlain__Multiplexed v_e (v_StatefulPlain__ExtendHistory (v_TLSInfo__Id v_e) v_ad v_sh v_r v_f)) = (v_TLSFragment__ExtendHistory v_e (v_StatefulPlain__ParseAD (v_TLSInfo__Id v_e) (v_Bytes__B v_ad)) (v_StatefulPlain__Multiplexed v_e v_sh) v_r (v_StatefulPlain__StAEToRecord (v_TLSInfo__Id v_e) (v_StatefulPlain__ParseAD (v_TLSInfo__Id v_e) (v_Bytes__B v_ad)) v_r v_f)))))))))
(* declaring type StatefulPlain.Sent [C:\cygwin\home\Pierre-Yves\mitls\lib\StatefulPlain.fs7(81,0)] *)
predicate v_StatefulPlain__Sent_p (x1:top) (x2:top) (x3:top) (x4:top) (x5:top)
(* assume (!i. (!ad. (!sn. (!h. (!r. (!f. StatefulPlain.Sent(i, Bytes.B (ad), (sn, h), r, f) => StatefulPlain.StAEHistory(i, h) /\ StatefulPlain.HLength (i, h) = sn)))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\StatefulPlain.fs7(102,0)] *)
axiom a1622_asm: (forall v_i:top. (forall v_ad:top. (forall v_sn:top. (forall v_h:top. (forall v_r:top. (forall v_f:top. ((v_StatefulPlain__Sent_p v_i (v_Bytes__B v_ad) (v_Tuples__Tup2 v_sn v_h) v_r v_f) -> ((v_StatefulPlain__StAEHistory_p v_i v_h) /\ ((v_StatefulPlain__HLength v_i v_h) = v_sn)))))))))
(* declaring value StatefulPlain.plain [C:\cygwin\home\Pierre-Yves\mitls\lib\StatefulPlain.fs7(114,0)] *)
function v_StatefulPlain__plain : top
(* declaring value StatefulPlain.repr [C:\cygwin\home\Pierre-Yves\mitls\lib\StatefulPlain.fs7(117,0)] *)
function v_StatefulPlain__repr : top
(* declaring value StatefulPlain.reprFragment [C:\cygwin\home\Pierre-Yves\mitls\lib\StatefulPlain.fs7(120,0)] *)
function v_StatefulPlain__reprFragment : top
(* declaring value StatefulPlain.makeExtPad [C:\cygwin\home\Pierre-Yves\mitls\lib\StatefulPlain.fs7(124,0)] *)
function v_StatefulPlain__makeExtPad : top
(* declaring value StatefulPlain.parseExtPad [C:\cygwin\home\Pierre-Yves\mitls\lib\StatefulPlain.fs7(125,0)] *)
function v_StatefulPlain__parseExtPad : top
(* declaring value StatefulPlain.widen [C:\cygwin\home\Pierre-Yves\mitls\lib\StatefulPlain.fs7(127,0)] *)
function v_StatefulPlain__widen : top
(* declaring value StatefulPlain.emptyHistory [C:\cygwin\home\Pierre-Yves\mitls\lib\StatefulPlain.fs7(139,0)] *)
function v_StatefulPlain__emptyHistory : top
(* declaring value StatefulPlain.extendHistory [C:\cygwin\home\Pierre-Yves\mitls\lib\StatefulPlain.fs7(140,0)] *)
function v_StatefulPlain__extendHistory : top
(* declaring value StatefulPlain.consHistory [C:\cygwin\home\Pierre-Yves\mitls\lib\StatefulPlain.fs7(148,8)] *)
function v_StatefulPlain__consHistory : top
(* assume (!i. (!ad. (!h. (!h'. (!r. (!f. TLSInfo.AuthId(i) /\ StatefulPlain.StAEHistory(i, h) /\ StatefulPlain.StAEHistory(i, h') /\ StatefulPlain.HLength (i, h) = StatefulPlain.HLength (i, h') => h = h')))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\StatefulPlain.fs7(158,0)] *)
axiom a1623_asm: (forall v_i:top. (forall v_ad:top. (forall v_h:top. (forall v_h':top. (forall v_r:top. (forall v_f:top. (((v_TLSInfo__AuthId_p v_i) /\ ((v_StatefulPlain__StAEHistory_p v_i v_h) /\ ((v_StatefulPlain__StAEHistory_p v_i v_h') /\ ((v_StatefulPlain__HLength v_i v_h) = (v_StatefulPlain__HLength v_i v_h'))))) -> (v_h = v_h'))))))))
(* declaring value StatefulPlain.RecordPlainToStAEPlain [C:\cygwin\home\Pierre-Yves\mitls\lib\StatefulPlain.fs7(182,0)] *)
function v_StatefulPlain__RecordPlainToStAEPlain : top
(* declaring value StatefulPlain.StAEPlainToRecordPlain [C:\cygwin\home\Pierre-Yves\mitls\lib\StatefulPlain.fs7(191,0)] *)
function v_StatefulPlain__StAEPlainToRecordPlain : top
(* declaring fun LHAEPlain.MakeAD [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAEPlain.fs7(18,9)] *)
function v_LHAEPlain__MakeAD (x1:top) (x2:top) (x3:top) : top
(* declaring fun LHAEPlain.ParseAD [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAEPlain.fs7(20,9)] *)
function v_LHAEPlain__ParseAD (x1:top) (x2:top) : top
(* declaring fun LHAEPlain.SeqN [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAEPlain.fs7(22,9)] *)
function v_LHAEPlain__SeqN (x1:top) (x2:top) : top
(* assume (!i. (!h. (!ad. LHAEPlain.ParseAD (i, LHAEPlain.MakeAD (i, h, ad)) = ad))) [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAEPlain.fs7(25,0)] *)
axiom a1624_asm: (forall v_i:top. (forall v_h:top. (forall v_ad:top. ((v_LHAEPlain__ParseAD v_i (v_LHAEPlain__MakeAD v_i v_h v_ad)) = v_ad))))
(* declaring value LHAEPlain.makeAD [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAEPlain.fs7(27,0)] *)
function v_LHAEPlain__makeAD : top
(* declaring value LHAEPlain.parseAD [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAEPlain.fs7(28,0)] *)
function v_LHAEPlain__parseAD : top
(* declaring fun LHAEPlain.Payload [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAEPlain.fs7(32,9)] *)
function v_LHAEPlain__Payload (x1:top) (x2:top) (x3:top) (x4:top) : top
(* declaring type LHAEPlain.LHAESent [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAEPlain.fs7(36,0)] *)
predicate v_LHAEPlain__LHAESent_p (x1:top) (x2:top) (x3:top) (x4:top)
(* declaring value LHAEPlain.plain [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAEPlain.fs7(40,0)] *)
function v_LHAEPlain__plain : top
(* declaring value LHAEPlain.repr [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAEPlain.fs7(41,0)] *)
function v_LHAEPlain__repr : top
(* declaring value LHAEPlain.reprFragment [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAEPlain.fs7(42,8)] *)
function v_LHAEPlain__reprFragment : top
(* declaring value LHAEPlain.widen [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAEPlain.fs7(45,0)] *)
function v_LHAEPlain__widen : top
(* declaring value LHAEPlain.makeExtPad [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAEPlain.fs7(56,0)] *)
function v_LHAEPlain__makeExtPad : top
(* declaring value LHAEPlain.parseExtPad [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAEPlain.fs7(57,0)] *)
function v_LHAEPlain__parseExtPad : top
(* declaring fun LHAEPlain.StAEToLHAE [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAEPlain.fs7(63,9)] *)
function v_LHAEPlain__StAEToLHAE (x1:top) : top
(* declaring value LHAEPlain.StatefulPlainToLHAEPlain [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAEPlain.fs7(66,0)] *)
function v_LHAEPlain__StatefulPlainToLHAEPlain : top
(* declaring value LHAEPlain.LHAEPlainToStatefulPlain [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAEPlain.fs7(73,0)] *)
function v_LHAEPlain__LHAEPlainToStatefulPlain : top
(* declaring value MAC_SHA256.a [C:\cygwin\home\Pierre-Yves\mitls\lib\MAC_SHA256.fs7(11,0)] *)
function v_MAC_SHA256__a : top
(* assume MAC_SHA256.a = TLSConstants.MA_HMAC (TLSConstants.SHA256 ()) [C:\cygwin\home\Pierre-Yves\mitls\lib\MAC_SHA256.fs7(11,0)] *)
axiom a1625_asm: (v_MAC_SHA256__a = (v_TLSConstants__MA_HMAC (v_TLSConstants__SHA256 )))
(* declaring predicate MAC_SHA256.Msg [C:\cygwin\home\Pierre-Yves\mitls\lib\MAC_SHA256.fs7(17,10)] *)
predicate v_MAC_SHA256__Msg_p (x1:top) (x2:top)
(* declaring value MAC_SHA256.Mac [C:\cygwin\home\Pierre-Yves\mitls\lib\MAC_SHA256.fs7(21,0)] *)
function v_MAC_SHA256__Mac : top
(* declaring value MAC_SHA256.Verify [C:\cygwin\home\Pierre-Yves\mitls\lib\MAC_SHA256.fs7(24,0)] *)
function v_MAC_SHA256__Verify : top
(* declaring value MAC_SHA256.GEN [C:\cygwin\home\Pierre-Yves\mitls\lib\MAC_SHA256.fs7(28,0)] *)
function v_MAC_SHA256__GEN : top
(* declaring value MAC_SHA256.log [C:\cygwin\home\Pierre-Yves\mitls\lib\MAC_SHA256.fs7(34,8)] *)
function v_MAC_SHA256__log : top
(* declaring value MAC_SHA256.tmem [C:\cygwin\home\Pierre-Yves\mitls\lib\MAC_SHA256.fs7(35,8)] *)
function v_MAC_SHA256__tmem : top
(* declaring value MAC_SHA1.a [C:\cygwin\home\Pierre-Yves\mitls\lib\MAC_SHA1.fs7(11,0)] *)
function v_MAC_SHA1__a : top
(* assume MAC_SHA1.a = TLSConstants.MA_HMAC (TLSConstants.SHA ()) [C:\cygwin\home\Pierre-Yves\mitls\lib\MAC_SHA1.fs7(11,0)] *)
axiom a1626_asm: (v_MAC_SHA1__a = (v_TLSConstants__MA_HMAC (v_TLSConstants__SHA )))
(* declaring predicate MAC_SHA1.Msg [C:\cygwin\home\Pierre-Yves\mitls\lib\MAC_SHA1.fs7(17,10)] *)
predicate v_MAC_SHA1__Msg_p (x1:top) (x2:top)
(* declaring value MAC_SHA1.GEN [C:\cygwin\home\Pierre-Yves\mitls\lib\MAC_SHA1.fs7(21,0)] *)
function v_MAC_SHA1__GEN : top
(* declaring value MAC_SHA1.Mac [C:\cygwin\home\Pierre-Yves\mitls\lib\MAC_SHA1.fs7(23,0)] *)
function v_MAC_SHA1__Mac : top
(* declaring value MAC_SHA1.Verify [C:\cygwin\home\Pierre-Yves\mitls\lib\MAC_SHA1.fs7(26,0)] *)
function v_MAC_SHA1__Verify : top
(* declaring value MAC_SHA1.log [C:\cygwin\home\Pierre-Yves\mitls\lib\MAC_SHA1.fs7(34,8)] *)
function v_MAC_SHA1__log : top
(* declaring value MAC_SHA1.tmem [C:\cygwin\home\Pierre-Yves\mitls\lib\MAC_SHA1.fs7(35,8)] *)
function v_MAC_SHA1__tmem : top
(* assume (!i. (!alg. TLSInfo.AuthId(i) /\ alg = TLSInfo.MacAlg (i) => alg = MAC_SHA256.a \/ alg = MAC_SHA1.a)) [C:\cygwin\home\Pierre-Yves\mitls\lib\MAC.fs7(80,0)] *)
axiom a1627_asm: (forall v_i:top. (forall v_alg:top. (((v_TLSInfo__AuthId_p v_i) /\ (v_alg = (v_TLSInfo__MacAlg v_i))) -> ((v_alg = v_MAC_SHA256__a) \/ (v_alg = v_MAC_SHA1__a)))))
(* declaring predicate MAC.Msg [C:\cygwin\home\Pierre-Yves\mitls\lib\MAC.fs7(84,10)] *)
predicate v_MAC__Msg_p (x1:top) (x2:top)
(* assume (!i. TLSInfo.AuthId(i) /\ not TLSInfo.MacAlg (i) = MAC_SHA256.a \/ TLSInfo.MacAlg (i) = MAC_SHA1.a => false) [C:\cygwin\home\Pierre-Yves\mitls\lib\MAC.fs7(99,0)] *)
axiom a1628_asm: (forall v_i:top. (((v_TLSInfo__AuthId_p v_i) /\ (not (((v_TLSInfo__MacAlg v_i) = v_MAC_SHA256__a) \/ ((v_TLSInfo__MacAlg v_i) = v_MAC_SHA1__a)))) -> false))
(* declaring value MAC.GEN [C:\cygwin\home\Pierre-Yves\mitls\lib\MAC.fs7(101,0)] *)
function v_MAC__GEN : top
(* declaring value MAC.LEAK [C:\cygwin\home\Pierre-Yves\mitls\lib\MAC.fs7(102,0)] *)
function v_MAC__LEAK : top
(* declaring value MAC.COERCE [C:\cygwin\home\Pierre-Yves\mitls\lib\MAC.fs7(103,0)] *)
function v_MAC__COERCE : top
(* declaring value MAC.Mac [C:\cygwin\home\Pierre-Yves\mitls\lib\MAC.fs7(105,0)] *)
function v_MAC__Mac : top
(* declaring value MAC.Verify [C:\cygwin\home\Pierre-Yves\mitls\lib\MAC.fs7(106,0)] *)
function v_MAC__Verify : top
(* declaring value Encode.widen [C:\cygwin\home\Pierre-Yves\mitls\lib\Encode.fs7(25,0)] *)
function v_Encode__widen : top
(* declaring fun Encode.PlainLength [C:\cygwin\home\Pierre-Yves\mitls\lib\Encode.fs7(32,9)] *)
function v_Encode__PlainLength (x1:top) (x2:top) : top
(* assume (!e. (!tlen. pr_GreaterThanOrEqual(tlen, Range.IVSize (e)) => Encode.PlainLength (e, tlen) = bop_Subtraction (tlen, Range.IVSize (e)))) [C:\cygwin\home\Pierre-Yves\mitls\lib\Encode.fs7(33,0)] *)
axiom a1629_asm: (forall v_e:top. (forall v_tlen:top. ((v_tlen >= (v_Range__IVSize v_e)) -> ((v_Encode__PlainLength v_e v_tlen) = (v_tlen - (v_Range__IVSize v_e))))))
(* assume (!e. (!tlen. (!mac. pr_GreaterThanOrEqual(tlen, 0) /\ Tuples.Tup7.1 e = TLSConstants.MACOnly (mac) => Encode.PlainLength (e, tlen) = tlen))) [C:\cygwin\home\Pierre-Yves\mitls\lib\Encode.fs7(37,0)] *)
axiom a1630_asm: (forall v_e:top. (forall v_tlen:top. (forall v_mac:top. (((v_tlen >= 0) /\ ((v_Tuples__Tup7__1 v_e) = (v_TLSConstants__MACOnly v_mac))) -> ((v_Encode__PlainLength v_e v_tlen) = v_tlen)))))
(* assume (!e. (!tlen. (!mac. pr_GreaterThanOrEqual(tlen, 0) /\ Tuples.Tup7.1 e = TLSConstants.MtE (TLSConstants.Stream_RC4_128 (), mac) => Encode.PlainLength (e, tlen) = tlen))) [C:\cygwin\home\Pierre-Yves\mitls\lib\Encode.fs7(40,0)] *)
axiom a1631_asm: (forall v_e:top. (forall v_tlen:top. (forall v_mac:top. (((v_tlen >= 0) /\ ((v_Tuples__Tup7__1 v_e) = (v_TLSConstants__MtE (v_TLSConstants__Stream_RC4_128 ) v_mac))) -> ((v_Encode__PlainLength v_e v_tlen) = v_tlen)))))
(* declaring value Encode.zeros [C:\cygwin\home\Pierre-Yves\mitls\lib\Encode.fs7(47,8)] *)
function v_Encode__zeros : top
(* declaring value Encode.payload [C:\cygwin\home\Pierre-Yves\mitls\lib\Encode.fs7(49,0)] *)
function v_Encode__payload : top
(* declaring fun Encode.MACPlain [C:\cygwin\home\Pierre-Yves\mitls\lib\Encode.fs7(56,9)] *)
function v_Encode__MACPlain (x1:top) (x2:top) (x3:top) (x4:top) : top
(* declaring value Encode.macPlain [C:\cygwin\home\Pierre-Yves\mitls\lib\Encode.fs7(58,0)] *)
function v_Encode__macPlain : top
(* declaring predicate Encode.Decoded [C:\cygwin\home\Pierre-Yves\mitls\lib\Encode.fs7(62,10)] *)
predicate v_Encode__Decoded_p (x1:top) (x2:top) (x3:top)
(* declaring value Encode.mac [C:\cygwin\home\Pierre-Yves\mitls\lib\Encode.fs7(64,0)] *)
function v_Encode__mac : top
(* declaring value Encode.verify [C:\cygwin\home\Pierre-Yves\mitls\lib\Encode.fs7(69,0)] *)
function v_Encode__verify : top
(* declaring predicate Encode.Encoded [C:\cygwin\home\Pierre-Yves\mitls\lib\Encode.fs7(83,10)] *)
predicate v_Encode__Encoded_p (x1:top) (x2:top) (x3:top) (x4:top) (x5:top)
(* declaring value Encode.pad [C:\cygwin\home\Pierre-Yves\mitls\lib\Encode.fs7(85,8)] *)
function v_Encode__pad : top
(* declaring value Encode.encode [C:\cygwin\home\Pierre-Yves\mitls\lib\Encode.fs7(88,0)] *)
function v_Encode__encode : top
(* declaring value Encode.decode [C:\cygwin\home\Pierre-Yves\mitls\lib\Encode.fs7(97,0)] *)
function v_Encode__decode : top
(* declaring value Encode.encodeNoPad [C:\cygwin\home\Pierre-Yves\mitls\lib\Encode.fs7(110,0)] *)
function v_Encode__encodeNoPad : top
(* declaring value Encode.decodeNoPad [C:\cygwin\home\Pierre-Yves\mitls\lib\Encode.fs7(115,0)] *)
function v_Encode__decodeNoPad : top
(* declaring fun Encode.MinTlen [C:\cygwin\home\Pierre-Yves\mitls\lib\Encode.fs7(122,9)] *)
function v_Encode__MinTlen (x1:top) : top
(* assume (!id. (!mac. Tuples.Tup7.1 id = TLSConstants.MACOnly (mac) => Encode.MinTlen (id) = TLSConstants.MacSize (mac))) [C:\cygwin\home\Pierre-Yves\mitls\lib\Encode.fs7(123,0)] *)
axiom a1632_asm: (forall v_id:top. (forall v_mac:top. (((v_Tuples__Tup7__1 v_id) = (v_TLSConstants__MACOnly v_mac)) -> ((v_Encode__MinTlen v_id) = (v_TLSConstants__MacSize v_mac)))))
(* assume (!id. (!mac. Tuples.Tup7.1 id = TLSConstants.MtE (TLSConstants.Stream_RC4_128 (), mac) => Encode.MinTlen (id) = TLSConstants.MacSize (mac))) [C:\cygwin\home\Pierre-Yves\mitls\lib\Encode.fs7(124,0)] *)
axiom a1633_asm: (forall v_id:top. (forall v_mac:top. (((v_Tuples__Tup7__1 v_id) = (v_TLSConstants__MtE (v_TLSConstants__Stream_RC4_128 ) v_mac)) -> ((v_Encode__MinTlen v_id) = (v_TLSConstants__MacSize v_mac)))))
(* assume (!id. (!enc. (!mac. Tuples.Tup7.1 id = TLSConstants.MtE (TLSConstants.CBC_Fresh (enc), mac) => Encode.MinTlen (id) = bop_Addition (bop_Addition (Range.IVSize (id), TLSConstants.MacSize (mac)), Range.FixedPadSize (id, ()))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\Encode.fs7(125,0)] *)
axiom a1634_asm: (forall v_id:top. (forall v_enc:top. (forall v_mac:top. (((v_Tuples__Tup7__1 v_id) = (v_TLSConstants__MtE (v_TLSConstants__CBC_Fresh v_enc) v_mac)) -> ((v_Encode__MinTlen v_id) = (((v_Range__IVSize v_id) + (v_TLSConstants__MacSize v_mac)) + (v_Range__FixedPadSize v_id (v_Tuples__Tup0 ))))))))
(* assume (!id. (!enc. (!mac. Tuples.Tup7.1 id = TLSConstants.MtE (TLSConstants.CBC_Stale (enc), mac) => Encode.MinTlen (id) = bop_Addition (bop_Addition (Range.IVSize (id), TLSConstants.MacSize (mac)), Range.FixedPadSize (id, ()))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\Encode.fs7(126,0)] *)
axiom a1635_asm: (forall v_id:top. (forall v_enc:top. (forall v_mac:top. (((v_Tuples__Tup7__1 v_id) = (v_TLSConstants__MtE (v_TLSConstants__CBC_Stale v_enc) v_mac)) -> ((v_Encode__MinTlen v_id) = (((v_Range__IVSize v_id) + (v_TLSConstants__MacSize v_mac)) + (v_Range__FixedPadSize v_id (v_Tuples__Tup0 ))))))))
(* assume (!id. (!enc. (!mac. Tuples.Tup7.1 id = TLSConstants.MtE (TLSConstants.CBC_Stale (enc), mac) => pr_GreaterThanOrEqual(Encode.MinTlen (id), TLSConstants.BlockSize (enc))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\Encode.fs7(139,0)] *)
axiom a1636_asm: (forall v_id:top. (forall v_enc:top. (forall v_mac:top. (((v_Tuples__Tup7__1 v_id) = (v_TLSConstants__MtE (v_TLSConstants__CBC_Stale v_enc) v_mac)) -> ((v_Encode__MinTlen v_id) >= (v_TLSConstants__BlockSize v_enc))))))
(* assume (!id. (!enc. (!mac. Tuples.Tup7.1 id = TLSConstants.MtE (TLSConstants.CBC_Fresh (enc), mac) => pr_GreaterThanOrEqual(Encode.MinTlen (id), TLSConstants.BlockSize (enc))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\Encode.fs7(142,0)] *)
axiom a1637_asm: (forall v_id:top. (forall v_enc:top. (forall v_mac:top. (((v_Tuples__Tup7__1 v_id) = (v_TLSConstants__MtE (v_TLSConstants__CBC_Fresh v_enc) v_mac)) -> ((v_Encode__MinTlen v_id) >= (v_TLSConstants__BlockSize v_enc))))))
(* declaring value Encode.plain [C:\cygwin\home\Pierre-Yves\mitls\lib\Encode.fs7(146,0)] *)
function v_Encode__plain : top
(* declaring value Encode.repr [C:\cygwin\home\Pierre-Yves\mitls\lib\Encode.fs7(151,0)] *)
function v_Encode__repr : top
(* declaring value ENC.someIV [C:\cygwin\home\Pierre-Yves\mitls\lib\ENC.fs7(32,8)] *)
function v_ENC__someIV : top
(* declaring value ENC.noIV [C:\cygwin\home\Pierre-Yves\mitls\lib\ENC.fs7(33,8)] *)
function v_ENC__noIV : top
(* declaring value ENC.updateIV [C:\cygwin\home\Pierre-Yves\mitls\lib\ENC.fs7(42,8)] *)
function v_ENC__updateIV : top
(* declaring fun ENC.StateID [C:\cygwin\home\Pierre-Yves\mitls\lib\ENC.fs7(53,17)] *)
function v_ENC__StateID (x1:top) (x2:top) (x3:top) : top
(* declaring value ENC.streamCipher [C:\cygwin\home\Pierre-Yves\mitls\lib\ENC.fs7(55,0)] *)
function v_ENC__streamCipher : top
(* declaring value ENC.blockCipher [C:\cygwin\home\Pierre-Yves\mitls\lib\ENC.fs7(56,0)] *)
function v_ENC__blockCipher : top
(* declaring value ENC.GEN [C:\cygwin\home\Pierre-Yves\mitls\lib\ENC.fs7(59,0)] *)
function v_ENC__GEN : top
(* declaring value ENC.LEAK [C:\cygwin\home\Pierre-Yves\mitls\lib\ENC.fs7(60,0)] *)
function v_ENC__LEAK : top
(* declaring value ENC.COERCE [C:\cygwin\home\Pierre-Yves\mitls\lib\ENC.fs7(61,0)] *)
function v_ENC__COERCE : top
(* declaring type ENC.event [C:\cygwin\home\Pierre-Yves\mitls\lib\ENC.fs7(64,0)] *)
predicate v_ENC__ENCrypted_p (x1:top) (x2:top) (x3:top) (x4:top)
function v_ENC__ENCrypted (x1:top) (x2:top) (x3:top) (x4:top) : top
function v_ENC__ENCrypted__1 (x1:top) : top
function v_ENC__ENCrypted__2 (x1:top) : top
function v_ENC__ENCrypted__3 (x1:top) : top
function v_ENC__ENCrypted__4 (x1:top) : top
axiom a1638_v_ENC__ENCrypted_Inj: (forall x1:top, x2:top, x3:top, x4:top. ((v_ENC__ENCrypted__1 (v_ENC__ENCrypted x1 x2 x3 x4)) = x1) /\ (((v_ENC__ENCrypted__2 (v_ENC__ENCrypted x1 x2 x3 x4)) = x2) /\ (((v_ENC__ENCrypted__3 (v_ENC__ENCrypted x1 x2 x3 x4)) = x3) /\ ((v_ENC__ENCrypted__4 (v_ENC__ENCrypted x1 x2 x3 x4)) = x4)))) /\ (forall x1:top, x2:top, x3:top, x4:top,y1:top, y2:top, y3:top, y4:top. (v_ENC__ENCrypted x1 x2 x3 x4) = (v_ENC__ENCrypted y1 y2 y3 y4) -> (x1 = y1) /\ ((x2 = y2) /\ ((x3 = y3) /\ (x4 = y4))))
(* declaring value ENC.ENC [C:\cygwin\home\Pierre-Yves\mitls\lib\ENC.fs7(71,0)] *)
function v_ENC__ENC : top
(* declaring value ENC.DEC [C:\cygwin\home\Pierre-Yves\mitls\lib\ENC.fs7(82,0)] *)
function v_ENC__DEC : top
(* declaring value ENC.addtolog [C:\cygwin\home\Pierre-Yves\mitls\lib\ENC.fs7(92,0)] *)
function v_ENC__addtolog : top
(* declaring value ENC.log [C:\cygwin\home\Pierre-Yves\mitls\lib\ENC.fs7(94,0)] *)
function v_ENC__log : top
(* declaring value ENC.cfind [C:\cygwin\home\Pierre-Yves\mitls\lib\ENC.fs7(96,0)] *)
function v_ENC__cfind : top
(* declaring value ENC.lastblock [C:\cygwin\home\Pierre-Yves\mitls\lib\ENC.fs7(110,8)] *)
function v_ENC__lastblock : top
(* declaring value ENC.cbcenc [C:\cygwin\home\Pierre-Yves\mitls\lib\ENC.fs7(114,8)] *)
function v_ENC__cbcenc : top
(* declaring value ENC.cbcdec [C:\cygwin\home\Pierre-Yves\mitls\lib\ENC.fs7(115,8)] *)
function v_ENC__cbcdec : top
(* declaring value ENC.ENC_int [C:\cygwin\home\Pierre-Yves\mitls\lib\ENC.fs7(117,0)] *)
function v_ENC__ENC_int : top
(* declaring value ENC.DEC_int [C:\cygwin\home\Pierre-Yves\mitls\lib\ENC.fs7(126,8)] *)
function v_ENC__DEC_int : top
(* declaring fun AEAD_GCM.NextEncryptor [C:\cygwin\home\Pierre-Yves\mitls\lib\AEAD_GCM.fs7(28,9)] *)
function v_AEAD_GCM__NextEncryptor (x1:top) (x2:top) : top
(* declaring value AEAD_GCM.GEN [C:\cygwin\home\Pierre-Yves\mitls\lib\AEAD_GCM.fs7(31,0)] *)
function v_AEAD_GCM__GEN : top
(* declaring value AEAD_GCM.COERCE [C:\cygwin\home\Pierre-Yves\mitls\lib\AEAD_GCM.fs7(32,0)] *)
function v_AEAD_GCM__COERCE : top
(* declaring value AEAD_GCM.LEAK [C:\cygwin\home\Pierre-Yves\mitls\lib\AEAD_GCM.fs7(33,0)] *)
function v_AEAD_GCM__LEAK : top
(* declaring predicate AEAD_GCM.ENCrypted [C:\cygwin\home\Pierre-Yves\mitls\lib\AEAD_GCM.fs7(35,10)] *)
predicate v_AEAD_GCM__ENCrypted_p (x1:top) (x2:top) (x3:top) (x4:top)
(* declaring value AEAD_GCM.log [C:\cygwin\home\Pierre-Yves\mitls\lib\AEAD_GCM.fs7(41,8)] *)
function v_AEAD_GCM__log : top
(* declaring value AEAD_GCM.cfind [C:\cygwin\home\Pierre-Yves\mitls\lib\AEAD_GCM.fs7(42,8)] *)
function v_AEAD_GCM__cfind : top
(* declaring value AEAD_GCM.ENC_int [C:\cygwin\home\Pierre-Yves\mitls\lib\AEAD_GCM.fs7(45,8)] *)
function v_AEAD_GCM__ENC_int : top
(* declaring value AEAD_GCM.ENC [C:\cygwin\home\Pierre-Yves\mitls\lib\AEAD_GCM.fs7(49,0)] *)
function v_AEAD_GCM__ENC : top
(* declaring value AEAD_GCM.DEC_int [C:\cygwin\home\Pierre-Yves\mitls\lib\AEAD_GCM.fs7(53,8)] *)
function v_AEAD_GCM__DEC_int : top
(* declaring value AEAD_GCM.DEC [C:\cygwin\home\Pierre-Yves\mitls\lib\AEAD_GCM.fs7(56,0)] *)
function v_AEAD_GCM__DEC : top
(* declaring fun LHAE.KeyDerivationIVSize [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAE.fs7(26,9)] *)
function v_LHAE__KeyDerivationIVSize (x1:top) : top
(* assume (!mac. LHAE.KeyDerivationIVSize (TLSConstants.MACOnly (mac)) = 0) [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAE.fs7(27,0)] *)
axiom a1639_asm: (forall v_mac:top. ((v_LHAE__KeyDerivationIVSize (v_TLSConstants__MACOnly v_mac)) = 0))
(* assume (!mac. LHAE.KeyDerivationIVSize (TLSConstants.MtE (TLSConstants.Stream_RC4_128 (), mac)) = 0) [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAE.fs7(28,0)] *)
axiom a1640_asm: (forall v_mac:top. ((v_LHAE__KeyDerivationIVSize (v_TLSConstants__MtE (v_TLSConstants__Stream_RC4_128 ) v_mac)) = 0))
(* assume (!enc. (!mac. LHAE.KeyDerivationIVSize (TLSConstants.MtE (TLSConstants.CBC_Fresh (enc), mac)) = 0)) [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAE.fs7(29,0)] *)
axiom a1641_asm: (forall v_enc:top. (forall v_mac:top. ((v_LHAE__KeyDerivationIVSize (v_TLSConstants__MtE (v_TLSConstants__CBC_Fresh v_enc) v_mac)) = 0)))
(* assume (!enc. (!mac. LHAE.KeyDerivationIVSize (TLSConstants.MtE (TLSConstants.CBC_Stale (enc), mac)) = TLSConstants.BlockSize (enc))) [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAE.fs7(30,0)] *)
axiom a1642_asm: (forall v_enc:top. (forall v_mac:top. ((v_LHAE__KeyDerivationIVSize (v_TLSConstants__MtE (v_TLSConstants__CBC_Stale v_enc) v_mac)) = (v_TLSConstants__BlockSize v_enc))))
(* assume (!a. pr_GreaterThanOrEqual(LHAE.KeyDerivationIVSize (a), 0)) [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAE.fs7(31,0)] *)
axiom a1643_asm: (forall v_a:top. ((v_LHAE__KeyDerivationIVSize v_a) >= 0))
(* declaring fun LHAE.KeySize [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAE.fs7(33,9)] *)
function v_LHAE__KeySize (x1:top) : top
(* assume (!mac. LHAE.KeySize (TLSConstants.MACOnly (mac)) = TLSConstants.MacKeySize (mac)) [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAE.fs7(34,0)] *)
axiom a1644_asm: (forall v_mac:top. ((v_LHAE__KeySize (v_TLSConstants__MACOnly v_mac)) = (v_TLSConstants__MacKeySize v_mac)))
(* assume (!enc. (!mac. LHAE.KeySize (TLSConstants.MtE (enc, mac)) = bop_Addition (bop_Addition (TLSConstants.MacKeySize (mac), TLSConstants.EncKeySize (enc)), LHAE.KeyDerivationIVSize (TLSConstants.MtE (enc, mac))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAE.fs7(35,0)] *)
axiom a1645_asm: (forall v_enc:top. (forall v_mac:top. ((v_LHAE__KeySize (v_TLSConstants__MtE v_enc v_mac)) = (((v_TLSConstants__MacKeySize v_mac) + (v_TLSConstants__EncKeySize v_enc)) + (v_LHAE__KeyDerivationIVSize (v_TLSConstants__MtE v_enc v_mac))))))
(* assume (!enc. (!prf. LHAE.KeySize (TLSConstants.AEAD (enc, prf)) = bop_Addition (TLSConstants.AEADKeySize (enc), TLSConstants.AEADIVSize (enc)))) [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAE.fs7(36,0)] *)
axiom a1646_asm: (forall v_enc:top. (forall v_prf:top. ((v_LHAE__KeySize (v_TLSConstants__AEAD v_enc v_prf)) = ((v_TLSConstants__AEADKeySize v_enc) + (v_TLSConstants__AEADIVSize v_enc)))))
(* assume (!i. (!mac. Tuples.Tup7.1 i = TLSConstants.MACOnly (mac) => LHAE.KeySize (Tuples.Tup7.1 i) = TLSConstants.MacKeySize (mac))) [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAE.fs7(39,0)] *)
axiom a1647_asm: (forall v_i:top. (forall v_mac:top. (((v_Tuples__Tup7__1 v_i) = (v_TLSConstants__MACOnly v_mac)) -> ((v_LHAE__KeySize (v_Tuples__Tup7__1 v_i)) = (v_TLSConstants__MacKeySize v_mac)))))
(* declaring value LHAE.GEN [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAE.fs7(43,0)] *)
function v_LHAE__GEN : top
(* declaring value LHAE.COERCE [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAE.fs7(44,0)] *)
function v_LHAE__COERCE : top
(* declaring value LHAE.LEAK [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAE.fs7(45,0)] *)
function v_LHAE__LEAK : top
(* declaring value LHAE.mteKey [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAE.fs7(47,8)] *)
function v_LHAE__mteKey : top
(* declaring value LHAE.gcmKey [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAE.fs7(48,8)] *)
function v_LHAE__gcmKey : top
(* declaring type LHAE.ENCrypted [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAE.fs7(54,0)] *)
predicate v_LHAE__ENCrypted_p (x1:top) (x2:top) (x3:top)
(* assume (!e. (!enc. (!mac. (!ad. (!c. Tuples.Tup7.1 e = TLSConstants.MtE (enc, mac) /\ TLSInfo.SafeId(e) => LHAE.ENCrypted(e, ad, c) => TLSInfo.SafeId(e) => (?p. ENC.ENCrypted(e, ad, c, p))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAE.fs7(62,0)] *)
axiom a1648_asm: (forall v_e:top. (forall v_enc:top. (forall v_mac:top. (forall v_ad:top. (forall v_c:top. ((((v_Tuples__Tup7__1 v_e) = (v_TLSConstants__MtE v_enc v_mac)) /\ ((v_TLSInfo__SafeId_p v_e) -> (v_LHAE__ENCrypted_p v_e v_ad v_c))) -> ((v_TLSInfo__SafeId_p v_e) -> (exists v_p:top. (v_ENC__ENCrypted_p v_e v_ad v_c v_p)))))))))
(* assume (!e. (!enc. (!mac. (!ad. (!c. (!p. Tuples.Tup7.1 e = TLSConstants.MtE (enc, mac) /\ TLSInfo.SafeId(e) => ENC.ENCrypted(e, ad, c, p) => TLSInfo.SafeId(e) => LHAE.ENCrypted(e, ad, c))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAE.fs7(66,0)] *)
axiom a1649_asm: (forall v_e:top. (forall v_enc:top. (forall v_mac:top. (forall v_ad:top. (forall v_c:top. (forall v_p:top. ((((v_Tuples__Tup7__1 v_e) = (v_TLSConstants__MtE v_enc v_mac)) /\ ((v_TLSInfo__SafeId_p v_e) -> (v_ENC__ENCrypted_p v_e v_ad v_c v_p))) -> ((v_TLSInfo__SafeId_p v_e) -> (v_LHAE__ENCrypted_p v_e v_ad v_c)))))))))
(* declaring value LHAE.encrypt' [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAE.fs7(70,8)] *)
function v_LHAE__encrypt' : top
(* declaring value LHAE.encrypt [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAE.fs7(75,0)] *)
function v_LHAE__encrypt : top
(* declaring value LHAE.log [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAE.fs7(83,8)] *)
function v_LHAE__log : top
(* declaring value LHAE.cmem [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAE.fs7(84,8)] *)
function v_LHAE__cmem : top
(* declaring value LHAE.decrypt' [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAE.fs7(94,8)] *)
function v_LHAE__decrypt' : top
(* declaring value LHAE.decrypt [C:\cygwin\home\Pierre-Yves\mitls\lib\LHAE.fs7(111,0)] *)
function v_LHAE__decrypt : top
(* declaring fun StatefulLHAE.History [C:\cygwin\home\Pierre-Yves\mitls\lib\StatefulLHAE.fs7(104,9)] *)
function v_StatefulLHAE__History (x1:top) (x2:top) (x3:top) : top
(* declaring value StatefulLHAE.GEN [C:\cygwin\home\Pierre-Yves\mitls\lib\StatefulLHAE.fs7(107,0)] *)
function v_StatefulLHAE__GEN : top
(* declaring value StatefulLHAE.COERCE [C:\cygwin\home\Pierre-Yves\mitls\lib\StatefulLHAE.fs7(109,0)] *)
function v_StatefulLHAE__COERCE : top
(* declaring value StatefulLHAE.LEAK [C:\cygwin\home\Pierre-Yves\mitls\lib\StatefulLHAE.fs7(110,0)] *)
function v_StatefulLHAE__LEAK : top
(* declaring value StatefulLHAE.history [C:\cygwin\home\Pierre-Yves\mitls\lib\StatefulLHAE.fs7(112,0)] *)
function v_StatefulLHAE__history : top
(* declaring type StatefulLHAE.ENCrypted [C:\cygwin\home\Pierre-Yves\mitls\lib\StatefulLHAE.fs7(126,0)] *)
predicate v_StatefulLHAE__ENCrypted_p (x1:top) (x2:top) (x3:top) (x4:top)
(* declaring value StatefulLHAE.encrypt [C:\cygwin\home\Pierre-Yves\mitls\lib\StatefulLHAE.fs7(132,0)] *)
function v_StatefulLHAE__encrypt : top
(* declaring value StatefulLHAE.decrypt [C:\cygwin\home\Pierre-Yves\mitls\lib\StatefulLHAE.fs7(141,0)] *)
function v_StatefulLHAE__decrypt : top
(* declaring value PRF.sample [C:\cygwin\home\Pierre-Yves\mitls\lib\PRF.fs7(45,0)] *)
function v_PRF__sample : top
(* declaring value PRF.coerce [C:\cygwin\home\Pierre-Yves\mitls\lib\PRF.fs7(53,0)] *)
function v_PRF__coerce : top
(* declaring fun PRF.KeyExtensionLength [C:\cygwin\home\Pierre-Yves\mitls\lib\PRF.fs7(61,9)] *)
function v_PRF__KeyExtensionLength (x1:top) : top
(* assume (!mac. PRF.KeyExtensionLength (TLSConstants.MACOnly (mac)) = bop_Multiply (2, TLSConstants.MacKeySize (mac))) /\ (!enc. (!mac. PRF.KeyExtensionLength (TLSConstants.MtE (enc, mac)) = bop_Multiply (2, bop_Addition (bop_Addition (TLSConstants.EncKeySize (enc), TLSConstants.MacKeySize (mac)), LHAE.KeyDerivationIVSize (TLSConstants.MtE (enc, mac)))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\PRF.fs7(62,0)] *)
axiom a1650_asm: ((forall v_mac:top. ((v_PRF__KeyExtensionLength (v_TLSConstants__MACOnly v_mac)) = (2 * (v_TLSConstants__MacKeySize v_mac)))) /\ (forall v_enc:top. (forall v_mac:top. ((v_PRF__KeyExtensionLength (v_TLSConstants__MtE v_enc v_mac)) = (2 * (((v_TLSConstants__EncKeySize v_enc) + (v_TLSConstants__MacKeySize v_mac)) + (v_LHAE__KeyDerivationIVSize (v_TLSConstants__MtE v_enc v_mac))))))))
(* declaring value PRF.keyExtensionLength [C:\cygwin\home\Pierre-Yves\mitls\lib\PRF.fs7(70,0)] *)
function v_PRF__keyExtensionLength : top
(* declaring value PRF.deriveRawKeys [C:\cygwin\home\Pierre-Yves\mitls\lib\PRF.fs7(90,8)] *)
function v_PRF__deriveRawKeys : top
(* declaring value PRF.deriveKeys [C:\cygwin\home\Pierre-Yves\mitls\lib\PRF.fs7(93,8)] *)
function v_PRF__deriveKeys : top
(* declaring type PRF.event [C:\cygwin\home\Pierre-Yves\mitls\lib\PRF.fs7(125,0)] *)
predicate v_PRF__Mismatch_p (x1:top)
function v_PRF__Mismatch (x1:top) : top
function v_PRF__Mismatch__1 (x1:top) : top
axiom a1651_v_PRF__Mismatch_Inj: (forall x1:top. (v_PRF__Mismatch__1 (v_PRF__Mismatch x1)) = x1) /\ (forall x1:top,y1:top. (v_PRF__Mismatch x1) = (v_PRF__Mismatch y1) -> x1 = y1)
(* declaring type PRF.state [C:\cygwin\home\Pierre-Yves\mitls\lib\PRF.fs7(128,0)] *)
predicate v_PRF__Init_p 
function v_PRF__Init  : top
predicate v_PRF__Committed_p (x1:top) (x2:top) (x3:top)
function v_PRF__Committed (x1:top) (x2:top) (x3:top) : top
function v_PRF__Committed__1 (x1:top) : top
function v_PRF__Committed__2 (x1:top) : top
function v_PRF__Committed__3 (x1:top) : top
axiom a1652_v_PRF__Committed_Inj: (forall x1:top, x2:top, x3:top. ((v_PRF__Committed__1 (v_PRF__Committed x1 x2 x3)) = x1) /\ (((v_PRF__Committed__2 (v_PRF__Committed x1 x2 x3)) = x2) /\ ((v_PRF__Committed__3 (v_PRF__Committed x1 x2 x3)) = x3))) /\ (forall x1:top, x2:top, x3:top,y1:top, y2:top, y3:top. (v_PRF__Committed x1 x2 x3) = (v_PRF__Committed y1 y2 y3) -> (x1 = y1) /\ ((x2 = y2) /\ (x3 = y3)))
axiom a1653_v_PRF__Committed_Disj: forall x0:top, x1:top, x2:top. not(v_PRF__Init = (v_PRF__Committed x0 x1 x2))
predicate v_PRF__Derived_p (x1:top) (x2:top) (x3:top)
function v_PRF__Derived (x1:top) (x2:top) (x3:top) : top
function v_PRF__Derived__1 (x1:top) : top
function v_PRF__Derived__2 (x1:top) : top
function v_PRF__Derived__3 (x1:top) : top
axiom a1654_v_PRF__Derived_Inj: (forall x1:top, x2:top, x3:top. ((v_PRF__Derived__1 (v_PRF__Derived x1 x2 x3)) = x1) /\ (((v_PRF__Derived__2 (v_PRF__Derived x1 x2 x3)) = x2) /\ ((v_PRF__Derived__3 (v_PRF__Derived x1 x2 x3)) = x3))) /\ (forall x1:top, x2:top, x3:top,y1:top, y2:top, y3:top. (v_PRF__Derived x1 x2 x3) = (v_PRF__Derived y1 y2 y3) -> (x1 = y1) /\ ((x2 = y2) /\ (x3 = y3)))
axiom a1655_v_PRF__Derived_Disj: forall x0:top, x1:top, x2:top, x3:top, x4:top, x5:top. not((v_PRF__Committed x0 x1 x2) = (v_PRF__Derived x3 x4 x5))
axiom a1656_v_PRF__Derived_Disj: forall x0:top, x1:top, x2:top. not(v_PRF__Init = (v_PRF__Derived x0 x1 x2))
(* declaring value PRF.kdlog [C:\cygwin\home\Pierre-Yves\mitls\lib\PRF.fs7(142,0)] *)
function v_PRF__kdlog : top
(* declaring value PRF.read [C:\cygwin\home\Pierre-Yves\mitls\lib\PRF.fs7(143,0)] *)
function v_PRF__read : top
(* declaring value PRF.update [C:\cygwin\home\Pierre-Yves\mitls\lib\PRF.fs7(144,0)] *)
function v_PRF__update : top
(* declaring value PRF.keyCommit [C:\cygwin\home\Pierre-Yves\mitls\lib\PRF.fs7(149,0)] *)
function v_PRF__keyCommit : top
(* declaring value PRF.commit [C:\cygwin\home\Pierre-Yves\mitls\lib\PRF.fs7(154,8)] *)
function v_PRF__commit : top
(* declaring value PRF.wrap [C:\cygwin\home\Pierre-Yves\mitls\lib\PRF.fs7(157,8)] *)
function v_PRF__wrap : top
(* declaring value PRF.wrap2 [C:\cygwin\home\Pierre-Yves\mitls\lib\PRF.fs7(164,8)] *)
function v_PRF__wrap2 : top
(* declaring value PRF.keyGenClient [C:\cygwin\home\Pierre-Yves\mitls\lib\PRF.fs7(168,0)] *)
function v_PRF__keyGenClient : top
(* declaring value PRF.keyGenServer [C:\cygwin\home\Pierre-Yves\mitls\lib\PRF.fs7(172,0)] *)
function v_PRF__keyGenServer : top
(* declaring type PRF.VerifyData [C:\cygwin\home\Pierre-Yves\mitls\lib\PRF.fs7(194,0)] *)
predicate v_PRF__VerifyData_p (x1:top) (x2:top) (x3:top)
(* declaring type PRF.eventVD [C:\cygwin\home\Pierre-Yves\mitls\lib\PRF.fs7(196,0)] *)
predicate v_PRF__MakeVerifyData_p (x1:top) (x2:top) (x3:top) (x4:top)
function v_PRF__MakeVerifyData (x1:top) (x2:top) (x3:top) (x4:top) : top
function v_PRF__MakeVerifyData__1 (x1:top) : top
function v_PRF__MakeVerifyData__2 (x1:top) : top
function v_PRF__MakeVerifyData__3 (x1:top) : top
function v_PRF__MakeVerifyData__4 (x1:top) : top
axiom a1657_v_PRF__MakeVerifyData_Inj: (forall x1:top, x2:top, x3:top, x4:top. ((v_PRF__MakeVerifyData__1 (v_PRF__MakeVerifyData x1 x2 x3 x4)) = x1) /\ (((v_PRF__MakeVerifyData__2 (v_PRF__MakeVerifyData x1 x2 x3 x4)) = x2) /\ (((v_PRF__MakeVerifyData__3 (v_PRF__MakeVerifyData x1 x2 x3 x4)) = x3) /\ ((v_PRF__MakeVerifyData__4 (v_PRF__MakeVerifyData x1 x2 x3 x4)) = x4)))) /\ (forall x1:top, x2:top, x3:top, x4:top,y1:top, y2:top, y3:top, y4:top. (v_PRF__MakeVerifyData x1 x2 x3 x4) = (v_PRF__MakeVerifyData y1 y2 y3 y4) -> (x1 = y1) /\ ((x2 = y2) /\ ((x3 = y3) /\ (x4 = y4))))
(* declaring value PRF.log [C:\cygwin\home\Pierre-Yves\mitls\lib\PRF.fs7(200,8)] *)
function v_PRF__log : top
(* declaring value PRF.mem [C:\cygwin\home\Pierre-Yves\mitls\lib\PRF.fs7(201,8)] *)
function v_PRF__mem : top
(* declaring value PRF.assoc [C:\cygwin\home\Pierre-Yves\mitls\lib\PRF.fs7(202,8)] *)
function v_PRF__assoc : top
(* declaring value PRF.verifyData [C:\cygwin\home\Pierre-Yves\mitls\lib\PRF.fs7(206,8)] *)
function v_PRF__verifyData : top
(* declaring value PRF.makeVerifyData [C:\cygwin\home\Pierre-Yves\mitls\lib\PRF.fs7(209,0)] *)
function v_PRF__makeVerifyData : top
(* assume (!m. (!r. (!t. (!vd. (!m'. (!t'. PRF.MakeVerifyData(m, r, t, vd) /\ PRF.MakeVerifyData(m', r, t', vd) => m = m' /\ t = t')))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\PRF.fs7(216,0)] *)
axiom a1658_asm: (forall v_m:top. (forall v_r:top. (forall v_t:top. (forall v_vd:top. (forall v_m':top. (forall v_t':top. (((v_PRF__MakeVerifyData_p v_m v_r v_t v_vd) /\ (v_PRF__MakeVerifyData_p v_m' v_r v_t' v_vd)) -> ((v_m = v_m') /\ (v_t = v_t')))))))))
(* declaring value PRF.checkVerifyData [C:\cygwin\home\Pierre-Yves\mitls\lib\PRF.fs7(219,0)] *)
function v_PRF__checkVerifyData : top
(* assume (!si. Tuples.Tup14.10 si = TLSConstants.SSL_3p0 () => not TLSInfo.StrongVD(TLSInfo.VdAlg (si))) [C:\cygwin\home\Pierre-Yves\mitls\lib\PRF.fs7(227,0)] *)
axiom a1659_asm: (forall v_si:top. (((v_Tuples__Tup14__10 v_si) = (v_TLSConstants__SSL_3p0 )) -> (not (v_TLSInfo__StrongVD_p (v_TLSInfo__VdAlg v_si)))))
(* declaring value PRF.ssl_certificate_verify [C:\cygwin\home\Pierre-Yves\mitls\lib\PRF.fs7(230,0)] *)
function v_PRF__ssl_certificate_verify : top
(* declaring type HandshakeMessages.PreHandshakeType [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(42,0)] *)
predicate v_HandshakeMessages__HT_hello_request_p 
function v_HandshakeMessages__HT_hello_request  : top
predicate v_HandshakeMessages__HT_client_hello_p 
function v_HandshakeMessages__HT_client_hello  : top
axiom a1660_v_HandshakeMessages__HT_client_hello_Disj: not(v_HandshakeMessages__HT_hello_request = v_HandshakeMessages__HT_client_hello)
predicate v_HandshakeMessages__HT_server_hello_p 
function v_HandshakeMessages__HT_server_hello  : top
axiom a1661_v_HandshakeMessages__HT_server_hello_Disj: not(v_HandshakeMessages__HT_client_hello = v_HandshakeMessages__HT_server_hello)
axiom a1662_v_HandshakeMessages__HT_server_hello_Disj: not(v_HandshakeMessages__HT_hello_request = v_HandshakeMessages__HT_server_hello)
predicate v_HandshakeMessages__HT_certificate_p 
function v_HandshakeMessages__HT_certificate  : top
axiom a1663_v_HandshakeMessages__HT_certificate_Disj: not(v_HandshakeMessages__HT_server_hello = v_HandshakeMessages__HT_certificate)
axiom a1664_v_HandshakeMessages__HT_certificate_Disj: not(v_HandshakeMessages__HT_client_hello = v_HandshakeMessages__HT_certificate)
axiom a1665_v_HandshakeMessages__HT_certificate_Disj: not(v_HandshakeMessages__HT_hello_request = v_HandshakeMessages__HT_certificate)
predicate v_HandshakeMessages__HT_server_key_exchange_p 
function v_HandshakeMessages__HT_server_key_exchange  : top
axiom a1666_v_HandshakeMessages__HT_server_key_exchange_Disj: not(v_HandshakeMessages__HT_certificate = v_HandshakeMessages__HT_server_key_exchange)
axiom a1667_v_HandshakeMessages__HT_server_key_exchange_Disj: not(v_HandshakeMessages__HT_server_hello = v_HandshakeMessages__HT_server_key_exchange)
axiom a1668_v_HandshakeMessages__HT_server_key_exchange_Disj: not(v_HandshakeMessages__HT_client_hello = v_HandshakeMessages__HT_server_key_exchange)
axiom a1669_v_HandshakeMessages__HT_server_key_exchange_Disj: not(v_HandshakeMessages__HT_hello_request = v_HandshakeMessages__HT_server_key_exchange)
predicate v_HandshakeMessages__HT_certificate_request_p 
function v_HandshakeMessages__HT_certificate_request  : top
axiom a1670_v_HandshakeMessages__HT_certificate_request_Disj: not(v_HandshakeMessages__HT_server_key_exchange = v_HandshakeMessages__HT_certificate_request)
axiom a1671_v_HandshakeMessages__HT_certificate_request_Disj: not(v_HandshakeMessages__HT_certificate = v_HandshakeMessages__HT_certificate_request)
axiom a1672_v_HandshakeMessages__HT_certificate_request_Disj: not(v_HandshakeMessages__HT_server_hello = v_HandshakeMessages__HT_certificate_request)
axiom a1673_v_HandshakeMessages__HT_certificate_request_Disj: not(v_HandshakeMessages__HT_client_hello = v_HandshakeMessages__HT_certificate_request)
axiom a1674_v_HandshakeMessages__HT_certificate_request_Disj: not(v_HandshakeMessages__HT_hello_request = v_HandshakeMessages__HT_certificate_request)
predicate v_HandshakeMessages__HT_server_hello_done_p 
function v_HandshakeMessages__HT_server_hello_done  : top
axiom a1675_v_HandshakeMessages__HT_server_hello_done_Disj: not(v_HandshakeMessages__HT_certificate_request = v_HandshakeMessages__HT_server_hello_done)
axiom a1676_v_HandshakeMessages__HT_server_hello_done_Disj: not(v_HandshakeMessages__HT_server_key_exchange = v_HandshakeMessages__HT_server_hello_done)
axiom a1677_v_HandshakeMessages__HT_server_hello_done_Disj: not(v_HandshakeMessages__HT_certificate = v_HandshakeMessages__HT_server_hello_done)
axiom a1678_v_HandshakeMessages__HT_server_hello_done_Disj: not(v_HandshakeMessages__HT_server_hello = v_HandshakeMessages__HT_server_hello_done)
axiom a1679_v_HandshakeMessages__HT_server_hello_done_Disj: not(v_HandshakeMessages__HT_client_hello = v_HandshakeMessages__HT_server_hello_done)
axiom a1680_v_HandshakeMessages__HT_server_hello_done_Disj: not(v_HandshakeMessages__HT_hello_request = v_HandshakeMessages__HT_server_hello_done)
predicate v_HandshakeMessages__HT_certificate_verify_p 
function v_HandshakeMessages__HT_certificate_verify  : top
axiom a1681_v_HandshakeMessages__HT_certificate_verify_Disj: not(v_HandshakeMessages__HT_server_hello_done = v_HandshakeMessages__HT_certificate_verify)
axiom a1682_v_HandshakeMessages__HT_certificate_verify_Disj: not(v_HandshakeMessages__HT_certificate_request = v_HandshakeMessages__HT_certificate_verify)
axiom a1683_v_HandshakeMessages__HT_certificate_verify_Disj: not(v_HandshakeMessages__HT_server_key_exchange = v_HandshakeMessages__HT_certificate_verify)
axiom a1684_v_HandshakeMessages__HT_certificate_verify_Disj: not(v_HandshakeMessages__HT_certificate = v_HandshakeMessages__HT_certificate_verify)
axiom a1685_v_HandshakeMessages__HT_certificate_verify_Disj: not(v_HandshakeMessages__HT_server_hello = v_HandshakeMessages__HT_certificate_verify)
axiom a1686_v_HandshakeMessages__HT_certificate_verify_Disj: not(v_HandshakeMessages__HT_client_hello = v_HandshakeMessages__HT_certificate_verify)
axiom a1687_v_HandshakeMessages__HT_certificate_verify_Disj: not(v_HandshakeMessages__HT_hello_request = v_HandshakeMessages__HT_certificate_verify)
predicate v_HandshakeMessages__HT_client_key_exchange_p 
function v_HandshakeMessages__HT_client_key_exchange  : top
axiom a1688_v_HandshakeMessages__HT_client_key_exchange_Disj: not(v_HandshakeMessages__HT_certificate_verify = v_HandshakeMessages__HT_client_key_exchange)
axiom a1689_v_HandshakeMessages__HT_client_key_exchange_Disj: not(v_HandshakeMessages__HT_server_hello_done = v_HandshakeMessages__HT_client_key_exchange)
axiom a1690_v_HandshakeMessages__HT_client_key_exchange_Disj: not(v_HandshakeMessages__HT_certificate_request = v_HandshakeMessages__HT_client_key_exchange)
axiom a1691_v_HandshakeMessages__HT_client_key_exchange_Disj: not(v_HandshakeMessages__HT_server_key_exchange = v_HandshakeMessages__HT_client_key_exchange)
axiom a1692_v_HandshakeMessages__HT_client_key_exchange_Disj: not(v_HandshakeMessages__HT_certificate = v_HandshakeMessages__HT_client_key_exchange)
axiom a1693_v_HandshakeMessages__HT_client_key_exchange_Disj: not(v_HandshakeMessages__HT_server_hello = v_HandshakeMessages__HT_client_key_exchange)
axiom a1694_v_HandshakeMessages__HT_client_key_exchange_Disj: not(v_HandshakeMessages__HT_client_hello = v_HandshakeMessages__HT_client_key_exchange)
axiom a1695_v_HandshakeMessages__HT_client_key_exchange_Disj: not(v_HandshakeMessages__HT_hello_request = v_HandshakeMessages__HT_client_key_exchange)
predicate v_HandshakeMessages__HT_finished_p 
function v_HandshakeMessages__HT_finished  : top
axiom a1696_v_HandshakeMessages__HT_finished_Disj: not(v_HandshakeMessages__HT_client_key_exchange = v_HandshakeMessages__HT_finished)
axiom a1697_v_HandshakeMessages__HT_finished_Disj: not(v_HandshakeMessages__HT_certificate_verify = v_HandshakeMessages__HT_finished)
axiom a1698_v_HandshakeMessages__HT_finished_Disj: not(v_HandshakeMessages__HT_server_hello_done = v_HandshakeMessages__HT_finished)
axiom a1699_v_HandshakeMessages__HT_finished_Disj: not(v_HandshakeMessages__HT_certificate_request = v_HandshakeMessages__HT_finished)
axiom a1700_v_HandshakeMessages__HT_finished_Disj: not(v_HandshakeMessages__HT_server_key_exchange = v_HandshakeMessages__HT_finished)
axiom a1701_v_HandshakeMessages__HT_finished_Disj: not(v_HandshakeMessages__HT_certificate = v_HandshakeMessages__HT_finished)
axiom a1702_v_HandshakeMessages__HT_finished_Disj: not(v_HandshakeMessages__HT_server_hello = v_HandshakeMessages__HT_finished)
axiom a1703_v_HandshakeMessages__HT_finished_Disj: not(v_HandshakeMessages__HT_client_hello = v_HandshakeMessages__HT_finished)
axiom a1704_v_HandshakeMessages__HT_finished_Disj: not(v_HandshakeMessages__HT_hello_request = v_HandshakeMessages__HT_finished)
(* declaring type HandshakeMessages.IsHandshakeType [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(54,0)] *)
predicate v_HandshakeMessages__IsHandshakeType_p (x1:top)
(* assume (!ht. IsHandshakeType(ht) <=> ht = HT_hello_request () \/ ht = HT_client_hello () \/ ht = HT_server_hello () \/ ht = HT_certificate () \/ ht = HT_server_key_exchange () \/ ht = HT_certificate_request () \/ ht = HT_server_hello_done () \/ ht = HT_certificate_verify () \/ ht = HT_client_key_exchange () \/ ht = HT_finished ()) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(56,0)] *)
axiom a1705_asm: (forall v_ht:top. ((v_HandshakeMessages__IsHandshakeType_p v_ht) <-> ((v_ht = (v_HandshakeMessages__HT_hello_request )) \/ ((v_ht = (v_HandshakeMessages__HT_client_hello )) \/ ((v_ht = (v_HandshakeMessages__HT_server_hello )) \/ ((v_ht = (v_HandshakeMessages__HT_certificate )) \/ ((v_ht = (v_HandshakeMessages__HT_server_key_exchange )) \/ ((v_ht = (v_HandshakeMessages__HT_certificate_request )) \/ ((v_ht = (v_HandshakeMessages__HT_server_hello_done )) \/ ((v_ht = (v_HandshakeMessages__HT_certificate_verify )) \/ ((v_ht = (v_HandshakeMessages__HT_client_key_exchange )) \/ (v_ht = (v_HandshakeMessages__HT_finished )))))))))))))
(* declaring fun HandshakeMessages.HTBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(71,9)] *)
function v_HandshakeMessages__HTBytes (x1:top) : top
(* assume HTBytes (HT_hello_request ()) = array_of_list op_ColonColon (0, op_Nil ()) /\ HTBytes (HT_client_hello ()) = array_of_list op_ColonColon (1, op_Nil ()) /\ HTBytes (HT_server_hello ()) = array_of_list op_ColonColon (2, op_Nil ()) /\ HTBytes (HT_certificate ()) = array_of_list op_ColonColon (11, op_Nil ()) /\ HTBytes (HT_server_key_exchange ()) = array_of_list op_ColonColon (12, op_Nil ()) /\ HTBytes (HT_certificate_request ()) = array_of_list op_ColonColon (13, op_Nil ()) /\ HTBytes (HT_server_hello_done ()) = array_of_list op_ColonColon (14, op_Nil ()) /\ HTBytes (HT_certificate_verify ()) = array_of_list op_ColonColon (15, op_Nil ()) /\ HTBytes (HT_client_key_exchange ()) = array_of_list op_ColonColon (16, op_Nil ()) /\ HTBytes (HT_finished ()) = array_of_list op_ColonColon (20, op_Nil ()) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(73,8)] *)
axiom a1706_asm: (((v_HandshakeMessages__HTBytes (v_HandshakeMessages__HT_hello_request )) = (v_Pervasives__array_of_list (v_Pervasives__op_ColonColon 0 (v_Pervasives__op_Nil )))) /\ (((v_HandshakeMessages__HTBytes (v_HandshakeMessages__HT_client_hello )) = (v_Pervasives__array_of_list (v_Pervasives__op_ColonColon 1 (v_Pervasives__op_Nil )))) /\ (((v_HandshakeMessages__HTBytes (v_HandshakeMessages__HT_server_hello )) = (v_Pervasives__array_of_list (v_Pervasives__op_ColonColon 2 (v_Pervasives__op_Nil )))) /\ (((v_HandshakeMessages__HTBytes (v_HandshakeMessages__HT_certificate )) = (v_Pervasives__array_of_list (v_Pervasives__op_ColonColon 11 (v_Pervasives__op_Nil )))) /\ (((v_HandshakeMessages__HTBytes (v_HandshakeMessages__HT_server_key_exchange )) = (v_Pervasives__array_of_list (v_Pervasives__op_ColonColon 12 (v_Pervasives__op_Nil )))) /\ (((v_HandshakeMessages__HTBytes (v_HandshakeMessages__HT_certificate_request )) = (v_Pervasives__array_of_list (v_Pervasives__op_ColonColon 13 (v_Pervasives__op_Nil )))) /\ (((v_HandshakeMessages__HTBytes (v_HandshakeMessages__HT_server_hello_done )) = (v_Pervasives__array_of_list (v_Pervasives__op_ColonColon 14 (v_Pervasives__op_Nil )))) /\ (((v_HandshakeMessages__HTBytes (v_HandshakeMessages__HT_certificate_verify )) = (v_Pervasives__array_of_list (v_Pervasives__op_ColonColon 15 (v_Pervasives__op_Nil )))) /\ (((v_HandshakeMessages__HTBytes (v_HandshakeMessages__HT_client_key_exchange )) = (v_Pervasives__array_of_list (v_Pervasives__op_ColonColon 16 (v_Pervasives__op_Nil )))) /\ ((v_HandshakeMessages__HTBytes (v_HandshakeMessages__HT_finished )) = (v_Pervasives__array_of_list (v_Pervasives__op_ColonColon 20 (v_Pervasives__op_Nil )))))))))))))
(* declaring value HandshakeMessages.htBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(85,0)] *)
function v_HandshakeMessages__htBytes : top
(* declaring value HandshakeMessages.parseHt [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(86,0)] *)
function v_HandshakeMessages__parseHt : top
(* declaring fun HandshakeMessages.MessageBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(88,9)] *)
function v_HandshakeMessages__MessageBytes (x1:top) (x2:top) : top
(* assume (!ht. (!b. MessageBytes (ht, b) = bop_ArrayAppend (HTBytes (ht), TLSConstants.VLBytes (3, b)))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(89,8)] *)
axiom a1707_asm: (forall v_ht:top. (forall v_b:top. ((v_HandshakeMessages__MessageBytes v_ht v_b) = (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__HTBytes v_ht) (v_TLSConstants__VLBytes 3 v_b)))))
(* declaring value HandshakeMessages.messageBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(90,0)] *)
function v_HandshakeMessages__messageBytes : top
(* declaring value HandshakeMessages.parseMessage [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(91,0)] *)
function v_HandshakeMessages__parseMessage : top
(* Querying for ask *)
(* query (!ht. (!b. (!b'. MessageBytes (ht, b) = MessageBytes (ht, b') => b = b'))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(95,0)] *)
goal g1_gl: (forall v_ht:top. (forall v_b:top. (forall v_b':top. (((v_HandshakeMessages__MessageBytes v_ht v_b) = (v_HandshakeMessages__MessageBytes v_ht v_b')) -> (v_b = v_b')))))
(* assume (!ht. (!b. (!b'. MessageBytes (ht, b) = MessageBytes (ht, b') => b = b'))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(95,0)] *)
axiom a1708_asm: (forall v_ht:top. (forall v_b:top. (forall v_b':top. (((v_HandshakeMessages__MessageBytes v_ht v_b) = (v_HandshakeMessages__MessageBytes v_ht v_b')) -> (v_b = v_b')))))
(* Querying for ask *)
(* query (!ht. IsHandshakeType(ht) => Bytes.BLength (HTBytes (ht)) = 1) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(97,0)] *)
goal g2_gl: (forall v_ht:top. ((v_HandshakeMessages__IsHandshakeType_p v_ht) -> ((v_Bytes__BLength (v_HandshakeMessages__HTBytes v_ht)) = 1)))
(* assume (!ht. IsHandshakeType(ht) => Bytes.BLength (HTBytes (ht)) = 1) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(97,0)] *)
axiom a1709_asm: (forall v_ht:top. ((v_HandshakeMessages__IsHandshakeType_p v_ht) -> ((v_Bytes__BLength (v_HandshakeMessages__HTBytes v_ht)) = 1)))
(* Querying for ask *)
(* query (!ht. (!ht'. IsHandshakeType(ht) /\ IsHandshakeType(ht') => HTBytes (ht) = HTBytes (ht') => ht = ht')) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(98,0)] *)
goal g3_gl: (forall v_ht:top. (forall v_ht':top. (((v_HandshakeMessages__IsHandshakeType_p v_ht) /\ (v_HandshakeMessages__IsHandshakeType_p v_ht')) -> (((v_HandshakeMessages__HTBytes v_ht) = (v_HandshakeMessages__HTBytes v_ht')) -> (v_ht = v_ht')))))
(* assume (!ht. (!ht'. IsHandshakeType(ht) /\ IsHandshakeType(ht') => HTBytes (ht) = HTBytes (ht') => ht = ht')) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(98,0)] *)
axiom a1710_asm: (forall v_ht:top. (forall v_ht':top. (((v_HandshakeMessages__IsHandshakeType_p v_ht) /\ (v_HandshakeMessages__IsHandshakeType_p v_ht')) -> (((v_HandshakeMessages__HTBytes v_ht) = (v_HandshakeMessages__HTBytes v_ht')) -> (v_ht = v_ht')))))
(* Querying for ask *)
(* query (!ht. (!b. (!ht'. (!b'. IsHandshakeType(ht) /\ IsHandshakeType(ht') => MessageBytes (ht, b) = MessageBytes (ht', b') => ht = ht' /\ b = b')))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(100,0)] *)
goal g4_gl: (forall v_ht:top. (forall v_b:top. (forall v_ht':top. (forall v_b':top. (((v_HandshakeMessages__IsHandshakeType_p v_ht) /\ (v_HandshakeMessages__IsHandshakeType_p v_ht')) -> (((v_HandshakeMessages__MessageBytes v_ht v_b) = (v_HandshakeMessages__MessageBytes v_ht' v_b')) -> ((v_ht = v_ht') /\ (v_b = v_b'))))))))
(* assume (!ht. (!b. (!ht'. (!b'. IsHandshakeType(ht) /\ IsHandshakeType(ht') => MessageBytes (ht, b) = MessageBytes (ht', b') => ht = ht' /\ b = b')))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(100,0)] *)
axiom a1711_asm: (forall v_ht:top. (forall v_b:top. (forall v_ht':top. (forall v_b':top. (((v_HandshakeMessages__IsHandshakeType_p v_ht) /\ (v_HandshakeMessages__IsHandshakeType_p v_ht')) -> (((v_HandshakeMessages__MessageBytes v_ht v_b) = (v_HandshakeMessages__MessageBytes v_ht' v_b')) -> ((v_ht = v_ht') /\ (v_b = v_b'))))))))
(* declaring value HandshakeMessages.splitMessage [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(105,0)] *)
function v_HandshakeMessages__splitMessage : top
(* declaring type HandshakeMessages.unsafe [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(108,10)] *)
predicate v_HandshakeMessages__Unsafe_p (x1:top)
(* assume (!ki. Unsafe(ki) <=> not TLSInfo.Auth(ki)) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(109,8)] *)
axiom a1712_asm: (forall v_ki:top. ((v_HandshakeMessages__Unsafe_p v_ki) <-> (not (v_TLSInfo__Auth_p v_ki))))
(* declaring value HandshakeMessages.makeFragment [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(110,0)] *)
function v_HandshakeMessages__makeFragment : top
(* declaring value HandshakeMessages.popBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(112,0)] *)
function v_HandshakeMessages__popBytes : top
(* declaring value HandshakeMessages.popVLBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(113,0)] *)
function v_HandshakeMessages__popVLBytes : top
(* declaring value HandshakeMessages.popProtocolVersion [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(115,0)] *)
function v_HandshakeMessages__popProtocolVersion : top
(* declaring value HandshakeMessages.popClientRandom [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(116,0)] *)
function v_HandshakeMessages__popClientRandom : top
(* declaring value HandshakeMessages.popSid [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(117,0)] *)
function v_HandshakeMessages__popSid : top
(* declaring value HandshakeMessages.popCSBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(118,0)] *)
function v_HandshakeMessages__popCSBytes : top
(* declaring value HandshakeMessages.popCPBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(119,0)] *)
function v_HandshakeMessages__popCPBytes : top
(* declaring value HandshakeMessages.popCS [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(121,0)] *)
function v_HandshakeMessages__popCS : top
(* declaring value HandshakeMessages.popCP [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(122,0)] *)
function v_HandshakeMessages__popCP : top
(* declaring fun HandshakeMessages.ClientHelloMsg [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(134,9)] *)
function v_HandshakeMessages__ClientHelloMsg (x1:top) (x2:top) (x3:top) (x4:top) (x5:top) (x6:top) : top
(* assume (!cv. (!clRdm. (!sid. (!cls. (!cm. (!ext. (!b. ClientHelloMsg (cv, clRdm, sid, cls, cm, ext) = MessageBytes (HT_client_hello (), bop_ArrayAppend (TLSConstants.VersionBytes (cv), bop_ArrayAppend (Bytes.B (clRdm), bop_ArrayAppend (TLSConstants.VLBytes (1, Bytes.B (sid)), bop_ArrayAppend (TLSConstants.VLBytes (2, cls), bop_ArrayAppend (TLSConstants.VLBytes (1, cm), Bytes.B (ext)))))))))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(135,0)] *)
axiom a1713_asm: (forall v_cv:top. (forall v_clRdm:top. (forall v_sid:top. (forall v_cls:top. (forall v_cm:top. (forall v_ext:top. (forall v_b:top. ((v_HandshakeMessages__ClientHelloMsg v_cv v_clRdm v_sid v_cls v_cm v_ext) = (v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_client_hello ) (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VersionBytes v_cv) (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_clRdm) (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_sid)) (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 v_cls) (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 v_cm) (v_Bytes__B v_ext)))))))))))))))
(* declaring value HandshakeMessages.clientHelloBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(146,0)] *)
function v_HandshakeMessages__clientHelloBytes : top
(* declaring value HandshakeMessages.parseClientHelloDumb [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(149,0)] *)
function v_HandshakeMessages__parseClientHelloDumb : top
(* declaring value HandshakeMessages.parseClientHello [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(153,0)] *)
function v_HandshakeMessages__parseClientHello : top
(* Querying for ask *)
(* query (!pv. (!cr. (!s. (!cs. (!cm. (!ex. (!pv'. (!cr'. (!s'. (!cs'. (!cm'. (!ex'. TLSConstants.IsProtocolVersion(pv) /\ TLSConstants.IsProtocolVersion(pv') => Bytes.BLength (Bytes.B (cr)) = Bytes.BLength (Bytes.B (cr')) => ClientHelloMsg (pv, cr, s, cs, cm, ex) = ClientHelloMsg (pv', cr', s', cs', cm', ex') => pv = pv' /\ cr = cr' /\ s = s' /\ ex = ex')))))))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(159,0)] *)
goal g5_gl: (forall v_pv:top. (forall v_cr:top. (forall v_s:top. (forall v_cs:top. (forall v_cm:top. (forall v_ex:top. (forall v_pv':top. (forall v_cr':top. (forall v_s':top. (forall v_cs':top. (forall v_cm':top. (forall v_ex':top. (((v_TLSConstants__IsProtocolVersion_p v_pv) /\ (v_TLSConstants__IsProtocolVersion_p v_pv')) -> (((v_Bytes__BLength (v_Bytes__B v_cr)) = (v_Bytes__BLength (v_Bytes__B v_cr'))) -> (((v_HandshakeMessages__ClientHelloMsg v_pv v_cr v_s v_cs v_cm v_ex) = (v_HandshakeMessages__ClientHelloMsg v_pv' v_cr' v_s' v_cs' v_cm' v_ex')) -> ((v_pv = v_pv') /\ ((v_cr = v_cr') /\ ((v_s = v_s') /\ (v_ex = v_ex')))))))))))))))))))
(* assume (!pv. (!cr. (!s. (!cs. (!cm. (!ex. (!pv'. (!cr'. (!s'. (!cs'. (!cm'. (!ex'. TLSConstants.IsProtocolVersion(pv) /\ TLSConstants.IsProtocolVersion(pv') => Bytes.BLength (Bytes.B (cr)) = Bytes.BLength (Bytes.B (cr')) => ClientHelloMsg (pv, cr, s, cs, cm, ex) = ClientHelloMsg (pv', cr', s', cs', cm', ex') => pv = pv' /\ cr = cr' /\ s = s' /\ ex = ex')))))))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(159,0)] *)
axiom a1714_asm: (forall v_pv:top. (forall v_cr:top. (forall v_s:top. (forall v_cs:top. (forall v_cm:top. (forall v_ex:top. (forall v_pv':top. (forall v_cr':top. (forall v_s':top. (forall v_cs':top. (forall v_cm':top. (forall v_ex':top. (((v_TLSConstants__IsProtocolVersion_p v_pv) /\ (v_TLSConstants__IsProtocolVersion_p v_pv')) -> (((v_Bytes__BLength (v_Bytes__B v_cr)) = (v_Bytes__BLength (v_Bytes__B v_cr'))) -> (((v_HandshakeMessages__ClientHelloMsg v_pv v_cr v_s v_cs v_cm v_ex) = (v_HandshakeMessages__ClientHelloMsg v_pv' v_cr' v_s' v_cs' v_cm' v_ex')) -> ((v_pv = v_pv') /\ ((v_cr = v_cr') /\ ((v_s = v_s') /\ (v_ex = v_ex')))))))))))))))))))
(* Querying for ask *)
(* query (!pv. (!cr. (!s. (!cs. (!cm. (!ex. (!pv'. (!cr'. (!s'. (!cs'. (!cm'. (!ex'. ClientHelloMsg (pv, cr, s, cs, cm, ex) = ClientHelloMsg (pv', cr', s', cs', cm', ex') => Bytes.BLength (ClientHelloMsg (pv, cr, s, cs, cm, ex)) = Bytes.BLength (ClientHelloMsg (pv', cr', s', cs', cm', ex')))))))))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(165,0)] *)
goal g6_gl: (forall v_pv:top. (forall v_cr:top. (forall v_s:top. (forall v_cs:top. (forall v_cm:top. (forall v_ex:top. (forall v_pv':top. (forall v_cr':top. (forall v_s':top. (forall v_cs':top. (forall v_cm':top. (forall v_ex':top. (((v_HandshakeMessages__ClientHelloMsg v_pv v_cr v_s v_cs v_cm v_ex) = (v_HandshakeMessages__ClientHelloMsg v_pv' v_cr' v_s' v_cs' v_cm' v_ex')) -> ((v_Bytes__BLength (v_HandshakeMessages__ClientHelloMsg v_pv v_cr v_s v_cs v_cm v_ex)) = (v_Bytes__BLength (v_HandshakeMessages__ClientHelloMsg v_pv' v_cr' v_s' v_cs' v_cm' v_ex'))))))))))))))))
(* assume (!pv. (!cr. (!s. (!cs. (!cm. (!ex. (!pv'. (!cr'. (!s'. (!cs'. (!cm'. (!ex'. ClientHelloMsg (pv, cr, s, cs, cm, ex) = ClientHelloMsg (pv', cr', s', cs', cm', ex') => Bytes.BLength (ClientHelloMsg (pv, cr, s, cs, cm, ex)) = Bytes.BLength (ClientHelloMsg (pv', cr', s', cs', cm', ex')))))))))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(165,0)] *)
axiom a1715_asm: (forall v_pv:top. (forall v_cr:top. (forall v_s:top. (forall v_cs:top. (forall v_cm:top. (forall v_ex:top. (forall v_pv':top. (forall v_cr':top. (forall v_s':top. (forall v_cs':top. (forall v_cm':top. (forall v_ex':top. (((v_HandshakeMessages__ClientHelloMsg v_pv v_cr v_s v_cs v_cm v_ex) = (v_HandshakeMessages__ClientHelloMsg v_pv' v_cr' v_s' v_cs' v_cm' v_ex')) -> ((v_Bytes__BLength (v_HandshakeMessages__ClientHelloMsg v_pv v_cr v_s v_cs v_cm v_ex)) = (v_Bytes__BLength (v_HandshakeMessages__ClientHelloMsg v_pv' v_cr' v_s' v_cs' v_cm' v_ex'))))))))))))))))
(* declaring fun HandshakeMessages.ServerHelloMsg [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(169,9)] *)
function v_HandshakeMessages__ServerHelloMsg (x1:top) (x2:top) (x3:top) (x4:top) (x5:top) (x6:top) : top
(* assume (!pv. (!sr. (!sid. (!cs. (!cm. (!ext. ServerHelloMsg (pv, sr, sid, cs, cm, ext) = MessageBytes (HT_server_hello (), bop_ArrayAppend (TLSConstants.VersionBytes (pv), bop_ArrayAppend (Bytes.B (sr), bop_ArrayAppend (TLSConstants.VLBytes (1, Bytes.B (sid)), bop_ArrayAppend (TLSConstants.CipherSuiteBytes (cs), bop_ArrayAppend (TLSConstants.CompressionBytes (cm), Bytes.B (ext))))))))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(170,8)] *)
axiom a1716_asm: (forall v_pv:top. (forall v_sr:top. (forall v_sid:top. (forall v_cs:top. (forall v_cm:top. (forall v_ext:top. ((v_HandshakeMessages__ServerHelloMsg v_pv v_sr v_sid v_cs v_cm v_ext) = (v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_server_hello ) (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VersionBytes v_pv) (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_sr) (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_sid)) (v_Pervasives__bop_ArrayAppend (v_TLSConstants__CipherSuiteBytes v_cs) (v_Pervasives__bop_ArrayAppend (v_TLSConstants__CompressionBytes v_cm) (v_Bytes__B v_ext))))))))))))))
(* declaring fun HandshakeMessages.SessionHelloParams [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(181,9)] *)
function v_HandshakeMessages__SessionHelloParams (x1:top) (x2:top) : top
(* assume (!si. SessionHelloParams (si, ()) = (Tuples.Tup14.10 si, Tuples.Tup14.1 si, Tuples.Tup14.5 si)) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(182,0)] *)
axiom a1717_asm: (forall v_si:top. ((v_HandshakeMessages__SessionHelloParams v_si (v_Tuples__Tup0 )) = (v_Tuples__Tup3 (v_Tuples__Tup14__10 v_si) (v_Tuples__Tup14__1 v_si) (v_Tuples__Tup14__5 v_si))))
(* declaring value HandshakeMessages.serverHelloBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(185,0)] *)
function v_HandshakeMessages__serverHelloBytes : top
(* declaring value HandshakeMessages.parseServerHello [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(188,0)] *)
function v_HandshakeMessages__parseServerHello : top
(* Querying for ask *)
(* query (!pv. (!sr. (!sid. (!cs. (!cm. (!ext. (!pv'. (!sr'. (!sid'. (!cs'. (!cm'. (!ext'. TLSConstants.IsProtocolVersion(pv) /\ TLSConstants.IsProtocolVersion(pv') => TLSConstants.IsCompression(cm) /\ TLSConstants.IsCompression(cm') => Bytes.BLength (Bytes.B (sr)) = Bytes.BLength (Bytes.B (sr')) => ServerHelloMsg (pv, sr, sid, cs, cm, ext) = ServerHelloMsg (pv', sr', sid', cs', cm', ext') => pv = pv' /\ sr = sr' /\ cm = cm' /\ sid = sid')))))))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(193,0)] *)
goal g7_gl: (forall v_pv:top. (forall v_sr:top. (forall v_sid:top. (forall v_cs:top. (forall v_cm:top. (forall v_ext:top. (forall v_pv':top. (forall v_sr':top. (forall v_sid':top. (forall v_cs':top. (forall v_cm':top. (forall v_ext':top. (((v_TLSConstants__IsProtocolVersion_p v_pv) /\ (v_TLSConstants__IsProtocolVersion_p v_pv')) -> (((v_TLSConstants__IsCompression_p v_cm) /\ (v_TLSConstants__IsCompression_p v_cm')) -> (((v_Bytes__BLength (v_Bytes__B v_sr)) = (v_Bytes__BLength (v_Bytes__B v_sr'))) -> (((v_HandshakeMessages__ServerHelloMsg v_pv v_sr v_sid v_cs v_cm v_ext) = (v_HandshakeMessages__ServerHelloMsg v_pv' v_sr' v_sid' v_cs' v_cm' v_ext')) -> ((v_pv = v_pv') /\ ((v_sr = v_sr') /\ ((v_cm = v_cm') /\ (v_sid = v_sid'))))))))))))))))))))
(* assume (!pv. (!sr. (!sid. (!cs. (!cm. (!ext. (!pv'. (!sr'. (!sid'. (!cs'. (!cm'. (!ext'. TLSConstants.IsProtocolVersion(pv) /\ TLSConstants.IsProtocolVersion(pv') => TLSConstants.IsCompression(cm) /\ TLSConstants.IsCompression(cm') => Bytes.BLength (Bytes.B (sr)) = Bytes.BLength (Bytes.B (sr')) => ServerHelloMsg (pv, sr, sid, cs, cm, ext) = ServerHelloMsg (pv', sr', sid', cs', cm', ext') => pv = pv' /\ sr = sr' /\ cm = cm' /\ sid = sid')))))))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(193,0)] *)
axiom a1718_asm: (forall v_pv:top. (forall v_sr:top. (forall v_sid:top. (forall v_cs:top. (forall v_cm:top. (forall v_ext:top. (forall v_pv':top. (forall v_sr':top. (forall v_sid':top. (forall v_cs':top. (forall v_cm':top. (forall v_ext':top. (((v_TLSConstants__IsProtocolVersion_p v_pv) /\ (v_TLSConstants__IsProtocolVersion_p v_pv')) -> (((v_TLSConstants__IsCompression_p v_cm) /\ (v_TLSConstants__IsCompression_p v_cm')) -> (((v_Bytes__BLength (v_Bytes__B v_sr)) = (v_Bytes__BLength (v_Bytes__B v_sr'))) -> (((v_HandshakeMessages__ServerHelloMsg v_pv v_sr v_sid v_cs v_cm v_ext) = (v_HandshakeMessages__ServerHelloMsg v_pv' v_sr' v_sid' v_cs' v_cm' v_ext')) -> ((v_pv = v_pv') /\ ((v_sr = v_sr') /\ ((v_cm = v_cm') /\ (v_sid = v_sid'))))))))))))))))))))
(* Querying for ask *)
(* query (!pv. (!sr. (!sid. (!cs. (!cm. (!ext. (!pv'. (!sr'. (!sid'. (!cs'. (!cm'. (!ext'. ServerHelloMsg (pv, sr, sid, cs, cm, ext) = ServerHelloMsg (pv', sr', sid', cs', cm', ext') => Bytes.BLength (ServerHelloMsg (pv, sr, sid, cs, cm, ext)) = Bytes.BLength (ServerHelloMsg (pv', sr', sid', cs', cm', ext')))))))))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(200,0)] *)
goal g8_gl: (forall v_pv:top. (forall v_sr:top. (forall v_sid:top. (forall v_cs:top. (forall v_cm:top. (forall v_ext:top. (forall v_pv':top. (forall v_sr':top. (forall v_sid':top. (forall v_cs':top. (forall v_cm':top. (forall v_ext':top. (((v_HandshakeMessages__ServerHelloMsg v_pv v_sr v_sid v_cs v_cm v_ext) = (v_HandshakeMessages__ServerHelloMsg v_pv' v_sr' v_sid' v_cs' v_cm' v_ext')) -> ((v_Bytes__BLength (v_HandshakeMessages__ServerHelloMsg v_pv v_sr v_sid v_cs v_cm v_ext)) = (v_Bytes__BLength (v_HandshakeMessages__ServerHelloMsg v_pv' v_sr' v_sid' v_cs' v_cm' v_ext'))))))))))))))))
(* assume (!pv. (!sr. (!sid. (!cs. (!cm. (!ext. (!pv'. (!sr'. (!sid'. (!cs'. (!cm'. (!ext'. ServerHelloMsg (pv, sr, sid, cs, cm, ext) = ServerHelloMsg (pv', sr', sid', cs', cm', ext') => Bytes.BLength (ServerHelloMsg (pv, sr, sid, cs, cm, ext)) = Bytes.BLength (ServerHelloMsg (pv', sr', sid', cs', cm', ext')))))))))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(200,0)] *)
axiom a1719_asm: (forall v_pv:top. (forall v_sr:top. (forall v_sid:top. (forall v_cs:top. (forall v_cm:top. (forall v_ext:top. (forall v_pv':top. (forall v_sr':top. (forall v_sid':top. (forall v_cs':top. (forall v_cm':top. (forall v_ext':top. (((v_HandshakeMessages__ServerHelloMsg v_pv v_sr v_sid v_cs v_cm v_ext) = (v_HandshakeMessages__ServerHelloMsg v_pv' v_sr' v_sid' v_cs' v_cm' v_ext')) -> ((v_Bytes__BLength (v_HandshakeMessages__ServerHelloMsg v_pv v_sr v_sid v_cs v_cm v_ext)) = (v_Bytes__BLength (v_HandshakeMessages__ServerHelloMsg v_pv' v_sr' v_sid' v_cs' v_cm' v_ext'))))))))))))))))
(* declaring value HandshakeMessages.helloRequestBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(204,0)] *)
function v_HandshakeMessages__helloRequestBytes : top
(* declaring value HandshakeMessages.CCSBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(205,0)] *)
function v_HandshakeMessages__CCSBytes : top
(* declaring fun HandshakeMessages.ServerHelloDoneMsg [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(207,9)] *)
function v_HandshakeMessages__ServerHelloDoneMsg (x1:top) : top
(* assume (!x. ServerHelloDoneMsg (x) = MessageBytes (HT_server_hello_done (), Bytes.B (x))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(208,0)] *)
axiom a1720_asm: (forall v_x:top. ((v_HandshakeMessages__ServerHelloDoneMsg v_x) = (v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_server_hello_done ) (v_Bytes__B v_x))))
(* declaring value HandshakeMessages.serverHelloDoneBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(210,0)] *)
function v_HandshakeMessages__serverHelloDoneBytes : top
(* declaring fun HandshakeMessages.CertificateMsg [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(212,9)] *)
function v_HandshakeMessages__CertificateMsg (x1:top) : top
(* assume (!cl. CertificateMsg (cl) = MessageBytes (HT_certificate (), TLSConstants.VLBytes (3, Cert.CertificateListBytes (cl)))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(213,8)] *)
axiom a1721_asm: (forall v_cl:top. ((v_HandshakeMessages__CertificateMsg v_cl) = (v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_certificate ) (v_TLSConstants__VLBytes 3 (v_Cert__CertificateListBytes v_cl)))))
(* declaring value HandshakeMessages.serverCertificateBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(215,0)] *)
function v_HandshakeMessages__serverCertificateBytes : top
(* declaring value HandshakeMessages.clientCertificateBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(218,0)] *)
function v_HandshakeMessages__clientCertificateBytes : top
(* declaring value HandshakeMessages.parseClientOrServerCertificate [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(225,0)] *)
function v_HandshakeMessages__parseClientOrServerCertificate : top
(* declaring fun HandshakeMessages.CertificateRequestTLS12 [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(230,9)] *)
function v_HandshakeMessages__CertificateRequestTLS12 (x1:top) (x2:top) (x3:top) : top
(* assume (!ct. (!sa. (!dn. CertificateRequestTLS12 (ct, sa, dn) = MessageBytes (HT_certificate_request (), bop_ArrayAppend (TLSConstants.VLBytes (1, TLSConstants.CertTypesBytes (ct)), bop_ArrayAppend (TLSConstants.VLBytes (2, TLSExtensions.SigHashAlgsBytes (sa)), TLSConstants.VLBytes (2, TLSConstants.DistinguishedNameListBytes (dn)))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(231,8)] *)
axiom a1722_asm: (forall v_ct:top. (forall v_sa:top. (forall v_dn:top. ((v_HandshakeMessages__CertificateRequestTLS12 v_ct v_sa v_dn) = (v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_certificate_request ) (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_TLSConstants__CertTypesBytes v_ct)) (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_TLSExtensions__SigHashAlgsBytes v_sa)) (v_TLSConstants__VLBytes 2 (v_TLSConstants__DistinguishedNameListBytes v_dn)))))))))
(* declaring fun HandshakeMessages.CertificateRequestTLS [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(237,9)] *)
function v_HandshakeMessages__CertificateRequestTLS (x1:top) (x2:top) : top
(* assume (!ct. (!dn. CertificateRequestTLS (ct, dn) = MessageBytes (HT_certificate_request (), bop_ArrayAppend (TLSConstants.VLBytes (1, TLSConstants.CertTypesBytes (ct)), bop_ArrayAppend (array_of_list op_Nil (), TLSConstants.VLBytes (2, TLSConstants.DistinguishedNameListBytes (dn))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(238,8)] *)
axiom a1723_asm: (forall v_ct:top. (forall v_dn:top. ((v_HandshakeMessages__CertificateRequestTLS v_ct v_dn) = (v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_certificate_request ) (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_TLSConstants__CertTypesBytes v_ct)) (v_Pervasives__bop_ArrayAppend (v_Pervasives__array_of_list (v_Pervasives__op_Nil )) (v_TLSConstants__VLBytes 2 (v_TLSConstants__DistinguishedNameListBytes v_dn))))))))
(* declaring fun HandshakeMessages.CertificateRequestMsg [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(243,9)] *)
function v_HandshakeMessages__CertificateRequestMsg (x1:top) (x2:top) (x3:top) (x4:top) : top
(* assume (!pv. (!ct. (!sa. (!dn. pv = TLSConstants.TLS_1p2 () => CertificateRequestMsg (pv, ct, sa, dn) = CertificateRequestTLS12 (ct, sa, dn) /\ pv = TLSConstants.TLS_1p1 () \/ pv = TLSConstants.TLS_1p0 () \/ pv = TLSConstants.SSL_3p0 () => CertificateRequestMsg (pv, ct, sa, dn) = CertificateRequestTLS (ct, dn))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(244,8)] *)
axiom a1724_asm: (forall v_pv:top. (forall v_ct:top. (forall v_sa:top. (forall v_dn:top. (((v_pv = (v_TLSConstants__TLS_1p2 )) -> ((v_HandshakeMessages__CertificateRequestMsg v_pv v_ct v_sa v_dn) = (v_HandshakeMessages__CertificateRequestTLS12 v_ct v_sa v_dn))) /\ (((v_pv = (v_TLSConstants__TLS_1p1 )) \/ ((v_pv = (v_TLSConstants__TLS_1p0 )) \/ (v_pv = (v_TLSConstants__SSL_3p0 )))) -> ((v_HandshakeMessages__CertificateRequestMsg v_pv v_ct v_sa v_dn) = (v_HandshakeMessages__CertificateRequestTLS v_ct v_dn))))))))
(* declaring value HandshakeMessages.sigHashAlgBytesVersion [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(248,0)] *)
function v_HandshakeMessages__sigHashAlgBytesVersion : top
(* declaring value HandshakeMessages.parseSigHashAlgVersion [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(252,0)] *)
function v_HandshakeMessages__parseSigHashAlgVersion : top
(* declaring value HandshakeMessages.certificateRequestBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(261,0)] *)
function v_HandshakeMessages__certificateRequestBytes : top
(* declaring value HandshakeMessages.parseCertificateRequest [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(264,0)] *)
function v_HandshakeMessages__parseCertificateRequest : top
(* declaring fun HandshakeMessages.ClientKeyExchangeMsg_RSA [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(268,9)] *)
function v_HandshakeMessages__ClientKeyExchangeMsg_RSA (x1:top) (x2:top) : top
(* assume (!pv. (!encpms. (!b. pv = TLSConstants.TLS_1p2 () \/ pv = TLSConstants.TLS_1p1 () \/ pv = TLSConstants.TLS_1p0 () => ClientKeyExchangeMsg_RSA (pv, encpms) = MessageBytes (HT_client_key_exchange (), TLSConstants.VLBytes (2, Bytes.B (encpms))) /\ pv = TLSConstants.SSL_3p0 () => ClientKeyExchangeMsg_RSA (pv, encpms) = MessageBytes (HT_client_key_exchange (), Bytes.B (encpms))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(269,8)] *)
axiom a1725_asm: (forall v_pv:top. (forall v_encpms:top. (forall v_b:top. ((((v_pv = (v_TLSConstants__TLS_1p2 )) \/ ((v_pv = (v_TLSConstants__TLS_1p1 )) \/ (v_pv = (v_TLSConstants__TLS_1p0 )))) -> ((v_HandshakeMessages__ClientKeyExchangeMsg_RSA v_pv v_encpms) = (v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_client_key_exchange ) (v_TLSConstants__VLBytes 2 (v_Bytes__B v_encpms))))) /\ ((v_pv = (v_TLSConstants__SSL_3p0 )) -> ((v_HandshakeMessages__ClientKeyExchangeMsg_RSA v_pv v_encpms) = (v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_client_key_exchange ) (v_Bytes__B v_encpms))))))))
(* declaring value HandshakeMessages.encpmsBytesVersion [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(273,0)] *)
function v_HandshakeMessages__encpmsBytesVersion : top
(* declaring value HandshakeMessages.parseEncpmsVersion [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(277,0)] *)
function v_HandshakeMessages__parseEncpmsVersion : top
(* declaring value HandshakeMessages.clientKeyExchangeBytes_RSA [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(283,0)] *)
function v_HandshakeMessages__clientKeyExchangeBytes_RSA : top
(* declaring value HandshakeMessages.parseClientKeyExchange_RSA [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(286,0)] *)
function v_HandshakeMessages__parseClientKeyExchange_RSA : top
(* declaring fun HandshakeMessages.ClientKeyExchangeMsg_DHE [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(292,9)] *)
function v_HandshakeMessages__ClientKeyExchangeMsg_DHE (x1:top) : top
(* assume (!b. ClientKeyExchangeMsg_DHE (b) = MessageBytes (HT_client_key_exchange (), TLSConstants.VLBytes (2, Bytes.B (b)))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(293,8)] *)
axiom a1726_asm: (forall v_b:top. ((v_HandshakeMessages__ClientKeyExchangeMsg_DHE v_b) = (v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_client_key_exchange ) (v_TLSConstants__VLBytes 2 (v_Bytes__B v_b)))))
(* declaring value HandshakeMessages.clientKEXExplicitBytes_DH [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(298,0)] *)
function v_HandshakeMessages__clientKEXExplicitBytes_DH : top
(* declaring value HandshakeMessages.parseClientKEXExplicit_DH [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(300,0)] *)
function v_HandshakeMessages__parseClientKEXExplicit_DH : top
(* declaring value HandshakeMessages.clientKEXImplicitBytes_DH [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(305,0)] *)
function v_HandshakeMessages__clientKEXImplicitBytes_DH : top
(* declaring value HandshakeMessages.parseClientKEXImplicit_DH [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(306,0)] *)
function v_HandshakeMessages__parseClientKEXImplicit_DH : top
(* declaring fun HandshakeMessages.DigitallySignedBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(309,9)] *)
function v_HandshakeMessages__DigitallySignedBytes (x1:top) (x2:top) (x3:top) : top
(* assume (!a. (!p. (!pv. pv = TLSConstants.TLS_1p2 () => DigitallySignedBytes (a, p, pv) = bop_ArrayAppend (TLSExtensions.SigHashAlgBytes (a), TLSConstants.VLBytes (2, Bytes.B (p))) /\ pv = TLSConstants.TLS_1p1 () \/ pv = TLSConstants.TLS_1p0 () \/ pv = TLSConstants.SSL_3p0 () => DigitallySignedBytes (a, p, pv) = TLSConstants.VLBytes (2, Bytes.B (p))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(310,8)] *)
axiom a1727_asm: (forall v_a:top. (forall v_p:top. (forall v_pv:top. (((v_pv = (v_TLSConstants__TLS_1p2 )) -> ((v_HandshakeMessages__DigitallySignedBytes v_a v_p v_pv) = (v_Pervasives__bop_ArrayAppend (v_TLSExtensions__SigHashAlgBytes v_a) (v_TLSConstants__VLBytes 2 (v_Bytes__B v_p))))) /\ (((v_pv = (v_TLSConstants__TLS_1p1 )) \/ ((v_pv = (v_TLSConstants__TLS_1p0 )) \/ (v_pv = (v_TLSConstants__SSL_3p0 )))) -> ((v_HandshakeMessages__DigitallySignedBytes v_a v_p v_pv) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_p))))))))
(* declaring value HandshakeMessages.digitallySignedBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(314,0)] *)
function v_HandshakeMessages__digitallySignedBytes : top
(* declaring value HandshakeMessages.parseDigitallySigned [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(316,0)] *)
function v_HandshakeMessages__parseDigitallySigned : top
(* declaring fun HandshakeMessages.DHEParamBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(322,9)] *)
function v_HandshakeMessages__DHEParamBytes (x1:top) (x2:top) (x3:top) : top
(* assume (!p. (!g. (!y. DHEParamBytes (p, g, y) = bop_ArrayAppend (TLSConstants.VLBytes (2, Bytes.B (p)), bop_ArrayAppend (TLSConstants.VLBytes (2, Bytes.B (g)), TLSConstants.VLBytes (2, Bytes.B (y))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(323,8)] *)
axiom a1728_asm: (forall v_p:top. (forall v_g:top. (forall v_y:top. ((v_HandshakeMessages__DHEParamBytes v_p v_g v_y) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_p)) (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_g)) (v_TLSConstants__VLBytes 2 (v_Bytes__B v_y))))))))
(* declaring value HandshakeMessages.dheParamBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(328,0)] *)
function v_HandshakeMessages__dheParamBytes : top
(* declaring value HandshakeMessages.parseDHEParams [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(330,0)] *)
function v_HandshakeMessages__parseDHEParams : top
(* declaring fun HandshakeMessages.ServerKeyExchangeMsg_DHE [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(335,9)] *)
function v_HandshakeMessages__ServerKeyExchangeMsg_DHE (x1:top) (x2:top) (x3:top) (x4:top) (x5:top) (x6:top) : top
(* assume (!pv. (!p. (!g. (!y. (!a. (!sign. ServerKeyExchangeMsg_DHE (pv, p, g, y, a, sign) = MessageBytes (HT_server_key_exchange (), bop_ArrayAppend (DHEParamBytes (p, g, y), DigitallySignedBytes (a, sign, pv))))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(336,8)] *)
axiom a1729_asm: (forall v_pv:top. (forall v_p:top. (forall v_g:top. (forall v_y:top. (forall v_a:top. (forall v_sign:top. ((v_HandshakeMessages__ServerKeyExchangeMsg_DHE v_pv v_p v_g v_y v_a v_sign) = (v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_server_key_exchange ) (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__DHEParamBytes v_p v_g v_y) (v_HandshakeMessages__DigitallySignedBytes v_a v_sign v_pv))))))))))
(* declaring value HandshakeMessages.serverKeyExchangeBytes_DHE [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(341,0)] *)
function v_HandshakeMessages__serverKeyExchangeBytes_DHE : top
(* declaring value HandshakeMessages.parseServerKeyExchange_DHE [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(345,0)] *)
function v_HandshakeMessages__parseServerKeyExchange_DHE : top
(* declaring fun HandshakeMessages.ServerKeyExchangeMsg_DH_anon [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(352,9)] *)
function v_HandshakeMessages__ServerKeyExchangeMsg_DH_anon (x1:top) (x2:top) (x3:top) : top
(* declaring value HandshakeMessages.serverKeyExchangeBytes_DH_anon [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(354,0)] *)
function v_HandshakeMessages__serverKeyExchangeBytes_DH_anon : top
(* declaring value HandshakeMessages.parseServerKeyExchange_DH_anon [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(355,0)] *)
function v_HandshakeMessages__parseServerKeyExchange_DH_anon : top
(* declaring fun HandshakeMessages.CertificateVerifyMsg [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(358,9)] *)
function v_HandshakeMessages__CertificateVerifyMsg (x1:top) (x2:top) (x3:top) : top
(* assume (!pv. (!a. (!sign. CertificateVerifyMsg (pv, a, sign) = MessageBytes (HT_certificate_verify (), DigitallySignedBytes (a, sign, pv))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(359,8)] *)
axiom a1730_asm: (forall v_pv:top. (forall v_a:top. (forall v_sign:top. ((v_HandshakeMessages__CertificateVerifyMsg v_pv v_a v_sign) = (v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_certificate_verify ) (v_HandshakeMessages__DigitallySignedBytes v_a v_sign v_pv))))))
(* declaring value HandshakeMessages.makeCertificateVerifyBytes [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(363,0)] *)
function v_HandshakeMessages__makeCertificateVerifyBytes : top
(* declaring value HandshakeMessages.certificateVerifyCheck [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(368,0)] *)
function v_HandshakeMessages__certificateVerifyCheck : top
(* declaring fun HandshakeMessages.ServerFinishedMsg [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(378,9)] *)
function v_HandshakeMessages__ServerFinishedMsg (x1:top) : top
(* assume (!svd. ServerFinishedMsg (svd) = MessageBytes (HT_finished (), Bytes.B (svd))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(380,0)] *)
axiom a1731_asm: (forall v_svd:top. ((v_HandshakeMessages__ServerFinishedMsg v_svd) = (v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_finished ) (v_Bytes__B v_svd))))
(* declaring fun HandshakeMessages.ClientFinishedMsg [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(383,9)] *)
function v_HandshakeMessages__ClientFinishedMsg (x1:top) : top
(* assume (!svd. ClientFinishedMsg (svd) = MessageBytes (HT_finished (), Bytes.B (svd))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(385,0)] *)
axiom a1732_asm: (forall v_svd:top. ((v_HandshakeMessages__ClientFinishedMsg v_svd) = (v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_finished ) (v_Bytes__B v_svd))))
(* declaring type HandshakeMessages.UpdatesPmsClientID [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(390,0)] *)
predicate v_HandshakeMessages__UpdatesPmsClientID_p (x1:top) (x2:top)
(* assume (!si. (!si'. UpdatesPmsClientID(si, si') <=> Tuples.Tup14.7 si' = Tuples.Tup14.7 si /\ Tuples.Tup14.8 si' = Tuples.Tup14.8 si /\ Tuples.Tup14.10 si' = Tuples.Tup14.10 si /\ Tuples.Tup14.1 si' = Tuples.Tup14.1 si /\ Tuples.Tup14.5 si' = Tuples.Tup14.5 si /\ Tuples.Tup14.6 si' = Tuples.Tup14.6 si /\ Tuples.Tup14.14 si' = Tuples.Tup14.14 si /\ Tuples.Tup14.11 si' = Tuples.Tup14.11 si /\ Tuples.Tup14.12 si' = Tuples.Tup14.12 si /\ Tuples.Tup14.4 si' = Tuples.Tup14.4 si /\ Tuples.Tup14.13 si' = Tuples.Tup14.13 si)) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(391,0)] *)
axiom a1733_asm: (forall v_si:top. (forall v_si':top. ((v_HandshakeMessages__UpdatesPmsClientID_p v_si v_si') <-> (((v_Tuples__Tup14__7 v_si') = (v_Tuples__Tup14__7 v_si)) /\ (((v_Tuples__Tup14__8 v_si') = (v_Tuples__Tup14__8 v_si)) /\ (((v_Tuples__Tup14__10 v_si') = (v_Tuples__Tup14__10 v_si)) /\ (((v_Tuples__Tup14__1 v_si') = (v_Tuples__Tup14__1 v_si)) /\ (((v_Tuples__Tup14__5 v_si') = (v_Tuples__Tup14__5 v_si)) /\ (((v_Tuples__Tup14__6 v_si') = (v_Tuples__Tup14__6 v_si)) /\ (((v_Tuples__Tup14__14 v_si') = (v_Tuples__Tup14__14 v_si)) /\ (((v_Tuples__Tup14__11 v_si') = (v_Tuples__Tup14__11 v_si)) /\ (((v_Tuples__Tup14__12 v_si') = (v_Tuples__Tup14__12 v_si)) /\ (((v_Tuples__Tup14__4 v_si') = (v_Tuples__Tup14__4 v_si)) /\ ((v_Tuples__Tup14__13 v_si') = (v_Tuples__Tup14__13 v_si)))))))))))))))
(* declaring type HandshakeMessages.UpdatesPmsID [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(406,0)] *)
predicate v_HandshakeMessages__UpdatesPmsID_p (x1:top) (x2:top)
(* assume (!si. (!si'. UpdatesPmsID(si, si') <=> Tuples.Tup14.7 si' = Tuples.Tup14.7 si /\ Tuples.Tup14.8 si' = Tuples.Tup14.8 si /\ Tuples.Tup14.10 si' = Tuples.Tup14.10 si /\ Tuples.Tup14.1 si' = Tuples.Tup14.1 si /\ Tuples.Tup14.5 si' = Tuples.Tup14.5 si /\ Tuples.Tup14.6 si' = Tuples.Tup14.6 si /\ Tuples.Tup14.14 si' = Tuples.Tup14.14 si /\ Tuples.Tup14.2 si' = Tuples.Tup14.2 si /\ Tuples.Tup14.11 si' = Tuples.Tup14.11 si /\ Tuples.Tup14.12 si' = Tuples.Tup14.12 si /\ Tuples.Tup14.4 si' = Tuples.Tup14.4 si /\ Tuples.Tup14.13 si' = Tuples.Tup14.13 si)) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(407,0)] *)
axiom a1734_asm: (forall v_si:top. (forall v_si':top. ((v_HandshakeMessages__UpdatesPmsID_p v_si v_si') <-> (((v_Tuples__Tup14__7 v_si') = (v_Tuples__Tup14__7 v_si)) /\ (((v_Tuples__Tup14__8 v_si') = (v_Tuples__Tup14__8 v_si)) /\ (((v_Tuples__Tup14__10 v_si') = (v_Tuples__Tup14__10 v_si)) /\ (((v_Tuples__Tup14__1 v_si') = (v_Tuples__Tup14__1 v_si)) /\ (((v_Tuples__Tup14__5 v_si') = (v_Tuples__Tup14__5 v_si)) /\ (((v_Tuples__Tup14__6 v_si') = (v_Tuples__Tup14__6 v_si)) /\ (((v_Tuples__Tup14__14 v_si') = (v_Tuples__Tup14__14 v_si)) /\ (((v_Tuples__Tup14__2 v_si') = (v_Tuples__Tup14__2 v_si)) /\ (((v_Tuples__Tup14__11 v_si') = (v_Tuples__Tup14__11 v_si)) /\ (((v_Tuples__Tup14__12 v_si') = (v_Tuples__Tup14__12 v_si)) /\ (((v_Tuples__Tup14__4 v_si') = (v_Tuples__Tup14__4 v_si)) /\ ((v_Tuples__Tup14__13 v_si') = (v_Tuples__Tup14__13 v_si))))))))))))))))
(* declaring type HandshakeMessages.UpdatesClientID [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(423,0)] *)
predicate v_HandshakeMessages__UpdatesClientID_p (x1:top) (x2:top)
(* assume (!si. (!si'. UpdatesClientID(si, si') <=> Tuples.Tup14.7 si' = Tuples.Tup14.7 si /\ Tuples.Tup14.8 si' = Tuples.Tup14.8 si /\ Tuples.Tup14.10 si' = Tuples.Tup14.10 si /\ Tuples.Tup14.1 si' = Tuples.Tup14.1 si /\ Tuples.Tup14.5 si' = Tuples.Tup14.5 si /\ Tuples.Tup14.6 si' = Tuples.Tup14.6 si /\ Tuples.Tup14.9 si' = Tuples.Tup14.9 si /\ Tuples.Tup14.14 si' = Tuples.Tup14.14 si /\ Tuples.Tup14.3 si' = Tuples.Tup14.3 si /\ Tuples.Tup14.11 si' = Tuples.Tup14.11 si /\ Tuples.Tup14.12 si' = Tuples.Tup14.12 si /\ Tuples.Tup14.4 si' = Tuples.Tup14.4 si /\ Tuples.Tup14.13 si' = Tuples.Tup14.13 si)) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(424,0)] *)
axiom a1735_asm: (forall v_si:top. (forall v_si':top. ((v_HandshakeMessages__UpdatesClientID_p v_si v_si') <-> (((v_Tuples__Tup14__7 v_si') = (v_Tuples__Tup14__7 v_si)) /\ (((v_Tuples__Tup14__8 v_si') = (v_Tuples__Tup14__8 v_si)) /\ (((v_Tuples__Tup14__10 v_si') = (v_Tuples__Tup14__10 v_si)) /\ (((v_Tuples__Tup14__1 v_si') = (v_Tuples__Tup14__1 v_si)) /\ (((v_Tuples__Tup14__5 v_si') = (v_Tuples__Tup14__5 v_si)) /\ (((v_Tuples__Tup14__6 v_si') = (v_Tuples__Tup14__6 v_si)) /\ (((v_Tuples__Tup14__9 v_si') = (v_Tuples__Tup14__9 v_si)) /\ (((v_Tuples__Tup14__14 v_si') = (v_Tuples__Tup14__14 v_si)) /\ (((v_Tuples__Tup14__3 v_si') = (v_Tuples__Tup14__3 v_si)) /\ (((v_Tuples__Tup14__11 v_si') = (v_Tuples__Tup14__11 v_si)) /\ (((v_Tuples__Tup14__12 v_si') = (v_Tuples__Tup14__12 v_si)) /\ (((v_Tuples__Tup14__4 v_si') = (v_Tuples__Tup14__4 v_si)) /\ ((v_Tuples__Tup14__13 v_si') = (v_Tuples__Tup14__13 v_si)))))))))))))))))
(* declaring type HandshakeMessages.UpdatesClientIDSigAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(441,0)] *)
predicate v_HandshakeMessages__UpdatesClientIDSigAlg_p (x1:top) (x2:top)
(* assume (!si. (!si'. UpdatesClientIDSigAlg(si, si') <=> Tuples.Tup14.7 si' = Tuples.Tup14.7 si /\ Tuples.Tup14.8 si' = Tuples.Tup14.8 si /\ Tuples.Tup14.10 si' = Tuples.Tup14.10 si /\ Tuples.Tup14.1 si' = Tuples.Tup14.1 si /\ Tuples.Tup14.5 si' = Tuples.Tup14.5 si /\ Tuples.Tup14.6 si' = Tuples.Tup14.6 si /\ Tuples.Tup14.9 si' = Tuples.Tup14.9 si /\ Tuples.Tup14.14 si' = Tuples.Tup14.14 si /\ Tuples.Tup14.11 si' = Tuples.Tup14.11 si /\ Tuples.Tup14.12 si' = Tuples.Tup14.12 si /\ Tuples.Tup14.4 si' = Tuples.Tup14.4 si /\ Tuples.Tup14.13 si' = Tuples.Tup14.13 si)) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(442,0)] *)
axiom a1736_asm: (forall v_si:top. (forall v_si':top. ((v_HandshakeMessages__UpdatesClientIDSigAlg_p v_si v_si') <-> (((v_Tuples__Tup14__7 v_si') = (v_Tuples__Tup14__7 v_si)) /\ (((v_Tuples__Tup14__8 v_si') = (v_Tuples__Tup14__8 v_si)) /\ (((v_Tuples__Tup14__10 v_si') = (v_Tuples__Tup14__10 v_si)) /\ (((v_Tuples__Tup14__1 v_si') = (v_Tuples__Tup14__1 v_si)) /\ (((v_Tuples__Tup14__5 v_si') = (v_Tuples__Tup14__5 v_si)) /\ (((v_Tuples__Tup14__6 v_si') = (v_Tuples__Tup14__6 v_si)) /\ (((v_Tuples__Tup14__9 v_si') = (v_Tuples__Tup14__9 v_si)) /\ (((v_Tuples__Tup14__14 v_si') = (v_Tuples__Tup14__14 v_si)) /\ (((v_Tuples__Tup14__11 v_si') = (v_Tuples__Tup14__11 v_si)) /\ (((v_Tuples__Tup14__12 v_si') = (v_Tuples__Tup14__12 v_si)) /\ (((v_Tuples__Tup14__4 v_si') = (v_Tuples__Tup14__4 v_si)) /\ ((v_Tuples__Tup14__13 v_si') = (v_Tuples__Tup14__13 v_si))))))))))))))))
(* declaring type HandshakeMessages.UpdatesClientSigAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(458,0)] *)
predicate v_HandshakeMessages__UpdatesClientSigAlg_p (x1:top) (x2:top)
(* assume (!si. (!si'. UpdatesClientSigAlg(si, si') <=> Tuples.Tup14.7 si' = Tuples.Tup14.7 si /\ Tuples.Tup14.8 si' = Tuples.Tup14.8 si /\ Tuples.Tup14.10 si' = Tuples.Tup14.10 si /\ Tuples.Tup14.1 si' = Tuples.Tup14.1 si /\ Tuples.Tup14.5 si' = Tuples.Tup14.5 si /\ Tuples.Tup14.6 si' = Tuples.Tup14.6 si /\ Tuples.Tup14.9 si' = Tuples.Tup14.9 si /\ Tuples.Tup14.14 si' = Tuples.Tup14.14 si /\ Tuples.Tup14.2 si' = Tuples.Tup14.2 si /\ Tuples.Tup14.11 si' = Tuples.Tup14.11 si /\ Tuples.Tup14.12 si' = Tuples.Tup14.12 si /\ Tuples.Tup14.4 si' = Tuples.Tup14.4 si /\ Tuples.Tup14.13 si' = Tuples.Tup14.13 si)) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(459,0)] *)
axiom a1737_asm: (forall v_si:top. (forall v_si':top. ((v_HandshakeMessages__UpdatesClientSigAlg_p v_si v_si') <-> (((v_Tuples__Tup14__7 v_si') = (v_Tuples__Tup14__7 v_si)) /\ (((v_Tuples__Tup14__8 v_si') = (v_Tuples__Tup14__8 v_si)) /\ (((v_Tuples__Tup14__10 v_si') = (v_Tuples__Tup14__10 v_si)) /\ (((v_Tuples__Tup14__1 v_si') = (v_Tuples__Tup14__1 v_si)) /\ (((v_Tuples__Tup14__5 v_si') = (v_Tuples__Tup14__5 v_si)) /\ (((v_Tuples__Tup14__6 v_si') = (v_Tuples__Tup14__6 v_si)) /\ (((v_Tuples__Tup14__9 v_si') = (v_Tuples__Tup14__9 v_si)) /\ (((v_Tuples__Tup14__14 v_si') = (v_Tuples__Tup14__14 v_si)) /\ (((v_Tuples__Tup14__2 v_si') = (v_Tuples__Tup14__2 v_si)) /\ (((v_Tuples__Tup14__11 v_si') = (v_Tuples__Tup14__11 v_si)) /\ (((v_Tuples__Tup14__12 v_si') = (v_Tuples__Tup14__12 v_si)) /\ (((v_Tuples__Tup14__4 v_si') = (v_Tuples__Tup14__4 v_si)) /\ ((v_Tuples__Tup14__13 v_si') = (v_Tuples__Tup14__13 v_si)))))))))))))))))
(* declaring type HandshakeMessages.UpdatesServerIDSigAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(475,0)] *)
predicate v_HandshakeMessages__UpdatesServerIDSigAlg_p (x1:top) (x2:top)
(* assume (!si. (!si'. UpdatesServerIDSigAlg(si, si') <=> Tuples.Tup14.7 si' = Tuples.Tup14.7 si /\ Tuples.Tup14.8 si' = Tuples.Tup14.8 si /\ Tuples.Tup14.10 si' = Tuples.Tup14.10 si /\ Tuples.Tup14.1 si' = Tuples.Tup14.1 si /\ Tuples.Tup14.5 si' = Tuples.Tup14.5 si /\ Tuples.Tup14.6 si' = Tuples.Tup14.6 si /\ Tuples.Tup14.9 si' = Tuples.Tup14.9 si /\ Tuples.Tup14.14 si' = Tuples.Tup14.14 si /\ Tuples.Tup14.2 si' = Tuples.Tup14.2 si /\ Tuples.Tup14.3 si' = Tuples.Tup14.3 si /\ Tuples.Tup14.4 si' = Tuples.Tup14.4 si /\ Tuples.Tup14.13 si' = Tuples.Tup14.13 si)) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(476,0)] *)
axiom a1738_asm: (forall v_si:top. (forall v_si':top. ((v_HandshakeMessages__UpdatesServerIDSigAlg_p v_si v_si') <-> (((v_Tuples__Tup14__7 v_si') = (v_Tuples__Tup14__7 v_si)) /\ (((v_Tuples__Tup14__8 v_si') = (v_Tuples__Tup14__8 v_si)) /\ (((v_Tuples__Tup14__10 v_si') = (v_Tuples__Tup14__10 v_si)) /\ (((v_Tuples__Tup14__1 v_si') = (v_Tuples__Tup14__1 v_si)) /\ (((v_Tuples__Tup14__5 v_si') = (v_Tuples__Tup14__5 v_si)) /\ (((v_Tuples__Tup14__6 v_si') = (v_Tuples__Tup14__6 v_si)) /\ (((v_Tuples__Tup14__9 v_si') = (v_Tuples__Tup14__9 v_si)) /\ (((v_Tuples__Tup14__14 v_si') = (v_Tuples__Tup14__14 v_si)) /\ (((v_Tuples__Tup14__2 v_si') = (v_Tuples__Tup14__2 v_si)) /\ (((v_Tuples__Tup14__3 v_si') = (v_Tuples__Tup14__3 v_si)) /\ (((v_Tuples__Tup14__4 v_si') = (v_Tuples__Tup14__4 v_si)) /\ ((v_Tuples__Tup14__13 v_si') = (v_Tuples__Tup14__13 v_si))))))))))))))))
(* declaring type HandshakeMessages.UpdatesServerSigAlg [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(491,0)] *)
predicate v_HandshakeMessages__UpdatesServerSigAlg_p (x1:top) (x2:top)
(* assume (!si. (!si'. UpdatesServerSigAlg(si, si') <=> Tuples.Tup14.7 si' = Tuples.Tup14.7 si /\ Tuples.Tup14.8 si' = Tuples.Tup14.8 si /\ Tuples.Tup14.10 si' = Tuples.Tup14.10 si /\ Tuples.Tup14.1 si' = Tuples.Tup14.1 si /\ Tuples.Tup14.5 si' = Tuples.Tup14.5 si /\ Tuples.Tup14.6 si' = Tuples.Tup14.6 si /\ Tuples.Tup14.9 si' = Tuples.Tup14.9 si /\ Tuples.Tup14.14 si' = Tuples.Tup14.14 si /\ Tuples.Tup14.2 si' = Tuples.Tup14.2 si /\ Tuples.Tup14.11 si' = Tuples.Tup14.11 si /\ Tuples.Tup14.3 si' = Tuples.Tup14.3 si /\ Tuples.Tup14.4 si' = Tuples.Tup14.4 si /\ Tuples.Tup14.13 si' = Tuples.Tup14.13 si)) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(492,0)] *)
axiom a1739_asm: (forall v_si:top. (forall v_si':top. ((v_HandshakeMessages__UpdatesServerSigAlg_p v_si v_si') <-> (((v_Tuples__Tup14__7 v_si') = (v_Tuples__Tup14__7 v_si)) /\ (((v_Tuples__Tup14__8 v_si') = (v_Tuples__Tup14__8 v_si)) /\ (((v_Tuples__Tup14__10 v_si') = (v_Tuples__Tup14__10 v_si)) /\ (((v_Tuples__Tup14__1 v_si') = (v_Tuples__Tup14__1 v_si)) /\ (((v_Tuples__Tup14__5 v_si') = (v_Tuples__Tup14__5 v_si)) /\ (((v_Tuples__Tup14__6 v_si') = (v_Tuples__Tup14__6 v_si)) /\ (((v_Tuples__Tup14__9 v_si') = (v_Tuples__Tup14__9 v_si)) /\ (((v_Tuples__Tup14__14 v_si') = (v_Tuples__Tup14__14 v_si)) /\ (((v_Tuples__Tup14__2 v_si') = (v_Tuples__Tup14__2 v_si)) /\ (((v_Tuples__Tup14__11 v_si') = (v_Tuples__Tup14__11 v_si)) /\ (((v_Tuples__Tup14__3 v_si') = (v_Tuples__Tup14__3 v_si)) /\ (((v_Tuples__Tup14__4 v_si') = (v_Tuples__Tup14__4 v_si)) /\ ((v_Tuples__Tup14__13 v_si') = (v_Tuples__Tup14__13 v_si)))))))))))))))))
(* declaring type HandshakeMessages.UpdatesServerID [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(508,0)] *)
predicate v_HandshakeMessages__UpdatesServerID_p (x1:top) (x2:top)
(* assume (!si. (!si'. UpdatesServerID(si, si') <=> Tuples.Tup14.7 si' = Tuples.Tup14.7 si /\ Tuples.Tup14.8 si' = Tuples.Tup14.8 si /\ Tuples.Tup14.10 si' = Tuples.Tup14.10 si /\ Tuples.Tup14.1 si' = Tuples.Tup14.1 si /\ Tuples.Tup14.5 si' = Tuples.Tup14.5 si /\ Tuples.Tup14.6 si' = Tuples.Tup14.6 si /\ Tuples.Tup14.9 si' = Tuples.Tup14.9 si /\ Tuples.Tup14.14 si' = Tuples.Tup14.14 si /\ Tuples.Tup14.2 si' = Tuples.Tup14.2 si /\ Tuples.Tup14.12 si' = Tuples.Tup14.12 si /\ Tuples.Tup14.3 si' = Tuples.Tup14.3 si /\ Tuples.Tup14.4 si' = Tuples.Tup14.4 si /\ Tuples.Tup14.13 si' = Tuples.Tup14.13 si)) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(509,0)] *)
axiom a1740_asm: (forall v_si:top. (forall v_si':top. ((v_HandshakeMessages__UpdatesServerID_p v_si v_si') <-> (((v_Tuples__Tup14__7 v_si') = (v_Tuples__Tup14__7 v_si)) /\ (((v_Tuples__Tup14__8 v_si') = (v_Tuples__Tup14__8 v_si)) /\ (((v_Tuples__Tup14__10 v_si') = (v_Tuples__Tup14__10 v_si)) /\ (((v_Tuples__Tup14__1 v_si') = (v_Tuples__Tup14__1 v_si)) /\ (((v_Tuples__Tup14__5 v_si') = (v_Tuples__Tup14__5 v_si)) /\ (((v_Tuples__Tup14__6 v_si') = (v_Tuples__Tup14__6 v_si)) /\ (((v_Tuples__Tup14__9 v_si') = (v_Tuples__Tup14__9 v_si)) /\ (((v_Tuples__Tup14__14 v_si') = (v_Tuples__Tup14__14 v_si)) /\ (((v_Tuples__Tup14__2 v_si') = (v_Tuples__Tup14__2 v_si)) /\ (((v_Tuples__Tup14__12 v_si') = (v_Tuples__Tup14__12 v_si)) /\ (((v_Tuples__Tup14__3 v_si') = (v_Tuples__Tup14__3 v_si)) /\ (((v_Tuples__Tup14__4 v_si') = (v_Tuples__Tup14__4 v_si)) /\ ((v_Tuples__Tup14__13 v_si') = (v_Tuples__Tup14__13 v_si)))))))))))))))))
(* declaring type HandshakeMessages.UpdatesClientAuth [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(526,0)] *)
predicate v_HandshakeMessages__UpdatesClientAuth_p (x1:top) (x2:top)
(* assume (!si. (!si'. UpdatesClientAuth(si, si') <=> Tuples.Tup14.7 si' = Tuples.Tup14.7 si /\ Tuples.Tup14.8 si' = Tuples.Tup14.8 si /\ Tuples.Tup14.10 si' = Tuples.Tup14.10 si /\ Tuples.Tup14.1 si' = Tuples.Tup14.1 si /\ Tuples.Tup14.5 si' = Tuples.Tup14.5 si /\ Tuples.Tup14.6 si' = Tuples.Tup14.6 si /\ Tuples.Tup14.9 si' = Tuples.Tup14.9 si /\ Tuples.Tup14.14 si' = Tuples.Tup14.14 si /\ Tuples.Tup14.2 si' = Tuples.Tup14.2 si /\ Tuples.Tup14.3 si' = Tuples.Tup14.3 si /\ Tuples.Tup14.11 si' = Tuples.Tup14.11 si /\ Tuples.Tup14.12 si' = Tuples.Tup14.12 si /\ Tuples.Tup14.13 si' = Tuples.Tup14.13 si)) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(527,0)] *)
axiom a1741_asm: (forall v_si:top. (forall v_si':top. ((v_HandshakeMessages__UpdatesClientAuth_p v_si v_si') <-> (((v_Tuples__Tup14__7 v_si') = (v_Tuples__Tup14__7 v_si)) /\ (((v_Tuples__Tup14__8 v_si') = (v_Tuples__Tup14__8 v_si)) /\ (((v_Tuples__Tup14__10 v_si') = (v_Tuples__Tup14__10 v_si)) /\ (((v_Tuples__Tup14__1 v_si') = (v_Tuples__Tup14__1 v_si)) /\ (((v_Tuples__Tup14__5 v_si') = (v_Tuples__Tup14__5 v_si)) /\ (((v_Tuples__Tup14__6 v_si') = (v_Tuples__Tup14__6 v_si)) /\ (((v_Tuples__Tup14__9 v_si') = (v_Tuples__Tup14__9 v_si)) /\ (((v_Tuples__Tup14__14 v_si') = (v_Tuples__Tup14__14 v_si)) /\ (((v_Tuples__Tup14__2 v_si') = (v_Tuples__Tup14__2 v_si)) /\ (((v_Tuples__Tup14__3 v_si') = (v_Tuples__Tup14__3 v_si)) /\ (((v_Tuples__Tup14__11 v_si') = (v_Tuples__Tup14__11 v_si)) /\ (((v_Tuples__Tup14__12 v_si') = (v_Tuples__Tup14__12 v_si)) /\ ((v_Tuples__Tup14__13 v_si') = (v_Tuples__Tup14__13 v_si)))))))))))))))))
(* declaring type HandshakeMessages.ServerLogBeforeClientCertificateRSA [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(546,0)] *)
predicate v_HandshakeMessages__ServerLogBeforeClientCertificateRSA_p (x1:top) (x2:top) (x3:top)
(* declaring type HandshakeMessages.ServerLogBeforeClientCertificateRSA_Auth [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(547,0)] *)
predicate v_HandshakeMessages__ServerLogBeforeClientCertificateRSA_Auth_p (x1:top) (x2:top) (x3:top)
(* declaring type HandshakeMessages.ServerLogBeforeClientCertificateRSA_NoAuth [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(548,0)] *)
predicate v_HandshakeMessages__ServerLogBeforeClientCertificateRSA_NoAuth_p (x1:top) (x2:top) (x3:top)
(* assume (!si. (!pv. (!l. ServerLogBeforeClientCertificateRSA_Auth(si, pv, l) <=> Tuples.Tup14.4 si = True /\ ServerLogBeforeClientCertificateRSA_Auth(si, pv, l) \/ Tuples.Tup14.4 si = False /\ ServerLogBeforeClientCertificateRSA_NoAuth(si, pv, l)))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(550,0)] *)
axiom a1742_asm: (forall v_si:top. (forall v_pv:top. (forall v_l:top. ((v_HandshakeMessages__ServerLogBeforeClientCertificateRSA_Auth_p v_si v_pv v_l) <-> ((((v_Tuples__Tup14__4 v_si) = v_Pervasives__True) /\ (v_HandshakeMessages__ServerLogBeforeClientCertificateRSA_Auth_p v_si v_pv v_l)) \/ (((v_Tuples__Tup14__4 v_si) = v_Pervasives__False) /\ (v_HandshakeMessages__ServerLogBeforeClientCertificateRSA_NoAuth_p v_si v_pv v_l)))))))
(* assume (!si. (!pv. (!l. ServerLogBeforeClientCertificateRSA_Auth(si, pv, l) <=> (?csl. (?cml. (?csess. (?ex1. (?ex2. (?ctl. (?sal. (?nl. Bytes.B (l) = bop_ArrayAppend (ClientHelloMsg (pv, Tuples.Tup14.7 si, csess, csl, cml, ex1), bop_ArrayAppend (ServerHelloMsg (Tuples.Tup14.10 si, Tuples.Tup14.8 si, Tuples.Tup14.13 si, Tuples.Tup14.1 si, Tuples.Tup14.5 si, ex2), bop_ArrayAppend (CertificateMsg (Tuples.Tup14.11 si), bop_ArrayAppend (CertificateRequestMsg (Tuples.Tup14.10 si, ctl, sal, nl), ServerHelloDoneMsg (Bytes.empty_bytes)))))))))))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(555,0)] *)
axiom a1743_asm: (forall v_si:top. (forall v_pv:top. (forall v_l:top. ((v_HandshakeMessages__ServerLogBeforeClientCertificateRSA_Auth_p v_si v_pv v_l) <-> (exists v_csl:top. (exists v_cml:top. (exists v_csess:top. (exists v_ex1:top. (exists v_ex2:top. (exists v_ctl:top. (exists v_sal:top. (exists v_nl:top. ((v_Bytes__B v_l) = (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__ClientHelloMsg v_pv (v_Tuples__Tup14__7 v_si) v_csess v_csl v_cml v_ex1) (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__ServerHelloMsg (v_Tuples__Tup14__10 v_si) (v_Tuples__Tup14__8 v_si) (v_Tuples__Tup14__13 v_si) (v_Tuples__Tup14__1 v_si) (v_Tuples__Tup14__5 v_si) v_ex2) (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__CertificateMsg (v_Tuples__Tup14__11 v_si)) (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__CertificateRequestMsg (v_Tuples__Tup14__10 v_si) v_ctl v_sal v_nl) (v_HandshakeMessages__ServerHelloDoneMsg v_Bytes__empty_bytes))))))))))))))))))
(* assume (!si. (!pv. (!l. ServerLogBeforeClientCertificateRSA_NoAuth(si, pv, l) <=> (?cs. (?cm. (?sess. (?ex1. (?ex2. Bytes.B (l) = bop_ArrayAppend (ClientHelloMsg (pv, Tuples.Tup14.7 si, sess, cs, cm, ex1), bop_ArrayAppend (ServerHelloMsg (Tuples.Tup14.10 si, Tuples.Tup14.8 si, Tuples.Tup14.13 si, Tuples.Tup14.1 si, Tuples.Tup14.5 si, ex2), bop_ArrayAppend (CertificateMsg (Tuples.Tup14.11 si), ServerHelloDoneMsg (Bytes.empty_bytes)))))))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(564,0)] *)
axiom a1744_asm: (forall v_si:top. (forall v_pv:top. (forall v_l:top. ((v_HandshakeMessages__ServerLogBeforeClientCertificateRSA_NoAuth_p v_si v_pv v_l) <-> (exists v_cs:top. (exists v_cm:top. (exists v_sess:top. (exists v_ex1:top. (exists v_ex2:top. ((v_Bytes__B v_l) = (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__ClientHelloMsg v_pv (v_Tuples__Tup14__7 v_si) v_sess v_cs v_cm v_ex1) (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__ServerHelloMsg (v_Tuples__Tup14__10 v_si) (v_Tuples__Tup14__8 v_si) (v_Tuples__Tup14__13 v_si) (v_Tuples__Tup14__1 v_si) (v_Tuples__Tup14__5 v_si) v_ex2) (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__CertificateMsg (v_Tuples__Tup14__11 v_si)) (v_HandshakeMessages__ServerHelloDoneMsg v_Bytes__empty_bytes))))))))))))))
(* declaring type HandshakeMessages.ServerLogBeforeClientCertificateDHE [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(572,0)] *)
predicate v_HandshakeMessages__ServerLogBeforeClientCertificateDHE_p (x1:top) (x2:top)
(* declaring type HandshakeMessages.ServerLogBeforeClientCertificateDHE_Auth [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(573,0)] *)
predicate v_HandshakeMessages__ServerLogBeforeClientCertificateDHE_Auth_p (x1:top) (x2:top)
(* declaring type HandshakeMessages.ServerLogBeforeClientCertificateDHE_NoAuth [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(574,0)] *)
predicate v_HandshakeMessages__ServerLogBeforeClientCertificateDHE_NoAuth_p (x1:top) (x2:top)
(* assume (!si. (!pv. (!l. ServerLogBeforeClientCertificateDHE(si, l) <=> Tuples.Tup14.4 si = True /\ ServerLogBeforeClientCertificateDHE_Auth(si, l) \/ Tuples.Tup14.4 si = False /\ ServerLogBeforeClientCertificateDHE_NoAuth(si, l)))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(576,0)] *)
axiom a1745_asm: (forall v_si:top. (forall v_pv:top. (forall v_l:top. ((v_HandshakeMessages__ServerLogBeforeClientCertificateDHE_p v_si v_l) <-> ((((v_Tuples__Tup14__4 v_si) = v_Pervasives__True) /\ (v_HandshakeMessages__ServerLogBeforeClientCertificateDHE_Auth_p v_si v_l)) \/ (((v_Tuples__Tup14__4 v_si) = v_Pervasives__False) /\ (v_HandshakeMessages__ServerLogBeforeClientCertificateDHE_NoAuth_p v_si v_l)))))))
(* assume (!si. (!l. ServerLogBeforeClientCertificateDHE_Auth(si, l) <=> (?crand. (?cpv. (?csl. (?cml. (?csess. (?ex1. (?ex2. (?ctl. (?sal. (?nl. (?p. (?g. (?y. (?a. (?sign. Bytes.B (l) = bop_ArrayAppend (ClientHelloMsg (cpv, crand, csess, csl, cml, ex1), bop_ArrayAppend (ServerHelloMsg (Tuples.Tup14.10 si, Tuples.Tup14.8 si, Tuples.Tup14.13 si, Tuples.Tup14.1 si, Tuples.Tup14.5 si, ex2), bop_ArrayAppend (CertificateMsg (Tuples.Tup14.11 si), bop_ArrayAppend (ServerKeyExchangeMsg_DHE (Tuples.Tup14.10 si, p, g, y, a, sign), bop_ArrayAppend (CertificateRequestMsg (Tuples.Tup14.10 si, ctl, sal, nl), ServerHelloDoneMsg (Bytes.empty_bytes))))))))))))))))))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(581,0)] *)
axiom a1746_asm: (forall v_si:top. (forall v_l:top. ((v_HandshakeMessages__ServerLogBeforeClientCertificateDHE_Auth_p v_si v_l) <-> (exists v_crand:top. (exists v_cpv:top. (exists v_csl:top. (exists v_cml:top. (exists v_csess:top. (exists v_ex1:top. (exists v_ex2:top. (exists v_ctl:top. (exists v_sal:top. (exists v_nl:top. (exists v_p:top. (exists v_g:top. (exists v_y:top. (exists v_a:top. (exists v_sign:top. ((v_Bytes__B v_l) = (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__ClientHelloMsg v_cpv v_crand v_csess v_csl v_cml v_ex1) (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__ServerHelloMsg (v_Tuples__Tup14__10 v_si) (v_Tuples__Tup14__8 v_si) (v_Tuples__Tup14__13 v_si) (v_Tuples__Tup14__1 v_si) (v_Tuples__Tup14__5 v_si) v_ex2) (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__CertificateMsg (v_Tuples__Tup14__11 v_si)) (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__ServerKeyExchangeMsg_DHE (v_Tuples__Tup14__10 v_si) v_p v_g v_y v_a v_sign) (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__CertificateRequestMsg (v_Tuples__Tup14__10 v_si) v_ctl v_sal v_nl) (v_HandshakeMessages__ServerHelloDoneMsg v_Bytes__empty_bytes)))))))))))))))))))))))))
(* assume (!si. (!l. ServerLogBeforeClientCertificateDHE_NoAuth(si, l) <=> (?pv. (?cs. (?cm. (?sess. (?ex1. (?ex2. (?p. (?g. (?y. (?a. (?sign. Bytes.B (l) = bop_ArrayAppend (ClientHelloMsg (pv, Tuples.Tup14.7 si, sess, cs, cm, ex1), bop_ArrayAppend (ServerHelloMsg (Tuples.Tup14.10 si, Tuples.Tup14.8 si, Tuples.Tup14.13 si, Tuples.Tup14.1 si, Tuples.Tup14.5 si, ex2), bop_ArrayAppend (CertificateMsg (Tuples.Tup14.11 si), bop_ArrayAppend (ServerKeyExchangeMsg_DHE (Tuples.Tup14.10 si, p, g, y, a, sign), ServerHelloDoneMsg (Bytes.empty_bytes)))))))))))))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(591,0)] *)
axiom a1747_asm: (forall v_si:top. (forall v_l:top. ((v_HandshakeMessages__ServerLogBeforeClientCertificateDHE_NoAuth_p v_si v_l) <-> (exists v_pv:top. (exists v_cs:top. (exists v_cm:top. (exists v_sess:top. (exists v_ex1:top. (exists v_ex2:top. (exists v_p:top. (exists v_g:top. (exists v_y:top. (exists v_a:top. (exists v_sign:top. ((v_Bytes__B v_l) = (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__ClientHelloMsg v_pv (v_Tuples__Tup14__7 v_si) v_sess v_cs v_cm v_ex1) (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__ServerHelloMsg (v_Tuples__Tup14__10 v_si) (v_Tuples__Tup14__8 v_si) (v_Tuples__Tup14__13 v_si) (v_Tuples__Tup14__1 v_si) (v_Tuples__Tup14__5 v_si) v_ex2) (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__CertificateMsg (v_Tuples__Tup14__11 v_si)) (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__ServerKeyExchangeMsg_DHE (v_Tuples__Tup14__10 v_si) v_p v_g v_y v_a v_sign) (v_HandshakeMessages__ServerHelloDoneMsg v_Bytes__empty_bytes))))))))))))))))))))
(* declaring type HandshakeMessages.ServerLogBeforeClientKeyExchangeRSA [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(601,0)] *)
predicate v_HandshakeMessages__ServerLogBeforeClientKeyExchangeRSA_p (x1:top) (x2:top) (x3:top)
(* declaring type HandshakeMessages.ServerLogBeforeClientKeyExchangeRSA_Auth [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(602,0)] *)
predicate v_HandshakeMessages__ServerLogBeforeClientKeyExchangeRSA_Auth_p (x1:top) (x2:top) (x3:top)
(* declaring type HandshakeMessages.ServerLogBeforeClientKeyExchangeRSA_NoAuth [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(603,0)] *)
predicate v_HandshakeMessages__ServerLogBeforeClientKeyExchangeRSA_NoAuth_p (x1:top) (x2:top) (x3:top)
(* assume (!si. (!pv. (!l. ServerLogBeforeClientKeyExchangeRSA(si, pv, l) <=> Tuples.Tup14.4 si = True /\ ServerLogBeforeClientKeyExchangeRSA_Auth(si, pv, l) \/ Tuples.Tup14.4 si = False /\ ServerLogBeforeClientKeyExchangeRSA_NoAuth(si, pv, l)))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(605,0)] *)
axiom a1748_asm: (forall v_si:top. (forall v_pv:top. (forall v_l:top. ((v_HandshakeMessages__ServerLogBeforeClientKeyExchangeRSA_p v_si v_pv v_l) <-> ((((v_Tuples__Tup14__4 v_si) = v_Pervasives__True) /\ (v_HandshakeMessages__ServerLogBeforeClientKeyExchangeRSA_Auth_p v_si v_pv v_l)) \/ (((v_Tuples__Tup14__4 v_si) = v_Pervasives__False) /\ (v_HandshakeMessages__ServerLogBeforeClientKeyExchangeRSA_NoAuth_p v_si v_pv v_l)))))))
(* assume (!si. (!pv. (!l. ServerLogBeforeClientKeyExchangeRSA_Auth(si, pv, l) <=> (?si'. (?l'. ServerLogBeforeClientCertificateRSA_Auth(si', pv, l') /\ UpdatesClientID(si', si) /\ Bytes.B (l) = bop_ArrayAppend (Bytes.B (l'), CertificateMsg (Tuples.Tup14.2 si))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(610,0)] *)
axiom a1749_asm: (forall v_si:top. (forall v_pv:top. (forall v_l:top. ((v_HandshakeMessages__ServerLogBeforeClientKeyExchangeRSA_Auth_p v_si v_pv v_l) <-> (exists v_si':top. (exists v_l':top. ((v_HandshakeMessages__ServerLogBeforeClientCertificateRSA_Auth_p v_si' v_pv v_l') /\ ((v_HandshakeMessages__UpdatesClientID_p v_si' v_si) /\ ((v_Bytes__B v_l) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_l') (v_HandshakeMessages__CertificateMsg (v_Tuples__Tup14__2 v_si))))))))))))
(* assume (!si. (!pv. (!l. ServerLogBeforeClientKeyExchangeRSA_NoAuth(si, pv, l) <=> ServerLogBeforeClientCertificateRSA_NoAuth(si, pv, l)))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(616,0)] *)
axiom a1750_asm: (forall v_si:top. (forall v_pv:top. (forall v_l:top. ((v_HandshakeMessages__ServerLogBeforeClientKeyExchangeRSA_NoAuth_p v_si v_pv v_l) <-> (v_HandshakeMessages__ServerLogBeforeClientCertificateRSA_NoAuth_p v_si v_pv v_l)))))
(* declaring type HandshakeMessages.ServerLogBeforeClientKeyExchangeDHE [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(620,0)] *)
predicate v_HandshakeMessages__ServerLogBeforeClientKeyExchangeDHE_p (x1:top) (x2:top)
(* declaring type HandshakeMessages.ServerLogBeforeClientKeyExchangeDHE_Auth [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(621,0)] *)
predicate v_HandshakeMessages__ServerLogBeforeClientKeyExchangeDHE_Auth_p (x1:top) (x2:top)
(* declaring type HandshakeMessages.ServerLogBeforeClientKeyExchangeDHE_NoAuth [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(622,0)] *)
predicate v_HandshakeMessages__ServerLogBeforeClientKeyExchangeDHE_NoAuth_p (x1:top) (x2:top)
(* assume (!si. (!pv. (!l. ServerLogBeforeClientKeyExchangeDHE(si, l) <=> Tuples.Tup14.4 si = True /\ ServerLogBeforeClientKeyExchangeDHE_Auth(si, l) \/ Tuples.Tup14.4 si = False /\ ServerLogBeforeClientKeyExchangeDHE_NoAuth(si, l)))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(624,0)] *)
axiom a1751_asm: (forall v_si:top. (forall v_pv:top. (forall v_l:top. ((v_HandshakeMessages__ServerLogBeforeClientKeyExchangeDHE_p v_si v_l) <-> ((((v_Tuples__Tup14__4 v_si) = v_Pervasives__True) /\ (v_HandshakeMessages__ServerLogBeforeClientKeyExchangeDHE_Auth_p v_si v_l)) \/ (((v_Tuples__Tup14__4 v_si) = v_Pervasives__False) /\ (v_HandshakeMessages__ServerLogBeforeClientKeyExchangeDHE_NoAuth_p v_si v_l)))))))
(* assume (!si. (!pv. (!l. ServerLogBeforeClientKeyExchangeDHE_Auth(si, l) <=> (?si'. (?l'. ServerLogBeforeClientCertificateDHE_Auth(si', l') /\ UpdatesClientID(si', si) /\ Bytes.B (l) = bop_ArrayAppend (Bytes.B (l'), CertificateMsg (Tuples.Tup14.2 si))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(629,0)] *)
axiom a1752_asm: (forall v_si:top. (forall v_pv:top. (forall v_l:top. ((v_HandshakeMessages__ServerLogBeforeClientKeyExchangeDHE_Auth_p v_si v_l) <-> (exists v_si':top. (exists v_l':top. ((v_HandshakeMessages__ServerLogBeforeClientCertificateDHE_Auth_p v_si' v_l') /\ ((v_HandshakeMessages__UpdatesClientID_p v_si' v_si) /\ ((v_Bytes__B v_l) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_l') (v_HandshakeMessages__CertificateMsg (v_Tuples__Tup14__2 v_si))))))))))))
(* assume (!si. (!pv. (!l. ServerLogBeforeClientKeyExchangeDHE_NoAuth(si, l) <=> ServerLogBeforeClientCertificateDHE_NoAuth(si, l)))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(635,0)] *)
axiom a1753_asm: (forall v_si:top. (forall v_pv:top. (forall v_l:top. ((v_HandshakeMessages__ServerLogBeforeClientKeyExchangeDHE_NoAuth_p v_si v_l) <-> (v_HandshakeMessages__ServerLogBeforeClientCertificateDHE_NoAuth_p v_si v_l)))))
(* declaring type HandshakeMessages.ServerLogBeforeClientCertificateVerifyRSA [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(639,0)] *)
predicate v_HandshakeMessages__ServerLogBeforeClientCertificateVerifyRSA_p (x1:top) (x2:top)
(* assume (!si. (!pv. (!l. ServerLogBeforeClientCertificateVerifyRSA(si, l) <=> (?si'. (?pv. (?r. (?l'. (?encpms. ServerLogBeforeClientKeyExchangeRSA(si', pv, l') /\ UpdatesPmsID(si', si) /\ Tuples.Tup14.9 si = TLSInfo.PmsId (PMS.RSAPMS (Cert.RSAPKCert (Tuples.Tup14.11 si), pv, r)) /\ Bytes.B (l) = bop_ArrayAppend (Bytes.B (l'), ClientKeyExchangeMsg_RSA (Tuples.Tup14.10 si, encpms)))))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(641,0)] *)
axiom a1754_asm: (forall v_si:top. (forall v_pv:top. (forall v_l:top. ((v_HandshakeMessages__ServerLogBeforeClientCertificateVerifyRSA_p v_si v_l) <-> (exists v_si':top. (exists v_pv_2:top. (exists v_r:top. (exists v_l':top. (exists v_encpms:top. ((v_HandshakeMessages__ServerLogBeforeClientKeyExchangeRSA_p v_si' v_pv_2 v_l') /\ ((v_HandshakeMessages__UpdatesPmsID_p v_si' v_si) /\ (((v_Tuples__Tup14__9 v_si) = (v_TLSInfo__PmsId (v_PMS__RSAPMS (v_Cert__RSAPKCert (v_Tuples__Tup14__11 v_si)) v_pv_2 v_r))) /\ ((v_Bytes__B v_l) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_l') (v_HandshakeMessages__ClientKeyExchangeMsg_RSA (v_Tuples__Tup14__10 v_si) v_encpms)))))))))))))))
(* declaring type HandshakeMessages.ServerLogBeforeClientCertificateVerifyDHE [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(649,0)] *)
predicate v_HandshakeMessages__ServerLogBeforeClientCertificateVerifyDHE_p (x1:top) (x2:top)
(* assume (!si. (!pv. (!l. ServerLogBeforeClientCertificateVerifyDHE(si, l) <=> (?si'. (?l'. (?p. (?g. (?gc. (?gs. (?r. (?d. ServerLogBeforeClientKeyExchangeDHE(si', l') /\ UpdatesPmsID(si', si) /\ Tuples.Tup14.9 si = TLSInfo.PmsId (PMS.DHPMS (p, g, gc, gs, r)) /\ Bytes.B (l) = bop_ArrayAppend (Bytes.B (l'), ClientKeyExchangeMsg_DHE (gc))))))))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(651,0)] *)
axiom a1755_asm: (forall v_si:top. (forall v_pv:top. (forall v_l:top. ((v_HandshakeMessages__ServerLogBeforeClientCertificateVerifyDHE_p v_si v_l) <-> (exists v_si':top. (exists v_l':top. (exists v_p:top. (exists v_g:top. (exists v_gc:top. (exists v_gs:top. (exists v_r:top. (exists v_d:top. ((v_HandshakeMessages__ServerLogBeforeClientKeyExchangeDHE_p v_si' v_l') /\ ((v_HandshakeMessages__UpdatesPmsID_p v_si' v_si) /\ (((v_Tuples__Tup14__9 v_si) = (v_TLSInfo__PmsId (v_PMS__DHPMS v_p v_g v_gc v_gs v_r))) /\ ((v_Bytes__B v_l) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_l') (v_HandshakeMessages__ClientKeyExchangeMsg_DHE v_gc))))))))))))))))))
(* declaring type HandshakeMessages.ServerLogBeforeClientCertificateVerify [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(658,0)] *)
predicate v_HandshakeMessages__ServerLogBeforeClientCertificateVerify_p (x1:top) (x2:top)
(* assume (!si. (!l. ServerLogBeforeClientCertificateVerify(si, l) <=> ServerLogBeforeClientCertificateVerifyRSA(si, l) \/ ServerLogBeforeClientCertificateVerifyDHE(si, l))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(659,0)] *)
axiom a1756_asm: (forall v_si:top. (forall v_l:top. ((v_HandshakeMessages__ServerLogBeforeClientCertificateVerify_p v_si v_l) <-> ((v_HandshakeMessages__ServerLogBeforeClientCertificateVerifyRSA_p v_si v_l) \/ (v_HandshakeMessages__ServerLogBeforeClientCertificateVerifyDHE_p v_si v_l)))))
(* declaring type HandshakeMessages.ServerLogBeforeClientFinished [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(664,0)] *)
predicate v_HandshakeMessages__ServerLogBeforeClientFinished_p (x1:top) (x2:top)
(* declaring type HandshakeMessages.ServerLogBeforeClientFinished_Auth [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(665,0)] *)
predicate v_HandshakeMessages__ServerLogBeforeClientFinished_Auth_p (x1:top) (x2:top)
(* declaring type HandshakeMessages.ServerLogBeforeClientFinished_NoAuth [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(666,0)] *)
predicate v_HandshakeMessages__ServerLogBeforeClientFinished_NoAuth_p (x1:top) (x2:top)
(* assume (!si. (!l. ServerLogBeforeClientFinished(si, l) <=> Tuples.Tup14.4 si = True /\ ServerLogBeforeClientFinished_Auth(si, l) \/ Tuples.Tup14.4 si = False /\ ServerLogBeforeClientFinished_NoAuth(si, l))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(667,0)] *)
axiom a1757_asm: (forall v_si:top. (forall v_l:top. ((v_HandshakeMessages__ServerLogBeforeClientFinished_p v_si v_l) <-> ((((v_Tuples__Tup14__4 v_si) = v_Pervasives__True) /\ (v_HandshakeMessages__ServerLogBeforeClientFinished_Auth_p v_si v_l)) \/ (((v_Tuples__Tup14__4 v_si) = v_Pervasives__False) /\ (v_HandshakeMessages__ServerLogBeforeClientFinished_NoAuth_p v_si v_l))))))
(* assume (!si. (!l. ServerLogBeforeClientFinished_Auth(si, l) <=> (?si'. (?l'. (?a. (?sign. ServerLogBeforeClientCertificateVerify(si', l') /\ UpdatesClientSigAlg(si', si) /\ Bytes.B (l) = bop_ArrayAppend (Bytes.B (l'), CertificateVerifyMsg (Tuples.Tup14.10 si, a, sign)))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(672,0)] *)
axiom a1758_asm: (forall v_si:top. (forall v_l:top. ((v_HandshakeMessages__ServerLogBeforeClientFinished_Auth_p v_si v_l) <-> (exists v_si':top. (exists v_l':top. (exists v_a:top. (exists v_sign:top. ((v_HandshakeMessages__ServerLogBeforeClientCertificateVerify_p v_si' v_l') /\ ((v_HandshakeMessages__UpdatesClientSigAlg_p v_si' v_si) /\ ((v_Bytes__B v_l) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_l') (v_HandshakeMessages__CertificateVerifyMsg (v_Tuples__Tup14__10 v_si) v_a v_sign))))))))))))
(* assume (!si. (!l. ServerLogBeforeClientFinished_NoAuth(si, l) <=> ServerLogBeforeClientCertificateVerify(si, l))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(678,0)] *)
axiom a1759_asm: (forall v_si:top. (forall v_l:top. ((v_HandshakeMessages__ServerLogBeforeClientFinished_NoAuth_p v_si v_l) <-> (v_HandshakeMessages__ServerLogBeforeClientCertificateVerify_p v_si v_l))))
(* declaring type HandshakeMessages.ServerLogBeforeServerFinished [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(682,0)] *)
predicate v_HandshakeMessages__ServerLogBeforeServerFinished_p (x1:top) (x2:top)
(* assume (!si. (!l. ServerLogBeforeServerFinished(si, l) <=> (?l'. (?cvd. ServerLogBeforeClientFinished(si, l') /\ Bytes.B (l) = bop_ArrayAppend (Bytes.B (l'), ClientFinishedMsg (cvd)))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(684,0)] *)
axiom a1760_asm: (forall v_si:top. (forall v_l:top. ((v_HandshakeMessages__ServerLogBeforeServerFinished_p v_si v_l) <-> (exists v_l':top. (exists v_cvd:top. ((v_HandshakeMessages__ServerLogBeforeClientFinished_p v_si v_l') /\ ((v_Bytes__B v_l) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_l') (v_HandshakeMessages__ClientFinishedMsg v_cvd)))))))))
(* declaring type HandshakeMessages.ClientLogBeforeServerHello [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(691,0)] *)
predicate v_HandshakeMessages__ClientLogBeforeServerHello_p (x1:top) (x2:top)
(* declaring type HandshakeMessages.ClientLogBeforeServerCertificate [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(692,0)] *)
predicate v_HandshakeMessages__ClientLogBeforeServerCertificate_p (x1:top) (x2:top)
(* assume (!cr. (!sid. (!l. ClientLogBeforeServerHello(cr, l) <=> (?pv. (?csid. (?cs. (?cm. (?ex1. Bytes.B (l) = ClientHelloMsg (pv, cr, sid, cs, cm, ex1))))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(694,0)] *)
axiom a1761_asm: (forall v_cr:top. (forall v_sid:top. (forall v_l:top. ((v_HandshakeMessages__ClientLogBeforeServerHello_p v_cr v_l) <-> (exists v_pv:top. (exists v_csid:top. (exists v_cs:top. (exists v_cm:top. (exists v_ex1:top. ((v_Bytes__B v_l) = (v_HandshakeMessages__ClientHelloMsg v_pv v_cr v_sid v_cs v_cm v_ex1)))))))))))
(* Querying for ask *)
(* query (!pv. (!cs. (!cm. (!ex1. (!cr. (!sid. (!l. Bytes.B (l) = ClientHelloMsg (pv, cr, sid, cs, cm, ex1) => ClientLogBeforeServerHello(cr, l)))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(698,0)] *)
goal g9_gl: (forall v_pv:top. (forall v_cs:top. (forall v_cm:top. (forall v_ex1:top. (forall v_cr:top. (forall v_sid:top. (forall v_l:top. (((v_Bytes__B v_l) = (v_HandshakeMessages__ClientHelloMsg v_pv v_cr v_sid v_cs v_cm v_ex1)) -> (v_HandshakeMessages__ClientLogBeforeServerHello_p v_cr v_l)))))))))
(* assume (!pv. (!cs. (!cm. (!ex1. (!cr. (!sid. (!l. Bytes.B (l) = ClientHelloMsg (pv, cr, sid, cs, cm, ex1) => ClientLogBeforeServerHello(cr, l)))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(698,0)] *)
axiom a1762_asm: (forall v_pv:top. (forall v_cs:top. (forall v_cm:top. (forall v_ex1:top. (forall v_cr:top. (forall v_sid:top. (forall v_l:top. (((v_Bytes__B v_l) = (v_HandshakeMessages__ClientHelloMsg v_pv v_cr v_sid v_cs v_cm v_ex1)) -> (v_HandshakeMessages__ClientLogBeforeServerHello_p v_cr v_l)))))))))
(* assume (!si. (!l. ClientLogBeforeServerCertificate(si, l) <=> (?l'. (?cr. (?ex2. ClientLogBeforeServerHello(cr, l') /\ Bytes.B (l) = bop_ArrayAppend (Bytes.B (l'), ServerHelloMsg (Tuples.Tup14.10 si, Tuples.Tup14.8 si, Tuples.Tup14.13 si, Tuples.Tup14.1 si, Tuples.Tup14.5 si, ex2))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(701,0)] *)
axiom a1763_asm: (forall v_si:top. (forall v_l:top. ((v_HandshakeMessages__ClientLogBeforeServerCertificate_p v_si v_l) <-> (exists v_l':top. (exists v_cr:top. (exists v_ex2:top. ((v_HandshakeMessages__ClientLogBeforeServerHello_p v_cr v_l') /\ ((v_Bytes__B v_l) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_l') (v_HandshakeMessages__ServerHelloMsg (v_Tuples__Tup14__10 v_si) (v_Tuples__Tup14__8 v_si) (v_Tuples__Tup14__13 v_si) (v_Tuples__Tup14__1 v_si) (v_Tuples__Tup14__5 v_si) v_ex2))))))))))
(* declaring type HandshakeMessages.ClientLogBeforeCertificateRequestRSA [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(708,0)] *)
predicate v_HandshakeMessages__ClientLogBeforeCertificateRequestRSA_p (x1:top) (x2:top)
(* assume (!si. (!pv. (!l. ClientLogBeforeCertificateRequestRSA(si, l) <=> (?si'. (?l'. ClientLogBeforeServerCertificate(si', l') /\ UpdatesServerID(si', si) /\ Bytes.B (l) = bop_ArrayAppend (Bytes.B (l'), CertificateMsg (Tuples.Tup14.11 si))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(709,0)] *)
axiom a1764_asm: (forall v_si:top. (forall v_pv:top. (forall v_l:top. ((v_HandshakeMessages__ClientLogBeforeCertificateRequestRSA_p v_si v_l) <-> (exists v_si':top. (exists v_l':top. ((v_HandshakeMessages__ClientLogBeforeServerCertificate_p v_si' v_l') /\ ((v_HandshakeMessages__UpdatesServerID_p v_si' v_si) /\ ((v_Bytes__B v_l) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_l') (v_HandshakeMessages__CertificateMsg (v_Tuples__Tup14__11 v_si))))))))))))
(* declaring type HandshakeMessages.ClientLogBeforeServerKeyExchangeDHE [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(715,0)] *)
predicate v_HandshakeMessages__ClientLogBeforeServerKeyExchangeDHE_p (x1:top) (x2:top)
(* assume (!si. (!pv. (!l. ClientLogBeforeServerKeyExchangeDHE(si, l) <=> (?si'. (?l'. ClientLogBeforeServerCertificate(si', l') /\ UpdatesServerID(si', si) /\ Bytes.B (l) = bop_ArrayAppend (Bytes.B (l'), CertificateMsg (Tuples.Tup14.11 si))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(716,0)] *)
axiom a1765_asm: (forall v_si:top. (forall v_pv:top. (forall v_l:top. ((v_HandshakeMessages__ClientLogBeforeServerKeyExchangeDHE_p v_si v_l) <-> (exists v_si':top. (exists v_l':top. ((v_HandshakeMessages__ClientLogBeforeServerCertificate_p v_si' v_l') /\ ((v_HandshakeMessages__UpdatesServerID_p v_si' v_si) /\ ((v_Bytes__B v_l) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_l') (v_HandshakeMessages__CertificateMsg (v_Tuples__Tup14__11 v_si))))))))))))
(* declaring type HandshakeMessages.ClientLogBeforeCertificateRequestDHE [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(722,0)] *)
predicate v_HandshakeMessages__ClientLogBeforeCertificateRequestDHE_p (x1:top) (x2:top)
(* assume (!si. (!l. ClientLogBeforeCertificateRequestDHE(si, l) <=> (?si'. (?l'. (?p. (?g. (?y. (?a. (?pv. (?sign. ClientLogBeforeServerKeyExchangeDHE(si', l') /\ UpdatesServerSigAlg(si', si) /\ Bytes.B (l) = bop_ArrayAppend (Bytes.B (l'), ServerKeyExchangeMsg_DHE (pv, p, g, y, a, sign)))))))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(723,0)] *)
axiom a1766_asm: (forall v_si:top. (forall v_l:top. ((v_HandshakeMessages__ClientLogBeforeCertificateRequestDHE_p v_si v_l) <-> (exists v_si':top. (exists v_l':top. (exists v_p:top. (exists v_g:top. (exists v_y:top. (exists v_a:top. (exists v_pv:top. (exists v_sign:top. ((v_HandshakeMessages__ClientLogBeforeServerKeyExchangeDHE_p v_si' v_l') /\ ((v_HandshakeMessages__UpdatesServerSigAlg_p v_si' v_si) /\ ((v_Bytes__B v_l) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_l') (v_HandshakeMessages__ServerKeyExchangeMsg_DHE v_pv v_p v_g v_y v_a v_sign))))))))))))))))
(* declaring type HandshakeMessages.ClientLogBeforeServerHelloDoneRSA [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(730,0)] *)
predicate v_HandshakeMessages__ClientLogBeforeServerHelloDoneRSA_p (x1:top) (x2:top)
(* declaring type HandshakeMessages.ClientLogBeforeServerHelloDoneRSA_Auth [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(731,0)] *)
predicate v_HandshakeMessages__ClientLogBeforeServerHelloDoneRSA_Auth_p (x1:top) (x2:top)
(* declaring type HandshakeMessages.ClientLogBeforeServerHelloDoneRSA_NoAuth [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(732,0)] *)
predicate v_HandshakeMessages__ClientLogBeforeServerHelloDoneRSA_NoAuth_p (x1:top) (x2:top)
(* assume (!si. (!pv. (!l. ClientLogBeforeServerHelloDoneRSA(si, l) <=> Tuples.Tup14.4 si = True /\ ClientLogBeforeServerHelloDoneRSA_Auth(si, l) \/ Tuples.Tup14.4 si = False /\ ClientLogBeforeServerHelloDoneRSA_NoAuth(si, l)))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(735,0)] *)
axiom a1767_asm: (forall v_si:top. (forall v_pv:top. (forall v_l:top. ((v_HandshakeMessages__ClientLogBeforeServerHelloDoneRSA_p v_si v_l) <-> ((((v_Tuples__Tup14__4 v_si) = v_Pervasives__True) /\ (v_HandshakeMessages__ClientLogBeforeServerHelloDoneRSA_Auth_p v_si v_l)) \/ (((v_Tuples__Tup14__4 v_si) = v_Pervasives__False) /\ (v_HandshakeMessages__ClientLogBeforeServerHelloDoneRSA_NoAuth_p v_si v_l)))))))
(* assume (!si. (!l. ClientLogBeforeServerHelloDoneRSA_Auth(si, l) <=> (?si'. (?l'. (?ctl. (?sal. (?pv. (?nl. ClientLogBeforeCertificateRequestRSA(si', l') /\ UpdatesClientAuth(si', si) /\ Bytes.B (l) = bop_ArrayAppend (Bytes.B (l'), CertificateRequestMsg (pv, ctl, sal, nl)))))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(740,0)] *)
axiom a1768_asm: (forall v_si:top. (forall v_l:top. ((v_HandshakeMessages__ClientLogBeforeServerHelloDoneRSA_Auth_p v_si v_l) <-> (exists v_si':top. (exists v_l':top. (exists v_ctl:top. (exists v_sal:top. (exists v_pv:top. (exists v_nl:top. ((v_HandshakeMessages__ClientLogBeforeCertificateRequestRSA_p v_si' v_l') /\ ((v_HandshakeMessages__UpdatesClientAuth_p v_si' v_si) /\ ((v_Bytes__B v_l) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_l') (v_HandshakeMessages__CertificateRequestMsg v_pv v_ctl v_sal v_nl))))))))))))))
(* Querying for ask *)
(* query (!si. (!l. (!si'. (!l'. (!pv. (!ctl. (!sal. (!nl. Tuples.Tup14.4 si = True /\ ClientLogBeforeCertificateRequestRSA(si', l') /\ UpdatesClientAuth(si', si) /\ Bytes.B (l) = bop_ArrayAppend (Bytes.B (l'), CertificateRequestMsg (pv, ctl, sal, nl)) => ClientLogBeforeServerHelloDoneRSA(si, l))))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(746,0)] *)
goal g10_gl: (forall v_si:top. (forall v_l:top. (forall v_si':top. (forall v_l':top. (forall v_pv:top. (forall v_ctl:top. (forall v_sal:top. (forall v_nl:top. ((((v_Tuples__Tup14__4 v_si) = v_Pervasives__True) /\ ((v_HandshakeMessages__ClientLogBeforeCertificateRequestRSA_p v_si' v_l') /\ ((v_HandshakeMessages__UpdatesClientAuth_p v_si' v_si) /\ ((v_Bytes__B v_l) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_l') (v_HandshakeMessages__CertificateRequestMsg v_pv v_ctl v_sal v_nl)))))) -> (v_HandshakeMessages__ClientLogBeforeServerHelloDoneRSA_p v_si v_l))))))))))
(* assume (!si. (!l. (!si'. (!l'. (!pv. (!ctl. (!sal. (!nl. Tuples.Tup14.4 si = True /\ ClientLogBeforeCertificateRequestRSA(si', l') /\ UpdatesClientAuth(si', si) /\ Bytes.B (l) = bop_ArrayAppend (Bytes.B (l'), CertificateRequestMsg (pv, ctl, sal, nl)) => ClientLogBeforeServerHelloDoneRSA(si, l))))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(746,0)] *)
axiom a1769_asm: (forall v_si:top. (forall v_l:top. (forall v_si':top. (forall v_l':top. (forall v_pv:top. (forall v_ctl:top. (forall v_sal:top. (forall v_nl:top. ((((v_Tuples__Tup14__4 v_si) = v_Pervasives__True) /\ ((v_HandshakeMessages__ClientLogBeforeCertificateRequestRSA_p v_si' v_l') /\ ((v_HandshakeMessages__UpdatesClientAuth_p v_si' v_si) /\ ((v_Bytes__B v_l) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_l') (v_HandshakeMessages__CertificateRequestMsg v_pv v_ctl v_sal v_nl)))))) -> (v_HandshakeMessages__ClientLogBeforeServerHelloDoneRSA_p v_si v_l))))))))))
(* assume (!si. (!l. ClientLogBeforeServerHelloDoneRSA_NoAuth(si, l) <=> ClientLogBeforeCertificateRequestRSA(si, l))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(752,0)] *)
axiom a1770_asm: (forall v_si:top. (forall v_l:top. ((v_HandshakeMessages__ClientLogBeforeServerHelloDoneRSA_NoAuth_p v_si v_l) <-> (v_HandshakeMessages__ClientLogBeforeCertificateRequestRSA_p v_si v_l))))
(* declaring type HandshakeMessages.ClientLogAfterServerHelloDoneRSA [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(756,0)] *)
predicate v_HandshakeMessages__ClientLogAfterServerHelloDoneRSA_p (x1:top) (x2:top)
(* assume (!si. (!pv. (!l. ClientLogAfterServerHelloDoneRSA(si, l) <=> (?l'. (?b. ClientLogBeforeServerHelloDoneRSA(si, l') /\ Bytes.B (l) = bop_ArrayAppend (Bytes.B (l'), ServerHelloDoneMsg (b))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(757,0)] *)
axiom a1771_asm: (forall v_si:top. (forall v_pv:top. (forall v_l:top. ((v_HandshakeMessages__ClientLogAfterServerHelloDoneRSA_p v_si v_l) <-> (exists v_l':top. (exists v_b:top. ((v_HandshakeMessages__ClientLogBeforeServerHelloDoneRSA_p v_si v_l') /\ ((v_Bytes__B v_l) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_l') (v_HandshakeMessages__ServerHelloDoneMsg v_b))))))))))
(* declaring type HandshakeMessages.ClientLogBeforeServerHelloDoneDHE [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(762,0)] *)
predicate v_HandshakeMessages__ClientLogBeforeServerHelloDoneDHE_p (x1:top) (x2:top)
(* declaring type HandshakeMessages.ClientLogBeforeServerHelloDoneDHE_Auth [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(763,0)] *)
predicate v_HandshakeMessages__ClientLogBeforeServerHelloDoneDHE_Auth_p (x1:top) (x2:top)
(* declaring type HandshakeMessages.ClientLogBeforeServerHelloDoneDHE_NoAuth [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(764,0)] *)
predicate v_HandshakeMessages__ClientLogBeforeServerHelloDoneDHE_NoAuth_p (x1:top) (x2:top)
(* assume (!si. (!pv. (!l. ClientLogBeforeServerHelloDoneDHE(si, l) <=> Tuples.Tup14.4 si = True /\ ClientLogBeforeServerHelloDoneDHE_Auth(si, l) \/ Tuples.Tup14.4 si = False /\ ClientLogBeforeServerHelloDoneDHE_NoAuth(si, l)))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(766,0)] *)
axiom a1772_asm: (forall v_si:top. (forall v_pv:top. (forall v_l:top. ((v_HandshakeMessages__ClientLogBeforeServerHelloDoneDHE_p v_si v_l) <-> ((((v_Tuples__Tup14__4 v_si) = v_Pervasives__True) /\ (v_HandshakeMessages__ClientLogBeforeServerHelloDoneDHE_Auth_p v_si v_l)) \/ (((v_Tuples__Tup14__4 v_si) = v_Pervasives__False) /\ (v_HandshakeMessages__ClientLogBeforeServerHelloDoneDHE_NoAuth_p v_si v_l)))))))
(* assume (!si. (!pv. (!l. ClientLogBeforeServerHelloDoneDHE_Auth(si, l) <=> (?si'. (?l'. (?pv. (?ctl. (?sal. (?nl. ClientLogBeforeCertificateRequestDHE(si', l') /\ UpdatesClientAuth(si', si) /\ Bytes.B (l) = bop_ArrayAppend (Bytes.B (l'), CertificateRequestMsg (pv, ctl, sal, nl))))))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(771,0)] *)
axiom a1773_asm: (forall v_si:top. (forall v_pv:top. (forall v_l:top. ((v_HandshakeMessages__ClientLogBeforeServerHelloDoneDHE_Auth_p v_si v_l) <-> (exists v_si':top. (exists v_l':top. (exists v_pv_2:top. (exists v_ctl:top. (exists v_sal:top. (exists v_nl:top. ((v_HandshakeMessages__ClientLogBeforeCertificateRequestDHE_p v_si' v_l') /\ ((v_HandshakeMessages__UpdatesClientAuth_p v_si' v_si) /\ ((v_Bytes__B v_l) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_l') (v_HandshakeMessages__CertificateRequestMsg v_pv_2 v_ctl v_sal v_nl)))))))))))))))
(* assume (!si. (!pv. (!l. ClientLogBeforeServerHelloDoneDHE_NoAuth(si, l) <=> ClientLogBeforeCertificateRequestDHE(si, l)))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(777,0)] *)
axiom a1774_asm: (forall v_si:top. (forall v_pv:top. (forall v_l:top. ((v_HandshakeMessages__ClientLogBeforeServerHelloDoneDHE_NoAuth_p v_si v_l) <-> (v_HandshakeMessages__ClientLogBeforeCertificateRequestDHE_p v_si v_l)))))
(* declaring type HandshakeMessages.ClientLogAfterServerHelloDoneDHE [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(781,0)] *)
predicate v_HandshakeMessages__ClientLogAfterServerHelloDoneDHE_p (x1:top) (x2:top)
(* assume (!si. (!pv. (!l. ClientLogAfterServerHelloDoneDHE(si, l) <=> (?l'. (?b. ClientLogBeforeServerHelloDoneDHE(si, l') /\ Bytes.B (l) = bop_ArrayAppend (Bytes.B (l'), ServerHelloDoneMsg (b))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(783,0)] *)
axiom a1775_asm: (forall v_si:top. (forall v_pv:top. (forall v_l:top. ((v_HandshakeMessages__ClientLogAfterServerHelloDoneDHE_p v_si v_l) <-> (exists v_l':top. (exists v_b:top. ((v_HandshakeMessages__ClientLogBeforeServerHelloDoneDHE_p v_si v_l') /\ ((v_Bytes__B v_l) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_l') (v_HandshakeMessages__ServerHelloDoneMsg v_b))))))))))
(* declaring type HandshakeMessages.ClientLogBeforeCertificateVerifyRSA_Auth [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(789,0)] *)
predicate v_HandshakeMessages__ClientLogBeforeCertificateVerifyRSA_Auth_p (x1:top) (x2:top)
(* assume (!si. (!pv. (!l. ClientLogBeforeCertificateVerifyRSA_Auth(si, l) <=> (?si'. (?l'. (?encpms. ClientLogAfterServerHelloDoneRSA(si', l') /\ Tuples.Tup14.4 si' = True /\ UpdatesPmsClientID(si', si) /\ Bytes.B (l) = bop_ArrayAppend (bop_ArrayAppend (Bytes.B (l'), CertificateMsg (Tuples.Tup14.2 si)), ClientKeyExchangeMsg_RSA (Tuples.Tup14.10 si, encpms)))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(791,0)] *)
axiom a1776_asm: (forall v_si:top. (forall v_pv:top. (forall v_l:top. ((v_HandshakeMessages__ClientLogBeforeCertificateVerifyRSA_Auth_p v_si v_l) <-> (exists v_si':top. (exists v_l':top. (exists v_encpms:top. ((v_HandshakeMessages__ClientLogAfterServerHelloDoneRSA_p v_si' v_l') /\ (((v_Tuples__Tup14__4 v_si') = v_Pervasives__True) /\ ((v_HandshakeMessages__UpdatesPmsClientID_p v_si' v_si) /\ ((v_Bytes__B v_l) = (v_Pervasives__bop_ArrayAppend (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_l') (v_HandshakeMessages__CertificateMsg (v_Tuples__Tup14__2 v_si))) (v_HandshakeMessages__ClientKeyExchangeMsg_RSA (v_Tuples__Tup14__10 v_si) v_encpms)))))))))))))
(* declaring type HandshakeMessages.ClientLogBeforeCertificateVerifyDHE_Auth [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(800,0)] *)
predicate v_HandshakeMessages__ClientLogBeforeCertificateVerifyDHE_Auth_p (x1:top) (x2:top)
(* assume (!si. (!pv. (!l. ClientLogBeforeCertificateVerifyDHE_Auth(si, l) <=> (?si'. (?l'. (?b. ClientLogAfterServerHelloDoneDHE(si', l') /\ Tuples.Tup14.4 si' = True /\ UpdatesPmsClientID(si', si) /\ Bytes.B (l) = bop_ArrayAppend (bop_ArrayAppend (Bytes.B (l'), CertificateMsg (Tuples.Tup14.2 si)), ClientKeyExchangeMsg_DHE (b)))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(802,0)] *)
axiom a1777_asm: (forall v_si:top. (forall v_pv:top. (forall v_l:top. ((v_HandshakeMessages__ClientLogBeforeCertificateVerifyDHE_Auth_p v_si v_l) <-> (exists v_si':top. (exists v_l':top. (exists v_b:top. ((v_HandshakeMessages__ClientLogAfterServerHelloDoneDHE_p v_si' v_l') /\ (((v_Tuples__Tup14__4 v_si') = v_Pervasives__True) /\ ((v_HandshakeMessages__UpdatesPmsClientID_p v_si' v_si) /\ ((v_Bytes__B v_l) = (v_Pervasives__bop_ArrayAppend (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_l') (v_HandshakeMessages__CertificateMsg (v_Tuples__Tup14__2 v_si))) (v_HandshakeMessages__ClientKeyExchangeMsg_DHE v_b)))))))))))))
(* declaring type HandshakeMessages.ClientLogBeforeClientFinishedRSA [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(811,0)] *)
predicate v_HandshakeMessages__ClientLogBeforeClientFinishedRSA_p (x1:top) (x2:top)
(* declaring type HandshakeMessages.ClientLogBeforeClientFinishedRSA_Auth [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(812,0)] *)
predicate v_HandshakeMessages__ClientLogBeforeClientFinishedRSA_Auth_p (x1:top) (x2:top)
(* declaring type HandshakeMessages.ClientLogBeforeClientFinishedRSA_TryNoAuth [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(813,0)] *)
predicate v_HandshakeMessages__ClientLogBeforeClientFinishedRSA_TryNoAuth_p (x1:top) (x2:top)
(* declaring type HandshakeMessages.ClientLogBeforeClientFinishedRSA_NoAuth [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(814,0)] *)
predicate v_HandshakeMessages__ClientLogBeforeClientFinishedRSA_NoAuth_p (x1:top) (x2:top)
(* assume (!si. (!pv. (!l. ClientLogBeforeClientFinishedRSA(si, l) <=> Tuples.Tup14.4 si = True /\ Tuples.Tup14.2 si <> op_Nil () /\ ClientLogBeforeClientFinishedRSA_Auth(si, l) \/ Tuples.Tup14.4 si = True /\ Tuples.Tup14.2 si = op_Nil () /\ ClientLogBeforeClientFinishedRSA_TryNoAuth(si, l) \/ Tuples.Tup14.4 si = False /\ ClientLogBeforeClientFinishedRSA_NoAuth(si, l)))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(816,0)] *)
axiom a1778_asm: (forall v_si:top. (forall v_pv:top. (forall v_l:top. ((v_HandshakeMessages__ClientLogBeforeClientFinishedRSA_p v_si v_l) <-> ((((v_Tuples__Tup14__4 v_si) = v_Pervasives__True) /\ ((not ((v_Tuples__Tup14__2 v_si) = (v_Pervasives__op_Nil ))) /\ (v_HandshakeMessages__ClientLogBeforeClientFinishedRSA_Auth_p v_si v_l))) \/ ((((v_Tuples__Tup14__4 v_si) = v_Pervasives__True) /\ (((v_Tuples__Tup14__2 v_si) = (v_Pervasives__op_Nil )) /\ (v_HandshakeMessages__ClientLogBeforeClientFinishedRSA_TryNoAuth_p v_si v_l))) \/ (((v_Tuples__Tup14__4 v_si) = v_Pervasives__False) /\ (v_HandshakeMessages__ClientLogBeforeClientFinishedRSA_NoAuth_p v_si v_l))))))))
(* assume (!si. (!pv. (!l. ClientLogBeforeClientFinishedRSA_Auth(si, l) <=> (?si'. (?l'. (?encpms. (?a. (?sign. ClientLogAfterServerHelloDoneRSA(si', l') /\ Tuples.Tup14.4 si' = True /\ UpdatesPmsClientID(si', si) /\ Bytes.B (l) = bop_ArrayAppend (bop_ArrayAppend (bop_ArrayAppend (Bytes.B (l'), CertificateMsg (Tuples.Tup14.2 si)), ClientKeyExchangeMsg_RSA (Tuples.Tup14.10 si, encpms)), CertificateVerifyMsg (Tuples.Tup14.10 si, a, sign)))))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(822,0)] *)
axiom a1779_asm: (forall v_si:top. (forall v_pv:top. (forall v_l:top. ((v_HandshakeMessages__ClientLogBeforeClientFinishedRSA_Auth_p v_si v_l) <-> (exists v_si':top. (exists v_l':top. (exists v_encpms:top. (exists v_a:top. (exists v_sign:top. ((v_HandshakeMessages__ClientLogAfterServerHelloDoneRSA_p v_si' v_l') /\ (((v_Tuples__Tup14__4 v_si') = v_Pervasives__True) /\ ((v_HandshakeMessages__UpdatesPmsClientID_p v_si' v_si) /\ ((v_Bytes__B v_l) = (v_Pervasives__bop_ArrayAppend (v_Pervasives__bop_ArrayAppend (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_l') (v_HandshakeMessages__CertificateMsg (v_Tuples__Tup14__2 v_si))) (v_HandshakeMessages__ClientKeyExchangeMsg_RSA (v_Tuples__Tup14__10 v_si) v_encpms)) (v_HandshakeMessages__CertificateVerifyMsg (v_Tuples__Tup14__10 v_si) v_a v_sign)))))))))))))))
(* assume (!si. (!pv. (!l. ClientLogBeforeClientFinishedRSA_TryNoAuth(si, l) <=> (?si'. (?l'. (?encpms. ClientLogAfterServerHelloDoneRSA(si', l') /\ Tuples.Tup14.4 si' = True /\ UpdatesPmsClientID(si', si) /\ Bytes.B (l) = bop_ArrayAppend (bop_ArrayAppend (Bytes.B (l'), CertificateMsg (Tuples.Tup14.2 si)), ClientKeyExchangeMsg_RSA (Tuples.Tup14.10 si, encpms)))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(831,0)] *)
axiom a1780_asm: (forall v_si:top. (forall v_pv:top. (forall v_l:top. ((v_HandshakeMessages__ClientLogBeforeClientFinishedRSA_TryNoAuth_p v_si v_l) <-> (exists v_si':top. (exists v_l':top. (exists v_encpms:top. ((v_HandshakeMessages__ClientLogAfterServerHelloDoneRSA_p v_si' v_l') /\ (((v_Tuples__Tup14__4 v_si') = v_Pervasives__True) /\ ((v_HandshakeMessages__UpdatesPmsClientID_p v_si' v_si) /\ ((v_Bytes__B v_l) = (v_Pervasives__bop_ArrayAppend (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_l') (v_HandshakeMessages__CertificateMsg (v_Tuples__Tup14__2 v_si))) (v_HandshakeMessages__ClientKeyExchangeMsg_RSA (v_Tuples__Tup14__10 v_si) v_encpms)))))))))))))
(* assume (!si. (!pv. (!l. ClientLogBeforeClientFinishedRSA_NoAuth(si, l) <=> (?si'. (?l'. (?encpms. ClientLogAfterServerHelloDoneRSA(si', l') /\ Tuples.Tup14.4 si' = False /\ UpdatesPmsClientID(si', si) /\ Bytes.B (l) = bop_ArrayAppend (Bytes.B (l'), ClientKeyExchangeMsg_RSA (Tuples.Tup14.10 si, encpms)))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(840,0)] *)
axiom a1781_asm: (forall v_si:top. (forall v_pv:top. (forall v_l:top. ((v_HandshakeMessages__ClientLogBeforeClientFinishedRSA_NoAuth_p v_si v_l) <-> (exists v_si':top. (exists v_l':top. (exists v_encpms:top. ((v_HandshakeMessages__ClientLogAfterServerHelloDoneRSA_p v_si' v_l') /\ (((v_Tuples__Tup14__4 v_si') = v_Pervasives__False) /\ ((v_HandshakeMessages__UpdatesPmsClientID_p v_si' v_si) /\ ((v_Bytes__B v_l) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_l') (v_HandshakeMessages__ClientKeyExchangeMsg_RSA (v_Tuples__Tup14__10 v_si) v_encpms)))))))))))))
(* declaring type HandshakeMessages.ClientLogBeforeClientFinishedDHE [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(847,0)] *)
predicate v_HandshakeMessages__ClientLogBeforeClientFinishedDHE_p (x1:top) (x2:top)
(* declaring type HandshakeMessages.ClientLogBeforeClientFinishedDHE_Auth [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(848,0)] *)
predicate v_HandshakeMessages__ClientLogBeforeClientFinishedDHE_Auth_p (x1:top) (x2:top)
(* declaring type HandshakeMessages.ClientLogBeforeClientFinishedDHE_TryNoAuth [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(849,0)] *)
predicate v_HandshakeMessages__ClientLogBeforeClientFinishedDHE_TryNoAuth_p (x1:top) (x2:top)
(* declaring type HandshakeMessages.ClientLogBeforeClientFinishedDHE_NoAuth [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(850,0)] *)
predicate v_HandshakeMessages__ClientLogBeforeClientFinishedDHE_NoAuth_p (x1:top) (x2:top)
(* assume (!si. (!pv. (!l. ClientLogBeforeClientFinishedDHE(si, l) <=> Tuples.Tup14.4 si = True /\ Tuples.Tup14.2 si <> op_Nil () /\ ClientLogBeforeClientFinishedDHE_Auth(si, l) \/ Tuples.Tup14.4 si = True /\ Tuples.Tup14.2 si = op_Nil () /\ ClientLogBeforeClientFinishedDHE_TryNoAuth(si, l) \/ Tuples.Tup14.4 si = False /\ ClientLogBeforeClientFinishedDHE_NoAuth(si, l)))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(852,0)] *)
axiom a1782_asm: (forall v_si:top. (forall v_pv:top. (forall v_l:top. ((v_HandshakeMessages__ClientLogBeforeClientFinishedDHE_p v_si v_l) <-> ((((v_Tuples__Tup14__4 v_si) = v_Pervasives__True) /\ ((not ((v_Tuples__Tup14__2 v_si) = (v_Pervasives__op_Nil ))) /\ (v_HandshakeMessages__ClientLogBeforeClientFinishedDHE_Auth_p v_si v_l))) \/ ((((v_Tuples__Tup14__4 v_si) = v_Pervasives__True) /\ (((v_Tuples__Tup14__2 v_si) = (v_Pervasives__op_Nil )) /\ (v_HandshakeMessages__ClientLogBeforeClientFinishedDHE_TryNoAuth_p v_si v_l))) \/ (((v_Tuples__Tup14__4 v_si) = v_Pervasives__False) /\ (v_HandshakeMessages__ClientLogBeforeClientFinishedDHE_NoAuth_p v_si v_l))))))))
(* assume (!si. (!pv. (!l. ClientLogBeforeClientFinishedDHE_Auth(si, l) <=> (?si'. (?l'. (?b. (?a. (?sign. ClientLogAfterServerHelloDoneDHE(si', l') /\ Tuples.Tup14.4 si' = True /\ UpdatesPmsClientID(si', si) /\ Bytes.B (l) = bop_ArrayAppend (bop_ArrayAppend (Bytes.B (l'), CertificateMsg (Tuples.Tup14.2 si)), bop_ArrayAppend (ClientKeyExchangeMsg_DHE (b), CertificateVerifyMsg (Tuples.Tup14.10 si, a, sign))))))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(858,0)] *)
axiom a1783_asm: (forall v_si:top. (forall v_pv:top. (forall v_l:top. ((v_HandshakeMessages__ClientLogBeforeClientFinishedDHE_Auth_p v_si v_l) <-> (exists v_si':top. (exists v_l':top. (exists v_b:top. (exists v_a:top. (exists v_sign:top. ((v_HandshakeMessages__ClientLogAfterServerHelloDoneDHE_p v_si' v_l') /\ (((v_Tuples__Tup14__4 v_si') = v_Pervasives__True) /\ ((v_HandshakeMessages__UpdatesPmsClientID_p v_si' v_si) /\ ((v_Bytes__B v_l) = (v_Pervasives__bop_ArrayAppend (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_l') (v_HandshakeMessages__CertificateMsg (v_Tuples__Tup14__2 v_si))) (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__ClientKeyExchangeMsg_DHE v_b) (v_HandshakeMessages__CertificateVerifyMsg (v_Tuples__Tup14__10 v_si) v_a v_sign))))))))))))))))
(* assume (!si. (!pv. (!l. ClientLogBeforeClientFinishedDHE_TryNoAuth(si, l) <=> (?si'. (?l'. (?l''. (?b. ClientLogAfterServerHelloDoneDHE(si', l') /\ Tuples.Tup14.4 si' = True /\ UpdatesPmsClientID(si', si) /\ Bytes.B (l) = bop_ArrayAppend (bop_ArrayAppend (Bytes.B (l'), CertificateMsg (Tuples.Tup14.2 si)), ClientKeyExchangeMsg_DHE (b))))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(866,0)] *)
axiom a1784_asm: (forall v_si:top. (forall v_pv:top. (forall v_l:top. ((v_HandshakeMessages__ClientLogBeforeClientFinishedDHE_TryNoAuth_p v_si v_l) <-> (exists v_si':top. (exists v_l':top. (exists v_l'':top. (exists v_b:top. ((v_HandshakeMessages__ClientLogAfterServerHelloDoneDHE_p v_si' v_l') /\ (((v_Tuples__Tup14__4 v_si') = v_Pervasives__True) /\ ((v_HandshakeMessages__UpdatesPmsClientID_p v_si' v_si) /\ ((v_Bytes__B v_l) = (v_Pervasives__bop_ArrayAppend (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_l') (v_HandshakeMessages__CertificateMsg (v_Tuples__Tup14__2 v_si))) (v_HandshakeMessages__ClientKeyExchangeMsg_DHE v_b))))))))))))))
(* assume (!si. (!pv. (!l. ClientLogBeforeClientFinishedDHE_NoAuth(si, l) <=> (?si'. (?l'. (?b. ClientLogAfterServerHelloDoneDHE(si', l') /\ Tuples.Tup14.4 si' = False /\ UpdatesPmsClientID(si', si) /\ Bytes.B (l) = bop_ArrayAppend (Bytes.B (l'), ClientKeyExchangeMsg_DHE (b)))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(874,0)] *)
axiom a1785_asm: (forall v_si:top. (forall v_pv:top. (forall v_l:top. ((v_HandshakeMessages__ClientLogBeforeClientFinishedDHE_NoAuth_p v_si v_l) <-> (exists v_si':top. (exists v_l':top. (exists v_b:top. ((v_HandshakeMessages__ClientLogAfterServerHelloDoneDHE_p v_si' v_l') /\ (((v_Tuples__Tup14__4 v_si') = v_Pervasives__False) /\ ((v_HandshakeMessages__UpdatesPmsClientID_p v_si' v_si) /\ ((v_Bytes__B v_l) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_l') (v_HandshakeMessages__ClientKeyExchangeMsg_DHE v_b)))))))))))))
(* declaring type HandshakeMessages.ClientLogBeforeClientFinished [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(881,0)] *)
predicate v_HandshakeMessages__ClientLogBeforeClientFinished_p (x1:top) (x2:top)
(* assume (!si. (!l. ClientLogBeforeClientFinished(si, l) <=> ClientLogBeforeClientFinishedRSA(si, l) \/ ClientLogBeforeClientFinishedDHE(si, l))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(883,0)] *)
axiom a1786_asm: (forall v_si:top. (forall v_l:top. ((v_HandshakeMessages__ClientLogBeforeClientFinished_p v_si v_l) <-> ((v_HandshakeMessages__ClientLogBeforeClientFinishedRSA_p v_si v_l) \/ (v_HandshakeMessages__ClientLogBeforeClientFinishedDHE_p v_si v_l)))))
(* declaring type HandshakeMessages.ClientLogBeforeServerFinished [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(889,0)] *)
predicate v_HandshakeMessages__ClientLogBeforeServerFinished_p (x1:top) (x2:top)
(* assume (!si. (!l. ClientLogBeforeServerFinished(si, l) <=> (?l'. (?cvd. ClientLogBeforeClientFinished(si, l') /\ Bytes.B (l) = bop_ArrayAppend (Bytes.B (l'), ClientFinishedMsg (cvd)))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(890,0)] *)
axiom a1787_asm: (forall v_si:top. (forall v_l:top. ((v_HandshakeMessages__ClientLogBeforeServerFinished_p v_si v_l) <-> (exists v_l':top. (exists v_cvd:top. ((v_HandshakeMessages__ClientLogBeforeClientFinished_p v_si v_l') /\ ((v_Bytes__B v_l) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_l') (v_HandshakeMessages__ClientFinishedMsg v_cvd)))))))))
(* declaring type HandshakeMessages.ServerLogBeforeServerFinishedResume [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(898,0)] *)
predicate v_HandshakeMessages__ServerLogBeforeServerFinishedResume_p (x1:top) (x2:top) (x3:top) (x4:top)
(* assume (!cr. (!sr. (!si. (!l. ServerLogBeforeServerFinishedResume(cr, sr, si, l) <=> (?cpv. (?csl. (?cml. (?ex1. (?ex2. (?ctl. (?sal. (?nl. (?csid. Bytes.B (l) = bop_ArrayAppend (ClientHelloMsg (cpv, cr, csid, csl, cml, ex1), ServerHelloMsg (Tuples.Tup14.10 si, sr, Tuples.Tup14.13 si, Tuples.Tup14.1 si, Tuples.Tup14.5 si, ex2))))))))))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(899,0)] *)
axiom a1788_asm: (forall v_cr:top. (forall v_sr:top. (forall v_si:top. (forall v_l:top. ((v_HandshakeMessages__ServerLogBeforeServerFinishedResume_p v_cr v_sr v_si v_l) <-> (exists v_cpv:top. (exists v_csl:top. (exists v_cml:top. (exists v_ex1:top. (exists v_ex2:top. (exists v_ctl:top. (exists v_sal:top. (exists v_nl:top. (exists v_csid:top. ((v_Bytes__B v_l) = (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__ClientHelloMsg v_cpv v_cr v_csid v_csl v_cml v_ex1) (v_HandshakeMessages__ServerHelloMsg (v_Tuples__Tup14__10 v_si) v_sr (v_Tuples__Tup14__13 v_si) (v_Tuples__Tup14__1 v_si) (v_Tuples__Tup14__5 v_si) v_ex2)))))))))))))))))
(* declaring type HandshakeMessages.ServerLogBeforeClientFinishedResume [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(905,0)] *)
predicate v_HandshakeMessages__ServerLogBeforeClientFinishedResume_p (x1:top) (x2:top) (x3:top) (x4:top)
(* assume (!cr. (!sr. (!si. (!l. ServerLogBeforeClientFinishedResume(cr, sr, si, l) <=> (?l'. (?svd. ServerLogBeforeServerFinishedResume(cr, sr, si, l') /\ Bytes.B (l) = bop_ArrayAppend (Bytes.B (l'), ServerFinishedMsg (svd)))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(906,0)] *)
axiom a1789_asm: (forall v_cr:top. (forall v_sr:top. (forall v_si:top. (forall v_l:top. ((v_HandshakeMessages__ServerLogBeforeClientFinishedResume_p v_cr v_sr v_si v_l) <-> (exists v_l':top. (exists v_svd:top. ((v_HandshakeMessages__ServerLogBeforeServerFinishedResume_p v_cr v_sr v_si v_l') /\ ((v_Bytes__B v_l) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_l') (v_HandshakeMessages__ServerFinishedMsg v_svd)))))))))))
(* declaring type HandshakeMessages.ClientLogBeforeServerFinishedResume [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(914,0)] *)
predicate v_HandshakeMessages__ClientLogBeforeServerFinishedResume_p (x1:top) (x2:top) (x3:top) (x4:top)
(* assume (!cr. (!sr. (!si. (!l. ClientLogBeforeServerFinishedResume(cr, sr, si, l) <=> (?l'. (?ex2. ClientLogBeforeServerHello(cr, l') /\ Bytes.B (l) = bop_ArrayAppend (Bytes.B (l'), ServerHelloMsg (Tuples.Tup14.10 si, sr, Tuples.Tup14.13 si, Tuples.Tup14.1 si, Tuples.Tup14.5 si, ex2)))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(915,0)] *)
axiom a1790_asm: (forall v_cr:top. (forall v_sr:top. (forall v_si:top. (forall v_l:top. ((v_HandshakeMessages__ClientLogBeforeServerFinishedResume_p v_cr v_sr v_si v_l) <-> (exists v_l':top. (exists v_ex2:top. ((v_HandshakeMessages__ClientLogBeforeServerHello_p v_cr v_l') /\ ((v_Bytes__B v_l) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_l') (v_HandshakeMessages__ServerHelloMsg (v_Tuples__Tup14__10 v_si) v_sr (v_Tuples__Tup14__13 v_si) (v_Tuples__Tup14__1 v_si) (v_Tuples__Tup14__5 v_si) v_ex2)))))))))))
(* declaring type HandshakeMessages.ClientLogBeforeClientFinishedResume [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(921,0)] *)
predicate v_HandshakeMessages__ClientLogBeforeClientFinishedResume_p (x1:top) (x2:top) (x3:top) (x4:top)
(* assume (!cr. (!sr. (!si. (!l. ClientLogBeforeClientFinishedResume(cr, sr, si, l) <=> (?l'. (?svd. ClientLogBeforeServerFinishedResume(cr, sr, si, l') /\ Bytes.B (l) = bop_ArrayAppend (Bytes.B (l'), ServerFinishedMsg (svd)))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(922,0)] *)
axiom a1791_asm: (forall v_cr:top. (forall v_sr:top. (forall v_si:top. (forall v_l:top. ((v_HandshakeMessages__ClientLogBeforeClientFinishedResume_p v_cr v_sr v_si v_l) <-> (exists v_l':top. (exists v_svd:top. ((v_HandshakeMessages__ClientLogBeforeServerFinishedResume_p v_cr v_sr v_si v_l') /\ ((v_Bytes__B v_l) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_l') (v_HandshakeMessages__ServerFinishedMsg v_svd)))))))))))
(* Querying for ask *)
(* query (!si. (!si'. (!t. ClientLogBeforeCertificateVerifyRSA_Auth(si, t) /\ ServerLogBeforeClientCertificateVerifyRSA(si', t) => UpdatesClientSigAlg(si, si')))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(929,0)] *)
goal g11_gl: (forall v_si:top. (forall v_si':top. (forall v_t:top. (((v_HandshakeMessages__ClientLogBeforeCertificateVerifyRSA_Auth_p v_si v_t) /\ (v_HandshakeMessages__ServerLogBeforeClientCertificateVerifyRSA_p v_si' v_t)) -> (v_HandshakeMessages__UpdatesClientSigAlg_p v_si v_si')))))
(* assume (!si. (!si'. (!t. ClientLogBeforeCertificateVerifyRSA_Auth(si, t) /\ ServerLogBeforeClientCertificateVerifyRSA(si', t) => UpdatesClientSigAlg(si, si')))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(929,0)] *)
axiom a1792_asm: (forall v_si:top. (forall v_si':top. (forall v_t:top. (((v_HandshakeMessages__ClientLogBeforeCertificateVerifyRSA_Auth_p v_si v_t) /\ (v_HandshakeMessages__ServerLogBeforeClientCertificateVerifyRSA_p v_si' v_t)) -> (v_HandshakeMessages__UpdatesClientSigAlg_p v_si v_si')))))
(* Querying for ask *)
(* query (!si. (!si'. (!t. ClientLogBeforeCertificateVerifyDHE_Auth(si, t) /\ ServerLogBeforeClientCertificateVerifyDHE(si', t) => UpdatesClientSigAlg(si, si')))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(933,0)] *)
goal g12_gl: (forall v_si:top. (forall v_si':top. (forall v_t:top. (((v_HandshakeMessages__ClientLogBeforeCertificateVerifyDHE_Auth_p v_si v_t) /\ (v_HandshakeMessages__ServerLogBeforeClientCertificateVerifyDHE_p v_si' v_t)) -> (v_HandshakeMessages__UpdatesClientSigAlg_p v_si v_si')))))
(* assume (!si. (!si'. (!t. ClientLogBeforeCertificateVerifyDHE_Auth(si, t) /\ ServerLogBeforeClientCertificateVerifyDHE(si', t) => UpdatesClientSigAlg(si, si')))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(933,0)] *)
axiom a1793_asm: (forall v_si:top. (forall v_si':top. (forall v_t:top. (((v_HandshakeMessages__ClientLogBeforeCertificateVerifyDHE_Auth_p v_si v_t) /\ (v_HandshakeMessages__ServerLogBeforeClientCertificateVerifyDHE_p v_si' v_t)) -> (v_HandshakeMessages__UpdatesClientSigAlg_p v_si v_si')))))
(* Querying for ask *)
(* query (!si. (!si'. (!t. ClientLogBeforeClientFinished(si, t) /\ ServerLogBeforeClientFinished(si', t) => si = si'))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(937,0)] *)
goal g13_gl: (forall v_si:top. (forall v_si':top. (forall v_t:top. (((v_HandshakeMessages__ClientLogBeforeClientFinished_p v_si v_t) /\ (v_HandshakeMessages__ServerLogBeforeClientFinished_p v_si' v_t)) -> (v_si = v_si')))))
(* assume (!si. (!si'. (!t. ClientLogBeforeClientFinished(si, t) /\ ServerLogBeforeClientFinished(si', t) => si = si'))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(937,0)] *)
axiom a1794_asm: (forall v_si:top. (forall v_si':top. (forall v_t:top. (((v_HandshakeMessages__ClientLogBeforeClientFinished_p v_si v_t) /\ (v_HandshakeMessages__ServerLogBeforeClientFinished_p v_si' v_t)) -> (v_si = v_si')))))
(* Querying for ask *)
(* query (!si. (!si'. (!t. ClientLogBeforeServerFinished(si, t) /\ ServerLogBeforeServerFinished(si', t) => si = si'))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(941,0)] *)
goal g14_gl: (forall v_si:top. (forall v_si':top. (forall v_t:top. (((v_HandshakeMessages__ClientLogBeforeServerFinished_p v_si v_t) /\ (v_HandshakeMessages__ServerLogBeforeServerFinished_p v_si' v_t)) -> (v_si = v_si')))))
(* assume (!si. (!si'. (!t. ClientLogBeforeServerFinished(si, t) /\ ServerLogBeforeServerFinished(si', t) => si = si'))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(941,0)] *)
axiom a1795_asm: (forall v_si:top. (forall v_si':top. (forall v_t:top. (((v_HandshakeMessages__ClientLogBeforeServerFinished_p v_si v_t) /\ (v_HandshakeMessages__ServerLogBeforeServerFinished_p v_si' v_t)) -> (v_si = v_si')))))
(* Querying for ask *)
(* query (!cr. (!sr. (!si. (!cr'. (!sr'. (!si'. (!t. ClientLogBeforeClientFinishedResume(cr, sr, si, t) /\ ServerLogBeforeClientFinishedResume(cr', sr', si', t) => cr = cr' /\ sr = sr' /\ Tuples.Tup14.13 si = Tuples.Tup14.13 si'))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(945,0)] *)
goal g15_gl: (forall v_cr:top. (forall v_sr:top. (forall v_si:top. (forall v_cr':top. (forall v_sr':top. (forall v_si':top. (forall v_t:top. (((v_HandshakeMessages__ClientLogBeforeClientFinishedResume_p v_cr v_sr v_si v_t) /\ (v_HandshakeMessages__ServerLogBeforeClientFinishedResume_p v_cr' v_sr' v_si' v_t)) -> ((v_cr = v_cr') /\ ((v_sr = v_sr') /\ ((v_Tuples__Tup14__13 v_si) = (v_Tuples__Tup14__13 v_si'))))))))))))
(* assume (!cr. (!sr. (!si. (!cr'. (!sr'. (!si'. (!t. ClientLogBeforeClientFinishedResume(cr, sr, si, t) /\ ServerLogBeforeClientFinishedResume(cr', sr', si', t) => cr = cr' /\ sr = sr' /\ Tuples.Tup14.13 si = Tuples.Tup14.13 si'))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(945,0)] *)
axiom a1796_asm: (forall v_cr:top. (forall v_sr:top. (forall v_si:top. (forall v_cr':top. (forall v_sr':top. (forall v_si':top. (forall v_t:top. (((v_HandshakeMessages__ClientLogBeforeClientFinishedResume_p v_cr v_sr v_si v_t) /\ (v_HandshakeMessages__ServerLogBeforeClientFinishedResume_p v_cr' v_sr' v_si' v_t)) -> ((v_cr = v_cr') /\ ((v_sr = v_sr') /\ ((v_Tuples__Tup14__13 v_si) = (v_Tuples__Tup14__13 v_si'))))))))))))
(* Querying for ask *)
(* query (!cr. (!sr. (!si. (!cr'. (!sr'. (!si'. (!t. ClientLogBeforeServerFinishedResume(cr, sr, si, t) /\ ServerLogBeforeServerFinishedResume(cr', sr', si', t) => cr = cr' /\ sr = sr' /\ Tuples.Tup14.13 si = Tuples.Tup14.13 si'))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(950,0)] *)
goal g16_gl: (forall v_cr:top. (forall v_sr:top. (forall v_si:top. (forall v_cr':top. (forall v_sr':top. (forall v_si':top. (forall v_t:top. (((v_HandshakeMessages__ClientLogBeforeServerFinishedResume_p v_cr v_sr v_si v_t) /\ (v_HandshakeMessages__ServerLogBeforeServerFinishedResume_p v_cr' v_sr' v_si' v_t)) -> ((v_cr = v_cr') /\ ((v_sr = v_sr') /\ ((v_Tuples__Tup14__13 v_si) = (v_Tuples__Tup14__13 v_si'))))))))))))
(* assume (!cr. (!sr. (!si. (!cr'. (!sr'. (!si'. (!t. ClientLogBeforeServerFinishedResume(cr, sr, si, t) /\ ServerLogBeforeServerFinishedResume(cr', sr', si', t) => cr = cr' /\ sr = sr' /\ Tuples.Tup14.13 si = Tuples.Tup14.13 si'))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(950,0)] *)
axiom a1797_asm: (forall v_cr:top. (forall v_sr:top. (forall v_si:top. (forall v_cr':top. (forall v_sr':top. (forall v_si':top. (forall v_t:top. (((v_HandshakeMessages__ClientLogBeforeServerFinishedResume_p v_cr v_sr v_si v_t) /\ (v_HandshakeMessages__ServerLogBeforeServerFinishedResume_p v_cr' v_sr' v_si' v_t)) -> ((v_cr = v_cr') /\ ((v_sr = v_sr') /\ ((v_Tuples__Tup14__13 v_si) = (v_Tuples__Tup14__13 v_si'))))))))))))
(* Querying for ask *)
(* query (!cr. (!sr. (!p. (!g. (!gs. (!cr'. (!sr'. (!p'. (!g'. (!gs'. (!t. Bytes.B (t) = bop_ArrayAppend (Bytes.B (cr), bop_ArrayAppend (Bytes.B (sr), DHEParamBytes (p, g, gs))) /\ Bytes.Length (cr) = 32 /\ Bytes.Length (sr) = 32 /\ Bytes.B (t) = bop_ArrayAppend (Bytes.B (cr'), bop_ArrayAppend (Bytes.B (sr'), DHEParamBytes (p', g', gs'))) /\ Bytes.Length (cr') = 32 /\ Bytes.Length (sr') = 32 => cr = cr' /\ sr = sr' /\ p = p' /\ g = g' /\ gs = gs'))))))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(955,0)] *)
goal g17_gl: (forall v_cr:top. (forall v_sr:top. (forall v_p:top. (forall v_g:top. (forall v_gs:top. (forall v_cr':top. (forall v_sr':top. (forall v_p':top. (forall v_g':top. (forall v_gs':top. (forall v_t:top. ((((v_Bytes__B v_t) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_cr) (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_sr) (v_HandshakeMessages__DHEParamBytes v_p v_g v_gs)))) /\ (((v_Bytes__Length v_cr) = 32) /\ (((v_Bytes__Length v_sr) = 32) /\ (((v_Bytes__B v_t) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_cr') (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_sr') (v_HandshakeMessages__DHEParamBytes v_p' v_g' v_gs')))) /\ (((v_Bytes__Length v_cr') = 32) /\ ((v_Bytes__Length v_sr') = 32)))))) -> ((v_cr = v_cr') /\ ((v_sr = v_sr') /\ ((v_p = v_p') /\ ((v_g = v_g') /\ (v_gs = v_gs')))))))))))))))))
(* assume (!cr. (!sr. (!p. (!g. (!gs. (!cr'. (!sr'. (!p'. (!g'. (!gs'. (!t. Bytes.B (t) = bop_ArrayAppend (Bytes.B (cr), bop_ArrayAppend (Bytes.B (sr), DHEParamBytes (p, g, gs))) /\ Bytes.Length (cr) = 32 /\ Bytes.Length (sr) = 32 /\ Bytes.B (t) = bop_ArrayAppend (Bytes.B (cr'), bop_ArrayAppend (Bytes.B (sr'), DHEParamBytes (p', g', gs'))) /\ Bytes.Length (cr') = 32 /\ Bytes.Length (sr') = 32 => cr = cr' /\ sr = sr' /\ p = p' /\ g = g' /\ gs = gs'))))))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(955,0)] *)
axiom a1798_asm: (forall v_cr:top. (forall v_sr:top. (forall v_p:top. (forall v_g:top. (forall v_gs:top. (forall v_cr':top. (forall v_sr':top. (forall v_p':top. (forall v_g':top. (forall v_gs':top. (forall v_t:top. ((((v_Bytes__B v_t) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_cr) (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_sr) (v_HandshakeMessages__DHEParamBytes v_p v_g v_gs)))) /\ (((v_Bytes__Length v_cr) = 32) /\ (((v_Bytes__Length v_sr) = 32) /\ (((v_Bytes__B v_t) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_cr') (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_sr') (v_HandshakeMessages__DHEParamBytes v_p' v_g' v_gs')))) /\ (((v_Bytes__Length v_cr') = 32) /\ ((v_Bytes__Length v_sr') = 32)))))) -> ((v_cr = v_cr') /\ ((v_sr = v_sr') /\ ((v_p = v_p') /\ ((v_g = v_g') /\ (v_gs = v_gs')))))))))))))))))
(* Querying for ask *)
(* query (!si. (!si'. (!t. ClientLogBeforeCertificateVerifyRSA_Auth(si, t) /\ ServerLogBeforeClientCertificateVerifyDHE(si', t) => false))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(965,0)] *)
goal g18_gl: (forall v_si:top. (forall v_si':top. (forall v_t:top. (((v_HandshakeMessages__ClientLogBeforeCertificateVerifyRSA_Auth_p v_si v_t) /\ (v_HandshakeMessages__ServerLogBeforeClientCertificateVerifyDHE_p v_si' v_t)) -> false))))
(* assume (!si. (!si'. (!t. ClientLogBeforeCertificateVerifyRSA_Auth(si, t) /\ ServerLogBeforeClientCertificateVerifyDHE(si', t) => false))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(965,0)] *)
axiom a1799_asm: (forall v_si:top. (forall v_si':top. (forall v_t:top. (((v_HandshakeMessages__ClientLogBeforeCertificateVerifyRSA_Auth_p v_si v_t) /\ (v_HandshakeMessages__ServerLogBeforeClientCertificateVerifyDHE_p v_si' v_t)) -> false))))
(* Querying for ask *)
(* query (!si. (!si'. (!t. ClientLogBeforeCertificateVerifyDHE_Auth(si, t) /\ ServerLogBeforeClientCertificateVerifyRSA(si', t) => false))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(968,0)] *)
goal g19_gl: (forall v_si:top. (forall v_si':top. (forall v_t:top. (((v_HandshakeMessages__ClientLogBeforeCertificateVerifyDHE_Auth_p v_si v_t) /\ (v_HandshakeMessages__ServerLogBeforeClientCertificateVerifyRSA_p v_si' v_t)) -> false))))
(* assume (!si. (!si'. (!t. ClientLogBeforeCertificateVerifyDHE_Auth(si, t) /\ ServerLogBeforeClientCertificateVerifyRSA(si', t) => false))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(968,0)] *)
axiom a1800_asm: (forall v_si:top. (forall v_si':top. (forall v_t:top. (((v_HandshakeMessages__ClientLogBeforeCertificateVerifyDHE_Auth_p v_si v_t) /\ (v_HandshakeMessages__ServerLogBeforeClientCertificateVerifyRSA_p v_si' v_t)) -> false))))
(* Querying for ask *)
(* query (!si. (!t. (!cr. (!sr. (!p. (!g. (!gs. ServerLogBeforeClientCertificateVerifyRSA(si, t) /\ Bytes.Length (cr) = 32 /\ Bytes.Length (sr) = 32 /\ Bytes.B (t) = bop_ArrayAppend (Bytes.B (cr), bop_ArrayAppend (Bytes.B (sr), DHEParamBytes (p, g, gs))) => false))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(971,0)] *)
goal g20_gl: (forall v_si:top. (forall v_t:top. (forall v_cr:top. (forall v_sr:top. (forall v_p:top. (forall v_g:top. (forall v_gs:top. (((v_HandshakeMessages__ServerLogBeforeClientCertificateVerifyRSA_p v_si v_t) /\ (((v_Bytes__Length v_cr) = 32) /\ (((v_Bytes__Length v_sr) = 32) /\ ((v_Bytes__B v_t) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_cr) (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_sr) (v_HandshakeMessages__DHEParamBytes v_p v_g v_gs))))))) -> false))))))))
(* assume (!si. (!t. (!cr. (!sr. (!p. (!g. (!gs. ServerLogBeforeClientCertificateVerifyRSA(si, t) /\ Bytes.Length (cr) = 32 /\ Bytes.Length (sr) = 32 /\ Bytes.B (t) = bop_ArrayAppend (Bytes.B (cr), bop_ArrayAppend (Bytes.B (sr), DHEParamBytes (p, g, gs))) => false))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(971,0)] *)
axiom a1801_asm: (forall v_si:top. (forall v_t:top. (forall v_cr:top. (forall v_sr:top. (forall v_p:top. (forall v_g:top. (forall v_gs:top. (((v_HandshakeMessages__ServerLogBeforeClientCertificateVerifyRSA_p v_si v_t) /\ (((v_Bytes__Length v_cr) = 32) /\ (((v_Bytes__Length v_sr) = 32) /\ ((v_Bytes__B v_t) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_cr) (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_sr) (v_HandshakeMessages__DHEParamBytes v_p v_g v_gs))))))) -> false))))))))
(* Querying for ask *)
(* query (!si. (!t. (!cr. (!sr. (!p. (!g. (!gs. ServerLogBeforeClientCertificateVerifyDHE(si, t) /\ Bytes.Length (cr) = 32 /\ Bytes.Length (sr) = 32 /\ Bytes.B (t) = bop_ArrayAppend (Bytes.B (cr), bop_ArrayAppend (Bytes.B (sr), DHEParamBytes (p, g, gs))) => false))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(975,0)] *)
goal g21_gl: (forall v_si:top. (forall v_t:top. (forall v_cr:top. (forall v_sr:top. (forall v_p:top. (forall v_g:top. (forall v_gs:top. (((v_HandshakeMessages__ServerLogBeforeClientCertificateVerifyDHE_p v_si v_t) /\ (((v_Bytes__Length v_cr) = 32) /\ (((v_Bytes__Length v_sr) = 32) /\ ((v_Bytes__B v_t) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_cr) (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_sr) (v_HandshakeMessages__DHEParamBytes v_p v_g v_gs))))))) -> false))))))))
(* assume (!si. (!t. (!cr. (!sr. (!p. (!g. (!gs. ServerLogBeforeClientCertificateVerifyDHE(si, t) /\ Bytes.Length (cr) = 32 /\ Bytes.Length (sr) = 32 /\ Bytes.B (t) = bop_ArrayAppend (Bytes.B (cr), bop_ArrayAppend (Bytes.B (sr), DHEParamBytes (p, g, gs))) => false))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(975,0)] *)
axiom a1802_asm: (forall v_si:top. (forall v_t:top. (forall v_cr:top. (forall v_sr:top. (forall v_p:top. (forall v_g:top. (forall v_gs:top. (((v_HandshakeMessages__ServerLogBeforeClientCertificateVerifyDHE_p v_si v_t) /\ (((v_Bytes__Length v_cr) = 32) /\ (((v_Bytes__Length v_sr) = 32) /\ ((v_Bytes__B v_t) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_cr) (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_sr) (v_HandshakeMessages__DHEParamBytes v_p v_g v_gs))))))) -> false))))))))
(* Querying for ask *)
(* query (!si. (!t. (!cr. (!sr. (!p. (!g. (!gs. ClientLogBeforeCertificateVerifyDHE_Auth(si, t) /\ Bytes.Length (cr) = 32 /\ Bytes.Length (sr) = 32 /\ Bytes.B (t) = bop_ArrayAppend (Bytes.B (cr), bop_ArrayAppend (Bytes.B (sr), DHEParamBytes (p, g, gs))) => false))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(979,0)] *)
goal g22_gl: (forall v_si:top. (forall v_t:top. (forall v_cr:top. (forall v_sr:top. (forall v_p:top. (forall v_g:top. (forall v_gs:top. (((v_HandshakeMessages__ClientLogBeforeCertificateVerifyDHE_Auth_p v_si v_t) /\ (((v_Bytes__Length v_cr) = 32) /\ (((v_Bytes__Length v_sr) = 32) /\ ((v_Bytes__B v_t) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_cr) (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_sr) (v_HandshakeMessages__DHEParamBytes v_p v_g v_gs))))))) -> false))))))))
(* assume (!si. (!t. (!cr. (!sr. (!p. (!g. (!gs. ClientLogBeforeCertificateVerifyDHE_Auth(si, t) /\ Bytes.Length (cr) = 32 /\ Bytes.Length (sr) = 32 /\ Bytes.B (t) = bop_ArrayAppend (Bytes.B (cr), bop_ArrayAppend (Bytes.B (sr), DHEParamBytes (p, g, gs))) => false))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(979,0)] *)
axiom a1803_asm: (forall v_si:top. (forall v_t:top. (forall v_cr:top. (forall v_sr:top. (forall v_p:top. (forall v_g:top. (forall v_gs:top. (((v_HandshakeMessages__ClientLogBeforeCertificateVerifyDHE_Auth_p v_si v_t) /\ (((v_Bytes__Length v_cr) = 32) /\ (((v_Bytes__Length v_sr) = 32) /\ ((v_Bytes__B v_t) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_cr) (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_sr) (v_HandshakeMessages__DHEParamBytes v_p v_g v_gs))))))) -> false))))))))
(* Querying for ask *)
(* query (!si. (!t. (!cr. (!sr. (!p. (!g. (!gs. ClientLogBeforeCertificateVerifyRSA_Auth(si, t) /\ Bytes.Length (cr) = 32 /\ Bytes.Length (sr) = 32 /\ Bytes.B (t) = bop_ArrayAppend (Bytes.B (cr), bop_ArrayAppend (Bytes.B (sr), DHEParamBytes (p, g, gs))) => false))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(983,0)] *)
goal g23_gl: (forall v_si:top. (forall v_t:top. (forall v_cr:top. (forall v_sr:top. (forall v_p:top. (forall v_g:top. (forall v_gs:top. (((v_HandshakeMessages__ClientLogBeforeCertificateVerifyRSA_Auth_p v_si v_t) /\ (((v_Bytes__Length v_cr) = 32) /\ (((v_Bytes__Length v_sr) = 32) /\ ((v_Bytes__B v_t) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_cr) (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_sr) (v_HandshakeMessages__DHEParamBytes v_p v_g v_gs))))))) -> false))))))))
(* assume (!si. (!t. (!cr. (!sr. (!p. (!g. (!gs. ClientLogBeforeCertificateVerifyRSA_Auth(si, t) /\ Bytes.Length (cr) = 32 /\ Bytes.Length (sr) = 32 /\ Bytes.B (t) = bop_ArrayAppend (Bytes.B (cr), bop_ArrayAppend (Bytes.B (sr), DHEParamBytes (p, g, gs))) => false))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(983,0)] *)
axiom a1804_asm: (forall v_si:top. (forall v_t:top. (forall v_cr:top. (forall v_sr:top. (forall v_p:top. (forall v_g:top. (forall v_gs:top. (((v_HandshakeMessages__ClientLogBeforeCertificateVerifyRSA_Auth_p v_si v_t) /\ (((v_Bytes__Length v_cr) = 32) /\ (((v_Bytes__Length v_sr) = 32) /\ ((v_Bytes__B v_t) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_cr) (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_sr) (v_HandshakeMessages__DHEParamBytes v_p v_g v_gs))))))) -> false))))))))
(* Querying for ask *)
(* query (!si. (!cr. (!sr. (!si'. (!t. ClientLogBeforeClientFinished(si, t) /\ ServerLogBeforeClientFinishedResume(cr, sr, si', t) => false))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(988,0)] *)
goal g24_gl: (forall v_si:top. (forall v_cr:top. (forall v_sr:top. (forall v_si':top. (forall v_t:top. (((v_HandshakeMessages__ClientLogBeforeClientFinished_p v_si v_t) /\ (v_HandshakeMessages__ServerLogBeforeClientFinishedResume_p v_cr v_sr v_si' v_t)) -> false))))))
(* assume (!si. (!cr. (!sr. (!si'. (!t. ClientLogBeforeClientFinished(si, t) /\ ServerLogBeforeClientFinishedResume(cr, sr, si', t) => false))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(988,0)] *)
axiom a1805_asm: (forall v_si:top. (forall v_cr:top. (forall v_sr:top. (forall v_si':top. (forall v_t:top. (((v_HandshakeMessages__ClientLogBeforeClientFinished_p v_si v_t) /\ (v_HandshakeMessages__ServerLogBeforeClientFinishedResume_p v_cr v_sr v_si' v_t)) -> false))))))
(* Querying for ask *)
(* query (!si. (!cr. (!sr. (!si'. (!t. ClientLogBeforeServerFinished(si, t) /\ ServerLogBeforeServerFinishedResume(cr, sr, si', t) => false))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(991,0)] *)
goal g25_gl: (forall v_si:top. (forall v_cr:top. (forall v_sr:top. (forall v_si':top. (forall v_t:top. (((v_HandshakeMessages__ClientLogBeforeServerFinished_p v_si v_t) /\ (v_HandshakeMessages__ServerLogBeforeServerFinishedResume_p v_cr v_sr v_si' v_t)) -> false))))))
(* assume (!si. (!cr. (!sr. (!si'. (!t. ClientLogBeforeServerFinished(si, t) /\ ServerLogBeforeServerFinishedResume(cr, sr, si', t) => false))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(991,0)] *)
axiom a1806_asm: (forall v_si:top. (forall v_cr:top. (forall v_sr:top. (forall v_si':top. (forall v_t:top. (((v_HandshakeMessages__ClientLogBeforeServerFinished_p v_si v_t) /\ (v_HandshakeMessages__ServerLogBeforeServerFinishedResume_p v_cr v_sr v_si' v_t)) -> false))))))
(* Querying for ask *)
(* query (!si. (!cr. (!sr. (!si'. (!t. ServerLogBeforeClientFinished(si, t) /\ ClientLogBeforeClientFinishedResume(cr, sr, si', t) => false))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(994,0)] *)
goal g26_gl: (forall v_si:top. (forall v_cr:top. (forall v_sr:top. (forall v_si':top. (forall v_t:top. (((v_HandshakeMessages__ServerLogBeforeClientFinished_p v_si v_t) /\ (v_HandshakeMessages__ClientLogBeforeClientFinishedResume_p v_cr v_sr v_si' v_t)) -> false))))))
(* assume (!si. (!cr. (!sr. (!si'. (!t. ServerLogBeforeClientFinished(si, t) /\ ClientLogBeforeClientFinishedResume(cr, sr, si', t) => false))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(994,0)] *)
axiom a1807_asm: (forall v_si:top. (forall v_cr:top. (forall v_sr:top. (forall v_si':top. (forall v_t:top. (((v_HandshakeMessages__ServerLogBeforeClientFinished_p v_si v_t) /\ (v_HandshakeMessages__ClientLogBeforeClientFinishedResume_p v_cr v_sr v_si' v_t)) -> false))))))
(* Querying for ask *)
(* query (!si. (!cr. (!sr. (!si'. (!t. ServerLogBeforeServerFinished(si, t) /\ ClientLogBeforeServerFinishedResume(cr, sr, si', t) => false))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(997,0)] *)
goal g27_gl: (forall v_si:top. (forall v_cr:top. (forall v_sr:top. (forall v_si':top. (forall v_t:top. (((v_HandshakeMessages__ServerLogBeforeServerFinished_p v_si v_t) /\ (v_HandshakeMessages__ClientLogBeforeServerFinishedResume_p v_cr v_sr v_si' v_t)) -> false))))))
(* assume (!si. (!cr. (!sr. (!si'. (!t. ServerLogBeforeServerFinished(si, t) /\ ClientLogBeforeServerFinishedResume(cr, sr, si', t) => false))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(997,0)] *)
axiom a1808_asm: (forall v_si:top. (forall v_cr:top. (forall v_sr:top. (forall v_si':top. (forall v_t:top. (((v_HandshakeMessages__ServerLogBeforeServerFinished_p v_si v_t) /\ (v_HandshakeMessages__ClientLogBeforeServerFinishedResume_p v_cr v_sr v_si' v_t)) -> false))))))
(* declaring type HandshakeMessages.HasHTMessage [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(1001,0)] *)
predicate v_HandshakeMessages__HasHTMessage_p (x1:top) (x2:top)
(* assume (!ht. HasHTMessage(ht, array_of_list op_Nil ()) <=> false) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(1003,0)] *)
axiom a1809_asm: (forall v_ht:top. ((v_HandshakeMessages__HasHTMessage_p v_ht (v_Pervasives__array_of_list (v_Pervasives__op_Nil ))) <-> false))
(* assume (!ht. (!htd. (!data. (!l. HasHTMessage(ht, bop_ArrayAppend (l, MessageBytes (htd, data))) <=> ht = htd \/ HasHTMessage(ht, l))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(1004,0)] *)
axiom a1810_asm: (forall v_ht:top. (forall v_htd:top. (forall v_data:top. (forall v_l:top. ((v_HandshakeMessages__HasHTMessage_p v_ht (v_Pervasives__bop_ArrayAppend v_l (v_HandshakeMessages__MessageBytes v_htd v_data))) <-> ((v_ht = v_htd) \/ (v_HandshakeMessages__HasHTMessage_p v_ht v_l)))))))
(* Querying for ask *)
(* query (!htd. (!data. bop_ArrayAppend (array_of_list op_Nil (), MessageBytes (htd, data)) = MessageBytes (htd, data))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(1007,0)] *)
goal g28_gl: (forall v_htd:top. (forall v_data:top. ((v_Pervasives__bop_ArrayAppend (v_Pervasives__array_of_list (v_Pervasives__op_Nil )) (v_HandshakeMessages__MessageBytes v_htd v_data)) = (v_HandshakeMessages__MessageBytes v_htd v_data))))
(* assume (!htd. (!data. bop_ArrayAppend (array_of_list op_Nil (), MessageBytes (htd, data)) = MessageBytes (htd, data))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(1007,0)] *)
axiom a1811_asm: (forall v_htd:top. (forall v_data:top. ((v_Pervasives__bop_ArrayAppend (v_Pervasives__array_of_list (v_Pervasives__op_Nil )) (v_HandshakeMessages__MessageBytes v_htd v_data)) = (v_HandshakeMessages__MessageBytes v_htd v_data))))
(* Querying for ask *)
(* query (!ht. (!htd. (!data. HasHTMessage(ht, MessageBytes (htd, data)) <=> ht = htd))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(1009,0)] *)
goal g29_gl: (forall v_ht:top. (forall v_htd:top. (forall v_data:top. ((v_HandshakeMessages__HasHTMessage_p v_ht (v_HandshakeMessages__MessageBytes v_htd v_data)) <-> (v_ht = v_htd)))))
(* assume (!ht. (!htd. (!data. HasHTMessage(ht, MessageBytes (htd, data)) <=> ht = htd))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(1009,0)] *)
axiom a1812_asm: (forall v_ht:top. (forall v_htd:top. (forall v_data:top. ((v_HandshakeMessages__HasHTMessage_p v_ht (v_HandshakeMessages__MessageBytes v_htd v_data)) <-> (v_ht = v_htd)))))
(* Querying for ask *)
(* query (!ht. (!htd1. (!htd2. (!data1. (!data2. HasHTMessage(ht, bop_ArrayAppend (MessageBytes (htd1, data1), MessageBytes (htd2, data2))) <=> ht = htd1 \/ ht = htd2))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(1012,0)] *)
goal g30_gl: (forall v_ht:top. (forall v_htd1:top. (forall v_htd2:top. (forall v_data1:top. (forall v_data2:top. ((v_HandshakeMessages__HasHTMessage_p v_ht (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__MessageBytes v_htd1 v_data1) (v_HandshakeMessages__MessageBytes v_htd2 v_data2))) <-> ((v_ht = v_htd1) \/ (v_ht = v_htd2))))))))
(* assume (!ht. (!htd1. (!htd2. (!data1. (!data2. HasHTMessage(ht, bop_ArrayAppend (MessageBytes (htd1, data1), MessageBytes (htd2, data2))) <=> ht = htd1 \/ ht = htd2))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(1012,0)] *)
axiom a1813_asm: (forall v_ht:top. (forall v_htd1:top. (forall v_htd2:top. (forall v_data1:top. (forall v_data2:top. ((v_HandshakeMessages__HasHTMessage_p v_ht (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__MessageBytes v_htd1 v_data1) (v_HandshakeMessages__MessageBytes v_htd2 v_data2))) <-> ((v_ht = v_htd1) \/ (v_ht = v_htd2))))))))
(* Querying for ask *)
(* query (!ht. (!htd1. (!htd2. (!htd3. (!data1. (!data2. (!data3. HasHTMessage(ht, bop_ArrayAppend (MessageBytes (htd1, data1), bop_ArrayAppend (MessageBytes (htd2, data2), MessageBytes (htd3, data3)))) <=> ht = htd1 \/ ht = htd2 \/ ht = htd3))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(1016,0)] *)
goal g31_gl: (forall v_ht:top. (forall v_htd1:top. (forall v_htd2:top. (forall v_htd3:top. (forall v_data1:top. (forall v_data2:top. (forall v_data3:top. ((v_HandshakeMessages__HasHTMessage_p v_ht (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__MessageBytes v_htd1 v_data1) (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__MessageBytes v_htd2 v_data2) (v_HandshakeMessages__MessageBytes v_htd3 v_data3)))) <-> ((v_ht = v_htd1) \/ ((v_ht = v_htd2) \/ (v_ht = v_htd3)))))))))))
(* assume (!ht. (!htd1. (!htd2. (!htd3. (!data1. (!data2. (!data3. HasHTMessage(ht, bop_ArrayAppend (MessageBytes (htd1, data1), bop_ArrayAppend (MessageBytes (htd2, data2), MessageBytes (htd3, data3)))) <=> ht = htd1 \/ ht = htd2 \/ ht = htd3))))))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(1016,0)] *)
axiom a1814_asm: (forall v_ht:top. (forall v_htd1:top. (forall v_htd2:top. (forall v_htd3:top. (forall v_data1:top. (forall v_data2:top. (forall v_data3:top. ((v_HandshakeMessages__HasHTMessage_p v_ht (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__MessageBytes v_htd1 v_data1) (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__MessageBytes v_htd2 v_data2) (v_HandshakeMessages__MessageBytes v_htd3 v_data3)))) <-> ((v_ht = v_htd1) \/ ((v_ht = v_htd2) \/ (v_ht = v_htd3)))))))))))
(* Querying for ask *)
(* query (!cr. (!sr. (!si. (!t. ClientLogBeforeClientFinishedResume(cr, sr, si, t) => HasHTMessage(HT_certificate (), Bytes.B (t)) => false)))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(1023,0)] *)
goal g32_gl: (forall v_cr:top. (forall v_sr:top. (forall v_si:top. (forall v_t:top. ((v_HandshakeMessages__ClientLogBeforeClientFinishedResume_p v_cr v_sr v_si v_t) -> ((v_HandshakeMessages__HasHTMessage_p (v_HandshakeMessages__HT_certificate ) (v_Bytes__B v_t)) -> false))))))
(* assume (!cr. (!sr. (!si. (!t. ClientLogBeforeClientFinishedResume(cr, sr, si, t) => HasHTMessage(HT_certificate (), Bytes.B (t)) => false)))) [C:\cygwin\home\Pierre-Yves\mitls\lib\HandshakeMessages.fs7(1023,0)] *)
axiom a1815_asm: (forall v_cr:top. (forall v_sr:top. (forall v_si:top. (forall v_t_2:top. ((v_HandshakeMessages__ClientLogBeforeClientFinishedResume_p v_cr v_sr v_si v_t_2) -> ((v_HandshakeMessages__HasHTMessage_p (v_HandshakeMessages__HT_certificate ) (v_Bytes__B v_t_2)) -> false))))))
(* Querying for (a303730393044:Bytes.bytes){0 = 0 /\ Bytes.B (a303730393044) = array_of_list op_ColonColon (0, op_Nil ())} <: (b3045:Bytes.bytes){Bytes.B (b3045) = HTBytes (t)} *)
(* query Bytes.B (l3046) = HTBytes (t) [HandshakeMessages.fs(36,32)] *)
goal g33_gl: (forall v_t:top. ((v_HandshakeMessages__IsHandshakeType_p v_t) -> (((v_HandshakeMessages__HT_hello_request ) = v_t) -> (((v_HandshakeMessages__HT_hello_request ) = v_t) -> (forall v_l3046:top. (((0 = 0) /\ ((v_Bytes__B v_l3046) = (v_Pervasives__array_of_list (v_Pervasives__op_ColonColon 0 (v_Pervasives__op_Nil ))))) -> ((v_Bytes__B v_l3046) = (v_HandshakeMessages__HTBytes v_t))))))))
(* Querying for (a305030523057:Bytes.bytes){1 = 1 /\ Bytes.B (a305030523057) = array_of_list op_ColonColon (1, op_Nil ())} <: (b3058:Bytes.bytes){Bytes.B (b3058) = HTBytes (t)} *)
(* query Bytes.B (l3059) = HTBytes (t) [HandshakeMessages.fs(37,32)] *)
goal g34_gl: (forall v_t:top. ((v_HandshakeMessages__IsHandshakeType_p v_t) -> ((not ((v_HandshakeMessages__HT_hello_request ) = v_t)) -> (((v_HandshakeMessages__HT_client_hello ) = v_t) -> (((v_HandshakeMessages__HT_client_hello ) = v_t) -> (forall v_l3059:top. (((1 = 1) /\ ((v_Bytes__B v_l3059) = (v_Pervasives__array_of_list (v_Pervasives__op_ColonColon 1 (v_Pervasives__op_Nil ))))) -> ((v_Bytes__B v_l3059) = (v_HandshakeMessages__HTBytes v_t)))))))))
(* Querying for (a306330653070:Bytes.bytes){2 = 2 /\ Bytes.B (a306330653070) = array_of_list op_ColonColon (2, op_Nil ())} <: (b3071:Bytes.bytes){Bytes.B (b3071) = HTBytes (t)} *)
(* query Bytes.B (l3072) = HTBytes (t) [HandshakeMessages.fs(38,32)] *)
goal g35_gl: (forall v_t:top. ((v_HandshakeMessages__IsHandshakeType_p v_t) -> ((not ((v_HandshakeMessages__HT_hello_request ) = v_t)) -> ((not ((v_HandshakeMessages__HT_client_hello ) = v_t)) -> (((v_HandshakeMessages__HT_server_hello ) = v_t) -> (((v_HandshakeMessages__HT_server_hello ) = v_t) -> (forall v_l3072:top. (((2 = 2) /\ ((v_Bytes__B v_l3072) = (v_Pervasives__array_of_list (v_Pervasives__op_ColonColon 2 (v_Pervasives__op_Nil ))))) -> ((v_Bytes__B v_l3072) = (v_HandshakeMessages__HTBytes v_t))))))))))
(* Querying for (a307630783083:Bytes.bytes){11 = 11 /\ Bytes.B (a307630783083) = array_of_list op_ColonColon (11, op_Nil ())} <: (b3084:Bytes.bytes){Bytes.B (b3084) = HTBytes (t)} *)
(* query Bytes.B (l3085) = HTBytes (t) [HandshakeMessages.fs(39,32)] *)
goal g36_gl: (forall v_t:top. ((v_HandshakeMessages__IsHandshakeType_p v_t) -> ((not ((v_HandshakeMessages__HT_hello_request ) = v_t)) -> ((not ((v_HandshakeMessages__HT_client_hello ) = v_t)) -> ((not ((v_HandshakeMessages__HT_server_hello ) = v_t)) -> (((v_HandshakeMessages__HT_certificate ) = v_t) -> (((v_HandshakeMessages__HT_certificate ) = v_t) -> (forall v_l3085:top. (((11 = 11) /\ ((v_Bytes__B v_l3085) = (v_Pervasives__array_of_list (v_Pervasives__op_ColonColon 11 (v_Pervasives__op_Nil ))))) -> ((v_Bytes__B v_l3085) = (v_HandshakeMessages__HTBytes v_t)))))))))))
(* Querying for (a308930913096:Bytes.bytes){12 = 12 /\ Bytes.B (a308930913096) = array_of_list op_ColonColon (12, op_Nil ())} <: (b3097:Bytes.bytes){Bytes.B (b3097) = HTBytes (t)} *)
(* query Bytes.B (l3098) = HTBytes (t) [HandshakeMessages.fs(40,32)] *)
goal g37_gl: (forall v_t:top. ((v_HandshakeMessages__IsHandshakeType_p v_t) -> ((not ((v_HandshakeMessages__HT_hello_request ) = v_t)) -> ((not ((v_HandshakeMessages__HT_client_hello ) = v_t)) -> ((not ((v_HandshakeMessages__HT_server_hello ) = v_t)) -> ((not ((v_HandshakeMessages__HT_certificate ) = v_t)) -> (((v_HandshakeMessages__HT_server_key_exchange ) = v_t) -> (((v_HandshakeMessages__HT_server_key_exchange ) = v_t) -> (forall v_l3098:top. (((12 = 12) /\ ((v_Bytes__B v_l3098) = (v_Pervasives__array_of_list (v_Pervasives__op_ColonColon 12 (v_Pervasives__op_Nil ))))) -> ((v_Bytes__B v_l3098) = (v_HandshakeMessages__HTBytes v_t))))))))))))
(* Querying for (a310231043109:Bytes.bytes){13 = 13 /\ Bytes.B (a310231043109) = array_of_list op_ColonColon (13, op_Nil ())} <: (b3110:Bytes.bytes){Bytes.B (b3110) = HTBytes (t)} *)
(* query Bytes.B (l3111) = HTBytes (t) [HandshakeMessages.fs(41,32)] *)
goal g38_gl: (forall v_t:top. ((v_HandshakeMessages__IsHandshakeType_p v_t) -> ((not ((v_HandshakeMessages__HT_hello_request ) = v_t)) -> ((not ((v_HandshakeMessages__HT_client_hello ) = v_t)) -> ((not ((v_HandshakeMessages__HT_server_hello ) = v_t)) -> ((not ((v_HandshakeMessages__HT_certificate ) = v_t)) -> ((not ((v_HandshakeMessages__HT_server_key_exchange ) = v_t)) -> (((v_HandshakeMessages__HT_certificate_request ) = v_t) -> (((v_HandshakeMessages__HT_certificate_request ) = v_t) -> (forall v_l3111:top. (((13 = 13) /\ ((v_Bytes__B v_l3111) = (v_Pervasives__array_of_list (v_Pervasives__op_ColonColon 13 (v_Pervasives__op_Nil ))))) -> ((v_Bytes__B v_l3111) = (v_HandshakeMessages__HTBytes v_t)))))))))))))
(* Querying for (a311531173122:Bytes.bytes){14 = 14 /\ Bytes.B (a311531173122) = array_of_list op_ColonColon (14, op_Nil ())} <: (b3123:Bytes.bytes){Bytes.B (b3123) = HTBytes (t)} *)
(* query Bytes.B (l3124) = HTBytes (t) [HandshakeMessages.fs(42,32)] *)
goal g39_gl: (forall v_t:top. ((v_HandshakeMessages__IsHandshakeType_p v_t) -> ((not ((v_HandshakeMessages__HT_hello_request ) = v_t)) -> ((not ((v_HandshakeMessages__HT_client_hello ) = v_t)) -> ((not ((v_HandshakeMessages__HT_server_hello ) = v_t)) -> ((not ((v_HandshakeMessages__HT_certificate ) = v_t)) -> ((not ((v_HandshakeMessages__HT_server_key_exchange ) = v_t)) -> ((not ((v_HandshakeMessages__HT_certificate_request ) = v_t)) -> (((v_HandshakeMessages__HT_server_hello_done ) = v_t) -> (((v_HandshakeMessages__HT_server_hello_done ) = v_t) -> (forall v_l3124:top. (((14 = 14) /\ ((v_Bytes__B v_l3124) = (v_Pervasives__array_of_list (v_Pervasives__op_ColonColon 14 (v_Pervasives__op_Nil ))))) -> ((v_Bytes__B v_l3124) = (v_HandshakeMessages__HTBytes v_t))))))))))))))
(* Querying for (a312831303135:Bytes.bytes){15 = 15 /\ Bytes.B (a312831303135) = array_of_list op_ColonColon (15, op_Nil ())} <: (b3136:Bytes.bytes){Bytes.B (b3136) = HTBytes (t)} *)
(* query Bytes.B (l3137) = HTBytes (t) [HandshakeMessages.fs(43,32)] *)
goal g40_gl: (forall v_t:top. ((v_HandshakeMessages__IsHandshakeType_p v_t) -> ((not ((v_HandshakeMessages__HT_hello_request ) = v_t)) -> ((not ((v_HandshakeMessages__HT_client_hello ) = v_t)) -> ((not ((v_HandshakeMessages__HT_server_hello ) = v_t)) -> ((not ((v_HandshakeMessages__HT_certificate ) = v_t)) -> ((not ((v_HandshakeMessages__HT_server_key_exchange ) = v_t)) -> ((not ((v_HandshakeMessages__HT_certificate_request ) = v_t)) -> ((not ((v_HandshakeMessages__HT_server_hello_done ) = v_t)) -> (((v_HandshakeMessages__HT_certificate_verify ) = v_t) -> (((v_HandshakeMessages__HT_certificate_verify ) = v_t) -> (forall v_l3137:top. (((15 = 15) /\ ((v_Bytes__B v_l3137) = (v_Pervasives__array_of_list (v_Pervasives__op_ColonColon 15 (v_Pervasives__op_Nil ))))) -> ((v_Bytes__B v_l3137) = (v_HandshakeMessages__HTBytes v_t)))))))))))))))
(* Querying for (a314131433148:Bytes.bytes){16 = 16 /\ Bytes.B (a314131433148) = array_of_list op_ColonColon (16, op_Nil ())} <: (b3149:Bytes.bytes){Bytes.B (b3149) = HTBytes (t)} *)
(* query Bytes.B (l3150) = HTBytes (t) [HandshakeMessages.fs(44,32)] *)
goal g41_gl: (forall v_t:top. ((v_HandshakeMessages__IsHandshakeType_p v_t) -> ((not ((v_HandshakeMessages__HT_hello_request ) = v_t)) -> ((not ((v_HandshakeMessages__HT_client_hello ) = v_t)) -> ((not ((v_HandshakeMessages__HT_server_hello ) = v_t)) -> ((not ((v_HandshakeMessages__HT_certificate ) = v_t)) -> ((not ((v_HandshakeMessages__HT_server_key_exchange ) = v_t)) -> ((not ((v_HandshakeMessages__HT_certificate_request ) = v_t)) -> ((not ((v_HandshakeMessages__HT_server_hello_done ) = v_t)) -> ((not ((v_HandshakeMessages__HT_certificate_verify ) = v_t)) -> (((v_HandshakeMessages__HT_client_key_exchange ) = v_t) -> (((v_HandshakeMessages__HT_client_key_exchange ) = v_t) -> (forall v_l3150:top. (((16 = 16) /\ ((v_Bytes__B v_l3150) = (v_Pervasives__array_of_list (v_Pervasives__op_ColonColon 16 (v_Pervasives__op_Nil ))))) -> ((v_Bytes__B v_l3150) = (v_HandshakeMessages__HTBytes v_t))))))))))))))))
(* Querying for (a315431563161:Bytes.bytes){20 = 20 /\ Bytes.B (a315431563161) = array_of_list op_ColonColon (20, op_Nil ())} <: (b3162:Bytes.bytes){Bytes.B (b3162) = HTBytes (t)} *)
(* query Bytes.B (l3163) = HTBytes (t) [HandshakeMessages.fs(45,32)] *)
goal g42_gl: (forall v_t:top. ((v_HandshakeMessages__IsHandshakeType_p v_t) -> ((not ((v_HandshakeMessages__HT_hello_request ) = v_t)) -> ((not ((v_HandshakeMessages__HT_client_hello ) = v_t)) -> ((not ((v_HandshakeMessages__HT_server_hello ) = v_t)) -> ((not ((v_HandshakeMessages__HT_certificate ) = v_t)) -> ((not ((v_HandshakeMessages__HT_server_key_exchange ) = v_t)) -> ((not ((v_HandshakeMessages__HT_certificate_request ) = v_t)) -> ((not ((v_HandshakeMessages__HT_server_hello_done ) = v_t)) -> ((not ((v_HandshakeMessages__HT_certificate_verify ) = v_t)) -> ((not ((v_HandshakeMessages__HT_client_key_exchange ) = v_t)) -> (((v_HandshakeMessages__HT_finished ) = v_t) -> (((v_HandshakeMessages__HT_finished ) = v_t) -> (forall v_l3163:top. (((20 = 20) /\ ((v_Bytes__B v_l3163) = (v_Pervasives__array_of_list (v_Pervasives__op_ColonColon 20 (v_Pervasives__op_Nil ))))) -> ((v_Bytes__B v_l3163) = (v_HandshakeMessages__HTBytes v_t)))))))))))))))))
(* Querying for (l31843185318831943201:PreHandshakeType){l31843185318831943201 = HT_hello_request ()} <: (ht319131973202:PreHandshakeType){Bytes.B (b) = HTBytes (ht319131973202) /\ IsHandshakeType(ht319131973202)} *)
(* query Bytes.B (b) = HTBytes (l3203) /\ IsHandshakeType(l3203) [HandshakeMessages.fs(49,16)] *)
goal g43_gl: (forall v_b:top. (forall v_l3166:top. (((v_b = v_b) /\ ((v_Bytes__B v_b) = (v_Pervasives__array_of_list (v_Pervasives__op_ColonColon v_l3166 (v_Pervasives__op_Nil ))))) -> ((0 = v_l3166) -> ((0 = v_l3166) -> (forall v_l3193:top. ((((v_HandshakeMessages__HT_hello_request ) = (v_HandshakeMessages__HT_hello_request )) /\ (v_l3193 = (v_Error__Correct (v_HandshakeMessages__HT_hello_request )))) -> (forall v_l3203:top. ((v_l3203 = (v_HandshakeMessages__HT_hello_request )) -> (((v_Bytes__B v_b) = (v_HandshakeMessages__HTBytes v_l3203)) /\ (v_HandshakeMessages__IsHandshakeType_p v_l3203)))))))))))
(* Querying for (l32103211321432203227:PreHandshakeType){l32103211321432203227 = HT_client_hello ()} <: (ht321732233228:PreHandshakeType){Bytes.B (b) = HTBytes (ht321732233228) /\ IsHandshakeType(ht321732233228)} *)
(* query Bytes.B (b) = HTBytes (l3229) /\ IsHandshakeType(l3229) [HandshakeMessages.fs(50,16)] *)
goal g44_gl: (forall v_b:top. (forall v_l3166:top. (((v_b = v_b) /\ ((v_Bytes__B v_b) = (v_Pervasives__array_of_list (v_Pervasives__op_ColonColon v_l3166 (v_Pervasives__op_Nil ))))) -> ((not (0 = v_l3166)) -> ((1 = v_l3166) -> ((1 = v_l3166) -> (forall v_l3219:top. ((((v_HandshakeMessages__HT_client_hello ) = (v_HandshakeMessages__HT_client_hello )) /\ (v_l3219 = (v_Error__Correct (v_HandshakeMessages__HT_client_hello )))) -> (forall v_l3229:top. ((v_l3229 = (v_HandshakeMessages__HT_client_hello )) -> (((v_Bytes__B v_b) = (v_HandshakeMessages__HTBytes v_l3229)) /\ (v_HandshakeMessages__IsHandshakeType_p v_l3229))))))))))))
(* Querying for (l32363237324032463253:PreHandshakeType){l32363237324032463253 = HT_server_hello ()} <: (ht324332493254:PreHandshakeType){Bytes.B (b) = HTBytes (ht324332493254) /\ IsHandshakeType(ht324332493254)} *)
(* query Bytes.B (b) = HTBytes (l3255) /\ IsHandshakeType(l3255) [HandshakeMessages.fs(51,16)] *)
goal g45_gl: (forall v_b:top. (forall v_l3166:top. (((v_b = v_b) /\ ((v_Bytes__B v_b) = (v_Pervasives__array_of_list (v_Pervasives__op_ColonColon v_l3166 (v_Pervasives__op_Nil ))))) -> ((not (0 = v_l3166)) -> ((not (1 = v_l3166)) -> ((2 = v_l3166) -> ((2 = v_l3166) -> (forall v_l3245:top. ((((v_HandshakeMessages__HT_server_hello ) = (v_HandshakeMessages__HT_server_hello )) /\ (v_l3245 = (v_Error__Correct (v_HandshakeMessages__HT_server_hello )))) -> (forall v_l3255:top. ((v_l3255 = (v_HandshakeMessages__HT_server_hello )) -> (((v_Bytes__B v_b) = (v_HandshakeMessages__HTBytes v_l3255)) /\ (v_HandshakeMessages__IsHandshakeType_p v_l3255)))))))))))))
(* Querying for (l32623263326632723279:PreHandshakeType){l32623263326632723279 = HT_certificate ()} <: (ht326932753280:PreHandshakeType){Bytes.B (b) = HTBytes (ht326932753280) /\ IsHandshakeType(ht326932753280)} *)
(* query Bytes.B (b) = HTBytes (l3281) /\ IsHandshakeType(l3281) [HandshakeMessages.fs(52,16)] *)
goal g46_gl: (forall v_b:top. (forall v_l3166:top. (((v_b = v_b) /\ ((v_Bytes__B v_b) = (v_Pervasives__array_of_list (v_Pervasives__op_ColonColon v_l3166 (v_Pervasives__op_Nil ))))) -> ((not (0 = v_l3166)) -> ((not (1 = v_l3166)) -> ((not (2 = v_l3166)) -> ((11 = v_l3166) -> ((11 = v_l3166) -> (forall v_l3271:top. ((((v_HandshakeMessages__HT_certificate ) = (v_HandshakeMessages__HT_certificate )) /\ (v_l3271 = (v_Error__Correct (v_HandshakeMessages__HT_certificate )))) -> (forall v_l3281:top. ((v_l3281 = (v_HandshakeMessages__HT_certificate )) -> (((v_Bytes__B v_b) = (v_HandshakeMessages__HTBytes v_l3281)) /\ (v_HandshakeMessages__IsHandshakeType_p v_l3281))))))))))))))
(* Querying for (l32883289329232983305:PreHandshakeType){l32883289329232983305 = HT_server_key_exchange ()} <: (ht329533013306:PreHandshakeType){Bytes.B (b) = HTBytes (ht329533013306) /\ IsHandshakeType(ht329533013306)} *)
(* query Bytes.B (b) = HTBytes (l3307) /\ IsHandshakeType(l3307) [HandshakeMessages.fs(53,16)] *)
goal g47_gl: (forall v_b:top. (forall v_l3166:top. (((v_b = v_b) /\ ((v_Bytes__B v_b) = (v_Pervasives__array_of_list (v_Pervasives__op_ColonColon v_l3166 (v_Pervasives__op_Nil ))))) -> ((not (0 = v_l3166)) -> ((not (1 = v_l3166)) -> ((not (2 = v_l3166)) -> ((not (11 = v_l3166)) -> ((12 = v_l3166) -> ((12 = v_l3166) -> (forall v_l3297:top. ((((v_HandshakeMessages__HT_server_key_exchange ) = (v_HandshakeMessages__HT_server_key_exchange )) /\ (v_l3297 = (v_Error__Correct (v_HandshakeMessages__HT_server_key_exchange )))) -> (forall v_l3307:top. ((v_l3307 = (v_HandshakeMessages__HT_server_key_exchange )) -> (((v_Bytes__B v_b) = (v_HandshakeMessages__HTBytes v_l3307)) /\ (v_HandshakeMessages__IsHandshakeType_p v_l3307)))))))))))))))
(* Querying for (l33143315331833243331:PreHandshakeType){l33143315331833243331 = HT_certificate_request ()} <: (ht332133273332:PreHandshakeType){Bytes.B (b) = HTBytes (ht332133273332) /\ IsHandshakeType(ht332133273332)} *)
(* query Bytes.B (b) = HTBytes (l3333) /\ IsHandshakeType(l3333) [HandshakeMessages.fs(54,16)] *)
goal g48_gl: (forall v_b:top. (forall v_l3166:top. (((v_b = v_b) /\ ((v_Bytes__B v_b) = (v_Pervasives__array_of_list (v_Pervasives__op_ColonColon v_l3166 (v_Pervasives__op_Nil ))))) -> ((not (0 = v_l3166)) -> ((not (1 = v_l3166)) -> ((not (2 = v_l3166)) -> ((not (11 = v_l3166)) -> ((not (12 = v_l3166)) -> ((13 = v_l3166) -> ((13 = v_l3166) -> (forall v_l3323:top. ((((v_HandshakeMessages__HT_certificate_request ) = (v_HandshakeMessages__HT_certificate_request )) /\ (v_l3323 = (v_Error__Correct (v_HandshakeMessages__HT_certificate_request )))) -> (forall v_l3333:top. ((v_l3333 = (v_HandshakeMessages__HT_certificate_request )) -> (((v_Bytes__B v_b) = (v_HandshakeMessages__HTBytes v_l3333)) /\ (v_HandshakeMessages__IsHandshakeType_p v_l3333))))))))))))))))
(* Querying for (l33403341334433503357:PreHandshakeType){l33403341334433503357 = HT_server_hello_done ()} <: (ht334733533358:PreHandshakeType){Bytes.B (b) = HTBytes (ht334733533358) /\ IsHandshakeType(ht334733533358)} *)
(* query Bytes.B (b) = HTBytes (l3359) /\ IsHandshakeType(l3359) [HandshakeMessages.fs(55,16)] *)
goal g49_gl: (forall v_b:top. (forall v_l3166:top. (((v_b = v_b) /\ ((v_Bytes__B v_b) = (v_Pervasives__array_of_list (v_Pervasives__op_ColonColon v_l3166 (v_Pervasives__op_Nil ))))) -> ((not (0 = v_l3166)) -> ((not (1 = v_l3166)) -> ((not (2 = v_l3166)) -> ((not (11 = v_l3166)) -> ((not (12 = v_l3166)) -> ((not (13 = v_l3166)) -> ((14 = v_l3166) -> ((14 = v_l3166) -> (forall v_l3349:top. ((((v_HandshakeMessages__HT_server_hello_done ) = (v_HandshakeMessages__HT_server_hello_done )) /\ (v_l3349 = (v_Error__Correct (v_HandshakeMessages__HT_server_hello_done )))) -> (forall v_l3359:top. ((v_l3359 = (v_HandshakeMessages__HT_server_hello_done )) -> (((v_Bytes__B v_b) = (v_HandshakeMessages__HTBytes v_l3359)) /\ (v_HandshakeMessages__IsHandshakeType_p v_l3359)))))))))))))))))
(* Querying for (l33663367337033763383:PreHandshakeType){l33663367337033763383 = HT_certificate_verify ()} <: (ht337333793384:PreHandshakeType){Bytes.B (b) = HTBytes (ht337333793384) /\ IsHandshakeType(ht337333793384)} *)
(* query Bytes.B (b) = HTBytes (l3385) /\ IsHandshakeType(l3385) [HandshakeMessages.fs(56,16)] *)
goal g50_gl: (forall v_b:top. (forall v_l3166:top. (((v_b = v_b) /\ ((v_Bytes__B v_b) = (v_Pervasives__array_of_list (v_Pervasives__op_ColonColon v_l3166 (v_Pervasives__op_Nil ))))) -> ((not (0 = v_l3166)) -> ((not (1 = v_l3166)) -> ((not (2 = v_l3166)) -> ((not (11 = v_l3166)) -> ((not (12 = v_l3166)) -> ((not (13 = v_l3166)) -> ((not (14 = v_l3166)) -> ((15 = v_l3166) -> ((15 = v_l3166) -> (forall v_l3375:top. ((((v_HandshakeMessages__HT_certificate_verify ) = (v_HandshakeMessages__HT_certificate_verify )) /\ (v_l3375 = (v_Error__Correct (v_HandshakeMessages__HT_certificate_verify )))) -> (forall v_l3385:top. ((v_l3385 = (v_HandshakeMessages__HT_certificate_verify )) -> (((v_Bytes__B v_b) = (v_HandshakeMessages__HTBytes v_l3385)) /\ (v_HandshakeMessages__IsHandshakeType_p v_l3385))))))))))))))))))
(* Querying for (l33923393339634023409:PreHandshakeType){l33923393339634023409 = HT_client_key_exchange ()} <: (ht339934053410:PreHandshakeType){Bytes.B (b) = HTBytes (ht339934053410) /\ IsHandshakeType(ht339934053410)} *)
(* query Bytes.B (b) = HTBytes (l3411) /\ IsHandshakeType(l3411) [HandshakeMessages.fs(57,16)] *)
goal g51_gl: (forall v_b:top. (forall v_l3166:top. (((v_b = v_b) /\ ((v_Bytes__B v_b) = (v_Pervasives__array_of_list (v_Pervasives__op_ColonColon v_l3166 (v_Pervasives__op_Nil ))))) -> ((not (0 = v_l3166)) -> ((not (1 = v_l3166)) -> ((not (2 = v_l3166)) -> ((not (11 = v_l3166)) -> ((not (12 = v_l3166)) -> ((not (13 = v_l3166)) -> ((not (14 = v_l3166)) -> ((not (15 = v_l3166)) -> ((16 = v_l3166) -> ((16 = v_l3166) -> (forall v_l3401:top. ((((v_HandshakeMessages__HT_client_key_exchange ) = (v_HandshakeMessages__HT_client_key_exchange )) /\ (v_l3401 = (v_Error__Correct (v_HandshakeMessages__HT_client_key_exchange )))) -> (forall v_l3411:top. ((v_l3411 = (v_HandshakeMessages__HT_client_key_exchange )) -> (((v_Bytes__B v_b) = (v_HandshakeMessages__HTBytes v_l3411)) /\ (v_HandshakeMessages__IsHandshakeType_p v_l3411)))))))))))))))))))
(* Querying for (l34183419342234283435:PreHandshakeType){l34183419342234283435 = HT_finished ()} <: (ht342534313436:PreHandshakeType){Bytes.B (b) = HTBytes (ht342534313436) /\ IsHandshakeType(ht342534313436)} *)
(* query Bytes.B (b) = HTBytes (l3437) /\ IsHandshakeType(l3437) [HandshakeMessages.fs(58,16)] *)
goal g52_gl: (forall v_b:top. (forall v_l3166:top. (((v_b = v_b) /\ ((v_Bytes__B v_b) = (v_Pervasives__array_of_list (v_Pervasives__op_ColonColon v_l3166 (v_Pervasives__op_Nil ))))) -> ((not (0 = v_l3166)) -> ((not (1 = v_l3166)) -> ((not (2 = v_l3166)) -> ((not (11 = v_l3166)) -> ((not (12 = v_l3166)) -> ((not (13 = v_l3166)) -> ((not (14 = v_l3166)) -> ((not (15 = v_l3166)) -> ((not (16 = v_l3166)) -> ((20 = v_l3166) -> ((20 = v_l3166) -> (forall v_l3427:top. ((((v_HandshakeMessages__HT_finished ) = (v_HandshakeMessages__HT_finished )) /\ (v_l3427 = (v_Error__Correct (v_HandshakeMessages__HT_finished )))) -> (forall v_l3437:top. ((v_l3437 = (v_HandshakeMessages__HT_finished )) -> (((v_Bytes__B v_b) = (v_HandshakeMessages__HTBytes v_l3437)) /\ (v_HandshakeMessages__IsHandshakeType_p v_l3437))))))))))))))))))))
(* Querying for (l34733474:PreHandshakeType){l34733474 = ht} <: (ht346934713475:PreHandshakeType){IsHandshakeType(ht346934713475)} *)
(* query IsHandshakeType(l3476) [HandshakeMessages.fs(64,14)] *)
goal g53_gl: (forall v_ht:top. ((v_HandshakeMessages__IsHandshakeType_p v_ht) -> (forall v_data:top. (forall v_l3476:top. ((v_l3476 = v_ht) -> (v_HandshakeMessages__IsHandshakeType_p v_l3476))))))
(* Querying for (l34873488:int){l34873488 = 3} <: (l348134853489:int){pr_LessThanOrEqual(0, l348134853489)} *)
(* query pr_LessThanOrEqual(0, l3490) [HandshakeMessages.fs(65,17)] *)
goal g54_gl: (forall v_ht:top. ((v_HandshakeMessages__IsHandshakeType_p v_ht) -> (forall v_data:top. (forall v_htb:top. (((v_ht = v_ht) /\ ((v_Bytes__B v_htb) = (v_HandshakeMessages__HTBytes v_ht))) -> (forall v_l3490:top. ((v_l3490 = 3) -> (0 <= v_l3490))))))))
(* Querying for (b35023513:Bytes.bytes){vldata = vldata /\ Bytes.B (b35023513) = bop_ArrayAppend (Bytes.B (htb), Bytes.B (vldata))} <: (m3514:Bytes.bytes){Bytes.B (m3514) = MessageBytes (ht, Bytes.B (data))} *)
(* query Bytes.B (l3515) = MessageBytes (ht, Bytes.B (data)) [HandshakeMessages.fs(66,8)] *)
goal g55_gl: (forall v_ht:top. ((v_HandshakeMessages__IsHandshakeType_p v_ht) -> (forall v_data:top. (forall v_htb:top. (((v_ht = v_ht) /\ ((v_Bytes__B v_htb) = (v_HandshakeMessages__HTBytes v_ht))) -> (forall v_vldata:top. (((v_data = v_data) /\ ((v_Bytes__B v_vldata) = (v_TLSConstants__VLBytes 3 (v_Bytes__B v_data)))) -> (forall v_l3515:top. (((v_vldata = v_vldata) /\ ((v_Bytes__B v_l3515) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_htb) (v_Bytes__B v_vldata)))) -> ((v_Bytes__B v_l3515) = (v_HandshakeMessages__MessageBytes v_ht (v_Bytes__B v_data))))))))))))
(* Querying for (l35533554:int){l35533554 = 1} <: (i35433555:int){pr_GreaterThanOrEqual(Bytes.Length (buf), i35433555) /\ pr_LessThanOrEqual(0, i35433555)} *)
(* query pr_GreaterThanOrEqual(Bytes.Length (buf), l3556) /\ pr_LessThanOrEqual(0, l3556) [HandshakeMessages.fs(74,28)] *)
goal g56_gl: (forall v_buf:top. (forall v_z3522:top. (((4 = 4) /\ (exists v_x35193523:top. (((v_buf = v_buf) /\ (((v_Bytes__Length v_buf) = v_x35193523) /\ (0 <= v_x35193523))) /\ (((v_z3522 = v_Pervasives__True) /\ (v_x35193523 < 4)) \/ ((v_z3522 = v_Pervasives__False) /\ (v_x35193523 >= 4)))))) -> ((v_z3522 = v_Pervasives__False) -> (forall v_l3556:top. ((v_l3556 = 1) -> (((v_Bytes__Length v_buf) >= v_l3556) /\ (0 <= v_l3556))))))))
(* Querying for (l36223623:int){l36223623 = 3} <: (l361436203624:int){pr_LessThanOrEqual(l361436203624, 8) /\ pr_LessThanOrEqual(0, l361436203624)} *)
(* query pr_LessThanOrEqual(l3625, 8) /\ pr_LessThanOrEqual(0, l3625) [HandshakeMessages.fs(78,18)] *)
goal g57_gl: (forall v_buf:top. (forall v_z3522:top. (((4 = 4) /\ (exists v_x35193523:top. (((v_buf = v_buf) /\ (((v_Bytes__Length v_buf) = v_x35193523) /\ (0 <= v_x35193523))) /\ (((v_z3522 = v_Pervasives__True) /\ (v_x35193523 < 4)) \/ ((v_z3522 = v_Pervasives__False) /\ (v_x35193523 >= 4)))))) -> ((v_z3522 = v_Pervasives__False) -> (forall v_hstypeb:top. (forall v_rem:top. ((((v_Bytes__Length v_hstypeb) = 1) /\ ((v_Bytes__B v_buf) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_hstypeb) (v_Bytes__B v_rem)))) -> ((1 = 1) -> (forall v_l3558:top. ((v_hstypeb = v_hstypeb) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l3558))) -> (forall v_hstype:top. ((((v_Bytes__B v_hstypeb) = (v_HandshakeMessages__HTBytes v_hstype)) /\ (v_HandshakeMessages__IsHandshakeType_p v_hstype)) -> (((v_Error__Correct v_hstype) = v_l3558) -> (((v_Error__Correct v_hstype) = v_l3558) -> (forall v_l3625:top. ((v_l3625 = 3) -> ((v_l3625 <= 8) /\ (0 <= v_l3625)))))))))))))))))))
(* Querying for (l36273628:Bytes.bytes){l36273628 = rem} <: (b36163629:Bytes.bytes){pr_GreaterThanOrEqual(Bytes.Length (b36163629), 3)} *)
(* query pr_GreaterThanOrEqual(Bytes.Length (l3630), 3) [HandshakeMessages.fs(78,18)] *)
goal g58_gl: (forall v_buf:top. (forall v_z3522:top. (((4 = 4) /\ (exists v_x35193523:top. (((v_buf = v_buf) /\ (((v_Bytes__Length v_buf) = v_x35193523) /\ (0 <= v_x35193523))) /\ (((v_z3522 = v_Pervasives__True) /\ (v_x35193523 < 4)) \/ ((v_z3522 = v_Pervasives__False) /\ (v_x35193523 >= 4)))))) -> ((v_z3522 = v_Pervasives__False) -> (forall v_hstypeb:top. (forall v_rem:top. ((((v_Bytes__Length v_hstypeb) = 1) /\ ((v_Bytes__B v_buf) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_hstypeb) (v_Bytes__B v_rem)))) -> ((1 = 1) -> (forall v_l3558:top. ((v_hstypeb = v_hstypeb) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l3558))) -> (forall v_hstype:top. ((((v_Bytes__B v_hstypeb) = (v_HandshakeMessages__HTBytes v_hstype)) /\ (v_HandshakeMessages__IsHandshakeType_p v_hstype)) -> (((v_Error__Correct v_hstype) = v_l3558) -> (((v_Error__Correct v_hstype) = v_l3558) -> (forall v_l3630:top. ((v_l3630 = v_rem) -> ((v_Bytes__Length v_l3630) >= 3))))))))))))))))))
(* Querying for (l36783680:PreHandshakeType){l36783680 = hstype /\ Bytes.B (hstypeb) = HTBytes (l36783680) /\ IsHandshakeType(l36783680)} <: (ht367236763681:PreHandshakeType){IsHandshakeType(ht367236763681)} *)
(* query IsHandshakeType(l3682) [HandshakeMessages.fs(82,29)] *)
goal g59_gl: (forall v_buf:top. (forall v_z3522:top. (((4 = 4) /\ (exists v_x35193523:top. (((v_buf = v_buf) /\ (((v_Bytes__Length v_buf) = v_x35193523) /\ (0 <= v_x35193523))) /\ (((v_z3522 = v_Pervasives__True) /\ (v_x35193523 < 4)) \/ ((v_z3522 = v_Pervasives__False) /\ (v_x35193523 >= 4)))))) -> ((v_z3522 = v_Pervasives__False) -> (forall v_hstypeb:top. (forall v_rem:top. ((((v_Bytes__Length v_hstypeb) = 1) /\ ((v_Bytes__B v_buf) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_hstypeb) (v_Bytes__B v_rem)))) -> ((1 = 1) -> (forall v_l3558:top. ((v_hstypeb = v_hstypeb) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l3558))) -> (forall v_hstype:top. ((((v_Bytes__B v_hstypeb) = (v_HandshakeMessages__HTBytes v_hstype)) /\ (v_HandshakeMessages__IsHandshakeType_p v_hstype)) -> (((v_Error__Correct v_hstype) = v_l3558) -> (((v_Error__Correct v_hstype) = v_l3558) -> (forall v_l3612:top. ((v_rem = v_rem) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l3612))) -> (forall v_res:top. ((exists v_b136183658:top. (exists v_b236193659:top. ((v_res = (v_Tuples__Tup2 v_b136183658 v_b236193659)) /\ ((v_Bytes__B v_rem) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 3 (v_Bytes__B v_b136183658)) (v_Bytes__B v_b236193659)))))) -> (((v_Error__Correct v_res) = v_l3612) -> (((v_Error__Correct v_res) = v_l3612) -> (forall v_payload:top. (forall v_rem1:top. (((v_Bytes__B v_rem) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 3 (v_Bytes__B v_payload)) (v_Bytes__B v_rem1))) -> (((v_Tuples__Tup2 v_payload v_rem1) = v_res) -> (((v_Tuples__Tup2 v_payload v_rem1) = v_res) -> (forall v_l3682:top. (((v_l3682 = v_hstype) /\ (((v_Bytes__B v_hstypeb) = (v_HandshakeMessages__HTBytes v_l3682)) /\ (v_HandshakeMessages__IsHandshakeType_p v_l3682))) -> (v_HandshakeMessages__IsHandshakeType_p v_l3682))))))))))))))))))))))))))))))
(* Querying for (l3691370637103730373537423755376937793788:Bytes.bytes * l3692370737113731373637433756377037803789:PreHandshakeType * l3694370837123732373737443757377137813790:Bytes.bytes * l3695370937133733373837453758377237823791:Bytes.bytes){Bytes.B (hstypeb) = HTBytes (l3692370737113731373637433756377037803789) /\ IsHandshakeType(l3692370737113731373637433756377037803789) /\ (l3691370637103730373537423755376937793788, l3692370737113731373637433756377037803789, l3694370837123732373737443757377137813790, l3695370937133733373837453758377237823791) = (rem1, hstype, payload, to_log)} <: (rem37483761377337833792:Bytes.bytes * ht37493762377437843793:PreHandshakeType * x37513764377637863794:Bytes.bytes * to_log37523765377737873795:Bytes.bytes){Bytes.B (buf) = bop_ArrayAppend (Bytes.B (to_log37523765377737873795), Bytes.B (rem37483761377337833792)) /\ Bytes.B (to_log37523765377737873795) = MessageBytes (ht37493762377437843793, Bytes.B (x37513764377637863794)) /\ IsHandshakeType(ht37493762377437843793)} *)
(* query Bytes.B (buf) = bop_ArrayAppend (Bytes.B (l3799), Bytes.B (l3796)) /\ Bytes.B (l3799) = MessageBytes (l3797, Bytes.B (l3798)) /\ IsHandshakeType(l3797) [HandshakeMessages.fs(85,16)] *)
goal g60_gl: (forall v_buf:top. (forall v_z3522:top. (((4 = 4) /\ (exists v_x35193523:top. (((v_buf = v_buf) /\ (((v_Bytes__Length v_buf) = v_x35193523) /\ (0 <= v_x35193523))) /\ (((v_z3522 = v_Pervasives__True) /\ (v_x35193523 < 4)) \/ ((v_z3522 = v_Pervasives__False) /\ (v_x35193523 >= 4)))))) -> ((v_z3522 = v_Pervasives__False) -> (forall v_hstypeb:top. (forall v_rem:top. ((((v_Bytes__Length v_hstypeb) = 1) /\ ((v_Bytes__B v_buf) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_hstypeb) (v_Bytes__B v_rem)))) -> ((1 = 1) -> (forall v_l3558:top. ((v_hstypeb = v_hstypeb) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l3558))) -> (forall v_hstype:top. ((((v_Bytes__B v_hstypeb) = (v_HandshakeMessages__HTBytes v_hstype)) /\ (v_HandshakeMessages__IsHandshakeType_p v_hstype)) -> (((v_Error__Correct v_hstype) = v_l3558) -> (((v_Error__Correct v_hstype) = v_l3558) -> (forall v_l3612:top. ((v_rem = v_rem) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l3612))) -> (forall v_res:top. ((exists v_b136183658:top. (exists v_b236193659:top. ((v_res = (v_Tuples__Tup2 v_b136183658 v_b236193659)) /\ ((v_Bytes__B v_rem) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 3 (v_Bytes__B v_b136183658)) (v_Bytes__B v_b236193659)))))) -> (((v_Error__Correct v_res) = v_l3612) -> (((v_Error__Correct v_res) = v_l3612) -> (forall v_payload:top. (forall v_rem1:top. (((v_Bytes__B v_rem) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 3 (v_Bytes__B v_payload)) (v_Bytes__B v_rem1))) -> (((v_Tuples__Tup2 v_payload v_rem1) = v_res) -> (((v_Tuples__Tup2 v_payload v_rem1) = v_res) -> (forall v_to_log:top. ((((v_hstype = v_hstype) /\ (((v_Bytes__B v_hstypeb) = (v_HandshakeMessages__HTBytes v_hstype)) /\ (v_HandshakeMessages__IsHandshakeType_p v_hstype))) /\ ((v_payload = v_payload) /\ ((v_Bytes__B v_to_log) = (v_HandshakeMessages__MessageBytes v_hstype (v_Bytes__B v_payload))))) -> (forall v_res2:top. ((exists v_l3691:top. (exists v_l3692:top. (exists v_l3694:top. (exists v_l3695:top. ((v_res2 = (v_Tuples__Tup4 v_l3691 v_l3692 v_l3694 v_l3695)) /\ ((((v_Bytes__B v_hstypeb) = (v_HandshakeMessages__HTBytes v_l3692)) /\ (v_HandshakeMessages__IsHandshakeType_p v_l3692)) /\ ((v_Tuples__Tup4 v_l3691 v_l3692 v_l3694 v_l3695) = (v_Tuples__Tup4 v_rem1 v_hstype v_payload v_to_log)))))))) -> ((v_res2 = (v_Tuples__Tup4 v_rem1 v_hstype v_payload v_to_log)) -> (forall v_res3:top. ((v_res3 = (v_Pervasives__Some v_res2)) -> ((v_res3 = (v_Pervasives__Some v_res2)) -> (forall v_l3753:top. (((v_res3 = v_res3) /\ (v_l3753 = (v_Error__Correct v_res3))) -> (forall v_l3778:top. ((v_l3778 = v_res3) -> (forall v_l3796:top. (forall v_l3797:top. (forall v_l3798:top. (forall v_l3799:top. (((((v_Bytes__B v_hstypeb) = (v_HandshakeMessages__HTBytes v_l3797)) /\ (v_HandshakeMessages__IsHandshakeType_p v_l3797)) /\ ((v_Tuples__Tup4 v_l3796 v_l3797 v_l3798 v_l3799) = (v_Tuples__Tup4 v_rem1 v_hstype v_payload v_to_log))) -> ((((v_Bytes__B v_buf) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_l3799) (v_Bytes__B v_l3796))) /\ ((v_Bytes__B v_l3799) = (v_HandshakeMessages__MessageBytes v_l3797 (v_Bytes__B v_l3798)))) /\ (v_HandshakeMessages__IsHandshakeType_p v_l3797))))))))))))))))))))))))))))))))))))))))))))))
(* Querying for (l38063807:TLSInfo.preEpoch){l38063807 = ki} <: (s380238043808:TLSInfo.preEpoch){TLSInfo.IsValidEpoch(s380238043808)} *)
(* query TLSInfo.IsValidEpoch(l3809) [HandshakeMessages.fs(92,12)] *)
goal g61_gl: (forall v_ki:top. ((v_TLSInfo__IsValidEpoch_p v_ki) -> (forall v_b:top. (forall v_l3809:top. ((v_l3809 = v_ki) -> (v_TLSInfo__IsValidEpoch_p v_l3809))))))
(* Querying for (TLSInfo.pmsId * csr389539053927:Bytes.bytes * kefAlg389639063928:TLSConstants.prePrfAlg){Bytes.Length (csr389539053927) = 64 /\ kefAlg389639063928 = TLSConstants.PRF_SSL3_nested () \/ kefAlg389639063928 = TLSConstants.PRF_TLS_1p01 (TLSConstants.extract_label) \/ kefAlg389639063928 = TLSConstants.PRF_TLS_1p01 (TLSConstants.extended_extract_label) \/ (?ma. kefAlg389639063928 = TLSConstants.PRF_TLS_1p2 (TLSConstants.extract_label, ma)) \/ (?ma. kefAlg389639063928 = TLSConstants.PRF_TLS_1p2 (TLSConstants.extended_extract_label, ma))} <: (TLSInfo.pmsId * csr39153930:Bytes.bytes * kefAlg39163931:TLSConstants.prePrfAlg){Bytes.Length (csr39153930) = 64 /\ kefAlg39163931 = TLSConstants.PRF_SSL3_nested () \/ kefAlg39163931 = TLSConstants.PRF_TLS_1p01 (TLSConstants.extract_label) \/ kefAlg39163931 = TLSConstants.PRF_TLS_1p01 (TLSConstants.extended_extract_label) \/ (?ma. kefAlg39163931 = TLSConstants.PRF_TLS_1p2 (TLSConstants.extract_label, ma)) \/ (?ma. kefAlg39163931 = TLSConstants.PRF_TLS_1p2 (TLSConstants.extended_extract_label, ma))} *)
(* query Bytes.Length (l3933) = 64 /\ l3934 = TLSConstants.PRF_SSL3_nested () \/ l3934 = TLSConstants.PRF_TLS_1p01 (TLSConstants.extract_label) \/ l3934 = TLSConstants.PRF_TLS_1p01 (TLSConstants.extended_extract_label) \/ (?ma. l3934 = TLSConstants.PRF_TLS_1p2 (TLSConstants.extract_label, ma)) \/ (?ma. l3934 = TLSConstants.PRF_TLS_1p2 (TLSConstants.extended_extract_label, ma)) [HandshakeMessages.fs(95,14)] *)
goal g62_gl: (forall v_ki:top. ((v_TLSInfo__IsValidEpoch_p v_ki) -> (forall v_b:top. (forall v_i:top. ((exists v_aeAlg2443:top. (exists v_csrConn2444:top. (exists v_ext2445:top. (exists v_kdfAlg2446:top. (exists v_msId2447:top. (exists v_pv2448:top. (exists v_writer2449:top. ((v_i = (v_Tuples__Tup7 v_aeAlg2443 v_csrConn2444 v_ext2445 v_kdfAlg2446 v_msId2447 v_pv2448 v_writer2449)) /\ ((((((v_Bytes__Length v_csrConn2444) = 64) /\ ((v_kdfAlg2446 = (v_TLSConstants__PRF_SSL3_nested )) \/ ((v_kdfAlg2446 = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__kdf_label)) \/ (exists v_ma:top. (v_kdfAlg2446 = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__kdf_label v_ma)))))) /\ (v_TLSConstants__IsProtocolVersion_p v_pv2448)) /\ ((v_writer2449 = (v_TLSInfo__Client )) \/ (v_writer2449 = (v_TLSInfo__Server )))) /\ ((v_ki = v_ki) /\ ((v_Tuples__Tup7 v_aeAlg2443 v_csrConn2444 v_ext2445 v_kdfAlg2446 v_msId2447 v_pv2448 v_writer2449) = (v_TLSInfo__Id v_ki)))))))))))) -> (forall v_z3837:top. ((((v_TLSInfo__fragmentLength = v_TLSInfo__fragmentLength) /\ (0 <= v_TLSInfo__fragmentLength)) /\ (exists v_x38343838:top. (((v_b = v_b) /\ (((v_Bytes__Length v_b) = v_x38343838) /\ (0 <= v_x38343838))) /\ (((v_z3837 = v_Pervasives__True) /\ (v_x38343838 < v_TLSInfo__fragmentLength)) \/ ((v_z3837 = v_Pervasives__False) /\ (v_x38343838 >= v_TLSInfo__fragmentLength)))))) -> ((v_z3837 = v_Pervasives__True) -> (forall v_r0:top. ((exists v_l38583860:top. (exists v_l38673869:top. ((v_r0 = (v_Tuples__Tup2 v_l38583860 v_l38673869)) /\ (((v_b = v_b) /\ (((v_Bytes__Length v_b) = v_l38583860) /\ (0 <= v_l38583860))) /\ ((v_b = v_b) /\ (((v_Bytes__Length v_b) = v_l38673869) /\ (0 <= v_l38673869))))))) -> (forall v_l3919:top. (forall v_l3920:top. (forall v_l3921:top. (forall v_l3922:top. (forall v_l3923:top. ((exists v_pms38943904:top. (exists v_csr38953905:top. (exists v_kefAlg38963906:top. ((v_l3923 = (v_Tuples__Tup3 v_pms38943904 v_csr38953905 v_kefAlg38963906)) /\ (((v_Bytes__Length v_csr38953905) = 64) /\ ((v_kefAlg38963906 = (v_TLSConstants__PRF_SSL3_nested )) \/ ((v_kefAlg38963906 = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__extract_label)) \/ ((v_kefAlg38963906 = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__extended_extract_label)) \/ ((exists v_ma:top. (v_kefAlg38963906 = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__extract_label v_ma))) \/ (exists v_ma:top. (v_kefAlg38963906 = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__extended_extract_label v_ma)))))))))))) -> (forall v_l3924:top. (forall v_l3925:top. ((((((((v_Bytes__Length v_l3920) = 64) /\ ((v_l3922 = (v_TLSConstants__PRF_SSL3_nested )) \/ ((v_l3922 = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__kdf_label)) \/ (exists v_ma:top. (v_l3922 = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__kdf_label v_ma)))))) /\ (v_TLSConstants__IsProtocolVersion_p v_l3924)) /\ ((v_l3925 = (v_TLSInfo__Client )) \/ (v_l3925 = (v_TLSInfo__Server )))) /\ ((v_ki = v_ki) /\ ((v_Tuples__Tup7 v_l3919 v_l3920 v_l3921 v_l3922 v_l3923 v_l3924 v_l3925) = (v_TLSInfo__Id v_ki)))) /\ ((v_Tuples__Tup7 v_l3919 v_l3920 v_l3921 v_l3922 v_l3923 v_l3924 v_l3925) = v_i)) -> (forall v_l3932:top. (forall v_l3933:top. (forall v_l3934:top. ((((v_Bytes__Length v_l3933) = 64) /\ ((v_l3934 = (v_TLSConstants__PRF_SSL3_nested )) \/ ((v_l3934 = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__extract_label)) \/ ((v_l3934 = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__extended_extract_label)) \/ ((exists v_ma:top. (v_l3934 = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__extract_label v_ma))) \/ (exists v_ma:top. (v_l3934 = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__extended_extract_label v_ma)))))))) -> (((v_Bytes__Length v_l3933) = 64) /\ ((v_l3934 = (v_TLSConstants__PRF_SSL3_nested )) \/ ((v_l3934 = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__extract_label)) \/ ((v_l3934 = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__extended_extract_label)) \/ ((exists v_ma:top. (v_l3934 = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__extract_label v_ma))) \/ (exists v_ma:top. (v_l3934 = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__extended_extract_label v_ma)))))))))))))))))))))))))))))))
(* Querying for (aeAlg244338893899:TLSConstants.aeAlg * csrConn244438903900:Bytes.bytes * ext244538913901:TLSInfo.negotiatedExtension list * kdfAlg244638923902:TLSConstants.prePrfAlg * msId244738933903:(TLSInfo.pmsId * csr38953905:Bytes.bytes * kefAlg38963906:TLSConstants.prePrfAlg){Bytes.Length (csr38953905) = 64 /\ kefAlg38963906 = TLSConstants.PRF_SSL3_nested () \/ kefAlg38963906 = TLSConstants.PRF_TLS_1p01 (TLSConstants.extract_label) \/ kefAlg38963906 = TLSConstants.PRF_TLS_1p01 (TLSConstants.extended_extract_label) \/ (?ma. kefAlg38963906 = TLSConstants.PRF_TLS_1p2 (TLSConstants.extract_label, ma)) \/ (?ma. kefAlg38963906 = TLSConstants.PRF_TLS_1p2 (TLSConstants.extended_extract_label, ma))} * pv244838973907:TLSConstants.PreProtocolVersion * writer244938983908:TLSInfo.preRole){Bytes.Length (csrConn244438903900) = 64 /\ kdfAlg244638923902 = TLSConstants.PRF_SSL3_nested () \/ kdfAlg244638923902 = TLSConstants.PRF_TLS_1p01 (TLSConstants.kdf_label) \/ (?ma. kdfAlg244638923902 = TLSConstants.PRF_TLS_1p2 (TLSConstants.kdf_label, ma)) /\ TLSConstants.IsProtocolVersion(pv244838973907) /\ writer244938983908 = TLSInfo.Client () \/ writer244938983908 = TLSInfo.Server () /\ ki = ki /\ (aeAlg244338893899, csrConn244438903900, ext244538913901, kdfAlg244638923902, msId244738933903, pv244838973907, writer244938983908) = TLSInfo.Id (ki) /\ (aeAlg244338893899, csrConn244438903900, ext244538913901, kdfAlg244638923902, msId244738933903, pv244838973907, writer244938983908) = i} <: (TLSConstants.aeAlg * csrConn24443910:Bytes.bytes * TLSInfo.negotiatedExtension list * kdfAlg24463912:TLSConstants.prePrfAlg * (TLSInfo.pmsId * csr3915:Bytes.bytes * kefAlg3916:TLSConstants.prePrfAlg){Bytes.Length (csr3915) = 64 /\ kefAlg3916 = TLSConstants.PRF_SSL3_nested () \/ kefAlg3916 = TLSConstants.PRF_TLS_1p01 (TLSConstants.extract_label) \/ kefAlg3916 = TLSConstants.PRF_TLS_1p01 (TLSConstants.extended_extract_label) \/ (?ma. kefAlg3916 = TLSConstants.PRF_TLS_1p2 (TLSConstants.extract_label, ma)) \/ (?ma. kefAlg3916 = TLSConstants.PRF_TLS_1p2 (TLSConstants.extended_extract_label, ma))} * pv24483917:TLSConstants.PreProtocolVersion * writer24493918:TLSInfo.preRole){Bytes.Length (csrConn24443910) = 64 /\ kdfAlg24463912 = TLSConstants.PRF_SSL3_nested () \/ kdfAlg24463912 = TLSConstants.PRF_TLS_1p01 (TLSConstants.kdf_label) \/ (?ma. kdfAlg24463912 = TLSConstants.PRF_TLS_1p2 (TLSConstants.kdf_label, ma)) /\ TLSConstants.IsProtocolVersion(pv24483917) /\ writer24493918 = TLSInfo.Client () \/ writer24493918 = TLSInfo.Server ()} *)
(* query Bytes.Length (l3920) = 64 /\ l3922 = TLSConstants.PRF_SSL3_nested () \/ l3922 = TLSConstants.PRF_TLS_1p01 (TLSConstants.kdf_label) \/ (?ma. l3922 = TLSConstants.PRF_TLS_1p2 (TLSConstants.kdf_label, ma)) /\ TLSConstants.IsProtocolVersion(l3924) /\ l3925 = TLSInfo.Client () \/ l3925 = TLSInfo.Server () [HandshakeMessages.fs(95,14)] *)
goal g63_gl: (forall v_ki:top. ((v_TLSInfo__IsValidEpoch_p v_ki) -> (forall v_b:top. (forall v_i:top. ((exists v_aeAlg2443:top. (exists v_csrConn2444:top. (exists v_ext2445:top. (exists v_kdfAlg2446:top. (exists v_msId2447:top. (exists v_pv2448:top. (exists v_writer2449:top. ((v_i = (v_Tuples__Tup7 v_aeAlg2443 v_csrConn2444 v_ext2445 v_kdfAlg2446 v_msId2447 v_pv2448 v_writer2449)) /\ ((((((v_Bytes__Length v_csrConn2444) = 64) /\ ((v_kdfAlg2446 = (v_TLSConstants__PRF_SSL3_nested )) \/ ((v_kdfAlg2446 = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__kdf_label)) \/ (exists v_ma:top. (v_kdfAlg2446 = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__kdf_label v_ma)))))) /\ (v_TLSConstants__IsProtocolVersion_p v_pv2448)) /\ ((v_writer2449 = (v_TLSInfo__Client )) \/ (v_writer2449 = (v_TLSInfo__Server )))) /\ ((v_ki = v_ki) /\ ((v_Tuples__Tup7 v_aeAlg2443 v_csrConn2444 v_ext2445 v_kdfAlg2446 v_msId2447 v_pv2448 v_writer2449) = (v_TLSInfo__Id v_ki)))))))))))) -> (forall v_z3837:top. ((((v_TLSInfo__fragmentLength = v_TLSInfo__fragmentLength) /\ (0 <= v_TLSInfo__fragmentLength)) /\ (exists v_x38343838:top. (((v_b = v_b) /\ (((v_Bytes__Length v_b) = v_x38343838) /\ (0 <= v_x38343838))) /\ (((v_z3837 = v_Pervasives__True) /\ (v_x38343838 < v_TLSInfo__fragmentLength)) \/ ((v_z3837 = v_Pervasives__False) /\ (v_x38343838 >= v_TLSInfo__fragmentLength)))))) -> ((v_z3837 = v_Pervasives__True) -> (forall v_r0:top. ((exists v_l38583860:top. (exists v_l38673869:top. ((v_r0 = (v_Tuples__Tup2 v_l38583860 v_l38673869)) /\ (((v_b = v_b) /\ (((v_Bytes__Length v_b) = v_l38583860) /\ (0 <= v_l38583860))) /\ ((v_b = v_b) /\ (((v_Bytes__Length v_b) = v_l38673869) /\ (0 <= v_l38673869))))))) -> (forall v_l3919:top. (forall v_l3920:top. (forall v_l3921:top. (forall v_l3922:top. (forall v_l3923:top. ((exists v_pms38943904:top. (exists v_csr38953905:top. (exists v_kefAlg38963906:top. ((v_l3923 = (v_Tuples__Tup3 v_pms38943904 v_csr38953905 v_kefAlg38963906)) /\ (((v_Bytes__Length v_csr38953905) = 64) /\ ((v_kefAlg38963906 = (v_TLSConstants__PRF_SSL3_nested )) \/ ((v_kefAlg38963906 = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__extract_label)) \/ ((v_kefAlg38963906 = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__extended_extract_label)) \/ ((exists v_ma:top. (v_kefAlg38963906 = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__extract_label v_ma))) \/ (exists v_ma:top. (v_kefAlg38963906 = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__extended_extract_label v_ma)))))))))))) -> (forall v_l3924:top. (forall v_l3925:top. ((((((((v_Bytes__Length v_l3920) = 64) /\ ((v_l3922 = (v_TLSConstants__PRF_SSL3_nested )) \/ ((v_l3922 = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__kdf_label)) \/ (exists v_ma:top. (v_l3922 = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__kdf_label v_ma)))))) /\ (v_TLSConstants__IsProtocolVersion_p v_l3924)) /\ ((v_l3925 = (v_TLSInfo__Client )) \/ (v_l3925 = (v_TLSInfo__Server )))) /\ ((v_ki = v_ki) /\ ((v_Tuples__Tup7 v_l3919 v_l3920 v_l3921 v_l3922 v_l3923 v_l3924 v_l3925) = (v_TLSInfo__Id v_ki)))) /\ ((v_Tuples__Tup7 v_l3919 v_l3920 v_l3921 v_l3922 v_l3923 v_l3924 v_l3925) = v_i)) -> (((((v_Bytes__Length v_l3920) = 64) /\ ((v_l3922 = (v_TLSConstants__PRF_SSL3_nested )) \/ ((v_l3922 = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__kdf_label)) \/ (exists v_ma:top. (v_l3922 = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__kdf_label v_ma)))))) /\ (v_TLSConstants__IsProtocolVersion_p v_l3924)) /\ ((v_l3925 = (v_TLSInfo__Client )) \/ (v_l3925 = (v_TLSInfo__Server )))))))))))))))))))))))
(* Querying for (l3858386039373939:int * l3867386939383940:int){b = b /\ Bytes.Length (b) = l3858386039373939 /\ pr_LessThanOrEqual(0, l3858386039373939) /\ b = b /\ Bytes.Length (b) = l3867386939383940 /\ pr_LessThanOrEqual(0, l3867386939383940) /\ (l3858386039373939, l3867386939383940) = r0} <: (low3941:int * high3942:int){pr_LessThanOrEqual(low3941, high3942) /\ pr_LessThanOrEqual(0, low3941) /\ pr_LessThanOrEqual(0, high3942)} *)
(* query pr_LessThanOrEqual(l3943, l3944) /\ pr_LessThanOrEqual(0, l3943) /\ pr_LessThanOrEqual(0, l3944) [HandshakeMessages.fs(95,14)] *)
goal g64_gl: (forall v_ki:top. ((v_TLSInfo__IsValidEpoch_p v_ki) -> (forall v_b:top. (forall v_i:top. ((exists v_aeAlg2443:top. (exists v_csrConn2444:top. (exists v_ext2445:top. (exists v_kdfAlg2446:top. (exists v_msId2447:top. (exists v_pv2448:top. (exists v_writer2449:top. ((v_i = (v_Tuples__Tup7 v_aeAlg2443 v_csrConn2444 v_ext2445 v_kdfAlg2446 v_msId2447 v_pv2448 v_writer2449)) /\ ((((((v_Bytes__Length v_csrConn2444) = 64) /\ ((v_kdfAlg2446 = (v_TLSConstants__PRF_SSL3_nested )) \/ ((v_kdfAlg2446 = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__kdf_label)) \/ (exists v_ma:top. (v_kdfAlg2446 = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__kdf_label v_ma)))))) /\ (v_TLSConstants__IsProtocolVersion_p v_pv2448)) /\ ((v_writer2449 = (v_TLSInfo__Client )) \/ (v_writer2449 = (v_TLSInfo__Server )))) /\ ((v_ki = v_ki) /\ ((v_Tuples__Tup7 v_aeAlg2443 v_csrConn2444 v_ext2445 v_kdfAlg2446 v_msId2447 v_pv2448 v_writer2449) = (v_TLSInfo__Id v_ki)))))))))))) -> (forall v_z3837:top. ((((v_TLSInfo__fragmentLength = v_TLSInfo__fragmentLength) /\ (0 <= v_TLSInfo__fragmentLength)) /\ (exists v_x38343838:top. (((v_b = v_b) /\ (((v_Bytes__Length v_b) = v_x38343838) /\ (0 <= v_x38343838))) /\ (((v_z3837 = v_Pervasives__True) /\ (v_x38343838 < v_TLSInfo__fragmentLength)) \/ ((v_z3837 = v_Pervasives__False) /\ (v_x38343838 >= v_TLSInfo__fragmentLength)))))) -> ((v_z3837 = v_Pervasives__True) -> (forall v_r0:top. ((exists v_l38583860:top. (exists v_l38673869:top. ((v_r0 = (v_Tuples__Tup2 v_l38583860 v_l38673869)) /\ (((v_b = v_b) /\ (((v_Bytes__Length v_b) = v_l38583860) /\ (0 <= v_l38583860))) /\ ((v_b = v_b) /\ (((v_Bytes__Length v_b) = v_l38673869) /\ (0 <= v_l38673869))))))) -> (forall v_l3943:top. (forall v_l3944:top. (((((v_b = v_b) /\ (((v_Bytes__Length v_b) = v_l3943) /\ (0 <= v_l3943))) /\ ((v_b = v_b) /\ (((v_Bytes__Length v_b) = v_l3944) /\ (0 <= v_l3944)))) /\ ((v_Tuples__Tup2 v_l3943 v_l3944) = v_r0)) -> (((v_l3943 <= v_l3944) /\ (0 <= v_l3943)) /\ (0 <= v_l3944)))))))))))))))
(* Querying for (l39463947:Bytes.bytes){l39463947 = b} <: (b38843948:Bytes.bytes){(?l. (?h. r0 = (l, h) /\ pr_LessThanOrEqual(l, Bytes.Length (b38843948)) /\ pr_LessThanOrEqual(Bytes.Length (b38843948), h)))} *)
(* query (?l. (?h. r0 = (l, h) /\ pr_LessThanOrEqual(l, Bytes.Length (l3949)) /\ pr_LessThanOrEqual(Bytes.Length (l3949), h))) [HandshakeMessages.fs(95,14)] *)
goal g65_gl: (forall v_ki:top. ((v_TLSInfo__IsValidEpoch_p v_ki) -> (forall v_b:top. (forall v_i:top. ((exists v_aeAlg2443:top. (exists v_csrConn2444:top. (exists v_ext2445:top. (exists v_kdfAlg2446:top. (exists v_msId2447:top. (exists v_pv2448:top. (exists v_writer2449:top. ((v_i = (v_Tuples__Tup7 v_aeAlg2443 v_csrConn2444 v_ext2445 v_kdfAlg2446 v_msId2447 v_pv2448 v_writer2449)) /\ ((((((v_Bytes__Length v_csrConn2444) = 64) /\ ((v_kdfAlg2446 = (v_TLSConstants__PRF_SSL3_nested )) \/ ((v_kdfAlg2446 = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__kdf_label)) \/ (exists v_ma:top. (v_kdfAlg2446 = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__kdf_label v_ma)))))) /\ (v_TLSConstants__IsProtocolVersion_p v_pv2448)) /\ ((v_writer2449 = (v_TLSInfo__Client )) \/ (v_writer2449 = (v_TLSInfo__Server )))) /\ ((v_ki = v_ki) /\ ((v_Tuples__Tup7 v_aeAlg2443 v_csrConn2444 v_ext2445 v_kdfAlg2446 v_msId2447 v_pv2448 v_writer2449) = (v_TLSInfo__Id v_ki)))))))))))) -> (forall v_z3837:top. ((((v_TLSInfo__fragmentLength = v_TLSInfo__fragmentLength) /\ (0 <= v_TLSInfo__fragmentLength)) /\ (exists v_x38343838:top. (((v_b = v_b) /\ (((v_Bytes__Length v_b) = v_x38343838) /\ (0 <= v_x38343838))) /\ (((v_z3837 = v_Pervasives__True) /\ (v_x38343838 < v_TLSInfo__fragmentLength)) \/ ((v_z3837 = v_Pervasives__False) /\ (v_x38343838 >= v_TLSInfo__fragmentLength)))))) -> ((v_z3837 = v_Pervasives__True) -> (forall v_r0:top. ((exists v_l38583860:top. (exists v_l38673869:top. ((v_r0 = (v_Tuples__Tup2 v_l38583860 v_l38673869)) /\ (((v_b = v_b) /\ (((v_Bytes__Length v_b) = v_l38583860) /\ (0 <= v_l38583860))) /\ ((v_b = v_b) /\ (((v_Bytes__Length v_b) = v_l38673869) /\ (0 <= v_l38673869))))))) -> (forall v_l3949:top. ((v_l3949 = v_b) -> (exists v_l:top. (exists v_h:top. ((v_r0 = (v_Tuples__Tup2 v_l v_h)) /\ ((v_l <= (v_Bytes__Length v_l3949)) /\ ((v_Bytes__Length v_l3949) <= v_h)))))))))))))))))
(* Querying for (l3858386039533956:int * l3867386939543957:int){b = b /\ Bytes.Length (b) = l3858386039533956 /\ pr_LessThanOrEqual(0, l3858386039533956) /\ b = b /\ Bytes.Length (b) = l3867386939543957 /\ pr_LessThanOrEqual(0, l3867386939543957) /\ (l3858386039533956, l3867386939543957) = r0} <: (low3958:int * high3959:int){pr_LessThanOrEqual(low3958, high3959) /\ pr_LessThanOrEqual(0, low3958) /\ pr_LessThanOrEqual(0, high3959)} *)
(* query pr_LessThanOrEqual(l3960, l3961) /\ pr_LessThanOrEqual(0, l3960) /\ pr_LessThanOrEqual(0, l3961) [HandshakeMessages.fs(96,7)] *)
goal g66_gl: (forall v_ki:top. ((v_TLSInfo__IsValidEpoch_p v_ki) -> (forall v_b:top. (forall v_i:top. ((exists v_aeAlg2443:top. (exists v_csrConn2444:top. (exists v_ext2445:top. (exists v_kdfAlg2446:top. (exists v_msId2447:top. (exists v_pv2448:top. (exists v_writer2449:top. ((v_i = (v_Tuples__Tup7 v_aeAlg2443 v_csrConn2444 v_ext2445 v_kdfAlg2446 v_msId2447 v_pv2448 v_writer2449)) /\ ((((((v_Bytes__Length v_csrConn2444) = 64) /\ ((v_kdfAlg2446 = (v_TLSConstants__PRF_SSL3_nested )) \/ ((v_kdfAlg2446 = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__kdf_label)) \/ (exists v_ma:top. (v_kdfAlg2446 = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__kdf_label v_ma)))))) /\ (v_TLSConstants__IsProtocolVersion_p v_pv2448)) /\ ((v_writer2449 = (v_TLSInfo__Client )) \/ (v_writer2449 = (v_TLSInfo__Server )))) /\ ((v_ki = v_ki) /\ ((v_Tuples__Tup7 v_aeAlg2443 v_csrConn2444 v_ext2445 v_kdfAlg2446 v_msId2447 v_pv2448 v_writer2449) = (v_TLSInfo__Id v_ki)))))))))))) -> (forall v_z3837:top. ((((v_TLSInfo__fragmentLength = v_TLSInfo__fragmentLength) /\ (0 <= v_TLSInfo__fragmentLength)) /\ (exists v_x38343838:top. (((v_b = v_b) /\ (((v_Bytes__Length v_b) = v_x38343838) /\ (0 <= v_x38343838))) /\ (((v_z3837 = v_Pervasives__True) /\ (v_x38343838 < v_TLSInfo__fragmentLength)) \/ ((v_z3837 = v_Pervasives__False) /\ (v_x38343838 >= v_TLSInfo__fragmentLength)))))) -> ((v_z3837 = v_Pervasives__True) -> (forall v_r0:top. ((exists v_l38583860:top. (exists v_l38673869:top. ((v_r0 = (v_Tuples__Tup2 v_l38583860 v_l38673869)) /\ (((v_b = v_b) /\ (((v_Bytes__Length v_b) = v_l38583860) /\ (0 <= v_l38583860))) /\ ((v_b = v_b) /\ (((v_Bytes__Length v_b) = v_l38673869) /\ (0 <= v_l38673869))))))) -> (forall v_f:top. (((v_b = v_b) /\ (((v_Bytes__B v_b) = (v_HSFragment__Payload v_i v_r0 v_f)) /\ ((v_TLSInfo__AuthId_p v_i) -> (v_HSFragment__Sent_p v_i (v_HSFragment__EmptyStream v_i) v_r0 v_f)))) -> (forall v_l3960:top. (forall v_l3961:top. (((((v_b = v_b) /\ (((v_Bytes__Length v_b) = v_l3960) /\ (0 <= v_l3960))) /\ ((v_b = v_b) /\ (((v_Bytes__Length v_b) = v_l3961) /\ (0 <= v_l3961)))) /\ ((v_Tuples__Tup2 v_l3960 v_l3961) = v_r0)) -> (((v_l3960 <= v_l3961) /\ (0 <= v_l3960)) /\ (0 <= v_l3961)))))))))))))))))
(* Querying for (;i, r0) HSFragment.fragment <: (;TLSInfo.Id (ki), r0) HSFragment.fragment *)
(* query i = TLSInfo.Id (ki) [HandshakeMessages.fs(96,7)] *)
goal g67_gl: (forall v_ki:top. ((v_TLSInfo__IsValidEpoch_p v_ki) -> (forall v_b:top. (forall v_i:top. ((exists v_aeAlg2443:top. (exists v_csrConn2444:top. (exists v_ext2445:top. (exists v_kdfAlg2446:top. (exists v_msId2447:top. (exists v_pv2448:top. (exists v_writer2449:top. ((v_i = (v_Tuples__Tup7 v_aeAlg2443 v_csrConn2444 v_ext2445 v_kdfAlg2446 v_msId2447 v_pv2448 v_writer2449)) /\ ((((((v_Bytes__Length v_csrConn2444) = 64) /\ ((v_kdfAlg2446 = (v_TLSConstants__PRF_SSL3_nested )) \/ ((v_kdfAlg2446 = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__kdf_label)) \/ (exists v_ma:top. (v_kdfAlg2446 = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__kdf_label v_ma)))))) /\ (v_TLSConstants__IsProtocolVersion_p v_pv2448)) /\ ((v_writer2449 = (v_TLSInfo__Client )) \/ (v_writer2449 = (v_TLSInfo__Server )))) /\ ((v_ki = v_ki) /\ ((v_Tuples__Tup7 v_aeAlg2443 v_csrConn2444 v_ext2445 v_kdfAlg2446 v_msId2447 v_pv2448 v_writer2449) = (v_TLSInfo__Id v_ki)))))))))))) -> (forall v_z3837:top. ((((v_TLSInfo__fragmentLength = v_TLSInfo__fragmentLength) /\ (0 <= v_TLSInfo__fragmentLength)) /\ (exists v_x38343838:top. (((v_b = v_b) /\ (((v_Bytes__Length v_b) = v_x38343838) /\ (0 <= v_x38343838))) /\ (((v_z3837 = v_Pervasives__True) /\ (v_x38343838 < v_TLSInfo__fragmentLength)) \/ ((v_z3837 = v_Pervasives__False) /\ (v_x38343838 >= v_TLSInfo__fragmentLength)))))) -> ((v_z3837 = v_Pervasives__True) -> (forall v_r0:top. ((exists v_l38583860:top. (exists v_l38673869:top. ((v_r0 = (v_Tuples__Tup2 v_l38583860 v_l38673869)) /\ (((v_b = v_b) /\ (((v_Bytes__Length v_b) = v_l38583860) /\ (0 <= v_l38583860))) /\ ((v_b = v_b) /\ (((v_Bytes__Length v_b) = v_l38673869) /\ (0 <= v_l38673869))))))) -> (forall v_f:top. (((v_b = v_b) /\ (((v_Bytes__B v_b) = (v_HSFragment__Payload v_i v_r0 v_f)) /\ ((v_TLSInfo__AuthId_p v_i) -> (v_HSFragment__Sent_p v_i (v_HSFragment__EmptyStream v_i) v_r0 v_f)))) -> (forall v_l3964:top. ((v_l3964 = v_f) -> (v_i = (v_TLSInfo__Id v_ki))))))))))))))))
(* Querying for (;i, r0) HSFragment.fragment <: (;TLSInfo.Id (ki), r0) HSFragment.fragment *)
(* query r0 = r0 [HandshakeMessages.fs(96,7)] *)
goal g68_gl: (forall v_ki:top. ((v_TLSInfo__IsValidEpoch_p v_ki) -> (forall v_b:top. (forall v_i:top. ((exists v_aeAlg2443:top. (exists v_csrConn2444:top. (exists v_ext2445:top. (exists v_kdfAlg2446:top. (exists v_msId2447:top. (exists v_pv2448:top. (exists v_writer2449:top. ((v_i = (v_Tuples__Tup7 v_aeAlg2443 v_csrConn2444 v_ext2445 v_kdfAlg2446 v_msId2447 v_pv2448 v_writer2449)) /\ ((((((v_Bytes__Length v_csrConn2444) = 64) /\ ((v_kdfAlg2446 = (v_TLSConstants__PRF_SSL3_nested )) \/ ((v_kdfAlg2446 = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__kdf_label)) \/ (exists v_ma:top. (v_kdfAlg2446 = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__kdf_label v_ma)))))) /\ (v_TLSConstants__IsProtocolVersion_p v_pv2448)) /\ ((v_writer2449 = (v_TLSInfo__Client )) \/ (v_writer2449 = (v_TLSInfo__Server )))) /\ ((v_ki = v_ki) /\ ((v_Tuples__Tup7 v_aeAlg2443 v_csrConn2444 v_ext2445 v_kdfAlg2446 v_msId2447 v_pv2448 v_writer2449) = (v_TLSInfo__Id v_ki)))))))))))) -> (forall v_z3837:top. ((((v_TLSInfo__fragmentLength = v_TLSInfo__fragmentLength) /\ (0 <= v_TLSInfo__fragmentLength)) /\ (exists v_x38343838:top. (((v_b = v_b) /\ (((v_Bytes__Length v_b) = v_x38343838) /\ (0 <= v_x38343838))) /\ (((v_z3837 = v_Pervasives__True) /\ (v_x38343838 < v_TLSInfo__fragmentLength)) \/ ((v_z3837 = v_Pervasives__False) /\ (v_x38343838 >= v_TLSInfo__fragmentLength)))))) -> ((v_z3837 = v_Pervasives__True) -> (forall v_r0:top. ((exists v_l38583860:top. (exists v_l38673869:top. ((v_r0 = (v_Tuples__Tup2 v_l38583860 v_l38673869)) /\ (((v_b = v_b) /\ (((v_Bytes__Length v_b) = v_l38583860) /\ (0 <= v_l38583860))) /\ ((v_b = v_b) /\ (((v_Bytes__Length v_b) = v_l38673869) /\ (0 <= v_l38673869))))))) -> (forall v_f:top. (((v_b = v_b) /\ (((v_Bytes__B v_b) = (v_HSFragment__Payload v_i v_r0 v_f)) /\ ((v_TLSInfo__AuthId_p v_i) -> (v_HSFragment__Sent_p v_i (v_HSFragment__EmptyStream v_i) v_r0 v_f)))) -> (forall v_l3964:top. ((v_l3964 = v_f) -> (v_r0 = v_r0)))))))))))))))
(* Querying for (msg) (r0, f, Bytes.empty_bytes) : (r:(low:int * high:int){pr_LessThanOrEqual(low, high) /\ pr_LessThanOrEqual(0, low) /\ pr_LessThanOrEqual(0, high)} * l2007:(;TLSInfo.Id (ki), r) HSFragment.fragment * Bytes.bytes){TLSInfo.AuthId(TLSInfo.Id (ki)) => HSFragment.Sent(TLSInfo.Id (ki), HSFragment.EmptyStream (TLSInfo.Id (ki)), r, l2007)} *)
(* query TLSInfo.AuthId(TLSInfo.Id (ki)) => HSFragment.Sent(TLSInfo.Id (ki), HSFragment.EmptyStream (TLSInfo.Id (ki)), r0, f) [HandshakeMessages.fs(96,7)] *)
goal g69_gl: (forall v_ki:top. ((v_TLSInfo__IsValidEpoch_p v_ki) -> (forall v_b:top. (forall v_i:top. ((exists v_aeAlg2443:top. (exists v_csrConn2444:top. (exists v_ext2445:top. (exists v_kdfAlg2446:top. (exists v_msId2447:top. (exists v_pv2448:top. (exists v_writer2449:top. ((v_i = (v_Tuples__Tup7 v_aeAlg2443 v_csrConn2444 v_ext2445 v_kdfAlg2446 v_msId2447 v_pv2448 v_writer2449)) /\ ((((((v_Bytes__Length v_csrConn2444) = 64) /\ ((v_kdfAlg2446 = (v_TLSConstants__PRF_SSL3_nested )) \/ ((v_kdfAlg2446 = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__kdf_label)) \/ (exists v_ma:top. (v_kdfAlg2446 = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__kdf_label v_ma)))))) /\ (v_TLSConstants__IsProtocolVersion_p v_pv2448)) /\ ((v_writer2449 = (v_TLSInfo__Client )) \/ (v_writer2449 = (v_TLSInfo__Server )))) /\ ((v_ki = v_ki) /\ ((v_Tuples__Tup7 v_aeAlg2443 v_csrConn2444 v_ext2445 v_kdfAlg2446 v_msId2447 v_pv2448 v_writer2449) = (v_TLSInfo__Id v_ki)))))))))))) -> (forall v_z3837:top. ((((v_TLSInfo__fragmentLength = v_TLSInfo__fragmentLength) /\ (0 <= v_TLSInfo__fragmentLength)) /\ (exists v_x38343838:top. (((v_b = v_b) /\ (((v_Bytes__Length v_b) = v_x38343838) /\ (0 <= v_x38343838))) /\ (((v_z3837 = v_Pervasives__True) /\ (v_x38343838 < v_TLSInfo__fragmentLength)) \/ ((v_z3837 = v_Pervasives__False) /\ (v_x38343838 >= v_TLSInfo__fragmentLength)))))) -> ((v_z3837 = v_Pervasives__True) -> (forall v_r0:top. ((exists v_l38583860:top. (exists v_l38673869:top. ((v_r0 = (v_Tuples__Tup2 v_l38583860 v_l38673869)) /\ (((v_b = v_b) /\ (((v_Bytes__Length v_b) = v_l38583860) /\ (0 <= v_l38583860))) /\ ((v_b = v_b) /\ (((v_Bytes__Length v_b) = v_l38673869) /\ (0 <= v_l38673869))))))) -> (forall v_f:top. (((v_b = v_b) /\ (((v_Bytes__B v_b) = (v_HSFragment__Payload v_i v_r0 v_f)) /\ ((v_TLSInfo__AuthId_p v_i) -> (v_HSFragment__Sent_p v_i (v_HSFragment__EmptyStream v_i) v_r0 v_f)))) -> ((v_TLSInfo__AuthId_p (v_TLSInfo__Id v_ki)) -> (v_HSFragment__Sent_p (v_TLSInfo__Id v_ki) (v_HSFragment__EmptyStream (v_TLSInfo__Id v_ki)) v_r0 v_f))))))))))))))
(* Querying for (l39823983:int){l39823983 = TLSInfo.fragmentLength /\ pr_LessThanOrEqual(0, l39823983)} <: (i39723984:int){pr_GreaterThanOrEqual(Bytes.Length (b), i39723984) /\ pr_LessThanOrEqual(0, i39723984)} *)
(* query pr_GreaterThanOrEqual(Bytes.Length (b), l3985) /\ pr_LessThanOrEqual(0, l3985) [HandshakeMessages.fs(98,21)] *)
goal g70_gl: (forall v_ki:top. ((v_TLSInfo__IsValidEpoch_p v_ki) -> (forall v_b:top. (forall v_i:top. ((exists v_aeAlg2443:top. (exists v_csrConn2444:top. (exists v_ext2445:top. (exists v_kdfAlg2446:top. (exists v_msId2447:top. (exists v_pv2448:top. (exists v_writer2449:top. ((v_i = (v_Tuples__Tup7 v_aeAlg2443 v_csrConn2444 v_ext2445 v_kdfAlg2446 v_msId2447 v_pv2448 v_writer2449)) /\ ((((((v_Bytes__Length v_csrConn2444) = 64) /\ ((v_kdfAlg2446 = (v_TLSConstants__PRF_SSL3_nested )) \/ ((v_kdfAlg2446 = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__kdf_label)) \/ (exists v_ma:top. (v_kdfAlg2446 = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__kdf_label v_ma)))))) /\ (v_TLSConstants__IsProtocolVersion_p v_pv2448)) /\ ((v_writer2449 = (v_TLSInfo__Client )) \/ (v_writer2449 = (v_TLSInfo__Server )))) /\ ((v_ki = v_ki) /\ ((v_Tuples__Tup7 v_aeAlg2443 v_csrConn2444 v_ext2445 v_kdfAlg2446 v_msId2447 v_pv2448 v_writer2449) = (v_TLSInfo__Id v_ki)))))))))))) -> (forall v_z3837:top. ((((v_TLSInfo__fragmentLength = v_TLSInfo__fragmentLength) /\ (0 <= v_TLSInfo__fragmentLength)) /\ (exists v_x38343838:top. (((v_b = v_b) /\ (((v_Bytes__Length v_b) = v_x38343838) /\ (0 <= v_x38343838))) /\ (((v_z3837 = v_Pervasives__True) /\ (v_x38343838 < v_TLSInfo__fragmentLength)) \/ ((v_z3837 = v_Pervasives__False) /\ (v_x38343838 >= v_TLSInfo__fragmentLength)))))) -> ((v_z3837 = v_Pervasives__False) -> (forall v_l3985:top. (((v_l3985 = v_TLSInfo__fragmentLength) /\ (0 <= v_l3985)) -> (((v_Bytes__Length v_b) >= v_l3985) /\ (0 <= v_l3985))))))))))))
(* Querying for (TLSInfo.pmsId * csr402740374059:Bytes.bytes * kefAlg402840384060:TLSConstants.prePrfAlg){Bytes.Length (csr402740374059) = 64 /\ kefAlg402840384060 = TLSConstants.PRF_SSL3_nested () \/ kefAlg402840384060 = TLSConstants.PRF_TLS_1p01 (TLSConstants.extract_label) \/ kefAlg402840384060 = TLSConstants.PRF_TLS_1p01 (TLSConstants.extended_extract_label) \/ (?ma. kefAlg402840384060 = TLSConstants.PRF_TLS_1p2 (TLSConstants.extract_label, ma)) \/ (?ma. kefAlg402840384060 = TLSConstants.PRF_TLS_1p2 (TLSConstants.extended_extract_label, ma))} <: (TLSInfo.pmsId * csr40474062:Bytes.bytes * kefAlg40484063:TLSConstants.prePrfAlg){Bytes.Length (csr40474062) = 64 /\ kefAlg40484063 = TLSConstants.PRF_SSL3_nested () \/ kefAlg40484063 = TLSConstants.PRF_TLS_1p01 (TLSConstants.extract_label) \/ kefAlg40484063 = TLSConstants.PRF_TLS_1p01 (TLSConstants.extended_extract_label) \/ (?ma. kefAlg40484063 = TLSConstants.PRF_TLS_1p2 (TLSConstants.extract_label, ma)) \/ (?ma. kefAlg40484063 = TLSConstants.PRF_TLS_1p2 (TLSConstants.extended_extract_label, ma))} *)
(* query Bytes.Length (l4065) = 64 /\ l4066 = TLSConstants.PRF_SSL3_nested () \/ l4066 = TLSConstants.PRF_TLS_1p01 (TLSConstants.extract_label) \/ l4066 = TLSConstants.PRF_TLS_1p01 (TLSConstants.extended_extract_label) \/ (?ma. l4066 = TLSConstants.PRF_TLS_1p2 (TLSConstants.extract_label, ma)) \/ (?ma. l4066 = TLSConstants.PRF_TLS_1p2 (TLSConstants.extended_extract_label, ma)) [HandshakeMessages.fs(100,14)] *)
goal g71_gl: (forall v_ki:top. ((v_TLSInfo__IsValidEpoch_p v_ki) -> (forall v_b:top. (forall v_i:top. ((exists v_aeAlg2443:top. (exists v_csrConn2444:top. (exists v_ext2445:top. (exists v_kdfAlg2446:top. (exists v_msId2447:top. (exists v_pv2448:top. (exists v_writer2449:top. ((v_i = (v_Tuples__Tup7 v_aeAlg2443 v_csrConn2444 v_ext2445 v_kdfAlg2446 v_msId2447 v_pv2448 v_writer2449)) /\ ((((((v_Bytes__Length v_csrConn2444) = 64) /\ ((v_kdfAlg2446 = (v_TLSConstants__PRF_SSL3_nested )) \/ ((v_kdfAlg2446 = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__kdf_label)) \/ (exists v_ma:top. (v_kdfAlg2446 = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__kdf_label v_ma)))))) /\ (v_TLSConstants__IsProtocolVersion_p v_pv2448)) /\ ((v_writer2449 = (v_TLSInfo__Client )) \/ (v_writer2449 = (v_TLSInfo__Server )))) /\ ((v_ki = v_ki) /\ ((v_Tuples__Tup7 v_aeAlg2443 v_csrConn2444 v_ext2445 v_kdfAlg2446 v_msId2447 v_pv2448 v_writer2449) = (v_TLSInfo__Id v_ki)))))))))))) -> (forall v_z3837:top. ((((v_TLSInfo__fragmentLength = v_TLSInfo__fragmentLength) /\ (0 <= v_TLSInfo__fragmentLength)) /\ (exists v_x38343838:top. (((v_b = v_b) /\ (((v_Bytes__Length v_b) = v_x38343838) /\ (0 <= v_x38343838))) /\ (((v_z3837 = v_Pervasives__True) /\ (v_x38343838 < v_TLSInfo__fragmentLength)) \/ ((v_z3837 = v_Pervasives__False) /\ (v_x38343838 >= v_TLSInfo__fragmentLength)))))) -> ((v_z3837 = v_Pervasives__False) -> (forall v_b0:top. (forall v_rem:top. ((((v_Bytes__Length v_b0) = v_TLSInfo__fragmentLength) /\ ((v_Bytes__B v_b) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_b0) (v_Bytes__B v_rem)))) -> (((v_TLSInfo__fragmentLength = v_TLSInfo__fragmentLength) /\ (0 <= v_TLSInfo__fragmentLength)) -> (forall v_r0:top. ((exists v_l39903992:top. (exists v_l39994001:top. ((v_r0 = (v_Tuples__Tup2 v_l39903992 v_l39994001)) /\ (((v_b0 = v_b0) /\ (((v_Bytes__Length v_b0) = v_l39903992) /\ (0 <= v_l39903992))) /\ ((v_b0 = v_b0) /\ (((v_Bytes__Length v_b0) = v_l39994001) /\ (0 <= v_l39994001))))))) -> (forall v_l4051:top. (forall v_l4052:top. (forall v_l4053:top. (forall v_l4054:top. (forall v_l4055:top. ((exists v_pms40264036:top. (exists v_csr40274037:top. (exists v_kefAlg40284038:top. ((v_l4055 = (v_Tuples__Tup3 v_pms40264036 v_csr40274037 v_kefAlg40284038)) /\ (((v_Bytes__Length v_csr40274037) = 64) /\ ((v_kefAlg40284038 = (v_TLSConstants__PRF_SSL3_nested )) \/ ((v_kefAlg40284038 = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__extract_label)) \/ ((v_kefAlg40284038 = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__extended_extract_label)) \/ ((exists v_ma:top. (v_kefAlg40284038 = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__extract_label v_ma))) \/ (exists v_ma:top. (v_kefAlg40284038 = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__extended_extract_label v_ma)))))))))))) -> (forall v_l4056:top. (forall v_l4057:top. ((((((((v_Bytes__Length v_l4052) = 64) /\ ((v_l4054 = (v_TLSConstants__PRF_SSL3_nested )) \/ ((v_l4054 = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__kdf_label)) \/ (exists v_ma:top. (v_l4054 = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__kdf_label v_ma)))))) /\ (v_TLSConstants__IsProtocolVersion_p v_l4056)) /\ ((v_l4057 = (v_TLSInfo__Client )) \/ (v_l4057 = (v_TLSInfo__Server )))) /\ ((v_ki = v_ki) /\ ((v_Tuples__Tup7 v_l4051 v_l4052 v_l4053 v_l4054 v_l4055 v_l4056 v_l4057) = (v_TLSInfo__Id v_ki)))) /\ ((v_Tuples__Tup7 v_l4051 v_l4052 v_l4053 v_l4054 v_l4055 v_l4056 v_l4057) = v_i)) -> (forall v_l4064:top. (forall v_l4065:top. (forall v_l4066:top. ((((v_Bytes__Length v_l4065) = 64) /\ ((v_l4066 = (v_TLSConstants__PRF_SSL3_nested )) \/ ((v_l4066 = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__extract_label)) \/ ((v_l4066 = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__extended_extract_label)) \/ ((exists v_ma:top. (v_l4066 = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__extract_label v_ma))) \/ (exists v_ma:top. (v_l4066 = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__extended_extract_label v_ma)))))))) -> (((v_Bytes__Length v_l4065) = 64) /\ ((v_l4066 = (v_TLSConstants__PRF_SSL3_nested )) \/ ((v_l4066 = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__extract_label)) \/ ((v_l4066 = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__extended_extract_label)) \/ ((exists v_ma:top. (v_l4066 = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__extract_label v_ma))) \/ (exists v_ma:top. (v_l4066 = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__extended_extract_label v_ma)))))))))))))))))))))))))))))))))))
(* Querying for (aeAlg244340214031:TLSConstants.aeAlg * csrConn244440224032:Bytes.bytes * ext244540234033:TLSInfo.negotiatedExtension list * kdfAlg244640244034:TLSConstants.prePrfAlg * msId244740254035:(TLSInfo.pmsId * csr40274037:Bytes.bytes * kefAlg40284038:TLSConstants.prePrfAlg){Bytes.Length (csr40274037) = 64 /\ kefAlg40284038 = TLSConstants.PRF_SSL3_nested () \/ kefAlg40284038 = TLSConstants.PRF_TLS_1p01 (TLSConstants.extract_label) \/ kefAlg40284038 = TLSConstants.PRF_TLS_1p01 (TLSConstants.extended_extract_label) \/ (?ma. kefAlg40284038 = TLSConstants.PRF_TLS_1p2 (TLSConstants.extract_label, ma)) \/ (?ma. kefAlg40284038 = TLSConstants.PRF_TLS_1p2 (TLSConstants.extended_extract_label, ma))} * pv244840294039:TLSConstants.PreProtocolVersion * writer244940304040:TLSInfo.preRole){Bytes.Length (csrConn244440224032) = 64 /\ kdfAlg244640244034 = TLSConstants.PRF_SSL3_nested () \/ kdfAlg244640244034 = TLSConstants.PRF_TLS_1p01 (TLSConstants.kdf_label) \/ (?ma. kdfAlg244640244034 = TLSConstants.PRF_TLS_1p2 (TLSConstants.kdf_label, ma)) /\ TLSConstants.IsProtocolVersion(pv244840294039) /\ writer244940304040 = TLSInfo.Client () \/ writer244940304040 = TLSInfo.Server () /\ ki = ki /\ (aeAlg244340214031, csrConn244440224032, ext244540234033, kdfAlg244640244034, msId244740254035, pv244840294039, writer244940304040) = TLSInfo.Id (ki) /\ (aeAlg244340214031, csrConn244440224032, ext244540234033, kdfAlg244640244034, msId244740254035, pv244840294039, writer244940304040) = i} <: (TLSConstants.aeAlg * csrConn24444042:Bytes.bytes * TLSInfo.negotiatedExtension list * kdfAlg24464044:TLSConstants.prePrfAlg * (TLSInfo.pmsId * csr4047:Bytes.bytes * kefAlg4048:TLSConstants.prePrfAlg){Bytes.Length (csr4047) = 64 /\ kefAlg4048 = TLSConstants.PRF_SSL3_nested () \/ kefAlg4048 = TLSConstants.PRF_TLS_1p01 (TLSConstants.extract_label) \/ kefAlg4048 = TLSConstants.PRF_TLS_1p01 (TLSConstants.extended_extract_label) \/ (?ma. kefAlg4048 = TLSConstants.PRF_TLS_1p2 (TLSConstants.extract_label, ma)) \/ (?ma. kefAlg4048 = TLSConstants.PRF_TLS_1p2 (TLSConstants.extended_extract_label, ma))} * pv24484049:TLSConstants.PreProtocolVersion * writer24494050:TLSInfo.preRole){Bytes.Length (csrConn24444042) = 64 /\ kdfAlg24464044 = TLSConstants.PRF_SSL3_nested () \/ kdfAlg24464044 = TLSConstants.PRF_TLS_1p01 (TLSConstants.kdf_label) \/ (?ma. kdfAlg24464044 = TLSConstants.PRF_TLS_1p2 (TLSConstants.kdf_label, ma)) /\ TLSConstants.IsProtocolVersion(pv24484049) /\ writer24494050 = TLSInfo.Client () \/ writer24494050 = TLSInfo.Server ()} *)
(* query Bytes.Length (l4052) = 64 /\ l4054 = TLSConstants.PRF_SSL3_nested () \/ l4054 = TLSConstants.PRF_TLS_1p01 (TLSConstants.kdf_label) \/ (?ma. l4054 = TLSConstants.PRF_TLS_1p2 (TLSConstants.kdf_label, ma)) /\ TLSConstants.IsProtocolVersion(l4056) /\ l4057 = TLSInfo.Client () \/ l4057 = TLSInfo.Server () [HandshakeMessages.fs(100,14)] *)
goal g72_gl: (forall v_ki:top. ((v_TLSInfo__IsValidEpoch_p v_ki) -> (forall v_b:top. (forall v_i:top. ((exists v_aeAlg2443:top. (exists v_csrConn2444:top. (exists v_ext2445:top. (exists v_kdfAlg2446:top. (exists v_msId2447:top. (exists v_pv2448:top. (exists v_writer2449:top. ((v_i = (v_Tuples__Tup7 v_aeAlg2443 v_csrConn2444 v_ext2445 v_kdfAlg2446 v_msId2447 v_pv2448 v_writer2449)) /\ ((((((v_Bytes__Length v_csrConn2444) = 64) /\ ((v_kdfAlg2446 = (v_TLSConstants__PRF_SSL3_nested )) \/ ((v_kdfAlg2446 = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__kdf_label)) \/ (exists v_ma:top. (v_kdfAlg2446 = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__kdf_label v_ma)))))) /\ (v_TLSConstants__IsProtocolVersion_p v_pv2448)) /\ ((v_writer2449 = (v_TLSInfo__Client )) \/ (v_writer2449 = (v_TLSInfo__Server )))) /\ ((v_ki = v_ki) /\ ((v_Tuples__Tup7 v_aeAlg2443 v_csrConn2444 v_ext2445 v_kdfAlg2446 v_msId2447 v_pv2448 v_writer2449) = (v_TLSInfo__Id v_ki)))))))))))) -> (forall v_z3837:top. ((((v_TLSInfo__fragmentLength = v_TLSInfo__fragmentLength) /\ (0 <= v_TLSInfo__fragmentLength)) /\ (exists v_x38343838:top. (((v_b = v_b) /\ (((v_Bytes__Length v_b) = v_x38343838) /\ (0 <= v_x38343838))) /\ (((v_z3837 = v_Pervasives__True) /\ (v_x38343838 < v_TLSInfo__fragmentLength)) \/ ((v_z3837 = v_Pervasives__False) /\ (v_x38343838 >= v_TLSInfo__fragmentLength)))))) -> ((v_z3837 = v_Pervasives__False) -> (forall v_b0:top. (forall v_rem:top. ((((v_Bytes__Length v_b0) = v_TLSInfo__fragmentLength) /\ ((v_Bytes__B v_b) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_b0) (v_Bytes__B v_rem)))) -> (((v_TLSInfo__fragmentLength = v_TLSInfo__fragmentLength) /\ (0 <= v_TLSInfo__fragmentLength)) -> (forall v_r0:top. ((exists v_l39903992:top. (exists v_l39994001:top. ((v_r0 = (v_Tuples__Tup2 v_l39903992 v_l39994001)) /\ (((v_b0 = v_b0) /\ (((v_Bytes__Length v_b0) = v_l39903992) /\ (0 <= v_l39903992))) /\ ((v_b0 = v_b0) /\ (((v_Bytes__Length v_b0) = v_l39994001) /\ (0 <= v_l39994001))))))) -> (forall v_l4051:top. (forall v_l4052:top. (forall v_l4053:top. (forall v_l4054:top. (forall v_l4055:top. ((exists v_pms40264036:top. (exists v_csr40274037:top. (exists v_kefAlg40284038:top. ((v_l4055 = (v_Tuples__Tup3 v_pms40264036 v_csr40274037 v_kefAlg40284038)) /\ (((v_Bytes__Length v_csr40274037) = 64) /\ ((v_kefAlg40284038 = (v_TLSConstants__PRF_SSL3_nested )) \/ ((v_kefAlg40284038 = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__extract_label)) \/ ((v_kefAlg40284038 = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__extended_extract_label)) \/ ((exists v_ma:top. (v_kefAlg40284038 = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__extract_label v_ma))) \/ (exists v_ma:top. (v_kefAlg40284038 = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__extended_extract_label v_ma)))))))))))) -> (forall v_l4056:top. (forall v_l4057:top. ((((((((v_Bytes__Length v_l4052) = 64) /\ ((v_l4054 = (v_TLSConstants__PRF_SSL3_nested )) \/ ((v_l4054 = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__kdf_label)) \/ (exists v_ma:top. (v_l4054 = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__kdf_label v_ma)))))) /\ (v_TLSConstants__IsProtocolVersion_p v_l4056)) /\ ((v_l4057 = (v_TLSInfo__Client )) \/ (v_l4057 = (v_TLSInfo__Server )))) /\ ((v_ki = v_ki) /\ ((v_Tuples__Tup7 v_l4051 v_l4052 v_l4053 v_l4054 v_l4055 v_l4056 v_l4057) = (v_TLSInfo__Id v_ki)))) /\ ((v_Tuples__Tup7 v_l4051 v_l4052 v_l4053 v_l4054 v_l4055 v_l4056 v_l4057) = v_i)) -> (((((v_Bytes__Length v_l4052) = 64) /\ ((v_l4054 = (v_TLSConstants__PRF_SSL3_nested )) \/ ((v_l4054 = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__kdf_label)) \/ (exists v_ma:top. (v_l4054 = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__kdf_label v_ma)))))) /\ (v_TLSConstants__IsProtocolVersion_p v_l4056)) /\ ((v_l4057 = (v_TLSInfo__Client )) \/ (v_l4057 = (v_TLSInfo__Server )))))))))))))))))))))))))))
(* Querying for (l3990399240694071:int * l3999400140704072:int){b0 = b0 /\ Bytes.Length (b0) = l3990399240694071 /\ pr_LessThanOrEqual(0, l3990399240694071) /\ b0 = b0 /\ Bytes.Length (b0) = l3999400140704072 /\ pr_LessThanOrEqual(0, l3999400140704072) /\ (l3990399240694071, l3999400140704072) = r0} <: (low4073:int * high4074:int){pr_LessThanOrEqual(low4073, high4074) /\ pr_LessThanOrEqual(0, low4073) /\ pr_LessThanOrEqual(0, high4074)} *)
(* query pr_LessThanOrEqual(l4075, l4076) /\ pr_LessThanOrEqual(0, l4075) /\ pr_LessThanOrEqual(0, l4076) [HandshakeMessages.fs(100,14)] *)
goal g73_gl: (forall v_ki:top. ((v_TLSInfo__IsValidEpoch_p v_ki) -> (forall v_b:top. (forall v_i:top. ((exists v_aeAlg2443:top. (exists v_csrConn2444:top. (exists v_ext2445:top. (exists v_kdfAlg2446:top. (exists v_msId2447:top. (exists v_pv2448:top. (exists v_writer2449:top. ((v_i = (v_Tuples__Tup7 v_aeAlg2443 v_csrConn2444 v_ext2445 v_kdfAlg2446 v_msId2447 v_pv2448 v_writer2449)) /\ ((((((v_Bytes__Length v_csrConn2444) = 64) /\ ((v_kdfAlg2446 = (v_TLSConstants__PRF_SSL3_nested )) \/ ((v_kdfAlg2446 = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__kdf_label)) \/ (exists v_ma:top. (v_kdfAlg2446 = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__kdf_label v_ma)))))) /\ (v_TLSConstants__IsProtocolVersion_p v_pv2448)) /\ ((v_writer2449 = (v_TLSInfo__Client )) \/ (v_writer2449 = (v_TLSInfo__Server )))) /\ ((v_ki = v_ki) /\ ((v_Tuples__Tup7 v_aeAlg2443 v_csrConn2444 v_ext2445 v_kdfAlg2446 v_msId2447 v_pv2448 v_writer2449) = (v_TLSInfo__Id v_ki)))))))))))) -> (forall v_z3837:top. ((((v_TLSInfo__fragmentLength = v_TLSInfo__fragmentLength) /\ (0 <= v_TLSInfo__fragmentLength)) /\ (exists v_x38343838:top. (((v_b = v_b) /\ (((v_Bytes__Length v_b) = v_x38343838) /\ (0 <= v_x38343838))) /\ (((v_z3837 = v_Pervasives__True) /\ (v_x38343838 < v_TLSInfo__fragmentLength)) \/ ((v_z3837 = v_Pervasives__False) /\ (v_x38343838 >= v_TLSInfo__fragmentLength)))))) -> ((v_z3837 = v_Pervasives__False) -> (forall v_b0:top. (forall v_rem:top. ((((v_Bytes__Length v_b0) = v_TLSInfo__fragmentLength) /\ ((v_Bytes__B v_b) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_b0) (v_Bytes__B v_rem)))) -> (((v_TLSInfo__fragmentLength = v_TLSInfo__fragmentLength) /\ (0 <= v_TLSInfo__fragmentLength)) -> (forall v_r0:top. ((exists v_l39903992:top. (exists v_l39994001:top. ((v_r0 = (v_Tuples__Tup2 v_l39903992 v_l39994001)) /\ (((v_b0 = v_b0) /\ (((v_Bytes__Length v_b0) = v_l39903992) /\ (0 <= v_l39903992))) /\ ((v_b0 = v_b0) /\ (((v_Bytes__Length v_b0) = v_l39994001) /\ (0 <= v_l39994001))))))) -> (forall v_l4075:top. (forall v_l4076:top. (((((v_b0 = v_b0) /\ (((v_Bytes__Length v_b0) = v_l4075) /\ (0 <= v_l4075))) /\ ((v_b0 = v_b0) /\ (((v_Bytes__Length v_b0) = v_l4076) /\ (0 <= v_l4076)))) /\ ((v_Tuples__Tup2 v_l4075 v_l4076) = v_r0)) -> (((v_l4075 <= v_l4076) /\ (0 <= v_l4075)) /\ (0 <= v_l4076)))))))))))))))))))
(* Querying for (l40784079:Bytes.bytes){l40784079 = b0} <: (b40164080:Bytes.bytes){(?l. (?h. r0 = (l, h) /\ pr_LessThanOrEqual(l, Bytes.Length (b40164080)) /\ pr_LessThanOrEqual(Bytes.Length (b40164080), h)))} *)
(* query (?l. (?h. r0 = (l, h) /\ pr_LessThanOrEqual(l, Bytes.Length (l4081)) /\ pr_LessThanOrEqual(Bytes.Length (l4081), h))) [HandshakeMessages.fs(100,14)] *)
goal g74_gl: (forall v_ki:top. ((v_TLSInfo__IsValidEpoch_p v_ki) -> (forall v_b:top. (forall v_i:top. ((exists v_aeAlg2443:top. (exists v_csrConn2444:top. (exists v_ext2445:top. (exists v_kdfAlg2446:top. (exists v_msId2447:top. (exists v_pv2448:top. (exists v_writer2449:top. ((v_i = (v_Tuples__Tup7 v_aeAlg2443 v_csrConn2444 v_ext2445 v_kdfAlg2446 v_msId2447 v_pv2448 v_writer2449)) /\ ((((((v_Bytes__Length v_csrConn2444) = 64) /\ ((v_kdfAlg2446 = (v_TLSConstants__PRF_SSL3_nested )) \/ ((v_kdfAlg2446 = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__kdf_label)) \/ (exists v_ma:top. (v_kdfAlg2446 = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__kdf_label v_ma)))))) /\ (v_TLSConstants__IsProtocolVersion_p v_pv2448)) /\ ((v_writer2449 = (v_TLSInfo__Client )) \/ (v_writer2449 = (v_TLSInfo__Server )))) /\ ((v_ki = v_ki) /\ ((v_Tuples__Tup7 v_aeAlg2443 v_csrConn2444 v_ext2445 v_kdfAlg2446 v_msId2447 v_pv2448 v_writer2449) = (v_TLSInfo__Id v_ki)))))))))))) -> (forall v_z3837:top. ((((v_TLSInfo__fragmentLength = v_TLSInfo__fragmentLength) /\ (0 <= v_TLSInfo__fragmentLength)) /\ (exists v_x38343838:top. (((v_b = v_b) /\ (((v_Bytes__Length v_b) = v_x38343838) /\ (0 <= v_x38343838))) /\ (((v_z3837 = v_Pervasives__True) /\ (v_x38343838 < v_TLSInfo__fragmentLength)) \/ ((v_z3837 = v_Pervasives__False) /\ (v_x38343838 >= v_TLSInfo__fragmentLength)))))) -> ((v_z3837 = v_Pervasives__False) -> (forall v_b0:top. (forall v_rem:top. ((((v_Bytes__Length v_b0) = v_TLSInfo__fragmentLength) /\ ((v_Bytes__B v_b) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_b0) (v_Bytes__B v_rem)))) -> (((v_TLSInfo__fragmentLength = v_TLSInfo__fragmentLength) /\ (0 <= v_TLSInfo__fragmentLength)) -> (forall v_r0:top. ((exists v_l39903992:top. (exists v_l39994001:top. ((v_r0 = (v_Tuples__Tup2 v_l39903992 v_l39994001)) /\ (((v_b0 = v_b0) /\ (((v_Bytes__Length v_b0) = v_l39903992) /\ (0 <= v_l39903992))) /\ ((v_b0 = v_b0) /\ (((v_Bytes__Length v_b0) = v_l39994001) /\ (0 <= v_l39994001))))))) -> (forall v_l4081:top. ((v_l4081 = v_b0) -> (exists v_l:top. (exists v_h:top. ((v_r0 = (v_Tuples__Tup2 v_l v_h)) /\ ((v_l <= (v_Bytes__Length v_l4081)) /\ ((v_Bytes__Length v_l4081) <= v_h)))))))))))))))))))))
(* Querying for (l3990399240854088:int * l3999400140864089:int){b0 = b0 /\ Bytes.Length (b0) = l3990399240854088 /\ pr_LessThanOrEqual(0, l3990399240854088) /\ b0 = b0 /\ Bytes.Length (b0) = l3999400140864089 /\ pr_LessThanOrEqual(0, l3999400140864089) /\ (l3990399240854088, l3999400140864089) = r0} <: (low4090:int * high4091:int){pr_LessThanOrEqual(low4090, high4091) /\ pr_LessThanOrEqual(0, low4090) /\ pr_LessThanOrEqual(0, high4091)} *)
(* query pr_LessThanOrEqual(l4092, l4093) /\ pr_LessThanOrEqual(0, l4092) /\ pr_LessThanOrEqual(0, l4093) [HandshakeMessages.fs(101,7)] *)
goal g75_gl: (forall v_ki:top. ((v_TLSInfo__IsValidEpoch_p v_ki) -> (forall v_b:top. (forall v_i:top. ((exists v_aeAlg2443:top. (exists v_csrConn2444:top. (exists v_ext2445:top. (exists v_kdfAlg2446:top. (exists v_msId2447:top. (exists v_pv2448:top. (exists v_writer2449:top. ((v_i = (v_Tuples__Tup7 v_aeAlg2443 v_csrConn2444 v_ext2445 v_kdfAlg2446 v_msId2447 v_pv2448 v_writer2449)) /\ ((((((v_Bytes__Length v_csrConn2444) = 64) /\ ((v_kdfAlg2446 = (v_TLSConstants__PRF_SSL3_nested )) \/ ((v_kdfAlg2446 = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__kdf_label)) \/ (exists v_ma:top. (v_kdfAlg2446 = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__kdf_label v_ma)))))) /\ (v_TLSConstants__IsProtocolVersion_p v_pv2448)) /\ ((v_writer2449 = (v_TLSInfo__Client )) \/ (v_writer2449 = (v_TLSInfo__Server )))) /\ ((v_ki = v_ki) /\ ((v_Tuples__Tup7 v_aeAlg2443 v_csrConn2444 v_ext2445 v_kdfAlg2446 v_msId2447 v_pv2448 v_writer2449) = (v_TLSInfo__Id v_ki)))))))))))) -> (forall v_z3837:top. ((((v_TLSInfo__fragmentLength = v_TLSInfo__fragmentLength) /\ (0 <= v_TLSInfo__fragmentLength)) /\ (exists v_x38343838:top. (((v_b = v_b) /\ (((v_Bytes__Length v_b) = v_x38343838) /\ (0 <= v_x38343838))) /\ (((v_z3837 = v_Pervasives__True) /\ (v_x38343838 < v_TLSInfo__fragmentLength)) \/ ((v_z3837 = v_Pervasives__False) /\ (v_x38343838 >= v_TLSInfo__fragmentLength)))))) -> ((v_z3837 = v_Pervasives__False) -> (forall v_b0:top. (forall v_rem:top. ((((v_Bytes__Length v_b0) = v_TLSInfo__fragmentLength) /\ ((v_Bytes__B v_b) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_b0) (v_Bytes__B v_rem)))) -> (((v_TLSInfo__fragmentLength = v_TLSInfo__fragmentLength) /\ (0 <= v_TLSInfo__fragmentLength)) -> (forall v_r0:top. ((exists v_l39903992:top. (exists v_l39994001:top. ((v_r0 = (v_Tuples__Tup2 v_l39903992 v_l39994001)) /\ (((v_b0 = v_b0) /\ (((v_Bytes__Length v_b0) = v_l39903992) /\ (0 <= v_l39903992))) /\ ((v_b0 = v_b0) /\ (((v_Bytes__Length v_b0) = v_l39994001) /\ (0 <= v_l39994001))))))) -> (forall v_f:top. (((v_b0 = v_b0) /\ (((v_Bytes__B v_b0) = (v_HSFragment__Payload v_i v_r0 v_f)) /\ ((v_TLSInfo__AuthId_p v_i) -> (v_HSFragment__Sent_p v_i (v_HSFragment__EmptyStream v_i) v_r0 v_f)))) -> (forall v_l4092:top. (forall v_l4093:top. (((((v_b0 = v_b0) /\ (((v_Bytes__Length v_b0) = v_l4092) /\ (0 <= v_l4092))) /\ ((v_b0 = v_b0) /\ (((v_Bytes__Length v_b0) = v_l4093) /\ (0 <= v_l4093)))) /\ ((v_Tuples__Tup2 v_l4092 v_l4093) = v_r0)) -> (((v_l4092 <= v_l4093) /\ (0 <= v_l4092)) /\ (0 <= v_l4093)))))))))))))))))))))
(* Querying for (;i, r0) HSFragment.fragment <: (;TLSInfo.Id (ki), r0) HSFragment.fragment *)
(* query i = TLSInfo.Id (ki) [HandshakeMessages.fs(101,7)] *)
goal g76_gl: (forall v_ki:top. ((v_TLSInfo__IsValidEpoch_p v_ki) -> (forall v_b:top. (forall v_i:top. ((exists v_aeAlg2443:top. (exists v_csrConn2444:top. (exists v_ext2445:top. (exists v_kdfAlg2446:top. (exists v_msId2447:top. (exists v_pv2448:top. (exists v_writer2449:top. ((v_i = (v_Tuples__Tup7 v_aeAlg2443 v_csrConn2444 v_ext2445 v_kdfAlg2446 v_msId2447 v_pv2448 v_writer2449)) /\ ((((((v_Bytes__Length v_csrConn2444) = 64) /\ ((v_kdfAlg2446 = (v_TLSConstants__PRF_SSL3_nested )) \/ ((v_kdfAlg2446 = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__kdf_label)) \/ (exists v_ma:top. (v_kdfAlg2446 = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__kdf_label v_ma)))))) /\ (v_TLSConstants__IsProtocolVersion_p v_pv2448)) /\ ((v_writer2449 = (v_TLSInfo__Client )) \/ (v_writer2449 = (v_TLSInfo__Server )))) /\ ((v_ki = v_ki) /\ ((v_Tuples__Tup7 v_aeAlg2443 v_csrConn2444 v_ext2445 v_kdfAlg2446 v_msId2447 v_pv2448 v_writer2449) = (v_TLSInfo__Id v_ki)))))))))))) -> (forall v_z3837:top. ((((v_TLSInfo__fragmentLength = v_TLSInfo__fragmentLength) /\ (0 <= v_TLSInfo__fragmentLength)) /\ (exists v_x38343838:top. (((v_b = v_b) /\ (((v_Bytes__Length v_b) = v_x38343838) /\ (0 <= v_x38343838))) /\ (((v_z3837 = v_Pervasives__True) /\ (v_x38343838 < v_TLSInfo__fragmentLength)) \/ ((v_z3837 = v_Pervasives__False) /\ (v_x38343838 >= v_TLSInfo__fragmentLength)))))) -> ((v_z3837 = v_Pervasives__False) -> (forall v_b0:top. (forall v_rem:top. ((((v_Bytes__Length v_b0) = v_TLSInfo__fragmentLength) /\ ((v_Bytes__B v_b) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_b0) (v_Bytes__B v_rem)))) -> (((v_TLSInfo__fragmentLength = v_TLSInfo__fragmentLength) /\ (0 <= v_TLSInfo__fragmentLength)) -> (forall v_r0:top. ((exists v_l39903992:top. (exists v_l39994001:top. ((v_r0 = (v_Tuples__Tup2 v_l39903992 v_l39994001)) /\ (((v_b0 = v_b0) /\ (((v_Bytes__Length v_b0) = v_l39903992) /\ (0 <= v_l39903992))) /\ ((v_b0 = v_b0) /\ (((v_Bytes__Length v_b0) = v_l39994001) /\ (0 <= v_l39994001))))))) -> (forall v_f:top. (((v_b0 = v_b0) /\ (((v_Bytes__B v_b0) = (v_HSFragment__Payload v_i v_r0 v_f)) /\ ((v_TLSInfo__AuthId_p v_i) -> (v_HSFragment__Sent_p v_i (v_HSFragment__EmptyStream v_i) v_r0 v_f)))) -> (forall v_l4096:top. ((v_l4096 = v_f) -> (v_i = (v_TLSInfo__Id v_ki))))))))))))))))))))
(* Querying for (;i, r0) HSFragment.fragment <: (;TLSInfo.Id (ki), r0) HSFragment.fragment *)
(* query r0 = r0 [HandshakeMessages.fs(101,7)] *)
goal g77_gl: (forall v_ki:top. ((v_TLSInfo__IsValidEpoch_p v_ki) -> (forall v_b:top. (forall v_i:top. ((exists v_aeAlg2443:top. (exists v_csrConn2444:top. (exists v_ext2445:top. (exists v_kdfAlg2446:top. (exists v_msId2447:top. (exists v_pv2448:top. (exists v_writer2449:top. ((v_i = (v_Tuples__Tup7 v_aeAlg2443 v_csrConn2444 v_ext2445 v_kdfAlg2446 v_msId2447 v_pv2448 v_writer2449)) /\ ((((((v_Bytes__Length v_csrConn2444) = 64) /\ ((v_kdfAlg2446 = (v_TLSConstants__PRF_SSL3_nested )) \/ ((v_kdfAlg2446 = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__kdf_label)) \/ (exists v_ma:top. (v_kdfAlg2446 = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__kdf_label v_ma)))))) /\ (v_TLSConstants__IsProtocolVersion_p v_pv2448)) /\ ((v_writer2449 = (v_TLSInfo__Client )) \/ (v_writer2449 = (v_TLSInfo__Server )))) /\ ((v_ki = v_ki) /\ ((v_Tuples__Tup7 v_aeAlg2443 v_csrConn2444 v_ext2445 v_kdfAlg2446 v_msId2447 v_pv2448 v_writer2449) = (v_TLSInfo__Id v_ki)))))))))))) -> (forall v_z3837:top. ((((v_TLSInfo__fragmentLength = v_TLSInfo__fragmentLength) /\ (0 <= v_TLSInfo__fragmentLength)) /\ (exists v_x38343838:top. (((v_b = v_b) /\ (((v_Bytes__Length v_b) = v_x38343838) /\ (0 <= v_x38343838))) /\ (((v_z3837 = v_Pervasives__True) /\ (v_x38343838 < v_TLSInfo__fragmentLength)) \/ ((v_z3837 = v_Pervasives__False) /\ (v_x38343838 >= v_TLSInfo__fragmentLength)))))) -> ((v_z3837 = v_Pervasives__False) -> (forall v_b0:top. (forall v_rem:top. ((((v_Bytes__Length v_b0) = v_TLSInfo__fragmentLength) /\ ((v_Bytes__B v_b) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_b0) (v_Bytes__B v_rem)))) -> (((v_TLSInfo__fragmentLength = v_TLSInfo__fragmentLength) /\ (0 <= v_TLSInfo__fragmentLength)) -> (forall v_r0:top. ((exists v_l39903992:top. (exists v_l39994001:top. ((v_r0 = (v_Tuples__Tup2 v_l39903992 v_l39994001)) /\ (((v_b0 = v_b0) /\ (((v_Bytes__Length v_b0) = v_l39903992) /\ (0 <= v_l39903992))) /\ ((v_b0 = v_b0) /\ (((v_Bytes__Length v_b0) = v_l39994001) /\ (0 <= v_l39994001))))))) -> (forall v_f:top. (((v_b0 = v_b0) /\ (((v_Bytes__B v_b0) = (v_HSFragment__Payload v_i v_r0 v_f)) /\ ((v_TLSInfo__AuthId_p v_i) -> (v_HSFragment__Sent_p v_i (v_HSFragment__EmptyStream v_i) v_r0 v_f)))) -> (forall v_l4096:top. ((v_l4096 = v_f) -> (v_r0 = v_r0)))))))))))))))))))
(* Querying for (msg) (r0, f, rem) : (r:(low:int * high:int){pr_LessThanOrEqual(low, high) /\ pr_LessThanOrEqual(0, low) /\ pr_LessThanOrEqual(0, high)} * l2007:(;TLSInfo.Id (ki), r) HSFragment.fragment * Bytes.bytes){TLSInfo.AuthId(TLSInfo.Id (ki)) => HSFragment.Sent(TLSInfo.Id (ki), HSFragment.EmptyStream (TLSInfo.Id (ki)), r, l2007)} *)
(* query TLSInfo.AuthId(TLSInfo.Id (ki)) => HSFragment.Sent(TLSInfo.Id (ki), HSFragment.EmptyStream (TLSInfo.Id (ki)), r0, f) [HandshakeMessages.fs(101,7)] *)
goal g78_gl: (forall v_ki:top. ((v_TLSInfo__IsValidEpoch_p v_ki) -> (forall v_b:top. (forall v_i:top. ((exists v_aeAlg2443:top. (exists v_csrConn2444:top. (exists v_ext2445:top. (exists v_kdfAlg2446:top. (exists v_msId2447:top. (exists v_pv2448:top. (exists v_writer2449:top. ((v_i = (v_Tuples__Tup7 v_aeAlg2443 v_csrConn2444 v_ext2445 v_kdfAlg2446 v_msId2447 v_pv2448 v_writer2449)) /\ ((((((v_Bytes__Length v_csrConn2444) = 64) /\ ((v_kdfAlg2446 = (v_TLSConstants__PRF_SSL3_nested )) \/ ((v_kdfAlg2446 = (v_TLSConstants__PRF_TLS_1p01 v_TLSConstants__kdf_label)) \/ (exists v_ma:top. (v_kdfAlg2446 = (v_TLSConstants__PRF_TLS_1p2 v_TLSConstants__kdf_label v_ma)))))) /\ (v_TLSConstants__IsProtocolVersion_p v_pv2448)) /\ ((v_writer2449 = (v_TLSInfo__Client )) \/ (v_writer2449 = (v_TLSInfo__Server )))) /\ ((v_ki = v_ki) /\ ((v_Tuples__Tup7 v_aeAlg2443 v_csrConn2444 v_ext2445 v_kdfAlg2446 v_msId2447 v_pv2448 v_writer2449) = (v_TLSInfo__Id v_ki)))))))))))) -> (forall v_z3837:top. ((((v_TLSInfo__fragmentLength = v_TLSInfo__fragmentLength) /\ (0 <= v_TLSInfo__fragmentLength)) /\ (exists v_x38343838:top. (((v_b = v_b) /\ (((v_Bytes__Length v_b) = v_x38343838) /\ (0 <= v_x38343838))) /\ (((v_z3837 = v_Pervasives__True) /\ (v_x38343838 < v_TLSInfo__fragmentLength)) \/ ((v_z3837 = v_Pervasives__False) /\ (v_x38343838 >= v_TLSInfo__fragmentLength)))))) -> ((v_z3837 = v_Pervasives__False) -> (forall v_b0:top. (forall v_rem:top. ((((v_Bytes__Length v_b0) = v_TLSInfo__fragmentLength) /\ ((v_Bytes__B v_b) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_b0) (v_Bytes__B v_rem)))) -> (((v_TLSInfo__fragmentLength = v_TLSInfo__fragmentLength) /\ (0 <= v_TLSInfo__fragmentLength)) -> (forall v_r0:top. ((exists v_l39903992:top. (exists v_l39994001:top. ((v_r0 = (v_Tuples__Tup2 v_l39903992 v_l39994001)) /\ (((v_b0 = v_b0) /\ (((v_Bytes__Length v_b0) = v_l39903992) /\ (0 <= v_l39903992))) /\ ((v_b0 = v_b0) /\ (((v_Bytes__Length v_b0) = v_l39994001) /\ (0 <= v_l39994001))))))) -> (forall v_f:top. (((v_b0 = v_b0) /\ (((v_Bytes__B v_b0) = (v_HSFragment__Payload v_i v_r0 v_f)) /\ ((v_TLSInfo__AuthId_p v_i) -> (v_HSFragment__Sent_p v_i (v_HSFragment__EmptyStream v_i) v_r0 v_f)))) -> ((v_TLSInfo__AuthId_p (v_TLSInfo__Id v_ki)) -> (v_HSFragment__Sent_p (v_TLSInfo__Id v_ki) (v_HSFragment__EmptyStream (v_TLSInfo__Id v_ki)) v_r0 v_f))))))))))))))))))
(* Querying for (l41374138:int){l41374138 = 1} <: (i41274139:int){pr_GreaterThanOrEqual(Bytes.Length (data), i41274139) /\ pr_LessThanOrEqual(0, i41274139)} *)
(* query pr_GreaterThanOrEqual(Bytes.Length (data), l4140) /\ pr_LessThanOrEqual(0, l4140) [HandshakeMessages.fs(118,20)] *)
goal g79_gl: (forall v_ht:top. ((v_HandshakeMessages__IsHandshakeType_p v_ht) -> (forall v_data:top. (forall v_z4106:top. (((1 = 1) /\ (exists v_x41034107:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x41034107) /\ (0 <= v_x41034107))) /\ (((v_z4106 = v_Pervasives__True) /\ (v_x41034107 >= 1)) \/ ((v_z4106 = v_Pervasives__False) /\ (v_x41034107 < 1)))))) -> ((v_z4106 = v_Pervasives__True) -> (forall v_l4140:top. ((v_l4140 = 1) -> (((v_Bytes__Length v_data) >= v_l4140) /\ (0 <= v_l4140))))))))))
(* Querying for (l41554156:PreHandshakeType){l41554156 = ht} <: (ht415141534157:PreHandshakeType){IsHandshakeType(ht415141534157)} *)
(* query IsHandshakeType(l4158) [HandshakeMessages.fs(119,11)] *)
goal g80_gl: (forall v_ht:top. ((v_HandshakeMessages__IsHandshakeType_p v_ht) -> (forall v_data:top. (forall v_z4106:top. (((1 = 1) /\ (exists v_x41034107:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x41034107) /\ (0 <= v_x41034107))) /\ (((v_z4106 = v_Pervasives__True) /\ (v_x41034107 >= 1)) \/ ((v_z4106 = v_Pervasives__False) /\ (v_x41034107 < 1)))))) -> ((v_z4106 = v_Pervasives__True) -> (forall v_ht':top. (forall v_pl:top. ((((v_Bytes__Length v_ht') = 1) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_ht') (v_Bytes__B v_pl)))) -> ((1 = 1) -> (forall v_l4158:top. ((v_l4158 = v_ht) -> (v_HandshakeMessages__IsHandshakeType_p v_l4158)))))))))))))
(* Querying for (msg) pl : (r:Bytes.bytes){Bytes.B (data) = bop_ArrayAppend (HTBytes (ht), Bytes.B (r))} *)
(* query Bytes.B (data) = bop_ArrayAppend (HTBytes (ht), Bytes.B (pl)) [HandshakeMessages.fs(120,12)] *)
goal g81_gl: (forall v_ht:top. ((v_HandshakeMessages__IsHandshakeType_p v_ht) -> (forall v_data:top. (forall v_z4106:top. (((1 = 1) /\ (exists v_x41034107:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x41034107) /\ (0 <= v_x41034107))) /\ (((v_z4106 = v_Pervasives__True) /\ (v_x41034107 >= 1)) \/ ((v_z4106 = v_Pervasives__False) /\ (v_x41034107 < 1)))))) -> ((v_z4106 = v_Pervasives__True) -> (forall v_ht':top. (forall v_pl:top. ((((v_Bytes__Length v_ht') = 1) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_ht') (v_Bytes__B v_pl)))) -> ((1 = 1) -> (forall v_z4147:top. (((v_ht' = v_ht') /\ (exists v_x41444148:top. (((v_ht = v_ht) /\ ((v_Bytes__B v_x41444148) = (v_HandshakeMessages__HTBytes v_ht))) /\ (((v_z4147 = v_Pervasives__True) /\ (v_x41444148 = v_ht')) \/ ((v_z4147 = v_Pervasives__False) /\ (not (v_x41444148 = v_ht'))))))) -> ((v_z4147 = v_Pervasives__True) -> ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__HTBytes v_ht) (v_Bytes__B v_pl))))))))))))))))
(* Querying for (l42974298:int){l42974298 = i} <: (i42874299:int){pr_GreaterThanOrEqual(Bytes.Length (data), i42874299) /\ pr_LessThanOrEqual(0, i42874299)} *)
(* query pr_GreaterThanOrEqual(Bytes.Length (data), l4300) /\ pr_LessThanOrEqual(0, l4300) [HandshakeMessages.fs(145,24)] *)
goal g82_gl: (forall v_i:top. ((0 <= v_i) -> (forall v_data:top. (forall v_z4266:top. (((v_i = v_i) /\ (exists v_x42634267:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x42634267) /\ (0 <= v_x42634267))) /\ (((v_z4266 = v_Pervasives__True) /\ (v_x42634267 >= v_i)) \/ ((v_z4266 = v_Pervasives__False) /\ (v_x42634267 < v_i)))))) -> ((v_z4266 = v_Pervasives__True) -> (forall v_l4300:top. ((v_l4300 = v_i) -> (((v_Bytes__Length v_data) >= v_l4300) /\ (0 <= v_l4300))))))))))
(* Querying for (msg) (data4, r) : (l4260:Bytes.bytes * r:Bytes.bytes){Bytes.Length (l4260) = i /\ Bytes.B (data) = bop_ArrayAppend (Bytes.B (l4260), Bytes.B (r))} *)
(* query Bytes.Length (data4) = i /\ Bytes.B (data) = bop_ArrayAppend (Bytes.B (data4), Bytes.B (r)) [HandshakeMessages.fs(146,12)] *)
goal g83_gl: (forall v_i:top. ((0 <= v_i) -> (forall v_data:top. (forall v_z4266:top. (((v_i = v_i) /\ (exists v_x42634267:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x42634267) /\ (0 <= v_x42634267))) /\ (((v_z4266 = v_Pervasives__True) /\ (v_x42634267 >= v_i)) \/ ((v_z4266 = v_Pervasives__False) /\ (v_x42634267 < v_i)))))) -> ((v_z4266 = v_Pervasives__True) -> (forall v_data4:top. (forall v_r:top. ((((v_Bytes__Length v_data4) = v_i) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_data4) (v_Bytes__B v_r)))) -> ((v_i = v_i) -> (((v_Bytes__Length v_data4) = v_i) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_data4) (v_Bytes__B v_r))))))))))))))
(* Querying for (l42604312431643434355:Bytes.bytes * r4313431743444356:Bytes.bytes){Bytes.Length (l42604312431643434355) = i /\ Bytes.B (data) = bop_ArrayAppend (Bytes.B (l42604312431643434355), Bytes.B (r4313431743444356))} <: (l426043474357:Bytes.bytes * r43484358:Bytes.bytes){Bytes.Length (l426043474357) = i /\ Bytes.B (data) = bop_ArrayAppend (Bytes.B (l426043474357), Bytes.B (r43484358))} *)
(* query Bytes.Length (l4359) = i /\ Bytes.B (data) = bop_ArrayAppend (Bytes.B (l4359), Bytes.B (l4360)) [HandshakeMessages.fs(148,8)] *)
goal g84_gl: (forall v_i:top. ((0 <= v_i) -> (forall v_data:top. (forall v_z4266:top. (((v_i = v_i) /\ (exists v_x42634267:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x42634267) /\ (0 <= v_x42634267))) /\ (((v_z4266 = v_Pervasives__True) /\ (v_x42634267 >= v_i)) \/ ((v_z4266 = v_Pervasives__False) /\ (v_x42634267 < v_i)))))) -> ((v_z4266 = v_Pervasives__False) -> (forall v_l4359:top. (forall v_l4360:top. ((((v_Bytes__Length v_l4359) = v_i) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_l4359) (v_Bytes__B v_l4360)))) -> (((v_Bytes__Length v_l4359) = v_i) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_l4359) (v_Bytes__B v_l4360)))))))))))))
(* Querying for (l43964397:int){l43964397 = i} <: (l438843944398:int){pr_LessThanOrEqual(l438843944398, 8) /\ pr_LessThanOrEqual(0, l438843944398)} *)
(* query pr_LessThanOrEqual(l4399, 8) /\ pr_LessThanOrEqual(0, l4399) [HandshakeMessages.fs(152,14)] *)
goal g85_gl: (forall v_i:top. (((v_i <= 8) /\ (0 <= v_i)) -> (forall v_data:top. (forall v_z4368:top. (((v_i = v_i) /\ (exists v_x43654369:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x43654369) /\ (0 <= v_x43654369))) /\ (((v_z4368 = v_Pervasives__True) /\ (v_x43654369 >= v_i)) \/ ((v_z4368 = v_Pervasives__False) /\ (v_x43654369 < v_i)))))) -> ((v_z4368 = v_Pervasives__True) -> (forall v_l4399:top. ((v_l4399 = v_i) -> ((v_l4399 <= 8) /\ (0 <= v_l4399))))))))))
(* Querying for (l44014402:Bytes.bytes){l44014402 = data} <: (b43904403:Bytes.bytes){pr_GreaterThanOrEqual(Bytes.Length (b43904403), i)} *)
(* query pr_GreaterThanOrEqual(Bytes.Length (l4404), i) [HandshakeMessages.fs(152,14)] *)
goal g86_gl: (forall v_i:top. (((v_i <= 8) /\ (0 <= v_i)) -> (forall v_data:top. (forall v_z4368:top. (((v_i = v_i) /\ (exists v_x43654369:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x43654369) /\ (0 <= v_x43654369))) /\ (((v_z4368 = v_Pervasives__True) /\ (v_x43654369 >= v_i)) \/ ((v_z4368 = v_Pervasives__False) /\ (v_x43654369 < v_i)))))) -> ((v_z4368 = v_Pervasives__True) -> (forall v_l4404:top. ((v_l4404 = v_data) -> ((v_Bytes__Length v_l4404) >= v_i)))))))))
(* Querying for (l45244525:int){l45244525 = 2} <: (i451645224526:int){pr_LessThanOrEqual(0, i451645224526)} *)
(* query pr_LessThanOrEqual(0, l4527) [HandshakeMessages.fs(159,10)] *)
goal g87_gl: (forall v_data:top. (forall v_l4527:top. ((v_l4527 = 2) -> (0 <= v_l4527))))
(* Querying for (l45884589:Bytes.bytes){l45884589 = pv} <: (b458345864590:Bytes.bytes){Bytes.Length (b458345864590) = 2} *)
(* query Bytes.Length (l4591) = 2 [HandshakeMessages.fs(163,18)] *)
goal g88_gl: (forall v_data:top. (forall v_l4514:top. ((v_data = v_data) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l4514))) -> (forall v_data7:top. ((exists v_data45204568:top. (exists v_r45214569:top. ((v_data7 = (v_Tuples__Tup2 v_data45204568 v_r45214569)) /\ (((v_Bytes__Length v_data45204568) = 2) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_data45204568) (v_Bytes__B v_r45214569))))))) -> (((v_Error__Correct v_data7) = v_l4514) -> (((v_Error__Correct v_data7) = v_l4514) -> (forall v_pv:top. (forall v_r:top. ((((v_Bytes__Length v_pv) = 2) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_pv) (v_Bytes__B v_r)))) -> (((v_Tuples__Tup2 v_pv v_r) = v_data7) -> (((v_Tuples__Tup2 v_pv v_r) = v_data7) -> (forall v_l4591:top. ((v_l4591 = v_pv) -> ((v_Bytes__Length v_l4591) = 2))))))))))))))))
(* Querying for (msg) (pv8, r) : (pv:TLSConstants.PreProtocolVersion * r:Bytes.bytes){Bytes.B (data) = bop_ArrayAppend (TLSConstants.VersionBytes (pv), Bytes.B (r)) /\ TLSConstants.IsProtocolVersion(pv)} *)
(* query Bytes.B (data) = bop_ArrayAppend (TLSConstants.VersionBytes (pv8), Bytes.B (r)) /\ TLSConstants.IsProtocolVersion(pv8) [HandshakeMessages.fs(165,28)] *)
goal g89_gl: (forall v_data:top. (forall v_l4514:top. ((v_data = v_data) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l4514))) -> (forall v_data7:top. ((exists v_data45204568:top. (exists v_r45214569:top. ((v_data7 = (v_Tuples__Tup2 v_data45204568 v_r45214569)) /\ (((v_Bytes__Length v_data45204568) = 2) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_data45204568) (v_Bytes__B v_r45214569))))))) -> (((v_Error__Correct v_data7) = v_l4514) -> (((v_Error__Correct v_data7) = v_l4514) -> (forall v_pv:top. (forall v_r:top. ((((v_Bytes__Length v_pv) = 2) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_pv) (v_Bytes__B v_r)))) -> (((v_Tuples__Tup2 v_pv v_r) = v_data7) -> (((v_Tuples__Tup2 v_pv v_r) = v_data7) -> (forall v_l4581:top. ((v_pv = v_pv) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l4581))) -> (forall v_pv8:top. ((((v_Bytes__B v_pv) = (v_TLSConstants__VersionBytes v_pv8)) /\ (v_TLSConstants__IsProtocolVersion_p v_pv8)) -> (((v_Error__Correct v_pv8) = v_l4581) -> (((v_Error__Correct v_pv8) = v_l4581) -> (((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VersionBytes v_pv8) (v_Bytes__B v_r))) /\ (v_TLSConstants__IsProtocolVersion_p v_pv8))))))))))))))))))))))
(* Querying for (l46534654:int){l46534654 = 32} <: (i464546514655:int){pr_LessThanOrEqual(0, i464546514655)} *)
(* query pr_LessThanOrEqual(0, l4656) [HandshakeMessages.fs(167,27)] *)
goal g90_gl: (forall v_data:top. (forall v_l4656:top. ((v_l4656 = 32) -> (0 <= v_l4656))))
(* Querying for (data4649466546754688:Bytes.bytes * r4650466646764689:Bytes.bytes){Bytes.Length (data4649466546754688) = 32 /\ Bytes.B (data) = bop_ArrayAppend (Bytes.B (data4649466546754688), Bytes.B (r4650466646764689))} <: (cr466946794690:Bytes.bytes * r467146814691:Bytes.bytes){Bytes.B (data) = bop_ArrayAppend (Bytes.B (cr466946794690), Bytes.B (r467146814691)) /\ Bytes.Length (cr466946794690) = 32} *)
(* query Bytes.B (data) = bop_ArrayAppend (Bytes.B (l4692), Bytes.B (l4693)) /\ Bytes.Length (l4692) = 32 [HandshakeMessages.fs(167,27)] *)
goal g91_gl: (forall v_data:top. (forall v_l4672:top. ((v_data = v_data) -> (forall v_l4692:top. (forall v_l4693:top. ((((v_Bytes__Length v_l4692) = 32) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_l4692) (v_Bytes__B v_l4693)))) -> (((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_l4692) (v_Bytes__B v_l4693))) /\ ((v_Bytes__Length v_l4692) = 32))))))))
(* Querying for (l47044705:int){l47044705 = 2} <: (i469647024706:int){pr_LessThanOrEqual(i469647024706, 8) /\ pr_LessThanOrEqual(0, i469647024706)} *)
(* query pr_LessThanOrEqual(l4707, 8) /\ pr_LessThanOrEqual(0, l4707) [HandshakeMessages.fs(168,27)] *)
goal g92_gl: (forall v_data:top. (forall v_l4707:top. ((v_l4707 = 2) -> ((v_l4707 <= 8) /\ (0 <= v_l4707)))))
(* Querying for (l47534754:int){l47534754 = 1} <: (i474547514755:int){pr_LessThanOrEqual(i474547514755, 8) /\ pr_LessThanOrEqual(0, i474547514755)} *)
(* query pr_LessThanOrEqual(l4756, 8) /\ pr_LessThanOrEqual(0, l4756) [HandshakeMessages.fs(169,27)] *)
goal g93_gl: (forall v_data:top. (forall v_l4756:top. ((v_l4756 = 1) -> ((v_l4756 <= 8) /\ (0 <= v_l4756)))))
(* Querying for (l48034804:int){l48034804 = 1} <: (i479548014805:int){pr_LessThanOrEqual(i479548014805, 8) /\ pr_LessThanOrEqual(0, i479548014805)} *)
(* query pr_LessThanOrEqual(l4806, 8) /\ pr_LessThanOrEqual(0, l4806) [HandshakeMessages.fs(172,10)] *)
goal g94_gl: (forall v_data:top. (forall v_l4806:top. ((v_l4806 = 1) -> ((v_l4806 <= 8) /\ (0 <= v_l4806)))))
(* Querying for (msg) (sid, data10) : (sid:Bytes.bytes * r:Bytes.bytes){Bytes.B (data) = bop_ArrayAppend (TLSConstants.VLBytes (1, Bytes.B (sid)), Bytes.B (r)) /\ pr_LessThanOrEqual(Bytes.Length (sid), 32)} *)
(* query Bytes.B (data) = bop_ArrayAppend (TLSConstants.VLBytes (1, Bytes.B (sid)), Bytes.B (data10)) /\ pr_LessThanOrEqual(Bytes.Length (sid), 32) [HandshakeMessages.fs(177,16)] *)
goal g95_gl: (forall v_data:top. (forall v_l4793:top. ((v_data = v_data) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l4793))) -> (forall v_data9:top. ((exists v_data47994847:top. (exists v_r48004848:top. ((v_data9 = (v_Tuples__Tup2 v_data47994847 v_r48004848)) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_data47994847)) (v_Bytes__B v_r48004848)))))) -> (((v_Error__Correct v_data9) = v_l4793) -> (((v_Error__Correct v_data9) = v_l4793) -> (forall v_sid:top. (forall v_data10:top. (((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_sid)) (v_Bytes__B v_data10))) -> (((v_Tuples__Tup2 v_sid v_data10) = v_data9) -> (((v_Tuples__Tup2 v_sid v_data10) = v_data9) -> (forall v_z4865:top. (((32 = 32) /\ (exists v_x48624866:top. (((v_sid = v_sid) /\ (((v_Bytes__Length v_sid) = v_x48624866) /\ (0 <= v_x48624866))) /\ (((v_z4865 = v_Pervasives__True) /\ (v_x48624866 <= 32)) \/ ((v_z4865 = v_Pervasives__False) /\ (v_x48624866 > 32)))))) -> ((v_z4865 = v_Pervasives__True) -> (((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_sid)) (v_Bytes__B v_data10))) /\ ((v_Bytes__Length v_sid) <= 32))))))))))))))))))
(* Querying for (sid4893489849254938:Bytes.bytes * r4895489949264939:Bytes.bytes){Bytes.B (data) = bop_ArrayAppend (TLSConstants.VLBytes (1, Bytes.B (sid4893489849254938)), Bytes.B (r4895489949264939)) /\ pr_LessThanOrEqual(Bytes.Length (sid4893489849254938), 32)} <: (sid49294940:Bytes.bytes * r49314941:Bytes.bytes){Bytes.B (data) = bop_ArrayAppend (TLSConstants.VLBytes (1, Bytes.B (sid49294940)), Bytes.B (r49314941)) /\ pr_LessThanOrEqual(Bytes.Length (sid49294940), 32)} *)
(* query Bytes.B (data) = bop_ArrayAppend (TLSConstants.VLBytes (1, Bytes.B (l4942)), Bytes.B (l4943)) /\ pr_LessThanOrEqual(Bytes.Length (l4942), 32) [HandshakeMessages.fs(179,16)] *)
goal g96_gl: (forall v_data:top. (forall v_l4793:top. ((v_data = v_data) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l4793))) -> (forall v_data9:top. ((exists v_data47994847:top. (exists v_r48004848:top. ((v_data9 = (v_Tuples__Tup2 v_data47994847 v_r48004848)) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_data47994847)) (v_Bytes__B v_r48004848)))))) -> (((v_Error__Correct v_data9) = v_l4793) -> (((v_Error__Correct v_data9) = v_l4793) -> (forall v_sid:top. (forall v_data10:top. (((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_sid)) (v_Bytes__B v_data10))) -> (((v_Tuples__Tup2 v_sid v_data10) = v_data9) -> (((v_Tuples__Tup2 v_sid v_data10) = v_data9) -> (forall v_z4865:top. (((32 = 32) /\ (exists v_x48624866:top. (((v_sid = v_sid) /\ (((v_Bytes__Length v_sid) = v_x48624866) /\ (0 <= v_x48624866))) /\ (((v_z4865 = v_Pervasives__True) /\ (v_x48624866 <= 32)) \/ ((v_z4865 = v_Pervasives__False) /\ (v_x48624866 > 32)))))) -> ((v_z4865 = v_Pervasives__False) -> (forall v_l4942:top. (forall v_l4943:top. ((((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_l4942)) (v_Bytes__B v_l4943))) /\ ((v_Bytes__Length v_l4942) <= 32)) -> (((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_l4942)) (v_Bytes__B v_l4943))) /\ ((v_Bytes__Length v_l4942) <= 32)))))))))))))))))))))
(* Querying for (l505150645066507050775085:TLSConstants.cipherSuite list * l505250655067507150785086:Bytes.bytes){(l505150645066507050775085, l505250655067507150785086) = (cs, r) /\ (l505150645066507050775085, l505250655067507150785086) = aout} <: (TLSConstants.cipherSuite list * r507550825088:Bytes.bytes){(?csb. Bytes.B (data) = bop_ArrayAppend (TLSConstants.VLBytes (2, Bytes.B (csb)), Bytes.B (r507550825088)))} *)
(* query (?csb. Bytes.B (data) = bop_ArrayAppend (TLSConstants.VLBytes (2, Bytes.B (csb)), Bytes.B (l5090))) [HandshakeMessages.fs(189,50)] *)
goal g97_gl: (forall v_data:top. (forall v_d:top. ((v_data = v_data) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_d))) -> (forall v_data11:top. ((exists v_cs49484991:top. (exists v_r49494992:top. ((v_data11 = (v_Tuples__Tup2 v_cs49484991 v_r49494992)) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_cs49484991)) (v_Bytes__B v_r49494992)))))) -> (((v_Error__Correct v_data11) = v_d) -> (((v_Error__Correct v_data11) = v_d) -> (forall v_csb:top. (forall v_r:top. (((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_csb)) (v_Bytes__B v_r))) -> (((v_Tuples__Tup2 v_csb v_r) = v_data11) -> (((v_Tuples__Tup2 v_csb v_r) = v_data11) -> (forall v_l5004:top. ((v_csb = v_csb) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l5004))) -> (forall v_cs:top. (((v_Error__Correct v_cs) = v_l5004) -> (((v_Error__Correct v_cs) = v_l5004) -> (forall v_aout:top. ((exists v_l5051:top. (exists v_l5052:top. ((v_aout = (v_Tuples__Tup2 v_l5051 v_l5052)) /\ ((v_Tuples__Tup2 v_l5051 v_l5052) = (v_Tuples__Tup2 v_cs v_r))))) -> ((v_aout = (v_Tuples__Tup2 v_cs v_r)) -> (forall v_l5076:top. (((v_aout = v_aout) /\ (v_l5076 = (v_Error__Correct v_aout))) -> (forall v_l5089:top. (forall v_l5090:top. ((((v_Tuples__Tup2 v_l5089 v_l5090) = (v_Tuples__Tup2 v_cs v_r)) /\ ((v_Tuples__Tup2 v_l5089 v_l5090) = v_aout)) -> (exists v_csb_2:top. ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_csb_2)) (v_Bytes__B v_l5090)))))))))))))))))))))))))))))))
(* Querying for (l51705173517851875197:(c51715174517951885198:TLSConstants.PreCompression){TLSConstants.IsCompression(c51715174517951885198)} list * l51725175518051895199:Bytes.bytes){(l51705173517851875197, l51725175518051895199) = (cp, r)} <: ((c518451935201:TLSConstants.PreCompression){TLSConstants.IsCompression(c518451935201)} list * r518551945202:Bytes.bytes){(?cpb. Bytes.B (data) = bop_ArrayAppend (TLSConstants.VLBytes (1, Bytes.B (cpb)), Bytes.B (r518551945202)))} *)
(* query (?cpb. Bytes.B (data) = bop_ArrayAppend (TLSConstants.VLBytes (1, Bytes.B (cpb)), Bytes.B (l5204))) [HandshakeMessages.fs(198,12)] *)
goal g98_gl: (forall v_data:top. (forall v_d:top. ((v_data = v_data) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_d))) -> (forall v_data12:top. ((exists v_cp50955138:top. (exists v_r50965139:top. ((v_data12 = (v_Tuples__Tup2 v_cp50955138 v_r50965139)) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_cp50955138)) (v_Bytes__B v_r50965139)))))) -> (((v_Error__Correct v_data12) = v_d) -> (((v_Error__Correct v_data12) = v_d) -> (forall v_cpb:top. (forall v_r:top. (((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_cpb)) (v_Bytes__B v_r))) -> (((v_Tuples__Tup2 v_cpb v_r) = v_data12) -> (((v_Tuples__Tup2 v_cpb v_r) = v_data12) -> (forall v_cp:top. ((v_cpb = v_cpb) -> (forall v_l5186:top. ((((v_Tuples__Tup2 v_cp v_r) = (v_Tuples__Tup2 v_cp v_r)) /\ (v_l5186 = (v_Error__Correct (v_Tuples__Tup2 v_cp v_r)))) -> (forall v_l5203:top. (forall v_l5204:top. (((v_Tuples__Tup2 v_l5203 v_l5204) = (v_Tuples__Tup2 v_cp v_r)) -> (exists v_cpb_2:top. ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_cpb_2)) (v_Bytes__B v_l5204))))))))))))))))))))))))
(* Querying for (msg) (pv, cr, sid, cs, cp, data22) : (pv:TLSConstants.PreProtocolVersion * cr:Bytes.bytes * sid:Bytes.bytes * TLSConstants.cipherSuite list * (c:TLSConstants.PreCompression){TLSConstants.IsCompression(c)} list * ext:Bytes.bytes){(?cs'. (?cm'. MessageBytes (HT_client_hello (), Bytes.B (data)) = ClientHelloMsg (pv, cr, sid, cs', cm', ext))) /\ TLSConstants.IsProtocolVersion(pv) /\ Bytes.Length (cr) = 32 /\ pr_LessThanOrEqual(Bytes.Length (sid), 32)} *)
(* query (?cs'. (?cm'. MessageBytes (HT_client_hello (), Bytes.B (data)) = ClientHelloMsg (pv, cr, sid, cs', cm', data22))) /\ TLSConstants.IsProtocolVersion(pv) /\ Bytes.Length (cr) = 32 /\ pr_LessThanOrEqual(Bytes.Length (sid), 32) [HandshakeMessages.fs(231,8)] *)
goal g99_gl: (forall v_data:top. (forall v_l5211:top. ((v_data = v_data) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l5211))) -> (forall v_data13:top. ((exists v_pv52155262:top. (exists v_r52165264:top. ((v_data13 = (v_Tuples__Tup2 v_pv52155262 v_r52165264)) /\ (((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VersionBytes v_pv52155262) (v_Bytes__B v_r52165264))) /\ (v_TLSConstants__IsProtocolVersion_p v_pv52155262))))) -> (((v_Error__Correct v_data13) = v_l5211) -> (((v_Error__Correct v_data13) = v_l5211) -> (forall v_pv:top. (forall v_data14:top. ((((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VersionBytes v_pv) (v_Bytes__B v_data14))) /\ (v_TLSConstants__IsProtocolVersion_p v_pv)) -> (((v_Tuples__Tup2 v_pv v_data14) = v_data13) -> (((v_Tuples__Tup2 v_pv v_data14) = v_data13) -> (forall v_l5277:top. ((v_data14 = v_data14) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l5277))) -> (forall v_data15:top. ((exists v_cr52815328:top. (exists v_r52825330:top. ((v_data15 = (v_Tuples__Tup2 v_cr52815328 v_r52825330)) /\ (((v_Bytes__B v_data14) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_cr52815328) (v_Bytes__B v_r52825330))) /\ ((v_Bytes__Length v_cr52815328) = 32))))) -> (((v_Error__Correct v_data15) = v_l5277) -> (((v_Error__Correct v_data15) = v_l5277) -> (forall v_cr:top. (forall v_data16:top. ((((v_Bytes__B v_data14) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_cr) (v_Bytes__B v_data16))) /\ ((v_Bytes__Length v_cr) = 32)) -> (((v_Tuples__Tup2 v_cr v_data16) = v_data15) -> (((v_Tuples__Tup2 v_cr v_data16) = v_data15) -> (forall v_l5343:top. ((v_data16 = v_data16) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l5343))) -> (forall v_data17:top. ((exists v_sid53475394:top. (exists v_r53485396:top. ((v_data17 = (v_Tuples__Tup2 v_sid53475394 v_r53485396)) /\ (((v_Bytes__B v_data16) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_sid53475394)) (v_Bytes__B v_r53485396))) /\ ((v_Bytes__Length v_sid53475394) <= 32))))) -> (((v_Error__Correct v_data17) = v_l5343) -> (((v_Error__Correct v_data17) = v_l5343) -> (forall v_sid:top. (forall v_data18:top. ((((v_Bytes__B v_data16) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_sid)) (v_Bytes__B v_data18))) /\ ((v_Bytes__Length v_sid) <= 32)) -> (((v_Tuples__Tup2 v_sid v_data18) = v_data17) -> (((v_Tuples__Tup2 v_sid v_data18) = v_data17) -> (forall v_l5409:top. ((v_data18 = v_data18) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l5409))) -> (forall v_data19:top. ((exists v_cs54135456:top. (exists v_r54145457:top. ((v_data19 = (v_Tuples__Tup2 v_cs54135456 v_r54145457)) /\ (exists v_csb:top. ((v_Bytes__B v_data18) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_csb)) (v_Bytes__B v_r54145457))))))) -> (((v_Error__Correct v_data19) = v_l5409) -> (((v_Error__Correct v_data19) = v_l5409) -> (forall v_cs:top. (forall v_data20:top. ((exists v_csb:top. ((v_Bytes__B v_data18) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_csb)) (v_Bytes__B v_data20)))) -> (((v_Tuples__Tup2 v_cs v_data20) = v_data19) -> (((v_Tuples__Tup2 v_cs v_data20) = v_data19) -> (forall v_l5469:top. ((v_data20 = v_data20) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l5469))) -> (forall v_data21:top. ((exists v_cp54735521:top. (exists v_r54745523:top. ((v_data21 = (v_Tuples__Tup2 v_cp54735521 v_r54745523)) /\ (exists v_cpb:top. ((v_Bytes__B v_data20) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_cpb)) (v_Bytes__B v_r54745523))))))) -> (((v_Error__Correct v_data21) = v_l5469) -> (((v_Error__Correct v_data21) = v_l5469) -> (forall v_cp:top. (forall v_data22:top. ((exists v_cpb:top. ((v_Bytes__B v_data20) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_cpb)) (v_Bytes__B v_data22)))) -> (((v_Tuples__Tup2 v_cp v_data22) = v_data21) -> (((v_Tuples__Tup2 v_cp v_data22) = v_data21) -> ((((exists v_cs':top. (exists v_cm':top. ((v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_client_hello ) (v_Bytes__B v_data)) = (v_HandshakeMessages__ClientHelloMsg v_pv v_cr v_sid v_cs' v_cm' v_data22)))) /\ (v_TLSConstants__IsProtocolVersion_p v_pv)) /\ ((v_Bytes__Length v_cr) = 32)) /\ ((v_Bytes__Length v_sid) <= 32)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(* Querying for (l56055606:int){l56055606 = 2} <: (i55925607:int){pr_LessThanOrEqual(0, i55925607)} *)
(* query pr_LessThanOrEqual(0, l5608) [HandshakeMessages.fs(236,35)] *)
goal g100_gl: (forall v_data:top. (forall v_z5571:top. (((34 = 34) /\ (exists v_x55685572:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x55685572) /\ (0 <= v_x55685572))) /\ (((v_z5571 = v_Pervasives__True) /\ (v_x55685572 >= 34)) \/ ((v_z5571 = v_Pervasives__False) /\ (v_x55685572 < 34)))))) -> ((v_z5571 = v_Pervasives__True) -> (forall v_l5608:top. ((v_l5608 = 2) -> (0 <= v_l5608)))))))
(* Querying for (l56105611:int){l56105611 = 32} <: (j55945612:int){pr_GreaterThanOrEqual(Bytes.Length (data), bop_Addition (2, j55945612)) /\ pr_LessThanOrEqual(0, j55945612)} *)
(* query pr_GreaterThanOrEqual(Bytes.Length (data), bop_Addition (2, l5613)) /\ pr_LessThanOrEqual(0, l5613) [HandshakeMessages.fs(236,35)] *)
goal g101_gl: (forall v_data:top. (forall v_z5571:top. (((34 = 34) /\ (exists v_x55685572:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x55685572) /\ (0 <= v_x55685572))) /\ (((v_z5571 = v_Pervasives__True) /\ (v_x55685572 >= 34)) \/ ((v_z5571 = v_Pervasives__False) /\ (v_x55685572 < 34)))))) -> ((v_z5571 = v_Pervasives__True) -> (forall v_l5613:top. ((v_l5613 = 32) -> (((v_Bytes__Length v_data) >= (2 + v_l5613)) /\ (0 <= v_l5613))))))))
(* Querying for (l56225623:Bytes.bytes){l56225623 = clVerBytes} <: (b561756205624:Bytes.bytes){Bytes.Length (b561756205624) = 2} *)
(* query Bytes.Length (l5625) = 2 [HandshakeMessages.fs(237,14)] *)
goal g102_gl: (forall v_data:top. (forall v_z5571:top. (((34 = 34) /\ (exists v_x55685572:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x55685572) /\ (0 <= v_x55685572))) /\ (((v_z5571 = v_Pervasives__True) /\ (v_x55685572 >= 34)) \/ ((v_z5571 = v_Pervasives__False) /\ (v_x55685572 < 34)))))) -> ((v_z5571 = v_Pervasives__True) -> (forall v_clVerBytes:top. (forall v_cr:top. (forall v_data23:top. ((((v_Bytes__Length v_clVerBytes) = 2) /\ (((v_Bytes__Length v_cr) = 32) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_clVerBytes) (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_cr) (v_Bytes__B v_data23)))))) -> ((32 = 32) -> (forall v_l5625:top. ((v_l5625 = v_clVerBytes) -> ((v_Bytes__Length v_l5625) = 2))))))))))))
(* Querying for (l57035704:int){l57035704 = 1} <: (l569557015705:int){pr_LessThanOrEqual(l569557015705, 8) /\ pr_LessThanOrEqual(0, l569557015705)} *)
(* query pr_LessThanOrEqual(l5706, 8) /\ pr_LessThanOrEqual(0, l5706) [HandshakeMessages.fs(241,18)] *)
goal g103_gl: (forall v_data:top. (forall v_z5571:top. (((34 = 34) /\ (exists v_x55685572:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x55685572) /\ (0 <= v_x55685572))) /\ (((v_z5571 = v_Pervasives__True) /\ (v_x55685572 >= 34)) \/ ((v_z5571 = v_Pervasives__False) /\ (v_x55685572 < 34)))))) -> ((v_z5571 = v_Pervasives__True) -> (forall v_clVerBytes:top. (forall v_cr:top. (forall v_data23:top. ((((v_Bytes__Length v_clVerBytes) = 2) /\ (((v_Bytes__Length v_cr) = 32) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_clVerBytes) (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_cr) (v_Bytes__B v_data23)))))) -> ((32 = 32) -> (forall v_l5615:top. ((v_clVerBytes = v_clVerBytes) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l5615))) -> (forall v_cv:top. ((((v_Bytes__B v_clVerBytes) = (v_TLSConstants__VersionBytes v_cv)) /\ (v_TLSConstants__IsProtocolVersion_p v_cv)) -> (((v_Error__Correct v_cv) = v_l5615) -> (((v_Error__Correct v_cv) = v_l5615) -> (forall v_z5675:top. (((1 = 1) /\ (exists v_x56725676:top. (((v_data23 = v_data23) /\ (((v_Bytes__Length v_data23) = v_x56725676) /\ (0 <= v_x56725676))) /\ (((v_z5675 = v_Pervasives__True) /\ (v_x56725676 >= 1)) \/ ((v_z5675 = v_Pervasives__False) /\ (v_x56725676 < 1)))))) -> ((v_z5675 = v_Pervasives__True) -> (forall v_l5706:top. ((v_l5706 = 1) -> ((v_l5706 <= 8) /\ (0 <= v_l5706)))))))))))))))))))))))
(* Querying for (l57085709:Bytes.bytes){l57085709 = data23} <: (b56975710:Bytes.bytes){pr_GreaterThanOrEqual(Bytes.Length (b56975710), 1)} *)
(* query pr_GreaterThanOrEqual(Bytes.Length (l5711), 1) [HandshakeMessages.fs(241,18)] *)
goal g104_gl: (forall v_data:top. (forall v_z5571:top. (((34 = 34) /\ (exists v_x55685572:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x55685572) /\ (0 <= v_x55685572))) /\ (((v_z5571 = v_Pervasives__True) /\ (v_x55685572 >= 34)) \/ ((v_z5571 = v_Pervasives__False) /\ (v_x55685572 < 34)))))) -> ((v_z5571 = v_Pervasives__True) -> (forall v_clVerBytes:top. (forall v_cr:top. (forall v_data23:top. ((((v_Bytes__Length v_clVerBytes) = 2) /\ (((v_Bytes__Length v_cr) = 32) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_clVerBytes) (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_cr) (v_Bytes__B v_data23)))))) -> ((32 = 32) -> (forall v_l5615:top. ((v_clVerBytes = v_clVerBytes) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l5615))) -> (forall v_cv:top. ((((v_Bytes__B v_clVerBytes) = (v_TLSConstants__VersionBytes v_cv)) /\ (v_TLSConstants__IsProtocolVersion_p v_cv)) -> (((v_Error__Correct v_cv) = v_l5615) -> (((v_Error__Correct v_cv) = v_l5615) -> (forall v_z5675:top. (((1 = 1) /\ (exists v_x56725676:top. (((v_data23 = v_data23) /\ (((v_Bytes__Length v_data23) = v_x56725676) /\ (0 <= v_x56725676))) /\ (((v_z5675 = v_Pervasives__True) /\ (v_x56725676 >= 1)) \/ ((v_z5675 = v_Pervasives__False) /\ (v_x56725676 < 1)))))) -> ((v_z5675 = v_Pervasives__True) -> (forall v_l5711:top. ((v_l5711 = v_data23) -> ((v_Bytes__Length v_l5711) >= 1))))))))))))))))))))))
(* Querying for (l58175818:int){l58175818 = 2} <: (l580958155819:int){pr_LessThanOrEqual(l580958155819, 8) /\ pr_LessThanOrEqual(0, l580958155819)} *)
(* query pr_LessThanOrEqual(l5820, 8) /\ pr_LessThanOrEqual(0, l5820) [HandshakeMessages.fs(247,26)] *)
goal g105_gl: (forall v_data:top. (forall v_z5571:top. (((34 = 34) /\ (exists v_x55685572:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x55685572) /\ (0 <= v_x55685572))) /\ (((v_z5571 = v_Pervasives__True) /\ (v_x55685572 >= 34)) \/ ((v_z5571 = v_Pervasives__False) /\ (v_x55685572 < 34)))))) -> ((v_z5571 = v_Pervasives__True) -> (forall v_clVerBytes:top. (forall v_cr:top. (forall v_data23:top. ((((v_Bytes__Length v_clVerBytes) = 2) /\ (((v_Bytes__Length v_cr) = 32) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_clVerBytes) (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_cr) (v_Bytes__B v_data23)))))) -> ((32 = 32) -> (forall v_l5615:top. ((v_clVerBytes = v_clVerBytes) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l5615))) -> (forall v_cv:top. ((((v_Bytes__B v_clVerBytes) = (v_TLSConstants__VersionBytes v_cv)) /\ (v_TLSConstants__IsProtocolVersion_p v_cv)) -> (((v_Error__Correct v_cv) = v_l5615) -> (((v_Error__Correct v_cv) = v_l5615) -> (forall v_z5675:top. (((1 = 1) /\ (exists v_x56725676:top. (((v_data23 = v_data23) /\ (((v_Bytes__Length v_data23) = v_x56725676) /\ (0 <= v_x56725676))) /\ (((v_z5675 = v_Pervasives__True) /\ (v_x56725676 >= 1)) \/ ((v_z5675 = v_Pervasives__False) /\ (v_x56725676 < 1)))))) -> ((v_z5675 = v_Pervasives__True) -> (forall v_l5693:top. ((v_data23 = v_data23) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l5693))) -> (forall v_res:top. ((exists v_b156995748:top. (exists v_b257005749:top. ((v_res = (v_Tuples__Tup2 v_b156995748 v_b257005749)) /\ ((v_Bytes__B v_data23) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_b156995748)) (v_Bytes__B v_b257005749)))))) -> (((v_Error__Correct v_res) = v_l5693) -> (((v_Error__Correct v_res) = v_l5693) -> (forall v_sid:top. (forall v_data24:top. (((v_Bytes__B v_data23) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_sid)) (v_Bytes__B v_data24))) -> (((v_Tuples__Tup2 v_sid v_data24) = v_res) -> (((v_Tuples__Tup2 v_sid v_data24) = v_res) -> (forall v_z5766:top. (((32 = 32) /\ (exists v_x57635767:top. (((v_sid = v_sid) /\ (((v_Bytes__Length v_sid) = v_x57635767) /\ (0 <= v_x57635767))) /\ (((v_z5766 = v_Pervasives__True) /\ (v_x57635767 <= 32)) \/ ((v_z5766 = v_Pervasives__False) /\ (v_x57635767 > 32)))))) -> ((v_z5766 = v_Pervasives__True) -> (forall v_z5789:top. (((2 = 2) /\ (exists v_x57865790:top. (((v_data24 = v_data24) /\ (((v_Bytes__Length v_data24) = v_x57865790) /\ (0 <= v_x57865790))) /\ (((v_z5789 = v_Pervasives__True) /\ (v_x57865790 >= 2)) \/ ((v_z5789 = v_Pervasives__False) /\ (v_x57865790 < 2)))))) -> ((v_z5789 = v_Pervasives__True) -> (forall v_l5820:top. ((v_l5820 = 2) -> ((v_l5820 <= 8) /\ (0 <= v_l5820)))))))))))))))))))))))))))))))))))))))))
(* Querying for (l58225823:Bytes.bytes){l58225823 = data24} <: (b58115824:Bytes.bytes){pr_GreaterThanOrEqual(Bytes.Length (b58115824), 2)} *)
(* query pr_GreaterThanOrEqual(Bytes.Length (l5825), 2) [HandshakeMessages.fs(247,26)] *)
goal g106_gl: (forall v_data:top. (forall v_z5571:top. (((34 = 34) /\ (exists v_x55685572:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x55685572) /\ (0 <= v_x55685572))) /\ (((v_z5571 = v_Pervasives__True) /\ (v_x55685572 >= 34)) \/ ((v_z5571 = v_Pervasives__False) /\ (v_x55685572 < 34)))))) -> ((v_z5571 = v_Pervasives__True) -> (forall v_clVerBytes:top. (forall v_cr:top. (forall v_data23:top. ((((v_Bytes__Length v_clVerBytes) = 2) /\ (((v_Bytes__Length v_cr) = 32) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_clVerBytes) (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_cr) (v_Bytes__B v_data23)))))) -> ((32 = 32) -> (forall v_l5615:top. ((v_clVerBytes = v_clVerBytes) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l5615))) -> (forall v_cv:top. ((((v_Bytes__B v_clVerBytes) = (v_TLSConstants__VersionBytes v_cv)) /\ (v_TLSConstants__IsProtocolVersion_p v_cv)) -> (((v_Error__Correct v_cv) = v_l5615) -> (((v_Error__Correct v_cv) = v_l5615) -> (forall v_z5675:top. (((1 = 1) /\ (exists v_x56725676:top. (((v_data23 = v_data23) /\ (((v_Bytes__Length v_data23) = v_x56725676) /\ (0 <= v_x56725676))) /\ (((v_z5675 = v_Pervasives__True) /\ (v_x56725676 >= 1)) \/ ((v_z5675 = v_Pervasives__False) /\ (v_x56725676 < 1)))))) -> ((v_z5675 = v_Pervasives__True) -> (forall v_l5693:top. ((v_data23 = v_data23) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l5693))) -> (forall v_res:top. ((exists v_b156995748:top. (exists v_b257005749:top. ((v_res = (v_Tuples__Tup2 v_b156995748 v_b257005749)) /\ ((v_Bytes__B v_data23) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_b156995748)) (v_Bytes__B v_b257005749)))))) -> (((v_Error__Correct v_res) = v_l5693) -> (((v_Error__Correct v_res) = v_l5693) -> (forall v_sid:top. (forall v_data24:top. (((v_Bytes__B v_data23) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_sid)) (v_Bytes__B v_data24))) -> (((v_Tuples__Tup2 v_sid v_data24) = v_res) -> (((v_Tuples__Tup2 v_sid v_data24) = v_res) -> (forall v_z5766:top. (((32 = 32) /\ (exists v_x57635767:top. (((v_sid = v_sid) /\ (((v_Bytes__Length v_sid) = v_x57635767) /\ (0 <= v_x57635767))) /\ (((v_z5766 = v_Pervasives__True) /\ (v_x57635767 <= 32)) \/ ((v_z5766 = v_Pervasives__False) /\ (v_x57635767 > 32)))))) -> ((v_z5766 = v_Pervasives__True) -> (forall v_z5789:top. (((2 = 2) /\ (exists v_x57865790:top. (((v_data24 = v_data24) /\ (((v_Bytes__Length v_data24) = v_x57865790) /\ (0 <= v_x57865790))) /\ (((v_z5789 = v_Pervasives__True) /\ (v_x57865790 >= 2)) \/ ((v_z5789 = v_Pervasives__False) /\ (v_x57865790 < 2)))))) -> ((v_z5789 = v_Pervasives__True) -> (forall v_l5825:top. ((v_l5825 = v_data24) -> ((v_Bytes__Length v_l5825) >= 2))))))))))))))))))))))))))))))))))))))))
(* Querying for (l59545955:int){l59545955 = 1} <: (l594659525956:int){pr_LessThanOrEqual(l594659525956, 8) /\ pr_LessThanOrEqual(0, l594659525956)} *)
(* query pr_LessThanOrEqual(l5957, 8) /\ pr_LessThanOrEqual(0, l5957) [HandshakeMessages.fs(255,30)] *)
goal g107_gl: (forall v_data:top. (forall v_z5571:top. (((34 = 34) /\ (exists v_x55685572:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x55685572) /\ (0 <= v_x55685572))) /\ (((v_z5571 = v_Pervasives__True) /\ (v_x55685572 >= 34)) \/ ((v_z5571 = v_Pervasives__False) /\ (v_x55685572 < 34)))))) -> ((v_z5571 = v_Pervasives__True) -> (forall v_clVerBytes:top. (forall v_cr:top. (forall v_data23:top. ((((v_Bytes__Length v_clVerBytes) = 2) /\ (((v_Bytes__Length v_cr) = 32) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_clVerBytes) (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_cr) (v_Bytes__B v_data23)))))) -> ((32 = 32) -> (forall v_l5615:top. ((v_clVerBytes = v_clVerBytes) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l5615))) -> (forall v_cv:top. ((((v_Bytes__B v_clVerBytes) = (v_TLSConstants__VersionBytes v_cv)) /\ (v_TLSConstants__IsProtocolVersion_p v_cv)) -> (((v_Error__Correct v_cv) = v_l5615) -> (((v_Error__Correct v_cv) = v_l5615) -> (forall v_z5675:top. (((1 = 1) /\ (exists v_x56725676:top. (((v_data23 = v_data23) /\ (((v_Bytes__Length v_data23) = v_x56725676) /\ (0 <= v_x56725676))) /\ (((v_z5675 = v_Pervasives__True) /\ (v_x56725676 >= 1)) \/ ((v_z5675 = v_Pervasives__False) /\ (v_x56725676 < 1)))))) -> ((v_z5675 = v_Pervasives__True) -> (forall v_l5693:top. ((v_data23 = v_data23) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l5693))) -> (forall v_res:top. ((exists v_b156995748:top. (exists v_b257005749:top. ((v_res = (v_Tuples__Tup2 v_b156995748 v_b257005749)) /\ ((v_Bytes__B v_data23) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_b156995748)) (v_Bytes__B v_b257005749)))))) -> (((v_Error__Correct v_res) = v_l5693) -> (((v_Error__Correct v_res) = v_l5693) -> (forall v_sid:top. (forall v_data24:top. (((v_Bytes__B v_data23) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_sid)) (v_Bytes__B v_data24))) -> (((v_Tuples__Tup2 v_sid v_data24) = v_res) -> (((v_Tuples__Tup2 v_sid v_data24) = v_res) -> (forall v_z5766:top. (((32 = 32) /\ (exists v_x57635767:top. (((v_sid = v_sid) /\ (((v_Bytes__Length v_sid) = v_x57635767) /\ (0 <= v_x57635767))) /\ (((v_z5766 = v_Pervasives__True) /\ (v_x57635767 <= 32)) \/ ((v_z5766 = v_Pervasives__False) /\ (v_x57635767 > 32)))))) -> ((v_z5766 = v_Pervasives__True) -> (forall v_z5789:top. (((2 = 2) /\ (exists v_x57865790:top. (((v_data24 = v_data24) /\ (((v_Bytes__Length v_data24) = v_x57865790) /\ (0 <= v_x57865790))) /\ (((v_z5789 = v_Pervasives__True) /\ (v_x57865790 >= 2)) \/ ((v_z5789 = v_Pervasives__False) /\ (v_x57865790 < 2)))))) -> ((v_z5789 = v_Pervasives__True) -> (forall v_l5807:top. ((v_data24 = v_data24) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l5807))) -> (forall v_res25:top. ((exists v_b158135862:top. (exists v_b258145863:top. ((v_res25 = (v_Tuples__Tup2 v_b158135862 v_b258145863)) /\ ((v_Bytes__B v_data24) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_b158135862)) (v_Bytes__B v_b258145863)))))) -> (((v_Error__Correct v_res25) = v_l5807) -> (((v_Error__Correct v_res25) = v_l5807) -> (forall v_clCiphsuitesBytes:top. (forall v_data26:top. (((v_Bytes__B v_data24) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_clCiphsuitesBytes)) (v_Bytes__B v_data26))) -> (((v_Tuples__Tup2 v_clCiphsuitesBytes v_data26) = v_res25) -> (((v_Tuples__Tup2 v_clCiphsuitesBytes v_data26) = v_res25) -> (forall v_l5875:top. ((v_clCiphsuitesBytes = v_clCiphsuitesBytes) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l5875))) -> (forall v_clientCipherSuites:top. (((v_Error__Correct v_clientCipherSuites) = v_l5875) -> (((v_Error__Correct v_clientCipherSuites) = v_l5875) -> (forall v_z5926:top. (((1 = 1) /\ (exists v_x59235927:top. (((v_data26 = v_data26) /\ (((v_Bytes__Length v_data26) = v_x59235927) /\ (0 <= v_x59235927))) /\ (((v_z5926 = v_Pervasives__True) /\ (v_x59235927 >= 1)) \/ ((v_z5926 = v_Pervasives__False) /\ (v_x59235927 < 1)))))) -> ((v_z5926 = v_Pervasives__True) -> (forall v_l5957:top. ((v_l5957 = 1) -> ((v_l5957 <= 8) /\ (0 <= v_l5957))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(* Querying for (l59595960:Bytes.bytes){l59595960 = data26} <: (b59485961:Bytes.bytes){pr_GreaterThanOrEqual(Bytes.Length (b59485961), 1)} *)
(* query pr_GreaterThanOrEqual(Bytes.Length (l5962), 1) [HandshakeMessages.fs(255,30)] *)
goal g108_gl: (forall v_data:top. (forall v_z5571:top. (((34 = 34) /\ (exists v_x55685572:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x55685572) /\ (0 <= v_x55685572))) /\ (((v_z5571 = v_Pervasives__True) /\ (v_x55685572 >= 34)) \/ ((v_z5571 = v_Pervasives__False) /\ (v_x55685572 < 34)))))) -> ((v_z5571 = v_Pervasives__True) -> (forall v_clVerBytes:top. (forall v_cr:top. (forall v_data23:top. ((((v_Bytes__Length v_clVerBytes) = 2) /\ (((v_Bytes__Length v_cr) = 32) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_clVerBytes) (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_cr) (v_Bytes__B v_data23)))))) -> ((32 = 32) -> (forall v_l5615:top. ((v_clVerBytes = v_clVerBytes) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l5615))) -> (forall v_cv:top. ((((v_Bytes__B v_clVerBytes) = (v_TLSConstants__VersionBytes v_cv)) /\ (v_TLSConstants__IsProtocolVersion_p v_cv)) -> (((v_Error__Correct v_cv) = v_l5615) -> (((v_Error__Correct v_cv) = v_l5615) -> (forall v_z5675:top. (((1 = 1) /\ (exists v_x56725676:top. (((v_data23 = v_data23) /\ (((v_Bytes__Length v_data23) = v_x56725676) /\ (0 <= v_x56725676))) /\ (((v_z5675 = v_Pervasives__True) /\ (v_x56725676 >= 1)) \/ ((v_z5675 = v_Pervasives__False) /\ (v_x56725676 < 1)))))) -> ((v_z5675 = v_Pervasives__True) -> (forall v_l5693:top. ((v_data23 = v_data23) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l5693))) -> (forall v_res:top. ((exists v_b156995748:top. (exists v_b257005749:top. ((v_res = (v_Tuples__Tup2 v_b156995748 v_b257005749)) /\ ((v_Bytes__B v_data23) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_b156995748)) (v_Bytes__B v_b257005749)))))) -> (((v_Error__Correct v_res) = v_l5693) -> (((v_Error__Correct v_res) = v_l5693) -> (forall v_sid:top. (forall v_data24:top. (((v_Bytes__B v_data23) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_sid)) (v_Bytes__B v_data24))) -> (((v_Tuples__Tup2 v_sid v_data24) = v_res) -> (((v_Tuples__Tup2 v_sid v_data24) = v_res) -> (forall v_z5766:top. (((32 = 32) /\ (exists v_x57635767:top. (((v_sid = v_sid) /\ (((v_Bytes__Length v_sid) = v_x57635767) /\ (0 <= v_x57635767))) /\ (((v_z5766 = v_Pervasives__True) /\ (v_x57635767 <= 32)) \/ ((v_z5766 = v_Pervasives__False) /\ (v_x57635767 > 32)))))) -> ((v_z5766 = v_Pervasives__True) -> (forall v_z5789:top. (((2 = 2) /\ (exists v_x57865790:top. (((v_data24 = v_data24) /\ (((v_Bytes__Length v_data24) = v_x57865790) /\ (0 <= v_x57865790))) /\ (((v_z5789 = v_Pervasives__True) /\ (v_x57865790 >= 2)) \/ ((v_z5789 = v_Pervasives__False) /\ (v_x57865790 < 2)))))) -> ((v_z5789 = v_Pervasives__True) -> (forall v_l5807:top. ((v_data24 = v_data24) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l5807))) -> (forall v_res25:top. ((exists v_b158135862:top. (exists v_b258145863:top. ((v_res25 = (v_Tuples__Tup2 v_b158135862 v_b258145863)) /\ ((v_Bytes__B v_data24) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_b158135862)) (v_Bytes__B v_b258145863)))))) -> (((v_Error__Correct v_res25) = v_l5807) -> (((v_Error__Correct v_res25) = v_l5807) -> (forall v_clCiphsuitesBytes:top. (forall v_data26:top. (((v_Bytes__B v_data24) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_clCiphsuitesBytes)) (v_Bytes__B v_data26))) -> (((v_Tuples__Tup2 v_clCiphsuitesBytes v_data26) = v_res25) -> (((v_Tuples__Tup2 v_clCiphsuitesBytes v_data26) = v_res25) -> (forall v_l5875:top. ((v_clCiphsuitesBytes = v_clCiphsuitesBytes) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l5875))) -> (forall v_clientCipherSuites:top. (((v_Error__Correct v_clientCipherSuites) = v_l5875) -> (((v_Error__Correct v_clientCipherSuites) = v_l5875) -> (forall v_z5926:top. (((1 = 1) /\ (exists v_x59235927:top. (((v_data26 = v_data26) /\ (((v_Bytes__Length v_data26) = v_x59235927) /\ (0 <= v_x59235927))) /\ (((v_z5926 = v_Pervasives__True) /\ (v_x59235927 >= 1)) \/ ((v_z5926 = v_Pervasives__False) /\ (v_x59235927 < 1)))))) -> ((v_z5926 = v_Pervasives__True) -> (forall v_l5962:top. ((v_l5962 = v_data26) -> ((v_Bytes__Length v_l5962) >= 1)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(* Querying for (l60316039604860686089:TLSConstants.PreProtocolVersion * l60336040604960696090:Bytes.bytes * l60346041605060706091:Bytes.bytes * l60356042605160716092:TLSConstants.cipherSuite list * l60366043605260726093:(c60376044605360736094:TLSConstants.PreCompression){TLSConstants.IsCompression(c60376044605360736094)} list * l60386045605460746095:Bytes.bytes){Bytes.B (clVerBytes) = TLSConstants.VersionBytes (l60316039604860686089) /\ TLSConstants.IsProtocolVersion(l60316039604860686089) /\ (l60316039604860686089, l60336040604960696090, l60346041605060706091, l60356042605160716092, l60366043605260726093, l60386045605460746095) = (cv, cr, sid, clientCipherSuites, cm, extensions)} <: (pv605760776096:TLSConstants.PreProtocolVersion * cr605960796097:Bytes.bytes * sid606160816098:Bytes.bytes * TLSConstants.cipherSuite list * (c606560856101:TLSConstants.PreCompression){TLSConstants.IsCompression(c606560856101)} list * ext606660866102:Bytes.bytes){(?cs'. (?cm'. MessageBytes (HT_client_hello (), Bytes.B (data)) = ClientHelloMsg (pv605760776096, cr605960796097, sid606160816098, cs', cm', ext606660866102))) /\ TLSConstants.IsProtocolVersion(pv605760776096) /\ Bytes.Length (cr605960796097) = 32 /\ pr_LessThanOrEqual(Bytes.Length (sid606160816098), 32)} *)
(* query (?cs'. (?cm'. MessageBytes (HT_client_hello (), Bytes.B (data)) = ClientHelloMsg (l6103, l6104, l6105, cs', cm', l6108))) /\ TLSConstants.IsProtocolVersion(l6103) /\ Bytes.Length (l6104) = 32 /\ pr_LessThanOrEqual(Bytes.Length (l6105), 32) [HandshakeMessages.fs(260,24)] *)
goal g109_gl: (forall v_data:top. (forall v_z5571:top. (((34 = 34) /\ (exists v_x55685572:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x55685572) /\ (0 <= v_x55685572))) /\ (((v_z5571 = v_Pervasives__True) /\ (v_x55685572 >= 34)) \/ ((v_z5571 = v_Pervasives__False) /\ (v_x55685572 < 34)))))) -> ((v_z5571 = v_Pervasives__True) -> (forall v_clVerBytes:top. (forall v_cr:top. (forall v_data23:top. ((((v_Bytes__Length v_clVerBytes) = 2) /\ (((v_Bytes__Length v_cr) = 32) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_clVerBytes) (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_cr) (v_Bytes__B v_data23)))))) -> ((32 = 32) -> (forall v_l5615:top. ((v_clVerBytes = v_clVerBytes) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l5615))) -> (forall v_cv:top. ((((v_Bytes__B v_clVerBytes) = (v_TLSConstants__VersionBytes v_cv)) /\ (v_TLSConstants__IsProtocolVersion_p v_cv)) -> (((v_Error__Correct v_cv) = v_l5615) -> (((v_Error__Correct v_cv) = v_l5615) -> (forall v_z5675:top. (((1 = 1) /\ (exists v_x56725676:top. (((v_data23 = v_data23) /\ (((v_Bytes__Length v_data23) = v_x56725676) /\ (0 <= v_x56725676))) /\ (((v_z5675 = v_Pervasives__True) /\ (v_x56725676 >= 1)) \/ ((v_z5675 = v_Pervasives__False) /\ (v_x56725676 < 1)))))) -> ((v_z5675 = v_Pervasives__True) -> (forall v_l5693:top. ((v_data23 = v_data23) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l5693))) -> (forall v_res:top. ((exists v_b156995748:top. (exists v_b257005749:top. ((v_res = (v_Tuples__Tup2 v_b156995748 v_b257005749)) /\ ((v_Bytes__B v_data23) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_b156995748)) (v_Bytes__B v_b257005749)))))) -> (((v_Error__Correct v_res) = v_l5693) -> (((v_Error__Correct v_res) = v_l5693) -> (forall v_sid:top. (forall v_data24:top. (((v_Bytes__B v_data23) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_sid)) (v_Bytes__B v_data24))) -> (((v_Tuples__Tup2 v_sid v_data24) = v_res) -> (((v_Tuples__Tup2 v_sid v_data24) = v_res) -> (forall v_z5766:top. (((32 = 32) /\ (exists v_x57635767:top. (((v_sid = v_sid) /\ (((v_Bytes__Length v_sid) = v_x57635767) /\ (0 <= v_x57635767))) /\ (((v_z5766 = v_Pervasives__True) /\ (v_x57635767 <= 32)) \/ ((v_z5766 = v_Pervasives__False) /\ (v_x57635767 > 32)))))) -> ((v_z5766 = v_Pervasives__True) -> (forall v_z5789:top. (((2 = 2) /\ (exists v_x57865790:top. (((v_data24 = v_data24) /\ (((v_Bytes__Length v_data24) = v_x57865790) /\ (0 <= v_x57865790))) /\ (((v_z5789 = v_Pervasives__True) /\ (v_x57865790 >= 2)) \/ ((v_z5789 = v_Pervasives__False) /\ (v_x57865790 < 2)))))) -> ((v_z5789 = v_Pervasives__True) -> (forall v_l5807:top. ((v_data24 = v_data24) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l5807))) -> (forall v_res25:top. ((exists v_b158135862:top. (exists v_b258145863:top. ((v_res25 = (v_Tuples__Tup2 v_b158135862 v_b258145863)) /\ ((v_Bytes__B v_data24) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_b158135862)) (v_Bytes__B v_b258145863)))))) -> (((v_Error__Correct v_res25) = v_l5807) -> (((v_Error__Correct v_res25) = v_l5807) -> (forall v_clCiphsuitesBytes:top. (forall v_data26:top. (((v_Bytes__B v_data24) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_clCiphsuitesBytes)) (v_Bytes__B v_data26))) -> (((v_Tuples__Tup2 v_clCiphsuitesBytes v_data26) = v_res25) -> (((v_Tuples__Tup2 v_clCiphsuitesBytes v_data26) = v_res25) -> (forall v_l5875:top. ((v_clCiphsuitesBytes = v_clCiphsuitesBytes) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l5875))) -> (forall v_clientCipherSuites:top. (((v_Error__Correct v_clientCipherSuites) = v_l5875) -> (((v_Error__Correct v_clientCipherSuites) = v_l5875) -> (forall v_z5926:top. (((1 = 1) /\ (exists v_x59235927:top. (((v_data26 = v_data26) /\ (((v_Bytes__Length v_data26) = v_x59235927) /\ (0 <= v_x59235927))) /\ (((v_z5926 = v_Pervasives__True) /\ (v_x59235927 >= 1)) \/ ((v_z5926 = v_Pervasives__False) /\ (v_x59235927 < 1)))))) -> ((v_z5926 = v_Pervasives__True) -> (forall v_l5944:top. ((v_data26 = v_data26) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l5944))) -> (forall v_res27:top. ((exists v_b159505999:top. (exists v_b259516000:top. ((v_res27 = (v_Tuples__Tup2 v_b159505999 v_b259516000)) /\ ((v_Bytes__B v_data26) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_b159505999)) (v_Bytes__B v_b259516000)))))) -> (((v_Error__Correct v_res27) = v_l5944) -> (((v_Error__Correct v_res27) = v_l5944) -> (forall v_cmBytes:top. (forall v_extensions:top. (((v_Bytes__B v_data26) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_cmBytes)) (v_Bytes__B v_extensions))) -> (((v_Tuples__Tup2 v_cmBytes v_extensions) = v_res27) -> (((v_Tuples__Tup2 v_cmBytes v_extensions) = v_res27) -> (forall v_cm:top. ((v_cmBytes = v_cmBytes) -> (forall v_l6067:top. ((((v_Tuples__Tup6 v_cv v_cr v_sid v_clientCipherSuites v_cm v_extensions) = (v_Tuples__Tup6 v_cv v_cr v_sid v_clientCipherSuites v_cm v_extensions)) /\ (v_l6067 = (v_Error__Correct (v_Tuples__Tup6 v_cv v_cr v_sid v_clientCipherSuites v_cm v_extensions)))) -> (forall v_l6103:top. (forall v_l6104:top. (forall v_l6105:top. (forall v_l6106:top. (forall v_l6107:top. (forall v_l6108:top. (((((v_Bytes__B v_clVerBytes) = (v_TLSConstants__VersionBytes v_l6103)) /\ (v_TLSConstants__IsProtocolVersion_p v_l6103)) /\ ((v_Tuples__Tup6 v_l6103 v_l6104 v_l6105 v_l6106 v_l6107 v_l6108) = (v_Tuples__Tup6 v_cv v_cr v_sid v_clientCipherSuites v_cm v_extensions))) -> ((((exists v_cs':top. (exists v_cm':top. ((v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_client_hello ) (v_Bytes__B v_data)) = (v_HandshakeMessages__ClientHelloMsg v_l6103 v_l6104 v_l6105 v_cs' v_cm' v_l6108)))) /\ (v_TLSConstants__IsProtocolVersion_p v_l6103)) /\ ((v_Bytes__Length v_l6104) = 32)) /\ ((v_Bytes__Length v_l6105) <= 32)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(* Querying for (pv6118613061626187:TLSConstants.PreProtocolVersion * cr6120613161636188:Bytes.bytes * sid6122613261646189:Bytes.bytes * TLSConstants.cipherSuite list * (c6126613561676192:TLSConstants.PreCompression){TLSConstants.IsCompression(c6126613561676192)} list * ext6127613661686193:Bytes.bytes){(?cs'. (?cm'. MessageBytes (HT_client_hello (), Bytes.B (data)) = ClientHelloMsg (pv6118613061626187, cr6120613161636188, sid6122613261646189, cs', cm', ext6127613661686193))) /\ TLSConstants.IsProtocolVersion(pv6118613061626187) /\ Bytes.Length (cr6120613161636188) = 32 /\ pr_LessThanOrEqual(Bytes.Length (sid6122613261646189), 32)} <: (pv61716194:TLSConstants.PreProtocolVersion * cr61736195:Bytes.bytes * sid61756196:Bytes.bytes * TLSConstants.cipherSuite list * (c61796199:TLSConstants.PreCompression){TLSConstants.IsCompression(c61796199)} list * ext61806200:Bytes.bytes){(?cs'. (?cm'. MessageBytes (HT_client_hello (), Bytes.B (data)) = ClientHelloMsg (pv61716194, cr61736195, sid61756196, cs', cm', ext61806200))) /\ TLSConstants.IsProtocolVersion(pv61716194) /\ Bytes.Length (cr61736195) = 32 /\ pr_LessThanOrEqual(Bytes.Length (sid61756196), 32)} *)
(* query (?cs'. (?cm'. MessageBytes (HT_client_hello (), Bytes.B (data)) = ClientHelloMsg (l6201, l6202, l6203, cs', cm', l6206))) /\ TLSConstants.IsProtocolVersion(l6201) /\ Bytes.Length (l6202) = 32 /\ pr_LessThanOrEqual(Bytes.Length (l6203), 32) [HandshakeMessages.fs(261,25)] *)
goal g110_gl: (forall v_data:top. (forall v_z5571:top. (((34 = 34) /\ (exists v_x55685572:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x55685572) /\ (0 <= v_x55685572))) /\ (((v_z5571 = v_Pervasives__True) /\ (v_x55685572 >= 34)) \/ ((v_z5571 = v_Pervasives__False) /\ (v_x55685572 < 34)))))) -> ((v_z5571 = v_Pervasives__True) -> (forall v_clVerBytes:top. (forall v_cr:top. (forall v_data23:top. ((((v_Bytes__Length v_clVerBytes) = 2) /\ (((v_Bytes__Length v_cr) = 32) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_clVerBytes) (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_cr) (v_Bytes__B v_data23)))))) -> ((32 = 32) -> (forall v_l5615:top. ((v_clVerBytes = v_clVerBytes) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l5615))) -> (forall v_cv:top. ((((v_Bytes__B v_clVerBytes) = (v_TLSConstants__VersionBytes v_cv)) /\ (v_TLSConstants__IsProtocolVersion_p v_cv)) -> (((v_Error__Correct v_cv) = v_l5615) -> (((v_Error__Correct v_cv) = v_l5615) -> (forall v_z5675:top. (((1 = 1) /\ (exists v_x56725676:top. (((v_data23 = v_data23) /\ (((v_Bytes__Length v_data23) = v_x56725676) /\ (0 <= v_x56725676))) /\ (((v_z5675 = v_Pervasives__True) /\ (v_x56725676 >= 1)) \/ ((v_z5675 = v_Pervasives__False) /\ (v_x56725676 < 1)))))) -> ((v_z5675 = v_Pervasives__True) -> (forall v_l5693:top. ((v_data23 = v_data23) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l5693))) -> (forall v_res:top. ((exists v_b156995748:top. (exists v_b257005749:top. ((v_res = (v_Tuples__Tup2 v_b156995748 v_b257005749)) /\ ((v_Bytes__B v_data23) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_b156995748)) (v_Bytes__B v_b257005749)))))) -> (((v_Error__Correct v_res) = v_l5693) -> (((v_Error__Correct v_res) = v_l5693) -> (forall v_sid:top. (forall v_data24:top. (((v_Bytes__B v_data23) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_sid)) (v_Bytes__B v_data24))) -> (((v_Tuples__Tup2 v_sid v_data24) = v_res) -> (((v_Tuples__Tup2 v_sid v_data24) = v_res) -> (forall v_z5766:top. (((32 = 32) /\ (exists v_x57635767:top. (((v_sid = v_sid) /\ (((v_Bytes__Length v_sid) = v_x57635767) /\ (0 <= v_x57635767))) /\ (((v_z5766 = v_Pervasives__True) /\ (v_x57635767 <= 32)) \/ ((v_z5766 = v_Pervasives__False) /\ (v_x57635767 > 32)))))) -> ((v_z5766 = v_Pervasives__True) -> (forall v_z5789:top. (((2 = 2) /\ (exists v_x57865790:top. (((v_data24 = v_data24) /\ (((v_Bytes__Length v_data24) = v_x57865790) /\ (0 <= v_x57865790))) /\ (((v_z5789 = v_Pervasives__True) /\ (v_x57865790 >= 2)) \/ ((v_z5789 = v_Pervasives__False) /\ (v_x57865790 < 2)))))) -> ((v_z5789 = v_Pervasives__True) -> (forall v_l5807:top. ((v_data24 = v_data24) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l5807))) -> (forall v_res25:top. ((exists v_b158135862:top. (exists v_b258145863:top. ((v_res25 = (v_Tuples__Tup2 v_b158135862 v_b258145863)) /\ ((v_Bytes__B v_data24) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_b158135862)) (v_Bytes__B v_b258145863)))))) -> (((v_Error__Correct v_res25) = v_l5807) -> (((v_Error__Correct v_res25) = v_l5807) -> (forall v_clCiphsuitesBytes:top. (forall v_data26:top. (((v_Bytes__B v_data24) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_clCiphsuitesBytes)) (v_Bytes__B v_data26))) -> (((v_Tuples__Tup2 v_clCiphsuitesBytes v_data26) = v_res25) -> (((v_Tuples__Tup2 v_clCiphsuitesBytes v_data26) = v_res25) -> (forall v_l5875:top. ((v_clCiphsuitesBytes = v_clCiphsuitesBytes) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l5875))) -> (forall v_clientCipherSuites:top. (((v_Error__Correct v_clientCipherSuites) = v_l5875) -> (((v_Error__Correct v_clientCipherSuites) = v_l5875) -> (forall v_z5926:top. (((1 = 1) /\ (exists v_x59235927:top. (((v_data26 = v_data26) /\ (((v_Bytes__Length v_data26) = v_x59235927) /\ (0 <= v_x59235927))) /\ (((v_z5926 = v_Pervasives__True) /\ (v_x59235927 >= 1)) \/ ((v_z5926 = v_Pervasives__False) /\ (v_x59235927 < 1)))))) -> ((v_z5926 = v_Pervasives__False) -> (forall v_l6201:top. (forall v_l6202:top. (forall v_l6203:top. (forall v_l6204:top. (forall v_l6205:top. (forall v_l6206:top. (((((exists v_cs':top. (exists v_cm':top. ((v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_client_hello ) (v_Bytes__B v_data)) = (v_HandshakeMessages__ClientHelloMsg v_l6201 v_l6202 v_l6203 v_cs' v_cm' v_l6206)))) /\ (v_TLSConstants__IsProtocolVersion_p v_l6201)) /\ ((v_Bytes__Length v_l6202) = 32)) /\ ((v_Bytes__Length v_l6203) <= 32)) -> ((((exists v_cs':top. (exists v_cm':top. ((v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_client_hello ) (v_Bytes__B v_data)) = (v_HandshakeMessages__ClientHelloMsg v_l6201 v_l6202 v_l6203 v_cs' v_cm' v_l6206)))) /\ (v_TLSConstants__IsProtocolVersion_p v_l6201)) /\ ((v_Bytes__Length v_l6202) = 32)) /\ ((v_Bytes__Length v_l6203) <= 32)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(* Querying for (pv6216622862606285:TLSConstants.PreProtocolVersion * cr6218622962616286:Bytes.bytes * sid6220623062626287:Bytes.bytes * TLSConstants.cipherSuite list * (c6224623362656290:TLSConstants.PreCompression){TLSConstants.IsCompression(c6224623362656290)} list * ext6225623462666291:Bytes.bytes){(?cs'. (?cm'. MessageBytes (HT_client_hello (), Bytes.B (data)) = ClientHelloMsg (pv6216622862606285, cr6218622962616286, sid6220623062626287, cs', cm', ext6225623462666291))) /\ TLSConstants.IsProtocolVersion(pv6216622862606285) /\ Bytes.Length (cr6218622962616286) = 32 /\ pr_LessThanOrEqual(Bytes.Length (sid6220623062626287), 32)} <: (pv62696292:TLSConstants.PreProtocolVersion * cr62716293:Bytes.bytes * sid62736294:Bytes.bytes * TLSConstants.cipherSuite list * (c62776297:TLSConstants.PreCompression){TLSConstants.IsCompression(c62776297)} list * ext62786298:Bytes.bytes){(?cs'. (?cm'. MessageBytes (HT_client_hello (), Bytes.B (data)) = ClientHelloMsg (pv62696292, cr62716293, sid62736294, cs', cm', ext62786298))) /\ TLSConstants.IsProtocolVersion(pv62696292) /\ Bytes.Length (cr62716293) = 32 /\ pr_LessThanOrEqual(Bytes.Length (sid62736294), 32)} *)
(* query (?cs'. (?cm'. MessageBytes (HT_client_hello (), Bytes.B (data)) = ClientHelloMsg (l6299, l6300, l6301, cs', cm', l6304))) /\ TLSConstants.IsProtocolVersion(l6299) /\ Bytes.Length (l6300) = 32 /\ pr_LessThanOrEqual(Bytes.Length (l6301), 32) [HandshakeMessages.fs(262,21)] *)
goal g111_gl: (forall v_data:top. (forall v_z5571:top. (((34 = 34) /\ (exists v_x55685572:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x55685572) /\ (0 <= v_x55685572))) /\ (((v_z5571 = v_Pervasives__True) /\ (v_x55685572 >= 34)) \/ ((v_z5571 = v_Pervasives__False) /\ (v_x55685572 < 34)))))) -> ((v_z5571 = v_Pervasives__True) -> (forall v_clVerBytes:top. (forall v_cr:top. (forall v_data23:top. ((((v_Bytes__Length v_clVerBytes) = 2) /\ (((v_Bytes__Length v_cr) = 32) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_clVerBytes) (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_cr) (v_Bytes__B v_data23)))))) -> ((32 = 32) -> (forall v_l5615:top. ((v_clVerBytes = v_clVerBytes) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l5615))) -> (forall v_cv:top. ((((v_Bytes__B v_clVerBytes) = (v_TLSConstants__VersionBytes v_cv)) /\ (v_TLSConstants__IsProtocolVersion_p v_cv)) -> (((v_Error__Correct v_cv) = v_l5615) -> (((v_Error__Correct v_cv) = v_l5615) -> (forall v_z5675:top. (((1 = 1) /\ (exists v_x56725676:top. (((v_data23 = v_data23) /\ (((v_Bytes__Length v_data23) = v_x56725676) /\ (0 <= v_x56725676))) /\ (((v_z5675 = v_Pervasives__True) /\ (v_x56725676 >= 1)) \/ ((v_z5675 = v_Pervasives__False) /\ (v_x56725676 < 1)))))) -> ((v_z5675 = v_Pervasives__True) -> (forall v_l5693:top. ((v_data23 = v_data23) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l5693))) -> (forall v_res:top. ((exists v_b156995748:top. (exists v_b257005749:top. ((v_res = (v_Tuples__Tup2 v_b156995748 v_b257005749)) /\ ((v_Bytes__B v_data23) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_b156995748)) (v_Bytes__B v_b257005749)))))) -> (((v_Error__Correct v_res) = v_l5693) -> (((v_Error__Correct v_res) = v_l5693) -> (forall v_sid:top. (forall v_data24:top. (((v_Bytes__B v_data23) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_sid)) (v_Bytes__B v_data24))) -> (((v_Tuples__Tup2 v_sid v_data24) = v_res) -> (((v_Tuples__Tup2 v_sid v_data24) = v_res) -> (forall v_z5766:top. (((32 = 32) /\ (exists v_x57635767:top. (((v_sid = v_sid) /\ (((v_Bytes__Length v_sid) = v_x57635767) /\ (0 <= v_x57635767))) /\ (((v_z5766 = v_Pervasives__True) /\ (v_x57635767 <= 32)) \/ ((v_z5766 = v_Pervasives__False) /\ (v_x57635767 > 32)))))) -> ((v_z5766 = v_Pervasives__True) -> (forall v_z5789:top. (((2 = 2) /\ (exists v_x57865790:top. (((v_data24 = v_data24) /\ (((v_Bytes__Length v_data24) = v_x57865790) /\ (0 <= v_x57865790))) /\ (((v_z5789 = v_Pervasives__True) /\ (v_x57865790 >= 2)) \/ ((v_z5789 = v_Pervasives__False) /\ (v_x57865790 < 2)))))) -> ((v_z5789 = v_Pervasives__False) -> (forall v_l6299:top. (forall v_l6300:top. (forall v_l6301:top. (forall v_l6302:top. (forall v_l6303:top. (forall v_l6304:top. (((((exists v_cs':top. (exists v_cm':top. ((v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_client_hello ) (v_Bytes__B v_data)) = (v_HandshakeMessages__ClientHelloMsg v_l6299 v_l6300 v_l6301 v_cs' v_cm' v_l6304)))) /\ (v_TLSConstants__IsProtocolVersion_p v_l6299)) /\ ((v_Bytes__Length v_l6300) = 32)) /\ ((v_Bytes__Length v_l6301) <= 32)) -> ((((exists v_cs':top. (exists v_cm':top. ((v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_client_hello ) (v_Bytes__B v_data)) = (v_HandshakeMessages__ClientHelloMsg v_l6299 v_l6300 v_l6301 v_cs' v_cm' v_l6304)))) /\ (v_TLSConstants__IsProtocolVersion_p v_l6299)) /\ ((v_Bytes__Length v_l6300) = 32)) /\ ((v_Bytes__Length v_l6301) <= 32))))))))))))))))))))))))))))))))))))))))))))))
(* Querying for (pv6314632663586383:TLSConstants.PreProtocolVersion * cr6316632763596384:Bytes.bytes * sid6318632863606385:Bytes.bytes * TLSConstants.cipherSuite list * (c6322633163636388:TLSConstants.PreCompression){TLSConstants.IsCompression(c6322633163636388)} list * ext6323633263646389:Bytes.bytes){(?cs'. (?cm'. MessageBytes (HT_client_hello (), Bytes.B (data)) = ClientHelloMsg (pv6314632663586383, cr6316632763596384, sid6318632863606385, cs', cm', ext6323633263646389))) /\ TLSConstants.IsProtocolVersion(pv6314632663586383) /\ Bytes.Length (cr6316632763596384) = 32 /\ pr_LessThanOrEqual(Bytes.Length (sid6318632863606385), 32)} <: (pv63676390:TLSConstants.PreProtocolVersion * cr63696391:Bytes.bytes * sid63716392:Bytes.bytes * TLSConstants.cipherSuite list * (c63756395:TLSConstants.PreCompression){TLSConstants.IsCompression(c63756395)} list * ext63766396:Bytes.bytes){(?cs'. (?cm'. MessageBytes (HT_client_hello (), Bytes.B (data)) = ClientHelloMsg (pv63676390, cr63696391, sid63716392, cs', cm', ext63766396))) /\ TLSConstants.IsProtocolVersion(pv63676390) /\ Bytes.Length (cr63696391) = 32 /\ pr_LessThanOrEqual(Bytes.Length (sid63716392), 32)} *)
(* query (?cs'. (?cm'. MessageBytes (HT_client_hello (), Bytes.B (data)) = ClientHelloMsg (l6397, l6398, l6399, cs', cm', l6402))) /\ TLSConstants.IsProtocolVersion(l6397) /\ Bytes.Length (l6398) = 32 /\ pr_LessThanOrEqual(Bytes.Length (l6399), 32) [HandshakeMessages.fs(263,17)] *)
goal g112_gl: (forall v_data:top. (forall v_z5571:top. (((34 = 34) /\ (exists v_x55685572:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x55685572) /\ (0 <= v_x55685572))) /\ (((v_z5571 = v_Pervasives__True) /\ (v_x55685572 >= 34)) \/ ((v_z5571 = v_Pervasives__False) /\ (v_x55685572 < 34)))))) -> ((v_z5571 = v_Pervasives__True) -> (forall v_clVerBytes:top. (forall v_cr:top. (forall v_data23:top. ((((v_Bytes__Length v_clVerBytes) = 2) /\ (((v_Bytes__Length v_cr) = 32) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_clVerBytes) (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_cr) (v_Bytes__B v_data23)))))) -> ((32 = 32) -> (forall v_l5615:top. ((v_clVerBytes = v_clVerBytes) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l5615))) -> (forall v_cv:top. ((((v_Bytes__B v_clVerBytes) = (v_TLSConstants__VersionBytes v_cv)) /\ (v_TLSConstants__IsProtocolVersion_p v_cv)) -> (((v_Error__Correct v_cv) = v_l5615) -> (((v_Error__Correct v_cv) = v_l5615) -> (forall v_z5675:top. (((1 = 1) /\ (exists v_x56725676:top. (((v_data23 = v_data23) /\ (((v_Bytes__Length v_data23) = v_x56725676) /\ (0 <= v_x56725676))) /\ (((v_z5675 = v_Pervasives__True) /\ (v_x56725676 >= 1)) \/ ((v_z5675 = v_Pervasives__False) /\ (v_x56725676 < 1)))))) -> ((v_z5675 = v_Pervasives__True) -> (forall v_l5693:top. ((v_data23 = v_data23) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l5693))) -> (forall v_res:top. ((exists v_b156995748:top. (exists v_b257005749:top. ((v_res = (v_Tuples__Tup2 v_b156995748 v_b257005749)) /\ ((v_Bytes__B v_data23) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_b156995748)) (v_Bytes__B v_b257005749)))))) -> (((v_Error__Correct v_res) = v_l5693) -> (((v_Error__Correct v_res) = v_l5693) -> (forall v_sid:top. (forall v_data24:top. (((v_Bytes__B v_data23) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_sid)) (v_Bytes__B v_data24))) -> (((v_Tuples__Tup2 v_sid v_data24) = v_res) -> (((v_Tuples__Tup2 v_sid v_data24) = v_res) -> (forall v_z5766:top. (((32 = 32) /\ (exists v_x57635767:top. (((v_sid = v_sid) /\ (((v_Bytes__Length v_sid) = v_x57635767) /\ (0 <= v_x57635767))) /\ (((v_z5766 = v_Pervasives__True) /\ (v_x57635767 <= 32)) \/ ((v_z5766 = v_Pervasives__False) /\ (v_x57635767 > 32)))))) -> ((v_z5766 = v_Pervasives__False) -> (forall v_l6397:top. (forall v_l6398:top. (forall v_l6399:top. (forall v_l6400:top. (forall v_l6401:top. (forall v_l6402:top. (((((exists v_cs':top. (exists v_cm':top. ((v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_client_hello ) (v_Bytes__B v_data)) = (v_HandshakeMessages__ClientHelloMsg v_l6397 v_l6398 v_l6399 v_cs' v_cm' v_l6402)))) /\ (v_TLSConstants__IsProtocolVersion_p v_l6397)) /\ ((v_Bytes__Length v_l6398) = 32)) /\ ((v_Bytes__Length v_l6399) <= 32)) -> ((((exists v_cs':top. (exists v_cm':top. ((v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_client_hello ) (v_Bytes__B v_data)) = (v_HandshakeMessages__ClientHelloMsg v_l6397 v_l6398 v_l6399 v_cs' v_cm' v_l6402)))) /\ (v_TLSConstants__IsProtocolVersion_p v_l6397)) /\ ((v_Bytes__Length v_l6398) = 32)) /\ ((v_Bytes__Length v_l6399) <= 32)))))))))))))))))))))))))))))))))))))))))))
(* Querying for (pv6412642464566481:TLSConstants.PreProtocolVersion * cr6414642564576482:Bytes.bytes * sid6416642664586483:Bytes.bytes * TLSConstants.cipherSuite list * (c6420642964616486:TLSConstants.PreCompression){TLSConstants.IsCompression(c6420642964616486)} list * ext6421643064626487:Bytes.bytes){(?cs'. (?cm'. MessageBytes (HT_client_hello (), Bytes.B (data)) = ClientHelloMsg (pv6412642464566481, cr6414642564576482, sid6416642664586483, cs', cm', ext6421643064626487))) /\ TLSConstants.IsProtocolVersion(pv6412642464566481) /\ Bytes.Length (cr6414642564576482) = 32 /\ pr_LessThanOrEqual(Bytes.Length (sid6416642664586483), 32)} <: (pv64656488:TLSConstants.PreProtocolVersion * cr64676489:Bytes.bytes * sid64696490:Bytes.bytes * TLSConstants.cipherSuite list * (c64736493:TLSConstants.PreCompression){TLSConstants.IsCompression(c64736493)} list * ext64746494:Bytes.bytes){(?cs'. (?cm'. MessageBytes (HT_client_hello (), Bytes.B (data)) = ClientHelloMsg (pv64656488, cr64676489, sid64696490, cs', cm', ext64746494))) /\ TLSConstants.IsProtocolVersion(pv64656488) /\ Bytes.Length (cr64676489) = 32 /\ pr_LessThanOrEqual(Bytes.Length (sid64696490), 32)} *)
(* query (?cs'. (?cm'. MessageBytes (HT_client_hello (), Bytes.B (data)) = ClientHelloMsg (l6495, l6496, l6497, cs', cm', l6500))) /\ TLSConstants.IsProtocolVersion(l6495) /\ Bytes.Length (l6496) = 32 /\ pr_LessThanOrEqual(Bytes.Length (l6497), 32) [HandshakeMessages.fs(264,13)] *)
goal g113_gl: (forall v_data:top. (forall v_z5571:top. (((34 = 34) /\ (exists v_x55685572:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x55685572) /\ (0 <= v_x55685572))) /\ (((v_z5571 = v_Pervasives__True) /\ (v_x55685572 >= 34)) \/ ((v_z5571 = v_Pervasives__False) /\ (v_x55685572 < 34)))))) -> ((v_z5571 = v_Pervasives__True) -> (forall v_clVerBytes:top. (forall v_cr:top. (forall v_data23:top. ((((v_Bytes__Length v_clVerBytes) = 2) /\ (((v_Bytes__Length v_cr) = 32) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_clVerBytes) (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_cr) (v_Bytes__B v_data23)))))) -> ((32 = 32) -> (forall v_l5615:top. ((v_clVerBytes = v_clVerBytes) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l5615))) -> (forall v_cv:top. ((((v_Bytes__B v_clVerBytes) = (v_TLSConstants__VersionBytes v_cv)) /\ (v_TLSConstants__IsProtocolVersion_p v_cv)) -> (((v_Error__Correct v_cv) = v_l5615) -> (((v_Error__Correct v_cv) = v_l5615) -> (forall v_z5675:top. (((1 = 1) /\ (exists v_x56725676:top. (((v_data23 = v_data23) /\ (((v_Bytes__Length v_data23) = v_x56725676) /\ (0 <= v_x56725676))) /\ (((v_z5675 = v_Pervasives__True) /\ (v_x56725676 >= 1)) \/ ((v_z5675 = v_Pervasives__False) /\ (v_x56725676 < 1)))))) -> ((v_z5675 = v_Pervasives__False) -> (forall v_l6495:top. (forall v_l6496:top. (forall v_l6497:top. (forall v_l6498:top. (forall v_l6499:top. (forall v_l6500:top. (((((exists v_cs':top. (exists v_cm':top. ((v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_client_hello ) (v_Bytes__B v_data)) = (v_HandshakeMessages__ClientHelloMsg v_l6495 v_l6496 v_l6497 v_cs' v_cm' v_l6500)))) /\ (v_TLSConstants__IsProtocolVersion_p v_l6495)) /\ ((v_Bytes__Length v_l6496) = 32)) /\ ((v_Bytes__Length v_l6497) <= 32)) -> ((((exists v_cs':top. (exists v_cm':top. ((v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_client_hello ) (v_Bytes__B v_data)) = (v_HandshakeMessages__ClientHelloMsg v_l6495 v_l6496 v_l6497 v_cs' v_cm' v_l6500)))) /\ (v_TLSConstants__IsProtocolVersion_p v_l6495)) /\ ((v_Bytes__Length v_l6496) = 32)) /\ ((v_Bytes__Length v_l6497) <= 32))))))))))))))))))))))))))))
(* Querying for (pv6510652265546579:TLSConstants.PreProtocolVersion * cr6512652365556580:Bytes.bytes * sid6514652465566581:Bytes.bytes * TLSConstants.cipherSuite list * (c6518652765596584:TLSConstants.PreCompression){TLSConstants.IsCompression(c6518652765596584)} list * ext6519652865606585:Bytes.bytes){(?cs'. (?cm'. MessageBytes (HT_client_hello (), Bytes.B (data)) = ClientHelloMsg (pv6510652265546579, cr6512652365556580, sid6514652465566581, cs', cm', ext6519652865606585))) /\ TLSConstants.IsProtocolVersion(pv6510652265546579) /\ Bytes.Length (cr6512652365556580) = 32 /\ pr_LessThanOrEqual(Bytes.Length (sid6514652465566581), 32)} <: (pv65636586:TLSConstants.PreProtocolVersion * cr65656587:Bytes.bytes * sid65676588:Bytes.bytes * TLSConstants.cipherSuite list * (c65716591:TLSConstants.PreCompression){TLSConstants.IsCompression(c65716591)} list * ext65726592:Bytes.bytes){(?cs'. (?cm'. MessageBytes (HT_client_hello (), Bytes.B (data)) = ClientHelloMsg (pv65636586, cr65656587, sid65676588, cs', cm', ext65726592))) /\ TLSConstants.IsProtocolVersion(pv65636586) /\ Bytes.Length (cr65656587) = 32 /\ pr_LessThanOrEqual(Bytes.Length (sid65676588), 32)} *)
(* query (?cs'. (?cm'. MessageBytes (HT_client_hello (), Bytes.B (data)) = ClientHelloMsg (l6593, l6594, l6595, cs', cm', l6598))) /\ TLSConstants.IsProtocolVersion(l6593) /\ Bytes.Length (l6594) = 32 /\ pr_LessThanOrEqual(Bytes.Length (l6595), 32) [HandshakeMessages.fs(265,9)] *)
goal g114_gl: (forall v_data:top. (forall v_z5571:top. (((34 = 34) /\ (exists v_x55685572:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x55685572) /\ (0 <= v_x55685572))) /\ (((v_z5571 = v_Pervasives__True) /\ (v_x55685572 >= 34)) \/ ((v_z5571 = v_Pervasives__False) /\ (v_x55685572 < 34)))))) -> ((v_z5571 = v_Pervasives__False) -> (forall v_l6593:top. (forall v_l6594:top. (forall v_l6595:top. (forall v_l6596:top. (forall v_l6597:top. (forall v_l6598:top. (((((exists v_cs':top. (exists v_cm':top. ((v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_client_hello ) (v_Bytes__B v_data)) = (v_HandshakeMessages__ClientHelloMsg v_l6593 v_l6594 v_l6595 v_cs' v_cm' v_l6598)))) /\ (v_TLSConstants__IsProtocolVersion_p v_l6593)) /\ ((v_Bytes__Length v_l6594) = 32)) /\ ((v_Bytes__Length v_l6595) <= 32)) -> ((((exists v_cs':top. (exists v_cm':top. ((v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_client_hello ) (v_Bytes__B v_data)) = (v_HandshakeMessages__ClientHelloMsg v_l6593 v_l6594 v_l6595 v_cs' v_cm' v_l6598)))) /\ (v_TLSConstants__IsProtocolVersion_p v_l6593)) /\ ((v_Bytes__Length v_l6594) = 32)) /\ ((v_Bytes__Length v_l6595) <= 32)))))))))))))
(* Querying for (l67036704:TLSConstants.PreProtocolVersion){l67036704 = mv} <: (pv669967016705:TLSConstants.PreProtocolVersion){TLSConstants.IsProtocolVersion(pv669967016705)} *)
(* query TLSConstants.IsProtocolVersion(l6706) [HandshakeMessages.fs(269,21)] *)
goal g115_gl: (forall v_poptions:top. ((exists v_allowAnonCipherSuite2373:top. (exists v_check_client_version_in_pms_for_old_tls2374:top. (exists v_ciphersuites2375:top. (exists v_client_name2376:top. (exists v_compressions2377:top. (exists v_honourHelloReq2378:top. (exists v_maxVer2379:top. (exists v_minVer2380:top. (exists v_request_client_certificate2381:top. (exists v_safe_renegotiation2382:top. (exists v_safe_resumption2383:top. (exists v_server_name2384:top. (exists v_sessionDBExpiry2385:top. (exists v_sessionDBFileName2386:top. ((v_poptions = (v_Tuples__Tup14 v_allowAnonCipherSuite2373 v_check_client_version_in_pms_for_old_tls2374 v_ciphersuites2375 v_client_name2376 v_compressions2377 v_honourHelloReq2378 v_maxVer2379 v_minVer2380 v_request_client_certificate2381 v_safe_renegotiation2382 v_safe_resumption2383 v_server_name2384 v_sessionDBExpiry2385 v_sessionDBFileName2386)) /\ ((v_TLSConstants__IsProtocolVersion_p v_maxVer2379) /\ (v_TLSConstants__IsProtocolVersion_p v_minVer2380))))))))))))))))) -> (forall v_crand:top. (((v_Bytes__Length v_crand) = 32) -> (forall v_session:top. (((v_Bytes__Length v_session) <= 32) -> (forall v_ext:top. (forall v_mv:top. (((v_mv = (v_Tuples__Tup14__7 v_poptions)) /\ (exists v_l6632:top. (exists v_l6630:top. (exists v_l6628:top. (exists v_l6626:top. (exists v_l6624:top. (exists v_l6622:top. (exists v_l6620:top. (exists v_l6618:top. (exists v_l6616:top. (exists v_l6614:top. (exists v_l6612:top. (exists v_l6610:top. (exists v_l6608:top. (exists v_l6606:top. ((v_poptions = (v_Tuples__Tup14 v_l6606 v_l6608 v_l6610 v_l6612 v_l6614 v_l6616 v_l6618 v_l6620 v_l6622 v_l6624 v_l6626 v_l6628 v_l6630 v_l6632)) /\ (v_mv = v_l6618))))))))))))))))) -> ((v_mv = (v_Tuples__Tup14__7 v_poptions)) -> (forall v_l6706:top. ((v_l6706 = v_mv) -> (v_TLSConstants__IsProtocolVersion_p v_l6706)))))))))))))
(* Querying for (l67206721:int){l67206721 = 1} <: (l671467186722:int){pr_LessThanOrEqual(0, l671467186722)} *)
(* query pr_LessThanOrEqual(0, l6723) [HandshakeMessages.fs(271,21)] *)
goal g116_gl: (forall v_poptions:top. ((exists v_allowAnonCipherSuite2373:top. (exists v_check_client_version_in_pms_for_old_tls2374:top. (exists v_ciphersuites2375:top. (exists v_client_name2376:top. (exists v_compressions2377:top. (exists v_honourHelloReq2378:top. (exists v_maxVer2379:top. (exists v_minVer2380:top. (exists v_request_client_certificate2381:top. (exists v_safe_renegotiation2382:top. (exists v_safe_resumption2383:top. (exists v_server_name2384:top. (exists v_sessionDBExpiry2385:top. (exists v_sessionDBFileName2386:top. ((v_poptions = (v_Tuples__Tup14 v_allowAnonCipherSuite2373 v_check_client_version_in_pms_for_old_tls2374 v_ciphersuites2375 v_client_name2376 v_compressions2377 v_honourHelloReq2378 v_maxVer2379 v_minVer2380 v_request_client_certificate2381 v_safe_renegotiation2382 v_safe_resumption2383 v_server_name2384 v_sessionDBExpiry2385 v_sessionDBFileName2386)) /\ ((v_TLSConstants__IsProtocolVersion_p v_maxVer2379) /\ (v_TLSConstants__IsProtocolVersion_p v_minVer2380))))))))))))))))) -> (forall v_crand:top. (((v_Bytes__Length v_crand) = 32) -> (forall v_session:top. (((v_Bytes__Length v_session) <= 32) -> (forall v_ext:top. (forall v_mv:top. (((v_mv = (v_Tuples__Tup14__7 v_poptions)) /\ (exists v_l6632:top. (exists v_l6630:top. (exists v_l6628:top. (exists v_l6626:top. (exists v_l6624:top. (exists v_l6622:top. (exists v_l6620:top. (exists v_l6618:top. (exists v_l6616:top. (exists v_l6614:top. (exists v_l6612:top. (exists v_l6610:top. (exists v_l6608:top. (exists v_l6606:top. ((v_poptions = (v_Tuples__Tup14 v_l6606 v_l6608 v_l6610 v_l6612 v_l6614 v_l6616 v_l6618 v_l6620 v_l6622 v_l6624 v_l6626 v_l6628 v_l6630 v_l6632)) /\ (v_mv = v_l6618))))))))))))))))) -> ((v_mv = (v_Tuples__Tup14__7 v_poptions)) -> (forall v_cVerB:top. (((v_mv = v_mv) /\ (((v_Bytes__Length v_cVerB) = 2) /\ ((v_Bytes__B v_cVerB) = (v_TLSConstants__VersionBytes v_mv)))) -> (forall v_random:top. ((v_random = v_crand) -> ((v_random = v_crand) -> (forall v_l6723:top. ((v_l6723 = 1) -> (0 <= v_l6723))))))))))))))))))
(* Querying for (l68426843:int){l68426843 = 2} <: (l683668406844:int){pr_LessThanOrEqual(0, l683668406844)} *)
(* query pr_LessThanOrEqual(0, l6845) [HandshakeMessages.fs(274,21)] *)
goal g117_gl: (forall v_poptions:top. ((exists v_allowAnonCipherSuite2373:top. (exists v_check_client_version_in_pms_for_old_tls2374:top. (exists v_ciphersuites2375:top. (exists v_client_name2376:top. (exists v_compressions2377:top. (exists v_honourHelloReq2378:top. (exists v_maxVer2379:top. (exists v_minVer2380:top. (exists v_request_client_certificate2381:top. (exists v_safe_renegotiation2382:top. (exists v_safe_resumption2383:top. (exists v_server_name2384:top. (exists v_sessionDBExpiry2385:top. (exists v_sessionDBFileName2386:top. ((v_poptions = (v_Tuples__Tup14 v_allowAnonCipherSuite2373 v_check_client_version_in_pms_for_old_tls2374 v_ciphersuites2375 v_client_name2376 v_compressions2377 v_honourHelloReq2378 v_maxVer2379 v_minVer2380 v_request_client_certificate2381 v_safe_renegotiation2382 v_safe_resumption2383 v_server_name2384 v_sessionDBExpiry2385 v_sessionDBFileName2386)) /\ ((v_TLSConstants__IsProtocolVersion_p v_maxVer2379) /\ (v_TLSConstants__IsProtocolVersion_p v_minVer2380))))))))))))))))) -> (forall v_crand:top. (((v_Bytes__Length v_crand) = 32) -> (forall v_session:top. (((v_Bytes__Length v_session) <= 32) -> (forall v_ext:top. (forall v_mv:top. (((v_mv = (v_Tuples__Tup14__7 v_poptions)) /\ (exists v_l6632:top. (exists v_l6630:top. (exists v_l6628:top. (exists v_l6626:top. (exists v_l6624:top. (exists v_l6622:top. (exists v_l6620:top. (exists v_l6618:top. (exists v_l6616:top. (exists v_l6614:top. (exists v_l6612:top. (exists v_l6610:top. (exists v_l6608:top. (exists v_l6606:top. ((v_poptions = (v_Tuples__Tup14 v_l6606 v_l6608 v_l6610 v_l6612 v_l6614 v_l6616 v_l6618 v_l6620 v_l6622 v_l6624 v_l6626 v_l6628 v_l6630 v_l6632)) /\ (v_mv = v_l6618))))))))))))))))) -> ((v_mv = (v_Tuples__Tup14__7 v_poptions)) -> (forall v_cVerB:top. (((v_mv = v_mv) /\ (((v_Bytes__Length v_cVerB) = 2) /\ ((v_Bytes__B v_cVerB) = (v_TLSConstants__VersionBytes v_mv)))) -> (forall v_random:top. ((v_random = v_crand) -> ((v_random = v_crand) -> (forall v_csessB:top. (((v_session = v_session) /\ ((v_Bytes__B v_csessB) = (v_TLSConstants__VLBytes 1 (v_Bytes__B v_session)))) -> (forall v_cs:top. (((v_cs = (v_Tuples__Tup14__3 v_poptions)) /\ (exists v_l6758:top. (exists v_l6756:top. (exists v_l6754:top. (exists v_l6752:top. (exists v_l6750:top. (exists v_l6748:top. (exists v_l6746:top. (exists v_l6744:top. (exists v_l6742:top. (exists v_l6740:top. (exists v_l6738:top. (exists v_l6736:top. (exists v_l6734:top. (exists v_l6732:top. ((v_poptions = (v_Tuples__Tup14 v_l6732 v_l6734 v_l6736 v_l6738 v_l6740 v_l6742 v_l6744 v_l6746 v_l6748 v_l6750 v_l6752 v_l6754 v_l6756 v_l6758)) /\ (v_cs = v_l6736))))))))))))))))) -> ((v_cs = (v_Tuples__Tup14__3 v_poptions)) -> (forall v_csb:top. (((v_cs = v_cs) /\ ((v_Bytes__B v_csb) = (v_TLSConstants__CipherSuitesBytes v_cs))) -> (forall v_l6845:top. ((v_l6845 = 2) -> (0 <= v_l6845)))))))))))))))))))))))))
(* Querying for (l69746975:int){l69746975 = 1} <: (l696869726976:int){pr_LessThanOrEqual(0, l696869726976)} *)
(* query pr_LessThanOrEqual(0, l6977) [HandshakeMessages.fs(277,21)] *)
goal g118_gl: (forall v_poptions:top. ((exists v_allowAnonCipherSuite2373:top. (exists v_check_client_version_in_pms_for_old_tls2374:top. (exists v_ciphersuites2375:top. (exists v_client_name2376:top. (exists v_compressions2377:top. (exists v_honourHelloReq2378:top. (exists v_maxVer2379:top. (exists v_minVer2380:top. (exists v_request_client_certificate2381:top. (exists v_safe_renegotiation2382:top. (exists v_safe_resumption2383:top. (exists v_server_name2384:top. (exists v_sessionDBExpiry2385:top. (exists v_sessionDBFileName2386:top. ((v_poptions = (v_Tuples__Tup14 v_allowAnonCipherSuite2373 v_check_client_version_in_pms_for_old_tls2374 v_ciphersuites2375 v_client_name2376 v_compressions2377 v_honourHelloReq2378 v_maxVer2379 v_minVer2380 v_request_client_certificate2381 v_safe_renegotiation2382 v_safe_resumption2383 v_server_name2384 v_sessionDBExpiry2385 v_sessionDBFileName2386)) /\ ((v_TLSConstants__IsProtocolVersion_p v_maxVer2379) /\ (v_TLSConstants__IsProtocolVersion_p v_minVer2380))))))))))))))))) -> (forall v_crand:top. (((v_Bytes__Length v_crand) = 32) -> (forall v_session:top. (((v_Bytes__Length v_session) <= 32) -> (forall v_ext:top. (forall v_mv:top. (((v_mv = (v_Tuples__Tup14__7 v_poptions)) /\ (exists v_l6632:top. (exists v_l6630:top. (exists v_l6628:top. (exists v_l6626:top. (exists v_l6624:top. (exists v_l6622:top. (exists v_l6620:top. (exists v_l6618:top. (exists v_l6616:top. (exists v_l6614:top. (exists v_l6612:top. (exists v_l6610:top. (exists v_l6608:top. (exists v_l6606:top. ((v_poptions = (v_Tuples__Tup14 v_l6606 v_l6608 v_l6610 v_l6612 v_l6614 v_l6616 v_l6618 v_l6620 v_l6622 v_l6624 v_l6626 v_l6628 v_l6630 v_l6632)) /\ (v_mv = v_l6618))))))))))))))))) -> ((v_mv = (v_Tuples__Tup14__7 v_poptions)) -> (forall v_cVerB:top. (((v_mv = v_mv) /\ (((v_Bytes__Length v_cVerB) = 2) /\ ((v_Bytes__B v_cVerB) = (v_TLSConstants__VersionBytes v_mv)))) -> (forall v_random:top. ((v_random = v_crand) -> ((v_random = v_crand) -> (forall v_csessB:top. (((v_session = v_session) /\ ((v_Bytes__B v_csessB) = (v_TLSConstants__VLBytes 1 (v_Bytes__B v_session)))) -> (forall v_cs:top. (((v_cs = (v_Tuples__Tup14__3 v_poptions)) /\ (exists v_l6758:top. (exists v_l6756:top. (exists v_l6754:top. (exists v_l6752:top. (exists v_l6750:top. (exists v_l6748:top. (exists v_l6746:top. (exists v_l6744:top. (exists v_l6742:top. (exists v_l6740:top. (exists v_l6738:top. (exists v_l6736:top. (exists v_l6734:top. (exists v_l6732:top. ((v_poptions = (v_Tuples__Tup14 v_l6732 v_l6734 v_l6736 v_l6738 v_l6740 v_l6742 v_l6744 v_l6746 v_l6748 v_l6750 v_l6752 v_l6754 v_l6756 v_l6758)) /\ (v_cs = v_l6736))))))))))))))))) -> ((v_cs = (v_Tuples__Tup14__3 v_poptions)) -> (forall v_csb:top. (((v_cs = v_cs) /\ ((v_Bytes__B v_csb) = (v_TLSConstants__CipherSuitesBytes v_cs))) -> (forall v_ccsuitesB:top. (((v_csb = v_csb) /\ ((v_Bytes__B v_ccsuitesB) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_csb)))) -> (forall v_cm:top. (((v_cm = (v_Tuples__Tup14__5 v_poptions)) /\ (exists v_l6880:top. (exists v_l6878:top. (exists v_l6876:top. (exists v_l6874:top. (exists v_l6872:top. (exists v_l6870:top. (exists v_l6868:top. (exists v_l6866:top. (exists v_l6864:top. (exists v_l6862:top. (exists v_l6860:top. (exists v_l6858:top. (exists v_l6856:top. (exists v_l6854:top. ((v_poptions = (v_Tuples__Tup14 v_l6854 v_l6856 v_l6858 v_l6860 v_l6862 v_l6864 v_l6866 v_l6868 v_l6870 v_l6872 v_l6874 v_l6876 v_l6878 v_l6880)) /\ (v_cm = v_l6862))))))))))))))))) -> ((v_cm = (v_Tuples__Tup14__5 v_poptions)) -> (forall v_cmb:top. (((v_cm = v_cm) /\ ((v_Bytes__B v_cmb) = (v_TLSConstants__CompressionsBytes v_cm))) -> (forall v_l6977:top. ((v_l6977 = 1) -> (0 <= v_l6977))))))))))))))))))))))))))))))))
(* Querying for (l70617062:PreHandshakeType){l70617062 = HT_client_hello ()} <: (ht705570597063:PreHandshakeType){IsHandshakeType(ht705570597063)} *)
(* query IsHandshakeType(l7064) [HandshakeMessages.fs(279,4)] *)
goal g119_gl: (forall v_poptions:top. ((exists v_allowAnonCipherSuite2373:top. (exists v_check_client_version_in_pms_for_old_tls2374:top. (exists v_ciphersuites2375:top. (exists v_client_name2376:top. (exists v_compressions2377:top. (exists v_honourHelloReq2378:top. (exists v_maxVer2379:top. (exists v_minVer2380:top. (exists v_request_client_certificate2381:top. (exists v_safe_renegotiation2382:top. (exists v_safe_resumption2383:top. (exists v_server_name2384:top. (exists v_sessionDBExpiry2385:top. (exists v_sessionDBFileName2386:top. ((v_poptions = (v_Tuples__Tup14 v_allowAnonCipherSuite2373 v_check_client_version_in_pms_for_old_tls2374 v_ciphersuites2375 v_client_name2376 v_compressions2377 v_honourHelloReq2378 v_maxVer2379 v_minVer2380 v_request_client_certificate2381 v_safe_renegotiation2382 v_safe_resumption2383 v_server_name2384 v_sessionDBExpiry2385 v_sessionDBFileName2386)) /\ ((v_TLSConstants__IsProtocolVersion_p v_maxVer2379) /\ (v_TLSConstants__IsProtocolVersion_p v_minVer2380))))))))))))))))) -> (forall v_crand:top. (((v_Bytes__Length v_crand) = 32) -> (forall v_session:top. (((v_Bytes__Length v_session) <= 32) -> (forall v_ext:top. (forall v_mv:top. (((v_mv = (v_Tuples__Tup14__7 v_poptions)) /\ (exists v_l6632:top. (exists v_l6630:top. (exists v_l6628:top. (exists v_l6626:top. (exists v_l6624:top. (exists v_l6622:top. (exists v_l6620:top. (exists v_l6618:top. (exists v_l6616:top. (exists v_l6614:top. (exists v_l6612:top. (exists v_l6610:top. (exists v_l6608:top. (exists v_l6606:top. ((v_poptions = (v_Tuples__Tup14 v_l6606 v_l6608 v_l6610 v_l6612 v_l6614 v_l6616 v_l6618 v_l6620 v_l6622 v_l6624 v_l6626 v_l6628 v_l6630 v_l6632)) /\ (v_mv = v_l6618))))))))))))))))) -> ((v_mv = (v_Tuples__Tup14__7 v_poptions)) -> (forall v_cVerB:top. (((v_mv = v_mv) /\ (((v_Bytes__Length v_cVerB) = 2) /\ ((v_Bytes__B v_cVerB) = (v_TLSConstants__VersionBytes v_mv)))) -> (forall v_random:top. ((v_random = v_crand) -> ((v_random = v_crand) -> (forall v_csessB:top. (((v_session = v_session) /\ ((v_Bytes__B v_csessB) = (v_TLSConstants__VLBytes 1 (v_Bytes__B v_session)))) -> (forall v_cs:top. (((v_cs = (v_Tuples__Tup14__3 v_poptions)) /\ (exists v_l6758:top. (exists v_l6756:top. (exists v_l6754:top. (exists v_l6752:top. (exists v_l6750:top. (exists v_l6748:top. (exists v_l6746:top. (exists v_l6744:top. (exists v_l6742:top. (exists v_l6740:top. (exists v_l6738:top. (exists v_l6736:top. (exists v_l6734:top. (exists v_l6732:top. ((v_poptions = (v_Tuples__Tup14 v_l6732 v_l6734 v_l6736 v_l6738 v_l6740 v_l6742 v_l6744 v_l6746 v_l6748 v_l6750 v_l6752 v_l6754 v_l6756 v_l6758)) /\ (v_cs = v_l6736))))))))))))))))) -> ((v_cs = (v_Tuples__Tup14__3 v_poptions)) -> (forall v_csb:top. (((v_cs = v_cs) /\ ((v_Bytes__B v_csb) = (v_TLSConstants__CipherSuitesBytes v_cs))) -> (forall v_ccsuitesB:top. (((v_csb = v_csb) /\ ((v_Bytes__B v_ccsuitesB) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_csb)))) -> (forall v_cm:top. (((v_cm = (v_Tuples__Tup14__5 v_poptions)) /\ (exists v_l6880:top. (exists v_l6878:top. (exists v_l6876:top. (exists v_l6874:top. (exists v_l6872:top. (exists v_l6870:top. (exists v_l6868:top. (exists v_l6866:top. (exists v_l6864:top. (exists v_l6862:top. (exists v_l6860:top. (exists v_l6858:top. (exists v_l6856:top. (exists v_l6854:top. ((v_poptions = (v_Tuples__Tup14 v_l6854 v_l6856 v_l6858 v_l6860 v_l6862 v_l6864 v_l6866 v_l6868 v_l6870 v_l6872 v_l6874 v_l6876 v_l6878 v_l6880)) /\ (v_cm = v_l6862))))))))))))))))) -> ((v_cm = (v_Tuples__Tup14__5 v_poptions)) -> (forall v_cmb:top. (((v_cm = v_cm) /\ ((v_Bytes__B v_cmb) = (v_TLSConstants__CompressionsBytes v_cm))) -> (forall v_ccompmethB:top. (((v_cmb = v_cmb) /\ ((v_Bytes__B v_ccompmethB) = (v_TLSConstants__VLBytes 1 (v_Bytes__B v_cmb)))) -> (forall v_data:top. ((exists v_b26988:top. ((exists v_b26999:top. ((exists v_b27010:top. ((exists v_b27021:top. (((v_ext = v_ext) /\ ((v_Bytes__B v_b27021) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_ccompmethB) (v_Bytes__B v_ext)))) /\ ((v_Bytes__B v_b27010) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_ccsuitesB) (v_Bytes__B v_b27021))))) /\ ((v_Bytes__B v_b26999) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_csessB) (v_Bytes__B v_b27010))))) /\ ((v_Bytes__B v_b26988) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_random) (v_Bytes__B v_b26999))))) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_cVerB) (v_Bytes__B v_b26988))))) -> (forall v_l7064:top. ((v_l7064 = (v_HandshakeMessages__HT_client_hello )) -> (v_HandshakeMessages__IsHandshakeType_p v_l7064))))))))))))))))))))))))))))))))))))
(* Querying for (m70587070:Bytes.bytes){data = data /\ Bytes.B (m70587070) = MessageBytes (HT_client_hello (), Bytes.B (data))} <: (m7071:Bytes.bytes){Bytes.B (m7071) = ClientHelloMsg (Tuples.Tup14.7 poptions, crand, session, TLSConstants.CipherSuitesBytes (Tuples.Tup14.3 poptions), TLSConstants.CompressionsBytes (Tuples.Tup14.5 poptions), ext)} *)
(* query Bytes.B (l7072) = ClientHelloMsg (Tuples.Tup14.7 poptions, crand, session, TLSConstants.CipherSuitesBytes (Tuples.Tup14.3 poptions), TLSConstants.CompressionsBytes (Tuples.Tup14.5 poptions), ext) [HandshakeMessages.fs(279,4)] *)
goal g120_gl: (forall v_poptions:top. ((exists v_allowAnonCipherSuite2373:top. (exists v_check_client_version_in_pms_for_old_tls2374:top. (exists v_ciphersuites2375:top. (exists v_client_name2376:top. (exists v_compressions2377:top. (exists v_honourHelloReq2378:top. (exists v_maxVer2379:top. (exists v_minVer2380:top. (exists v_request_client_certificate2381:top. (exists v_safe_renegotiation2382:top. (exists v_safe_resumption2383:top. (exists v_server_name2384:top. (exists v_sessionDBExpiry2385:top. (exists v_sessionDBFileName2386:top. ((v_poptions = (v_Tuples__Tup14 v_allowAnonCipherSuite2373 v_check_client_version_in_pms_for_old_tls2374 v_ciphersuites2375 v_client_name2376 v_compressions2377 v_honourHelloReq2378 v_maxVer2379 v_minVer2380 v_request_client_certificate2381 v_safe_renegotiation2382 v_safe_resumption2383 v_server_name2384 v_sessionDBExpiry2385 v_sessionDBFileName2386)) /\ ((v_TLSConstants__IsProtocolVersion_p v_maxVer2379) /\ (v_TLSConstants__IsProtocolVersion_p v_minVer2380))))))))))))))))) -> (forall v_crand:top. (((v_Bytes__Length v_crand) = 32) -> (forall v_session:top. (((v_Bytes__Length v_session) <= 32) -> (forall v_ext:top. (forall v_mv:top. (((v_mv = (v_Tuples__Tup14__7 v_poptions)) /\ (exists v_l6632:top. (exists v_l6630:top. (exists v_l6628:top. (exists v_l6626:top. (exists v_l6624:top. (exists v_l6622:top. (exists v_l6620:top. (exists v_l6618:top. (exists v_l6616:top. (exists v_l6614:top. (exists v_l6612:top. (exists v_l6610:top. (exists v_l6608:top. (exists v_l6606:top. ((v_poptions = (v_Tuples__Tup14 v_l6606 v_l6608 v_l6610 v_l6612 v_l6614 v_l6616 v_l6618 v_l6620 v_l6622 v_l6624 v_l6626 v_l6628 v_l6630 v_l6632)) /\ (v_mv = v_l6618))))))))))))))))) -> ((v_mv = (v_Tuples__Tup14__7 v_poptions)) -> (forall v_cVerB:top. (((v_mv = v_mv) /\ (((v_Bytes__Length v_cVerB) = 2) /\ ((v_Bytes__B v_cVerB) = (v_TLSConstants__VersionBytes v_mv)))) -> (forall v_random:top. ((v_random = v_crand) -> ((v_random = v_crand) -> (forall v_csessB:top. (((v_session = v_session) /\ ((v_Bytes__B v_csessB) = (v_TLSConstants__VLBytes 1 (v_Bytes__B v_session)))) -> (forall v_cs:top. (((v_cs = (v_Tuples__Tup14__3 v_poptions)) /\ (exists v_l6758:top. (exists v_l6756:top. (exists v_l6754:top. (exists v_l6752:top. (exists v_l6750:top. (exists v_l6748:top. (exists v_l6746:top. (exists v_l6744:top. (exists v_l6742:top. (exists v_l6740:top. (exists v_l6738:top. (exists v_l6736:top. (exists v_l6734:top. (exists v_l6732:top. ((v_poptions = (v_Tuples__Tup14 v_l6732 v_l6734 v_l6736 v_l6738 v_l6740 v_l6742 v_l6744 v_l6746 v_l6748 v_l6750 v_l6752 v_l6754 v_l6756 v_l6758)) /\ (v_cs = v_l6736))))))))))))))))) -> ((v_cs = (v_Tuples__Tup14__3 v_poptions)) -> (forall v_csb:top. (((v_cs = v_cs) /\ ((v_Bytes__B v_csb) = (v_TLSConstants__CipherSuitesBytes v_cs))) -> (forall v_ccsuitesB:top. (((v_csb = v_csb) /\ ((v_Bytes__B v_ccsuitesB) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_csb)))) -> (forall v_cm:top. (((v_cm = (v_Tuples__Tup14__5 v_poptions)) /\ (exists v_l6880:top. (exists v_l6878:top. (exists v_l6876:top. (exists v_l6874:top. (exists v_l6872:top. (exists v_l6870:top. (exists v_l6868:top. (exists v_l6866:top. (exists v_l6864:top. (exists v_l6862:top. (exists v_l6860:top. (exists v_l6858:top. (exists v_l6856:top. (exists v_l6854:top. ((v_poptions = (v_Tuples__Tup14 v_l6854 v_l6856 v_l6858 v_l6860 v_l6862 v_l6864 v_l6866 v_l6868 v_l6870 v_l6872 v_l6874 v_l6876 v_l6878 v_l6880)) /\ (v_cm = v_l6862))))))))))))))))) -> ((v_cm = (v_Tuples__Tup14__5 v_poptions)) -> (forall v_cmb:top. (((v_cm = v_cm) /\ ((v_Bytes__B v_cmb) = (v_TLSConstants__CompressionsBytes v_cm))) -> (forall v_ccompmethB:top. (((v_cmb = v_cmb) /\ ((v_Bytes__B v_ccompmethB) = (v_TLSConstants__VLBytes 1 (v_Bytes__B v_cmb)))) -> (forall v_data:top. ((exists v_b26988:top. ((exists v_b26999:top. ((exists v_b27010:top. ((exists v_b27021:top. (((v_ext = v_ext) /\ ((v_Bytes__B v_b27021) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_ccompmethB) (v_Bytes__B v_ext)))) /\ ((v_Bytes__B v_b27010) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_ccsuitesB) (v_Bytes__B v_b27021))))) /\ ((v_Bytes__B v_b26999) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_csessB) (v_Bytes__B v_b27010))))) /\ ((v_Bytes__B v_b26988) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_random) (v_Bytes__B v_b26999))))) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_cVerB) (v_Bytes__B v_b26988))))) -> (forall v_l7072:top. (((v_data = v_data) /\ ((v_Bytes__B v_l7072) = (v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_client_hello ) (v_Bytes__B v_data)))) -> ((v_Bytes__B v_l7072) = (v_HandshakeMessages__ClientHelloMsg (v_Tuples__Tup14__7 v_poptions) v_crand v_session (v_TLSConstants__CipherSuitesBytes (v_Tuples__Tup14__3 v_poptions)) (v_TLSConstants__CompressionsBytes (v_Tuples__Tup14__5 v_poptions)) v_ext)))))))))))))))))))))))))))))))))))))
(* Querying for (l70797179:TLSConstants.PreProtocolVersion){l70797179 = Tuples.Tup14.10 sinfo /\ (?l7106. (?l7104. (?l7102. (?l7100. (?l7098. (?l7096. (?l7094. (?l7092. (?l7090. (?l7088. (?l7086. (?l7084. (?l7082. (?l7080. sinfo = (l7080, l7082, l7084, l7086, l7088, l7090, l7092, l7094, l7096, l7098, l7100, l7102, l7104, l7106) /\ l70797179 = l7098))))))))))))))} <: (pv707570777180:TLSConstants.PreProtocolVersion){TLSConstants.IsProtocolVersion(pv707570777180)} *)
(* query TLSConstants.IsProtocolVersion(l7181) [HandshakeMessages.fs(282,15)] *)
goal g121_gl: (forall v_sinfo:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_sinfo = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> (forall v_srand:top. (((v_Bytes__Length v_srand) = 32) -> (forall v_ext:top. (forall v_l7181:top. (((v_l7181 = (v_Tuples__Tup14__10 v_sinfo)) /\ (exists v_l7106:top. (exists v_l7104:top. (exists v_l7102:top. (exists v_l7100:top. (exists v_l7098:top. (exists v_l7096:top. (exists v_l7094:top. (exists v_l7092:top. (exists v_l7090:top. (exists v_l7088:top. (exists v_l7086:top. (exists v_l7084:top. (exists v_l7082:top. (exists v_l7080:top. ((v_sinfo = (v_Tuples__Tup14 v_l7080 v_l7082 v_l7084 v_l7086 v_l7088 v_l7090 v_l7092 v_l7094 v_l7096 v_l7098 v_l7100 v_l7102 v_l7104 v_l7106)) /\ (v_l7181 = v_l7098))))))))))))))))) -> (v_TLSConstants__IsProtocolVersion_p v_l7181))))))))
(* Querying for (l71927193:int){l71927193 = 1} <: (l718671907194:int){pr_LessThanOrEqual(0, l718671907194)} *)
(* query pr_LessThanOrEqual(0, l7195) [HandshakeMessages.fs(283,15)] *)
goal g122_gl: (forall v_sinfo:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_sinfo = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> (forall v_srand:top. (((v_Bytes__Length v_srand) = 32) -> (forall v_ext:top. (forall v_verB:top. (((((v_Tuples__Tup14__10 v_sinfo) = (v_Tuples__Tup14__10 v_sinfo)) /\ (exists v_l7106:top. (exists v_l7104:top. (exists v_l7102:top. (exists v_l7100:top. (exists v_l7098:top. (exists v_l7096:top. (exists v_l7094:top. (exists v_l7092:top. (exists v_l7090:top. (exists v_l7088:top. (exists v_l7086:top. (exists v_l7084:top. (exists v_l7082:top. (exists v_l7080:top. ((v_sinfo = (v_Tuples__Tup14 v_l7080 v_l7082 v_l7084 v_l7086 v_l7088 v_l7090 v_l7092 v_l7094 v_l7096 v_l7098 v_l7100 v_l7102 v_l7104 v_l7106)) /\ ((v_Tuples__Tup14__10 v_sinfo) = v_l7098))))))))))))))))) /\ (((v_Bytes__Length v_verB) = 2) /\ ((v_Bytes__B v_verB) = (v_TLSConstants__VersionBytes (v_Tuples__Tup14__10 v_sinfo))))) -> (forall v_l7195:top. ((v_l7195 = 1) -> (0 <= v_l7195))))))))))
(* Querying for (l74177517:TLSConstants.PreCompression){l74177517 = Tuples.Tup14.5 sinfo /\ (?l7444. (?l7442. (?l7440. (?l7438. (?l7436. (?l7434. (?l7432. (?l7430. (?l7428. (?l7426. (?l7424. (?l7422. (?l7420. (?l7418. sinfo = (l7418, l7420, l7422, l7424, l7426, l7428, l7430, l7432, l7434, l7436, l7438, l7440, l7442, l7444) /\ l74177517 = l7426))))))))))))))} <: (c741374157518:TLSConstants.PreCompression){TLSConstants.IsCompression(c741374157518)} *)
(* query TLSConstants.IsCompression(l7519) [HandshakeMessages.fs(285,14)] *)
goal g123_gl: (forall v_sinfo:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_sinfo = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> (forall v_srand:top. (((v_Bytes__Length v_srand) = 32) -> (forall v_ext:top. (forall v_verB:top. (((((v_Tuples__Tup14__10 v_sinfo) = (v_Tuples__Tup14__10 v_sinfo)) /\ (exists v_l7106:top. (exists v_l7104:top. (exists v_l7102:top. (exists v_l7100:top. (exists v_l7098:top. (exists v_l7096:top. (exists v_l7094:top. (exists v_l7092:top. (exists v_l7090:top. (exists v_l7088:top. (exists v_l7086:top. (exists v_l7084:top. (exists v_l7082:top. (exists v_l7080:top. ((v_sinfo = (v_Tuples__Tup14 v_l7080 v_l7082 v_l7084 v_l7086 v_l7088 v_l7090 v_l7092 v_l7094 v_l7096 v_l7098 v_l7100 v_l7102 v_l7104 v_l7106)) /\ ((v_Tuples__Tup14__10 v_sinfo) = v_l7098))))))))))))))))) /\ (((v_Bytes__Length v_verB) = 2) /\ ((v_Bytes__B v_verB) = (v_TLSConstants__VersionBytes (v_Tuples__Tup14__10 v_sinfo))))) -> (forall v_sidB:top. (((((v_Tuples__Tup14__13 v_sinfo) = (v_Tuples__Tup14__13 v_sinfo)) /\ (exists v_l7224:top. (exists v_l7222:top. (exists v_l7220:top. (exists v_l7218:top. (exists v_l7216:top. (exists v_l7214:top. (exists v_l7212:top. (exists v_l7210:top. (exists v_l7208:top. (exists v_l7206:top. (exists v_l7204:top. (exists v_l7202:top. (exists v_l7200:top. (exists v_l7198:top. ((v_sinfo = (v_Tuples__Tup14 v_l7198 v_l7200 v_l7202 v_l7204 v_l7206 v_l7208 v_l7210 v_l7212 v_l7214 v_l7216 v_l7218 v_l7220 v_l7222 v_l7224)) /\ ((v_Tuples__Tup14__13 v_sinfo) = v_l7222))))))))))))))))) /\ ((v_Bytes__B v_sidB) = (v_TLSConstants__VLBytes 1 (v_Bytes__B (v_Tuples__Tup14__13 v_sinfo))))) -> (forall v_csB:top. (((((v_Tuples__Tup14__1 v_sinfo) = (v_Tuples__Tup14__1 v_sinfo)) /\ (exists v_l7334:top. (exists v_l7332:top. (exists v_l7330:top. (exists v_l7328:top. (exists v_l7326:top. (exists v_l7324:top. (exists v_l7322:top. (exists v_l7320:top. (exists v_l7318:top. (exists v_l7316:top. (exists v_l7314:top. (exists v_l7312:top. (exists v_l7310:top. (exists v_l7308:top. ((v_sinfo = (v_Tuples__Tup14 v_l7308 v_l7310 v_l7312 v_l7314 v_l7316 v_l7318 v_l7320 v_l7322 v_l7324 v_l7326 v_l7328 v_l7330 v_l7332 v_l7334)) /\ ((v_Tuples__Tup14__1 v_sinfo) = v_l7308))))))))))))))))) /\ (((v_Bytes__Length v_csB) = 2) /\ ((v_Bytes__B v_csB) = (v_TLSConstants__CipherSuiteBytes (v_Tuples__Tup14__1 v_sinfo))))) -> (forall v_l7519:top. (((v_l7519 = (v_Tuples__Tup14__5 v_sinfo)) /\ (exists v_l7444:top. (exists v_l7442:top. (exists v_l7440:top. (exists v_l7438:top. (exists v_l7436:top. (exists v_l7434:top. (exists v_l7432:top. (exists v_l7430:top. (exists v_l7428:top. (exists v_l7426:top. (exists v_l7424:top. (exists v_l7422:top. (exists v_l7420:top. (exists v_l7418:top. ((v_sinfo = (v_Tuples__Tup14 v_l7418 v_l7420 v_l7422 v_l7424 v_l7426 v_l7428 v_l7430 v_l7432 v_l7434 v_l7436 v_l7438 v_l7440 v_l7442 v_l7444)) /\ (v_l7519 = v_l7426))))))))))))))))) -> (v_TLSConstants__IsCompression_p v_l7519))))))))))))))
(* Querying for (l75997600:PreHandshakeType){l75997600 = HT_server_hello ()} <: (ht759375977601:PreHandshakeType){IsHandshakeType(ht759375977601)} *)
(* query IsHandshakeType(l7602) [HandshakeMessages.fs(287,4)] *)
goal g124_gl: (forall v_sinfo:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_sinfo = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> (forall v_srand:top. (((v_Bytes__Length v_srand) = 32) -> (forall v_ext:top. (forall v_verB:top. (((((v_Tuples__Tup14__10 v_sinfo) = (v_Tuples__Tup14__10 v_sinfo)) /\ (exists v_l7106:top. (exists v_l7104:top. (exists v_l7102:top. (exists v_l7100:top. (exists v_l7098:top. (exists v_l7096:top. (exists v_l7094:top. (exists v_l7092:top. (exists v_l7090:top. (exists v_l7088:top. (exists v_l7086:top. (exists v_l7084:top. (exists v_l7082:top. (exists v_l7080:top. ((v_sinfo = (v_Tuples__Tup14 v_l7080 v_l7082 v_l7084 v_l7086 v_l7088 v_l7090 v_l7092 v_l7094 v_l7096 v_l7098 v_l7100 v_l7102 v_l7104 v_l7106)) /\ ((v_Tuples__Tup14__10 v_sinfo) = v_l7098))))))))))))))))) /\ (((v_Bytes__Length v_verB) = 2) /\ ((v_Bytes__B v_verB) = (v_TLSConstants__VersionBytes (v_Tuples__Tup14__10 v_sinfo))))) -> (forall v_sidB:top. (((((v_Tuples__Tup14__13 v_sinfo) = (v_Tuples__Tup14__13 v_sinfo)) /\ (exists v_l7224:top. (exists v_l7222:top. (exists v_l7220:top. (exists v_l7218:top. (exists v_l7216:top. (exists v_l7214:top. (exists v_l7212:top. (exists v_l7210:top. (exists v_l7208:top. (exists v_l7206:top. (exists v_l7204:top. (exists v_l7202:top. (exists v_l7200:top. (exists v_l7198:top. ((v_sinfo = (v_Tuples__Tup14 v_l7198 v_l7200 v_l7202 v_l7204 v_l7206 v_l7208 v_l7210 v_l7212 v_l7214 v_l7216 v_l7218 v_l7220 v_l7222 v_l7224)) /\ ((v_Tuples__Tup14__13 v_sinfo) = v_l7222))))))))))))))))) /\ ((v_Bytes__B v_sidB) = (v_TLSConstants__VLBytes 1 (v_Bytes__B (v_Tuples__Tup14__13 v_sinfo))))) -> (forall v_csB:top. (((((v_Tuples__Tup14__1 v_sinfo) = (v_Tuples__Tup14__1 v_sinfo)) /\ (exists v_l7334:top. (exists v_l7332:top. (exists v_l7330:top. (exists v_l7328:top. (exists v_l7326:top. (exists v_l7324:top. (exists v_l7322:top. (exists v_l7320:top. (exists v_l7318:top. (exists v_l7316:top. (exists v_l7314:top. (exists v_l7312:top. (exists v_l7310:top. (exists v_l7308:top. ((v_sinfo = (v_Tuples__Tup14 v_l7308 v_l7310 v_l7312 v_l7314 v_l7316 v_l7318 v_l7320 v_l7322 v_l7324 v_l7326 v_l7328 v_l7330 v_l7332 v_l7334)) /\ ((v_Tuples__Tup14__1 v_sinfo) = v_l7308))))))))))))))))) /\ (((v_Bytes__Length v_csB) = 2) /\ ((v_Bytes__B v_csB) = (v_TLSConstants__CipherSuiteBytes (v_Tuples__Tup14__1 v_sinfo))))) -> (forall v_cmB:top. (((((v_Tuples__Tup14__5 v_sinfo) = (v_Tuples__Tup14__5 v_sinfo)) /\ (exists v_l7444:top. (exists v_l7442:top. (exists v_l7440:top. (exists v_l7438:top. (exists v_l7436:top. (exists v_l7434:top. (exists v_l7432:top. (exists v_l7430:top. (exists v_l7428:top. (exists v_l7426:top. (exists v_l7424:top. (exists v_l7422:top. (exists v_l7420:top. (exists v_l7418:top. ((v_sinfo = (v_Tuples__Tup14 v_l7418 v_l7420 v_l7422 v_l7424 v_l7426 v_l7428 v_l7430 v_l7432 v_l7434 v_l7436 v_l7438 v_l7440 v_l7442 v_l7444)) /\ ((v_Tuples__Tup14__5 v_sinfo) = v_l7426))))))))))))))))) /\ ((v_TLSConstants__CompressionBytes (v_Tuples__Tup14__5 v_sinfo)) = (v_Bytes__B v_cmB))) -> (forall v_data:top. ((exists v_b27526:top. ((exists v_b27537:top. ((exists v_b27548:top. ((exists v_b27559:top. (((v_ext = v_ext) /\ ((v_Bytes__B v_b27559) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_cmB) (v_Bytes__B v_ext)))) /\ ((v_Bytes__B v_b27548) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_csB) (v_Bytes__B v_b27559))))) /\ ((v_Bytes__B v_b27537) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_sidB) (v_Bytes__B v_b27548))))) /\ ((v_Bytes__B v_b27526) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_srand) (v_Bytes__B v_b27537))))) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_verB) (v_Bytes__B v_b27526))))) -> (forall v_l7602:top. ((v_l7602 = (v_HandshakeMessages__HT_server_hello )) -> (v_HandshakeMessages__IsHandshakeType_p v_l7602))))))))))))))))))
(* Querying for (m75967608:Bytes.bytes){data = data /\ Bytes.B (m75967608) = MessageBytes (HT_server_hello (), Bytes.B (data))} <: (b7609:Bytes.bytes){Bytes.B (b7609) = ServerHelloMsg (Tuples.Tup14.10 sinfo, srand, Tuples.Tup14.13 sinfo, Tuples.Tup14.1 sinfo, Tuples.Tup14.5 sinfo, ext)} *)
(* query Bytes.B (l7610) = ServerHelloMsg (Tuples.Tup14.10 sinfo, srand, Tuples.Tup14.13 sinfo, Tuples.Tup14.1 sinfo, Tuples.Tup14.5 sinfo, ext) [HandshakeMessages.fs(287,4)] *)
goal g125_gl: (forall v_sinfo:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_sinfo = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> (forall v_srand:top. (((v_Bytes__Length v_srand) = 32) -> (forall v_ext:top. (forall v_verB:top. (((((v_Tuples__Tup14__10 v_sinfo) = (v_Tuples__Tup14__10 v_sinfo)) /\ (exists v_l7106:top. (exists v_l7104:top. (exists v_l7102:top. (exists v_l7100:top. (exists v_l7098:top. (exists v_l7096:top. (exists v_l7094:top. (exists v_l7092:top. (exists v_l7090:top. (exists v_l7088:top. (exists v_l7086:top. (exists v_l7084:top. (exists v_l7082:top. (exists v_l7080:top. ((v_sinfo = (v_Tuples__Tup14 v_l7080 v_l7082 v_l7084 v_l7086 v_l7088 v_l7090 v_l7092 v_l7094 v_l7096 v_l7098 v_l7100 v_l7102 v_l7104 v_l7106)) /\ ((v_Tuples__Tup14__10 v_sinfo) = v_l7098))))))))))))))))) /\ (((v_Bytes__Length v_verB) = 2) /\ ((v_Bytes__B v_verB) = (v_TLSConstants__VersionBytes (v_Tuples__Tup14__10 v_sinfo))))) -> (forall v_sidB:top. (((((v_Tuples__Tup14__13 v_sinfo) = (v_Tuples__Tup14__13 v_sinfo)) /\ (exists v_l7224:top. (exists v_l7222:top. (exists v_l7220:top. (exists v_l7218:top. (exists v_l7216:top. (exists v_l7214:top. (exists v_l7212:top. (exists v_l7210:top. (exists v_l7208:top. (exists v_l7206:top. (exists v_l7204:top. (exists v_l7202:top. (exists v_l7200:top. (exists v_l7198:top. ((v_sinfo = (v_Tuples__Tup14 v_l7198 v_l7200 v_l7202 v_l7204 v_l7206 v_l7208 v_l7210 v_l7212 v_l7214 v_l7216 v_l7218 v_l7220 v_l7222 v_l7224)) /\ ((v_Tuples__Tup14__13 v_sinfo) = v_l7222))))))))))))))))) /\ ((v_Bytes__B v_sidB) = (v_TLSConstants__VLBytes 1 (v_Bytes__B (v_Tuples__Tup14__13 v_sinfo))))) -> (forall v_csB:top. (((((v_Tuples__Tup14__1 v_sinfo) = (v_Tuples__Tup14__1 v_sinfo)) /\ (exists v_l7334:top. (exists v_l7332:top. (exists v_l7330:top. (exists v_l7328:top. (exists v_l7326:top. (exists v_l7324:top. (exists v_l7322:top. (exists v_l7320:top. (exists v_l7318:top. (exists v_l7316:top. (exists v_l7314:top. (exists v_l7312:top. (exists v_l7310:top. (exists v_l7308:top. ((v_sinfo = (v_Tuples__Tup14 v_l7308 v_l7310 v_l7312 v_l7314 v_l7316 v_l7318 v_l7320 v_l7322 v_l7324 v_l7326 v_l7328 v_l7330 v_l7332 v_l7334)) /\ ((v_Tuples__Tup14__1 v_sinfo) = v_l7308))))))))))))))))) /\ (((v_Bytes__Length v_csB) = 2) /\ ((v_Bytes__B v_csB) = (v_TLSConstants__CipherSuiteBytes (v_Tuples__Tup14__1 v_sinfo))))) -> (forall v_cmB:top. (((((v_Tuples__Tup14__5 v_sinfo) = (v_Tuples__Tup14__5 v_sinfo)) /\ (exists v_l7444:top. (exists v_l7442:top. (exists v_l7440:top. (exists v_l7438:top. (exists v_l7436:top. (exists v_l7434:top. (exists v_l7432:top. (exists v_l7430:top. (exists v_l7428:top. (exists v_l7426:top. (exists v_l7424:top. (exists v_l7422:top. (exists v_l7420:top. (exists v_l7418:top. ((v_sinfo = (v_Tuples__Tup14 v_l7418 v_l7420 v_l7422 v_l7424 v_l7426 v_l7428 v_l7430 v_l7432 v_l7434 v_l7436 v_l7438 v_l7440 v_l7442 v_l7444)) /\ ((v_Tuples__Tup14__5 v_sinfo) = v_l7426))))))))))))))))) /\ ((v_TLSConstants__CompressionBytes (v_Tuples__Tup14__5 v_sinfo)) = (v_Bytes__B v_cmB))) -> (forall v_data:top. ((exists v_b27526:top. ((exists v_b27537:top. ((exists v_b27548:top. ((exists v_b27559:top. (((v_ext = v_ext) /\ ((v_Bytes__B v_b27559) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_cmB) (v_Bytes__B v_ext)))) /\ ((v_Bytes__B v_b27548) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_csB) (v_Bytes__B v_b27559))))) /\ ((v_Bytes__B v_b27537) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_sidB) (v_Bytes__B v_b27548))))) /\ ((v_Bytes__B v_b27526) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_srand) (v_Bytes__B v_b27537))))) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_verB) (v_Bytes__B v_b27526))))) -> (forall v_l7610:top. (((v_data = v_data) /\ ((v_Bytes__B v_l7610) = (v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_server_hello ) (v_Bytes__B v_data)))) -> ((v_Bytes__B v_l7610) = (v_HandshakeMessages__ServerHelloMsg (v_Tuples__Tup14__10 v_sinfo) v_srand (v_Tuples__Tup14__13 v_sinfo) (v_Tuples__Tup14__1 v_sinfo) (v_Tuples__Tup14__5 v_sinfo) v_ext)))))))))))))))))))
(* Querying for (l76517652:int){l76517652 = 2} <: (i76387653:int){pr_LessThanOrEqual(0, i76387653)} *)
(* query pr_LessThanOrEqual(0, l7654) [HandshakeMessages.fs(291,54)] *)
goal g126_gl: (forall v_data:top. (forall v_z7617:top. (((34 = 34) /\ (exists v_x76147618:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x76147618) /\ (0 <= v_x76147618))) /\ (((v_z7617 = v_Pervasives__True) /\ (v_x76147618 >= 34)) \/ ((v_z7617 = v_Pervasives__False) /\ (v_x76147618 < 34)))))) -> ((v_z7617 = v_Pervasives__True) -> (forall v_l7654:top. ((v_l7654 = 2) -> (0 <= v_l7654)))))))
(* Querying for (l76567657:int){l76567657 = 32} <: (j76407658:int){pr_GreaterThanOrEqual(Bytes.Length (data), bop_Addition (2, j76407658)) /\ pr_LessThanOrEqual(0, j76407658)} *)
(* query pr_GreaterThanOrEqual(Bytes.Length (data), bop_Addition (2, l7659)) /\ pr_LessThanOrEqual(0, l7659) [HandshakeMessages.fs(291,54)] *)
goal g127_gl: (forall v_data:top. (forall v_z7617:top. (((34 = 34) /\ (exists v_x76147618:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x76147618) /\ (0 <= v_x76147618))) /\ (((v_z7617 = v_Pervasives__True) /\ (v_x76147618 >= 34)) \/ ((v_z7617 = v_Pervasives__False) /\ (v_x76147618 < 34)))))) -> ((v_z7617 = v_Pervasives__True) -> (forall v_l7659:top. ((v_l7659 = 32) -> (((v_Bytes__Length v_data) >= (2 + v_l7659)) /\ (0 <= v_l7659))))))))
(* Querying for (l76687669:Bytes.bytes){l76687669 = serverVerBytes} <: (b766376667670:Bytes.bytes){Bytes.Length (b766376667670) = 2} *)
(* query Bytes.Length (l7671) = 2 [HandshakeMessages.fs(292,14)] *)
goal g128_gl: (forall v_data:top. (forall v_z7617:top. (((34 = 34) /\ (exists v_x76147618:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x76147618) /\ (0 <= v_x76147618))) /\ (((v_z7617 = v_Pervasives__True) /\ (v_x76147618 >= 34)) \/ ((v_z7617 = v_Pervasives__False) /\ (v_x76147618 < 34)))))) -> ((v_z7617 = v_Pervasives__True) -> (forall v_serverVerBytes:top. (forall v_serverRandomBytes:top. (forall v_data28:top. ((((v_Bytes__Length v_serverVerBytes) = 2) /\ (((v_Bytes__Length v_serverRandomBytes) = 32) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_serverVerBytes) (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_serverRandomBytes) (v_Bytes__B v_data28)))))) -> ((32 = 32) -> (forall v_l7671:top. ((v_l7671 = v_serverVerBytes) -> ((v_Bytes__Length v_l7671) = 2))))))))))))
(* Querying for (l77497750:int){l77497750 = 1} <: (l774177477751:int){pr_LessThanOrEqual(l774177477751, 8) /\ pr_LessThanOrEqual(0, l774177477751)} *)
(* query pr_LessThanOrEqual(l7752, 8) /\ pr_LessThanOrEqual(0, l7752) [HandshakeMessages.fs(296,18)] *)
goal g129_gl: (forall v_data:top. (forall v_z7617:top. (((34 = 34) /\ (exists v_x76147618:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x76147618) /\ (0 <= v_x76147618))) /\ (((v_z7617 = v_Pervasives__True) /\ (v_x76147618 >= 34)) \/ ((v_z7617 = v_Pervasives__False) /\ (v_x76147618 < 34)))))) -> ((v_z7617 = v_Pervasives__True) -> (forall v_serverVerBytes:top. (forall v_serverRandomBytes:top. (forall v_data28:top. ((((v_Bytes__Length v_serverVerBytes) = 2) /\ (((v_Bytes__Length v_serverRandomBytes) = 32) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_serverVerBytes) (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_serverRandomBytes) (v_Bytes__B v_data28)))))) -> ((32 = 32) -> (forall v_l7661:top. ((v_serverVerBytes = v_serverVerBytes) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l7661))) -> (forall v_serverVer:top. ((((v_Bytes__B v_serverVerBytes) = (v_TLSConstants__VersionBytes v_serverVer)) /\ (v_TLSConstants__IsProtocolVersion_p v_serverVer)) -> (((v_Error__Correct v_serverVer) = v_l7661) -> (((v_Error__Correct v_serverVer) = v_l7661) -> (forall v_z7721:top. (((1 = 1) /\ (exists v_x77187722:top. (((v_data28 = v_data28) /\ (((v_Bytes__Length v_data28) = v_x77187722) /\ (0 <= v_x77187722))) /\ (((v_z7721 = v_Pervasives__True) /\ (v_x77187722 >= 1)) \/ ((v_z7721 = v_Pervasives__False) /\ (v_x77187722 < 1)))))) -> ((v_z7721 = v_Pervasives__True) -> (forall v_l7752:top. ((v_l7752 = 1) -> ((v_l7752 <= 8) /\ (0 <= v_l7752)))))))))))))))))))))))
(* Querying for (l77547755:Bytes.bytes){l77547755 = data28} <: (b77437756:Bytes.bytes){pr_GreaterThanOrEqual(Bytes.Length (b77437756), 1)} *)
(* query pr_GreaterThanOrEqual(Bytes.Length (l7757), 1) [HandshakeMessages.fs(296,18)] *)
goal g130_gl: (forall v_data:top. (forall v_z7617:top. (((34 = 34) /\ (exists v_x76147618:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x76147618) /\ (0 <= v_x76147618))) /\ (((v_z7617 = v_Pervasives__True) /\ (v_x76147618 >= 34)) \/ ((v_z7617 = v_Pervasives__False) /\ (v_x76147618 < 34)))))) -> ((v_z7617 = v_Pervasives__True) -> (forall v_serverVerBytes:top. (forall v_serverRandomBytes:top. (forall v_data28:top. ((((v_Bytes__Length v_serverVerBytes) = 2) /\ (((v_Bytes__Length v_serverRandomBytes) = 32) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_serverVerBytes) (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_serverRandomBytes) (v_Bytes__B v_data28)))))) -> ((32 = 32) -> (forall v_l7661:top. ((v_serverVerBytes = v_serverVerBytes) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l7661))) -> (forall v_serverVer:top. ((((v_Bytes__B v_serverVerBytes) = (v_TLSConstants__VersionBytes v_serverVer)) /\ (v_TLSConstants__IsProtocolVersion_p v_serverVer)) -> (((v_Error__Correct v_serverVer) = v_l7661) -> (((v_Error__Correct v_serverVer) = v_l7661) -> (forall v_z7721:top. (((1 = 1) /\ (exists v_x77187722:top. (((v_data28 = v_data28) /\ (((v_Bytes__Length v_data28) = v_x77187722) /\ (0 <= v_x77187722))) /\ (((v_z7721 = v_Pervasives__True) /\ (v_x77187722 >= 1)) \/ ((v_z7721 = v_Pervasives__False) /\ (v_x77187722 < 1)))))) -> ((v_z7721 = v_Pervasives__True) -> (forall v_l7757:top. ((v_l7757 = v_data28) -> ((v_Bytes__Length v_l7757) >= 1))))))))))))))))))))))
(* Querying for (l78697870:int){l78697870 = 2} <: (i78567871:int){pr_LessThanOrEqual(0, i78567871)} *)
(* query pr_LessThanOrEqual(0, l7872) [HandshakeMessages.fs(302,49)] *)
goal g131_gl: (forall v_data:top. (forall v_z7617:top. (((34 = 34) /\ (exists v_x76147618:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x76147618) /\ (0 <= v_x76147618))) /\ (((v_z7617 = v_Pervasives__True) /\ (v_x76147618 >= 34)) \/ ((v_z7617 = v_Pervasives__False) /\ (v_x76147618 < 34)))))) -> ((v_z7617 = v_Pervasives__True) -> (forall v_serverVerBytes:top. (forall v_serverRandomBytes:top. (forall v_data28:top. ((((v_Bytes__Length v_serverVerBytes) = 2) /\ (((v_Bytes__Length v_serverRandomBytes) = 32) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_serverVerBytes) (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_serverRandomBytes) (v_Bytes__B v_data28)))))) -> ((32 = 32) -> (forall v_l7661:top. ((v_serverVerBytes = v_serverVerBytes) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l7661))) -> (forall v_serverVer:top. ((((v_Bytes__B v_serverVerBytes) = (v_TLSConstants__VersionBytes v_serverVer)) /\ (v_TLSConstants__IsProtocolVersion_p v_serverVer)) -> (((v_Error__Correct v_serverVer) = v_l7661) -> (((v_Error__Correct v_serverVer) = v_l7661) -> (forall v_z7721:top. (((1 = 1) /\ (exists v_x77187722:top. (((v_data28 = v_data28) /\ (((v_Bytes__Length v_data28) = v_x77187722) /\ (0 <= v_x77187722))) /\ (((v_z7721 = v_Pervasives__True) /\ (v_x77187722 >= 1)) \/ ((v_z7721 = v_Pervasives__False) /\ (v_x77187722 < 1)))))) -> ((v_z7721 = v_Pervasives__True) -> (forall v_l7739:top. ((v_data28 = v_data28) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l7739))) -> (forall v_res:top. ((exists v_b177457794:top. (exists v_b277467795:top. ((v_res = (v_Tuples__Tup2 v_b177457794 v_b277467795)) /\ ((v_Bytes__B v_data28) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_b177457794)) (v_Bytes__B v_b277467795)))))) -> (((v_Error__Correct v_res) = v_l7739) -> (((v_Error__Correct v_res) = v_l7739) -> (forall v_sid:top. (forall v_data29:top. (((v_Bytes__B v_data28) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_sid)) (v_Bytes__B v_data29))) -> (((v_Tuples__Tup2 v_sid v_data29) = v_res) -> (((v_Tuples__Tup2 v_sid v_data29) = v_res) -> (forall v_z7812:top. (((32 = 32) /\ (exists v_x78097813:top. (((v_sid = v_sid) /\ (((v_Bytes__Length v_sid) = v_x78097813) /\ (0 <= v_x78097813))) /\ (((v_z7812 = v_Pervasives__True) /\ (v_x78097813 <= 32)) \/ ((v_z7812 = v_Pervasives__False) /\ (v_x78097813 > 32)))))) -> ((v_z7812 = v_Pervasives__True) -> (forall v_z7835:top. (((3 = 3) /\ (exists v_x78327836:top. (((v_data29 = v_data29) /\ (((v_Bytes__Length v_data29) = v_x78327836) /\ (0 <= v_x78327836))) /\ (((v_z7835 = v_Pervasives__True) /\ (v_x78327836 >= 3)) \/ ((v_z7835 = v_Pervasives__False) /\ (v_x78327836 < 3)))))) -> ((v_z7835 = v_Pervasives__True) -> (forall v_l7872:top. ((v_l7872 = 2) -> (0 <= v_l7872))))))))))))))))))))))))))))))))))))))))
(* Querying for (l78747875:int){l78747875 = 1} <: (j78587876:int){pr_GreaterThanOrEqual(Bytes.Length (data29), bop_Addition (2, j78587876)) /\ pr_LessThanOrEqual(0, j78587876)} *)
(* query pr_GreaterThanOrEqual(Bytes.Length (data29), bop_Addition (2, l7877)) /\ pr_LessThanOrEqual(0, l7877) [HandshakeMessages.fs(302,49)] *)
goal g132_gl: (forall v_data:top. (forall v_z7617:top. (((34 = 34) /\ (exists v_x76147618:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x76147618) /\ (0 <= v_x76147618))) /\ (((v_z7617 = v_Pervasives__True) /\ (v_x76147618 >= 34)) \/ ((v_z7617 = v_Pervasives__False) /\ (v_x76147618 < 34)))))) -> ((v_z7617 = v_Pervasives__True) -> (forall v_serverVerBytes:top. (forall v_serverRandomBytes:top. (forall v_data28:top. ((((v_Bytes__Length v_serverVerBytes) = 2) /\ (((v_Bytes__Length v_serverRandomBytes) = 32) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_serverVerBytes) (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_serverRandomBytes) (v_Bytes__B v_data28)))))) -> ((32 = 32) -> (forall v_l7661:top. ((v_serverVerBytes = v_serverVerBytes) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l7661))) -> (forall v_serverVer:top. ((((v_Bytes__B v_serverVerBytes) = (v_TLSConstants__VersionBytes v_serverVer)) /\ (v_TLSConstants__IsProtocolVersion_p v_serverVer)) -> (((v_Error__Correct v_serverVer) = v_l7661) -> (((v_Error__Correct v_serverVer) = v_l7661) -> (forall v_z7721:top. (((1 = 1) /\ (exists v_x77187722:top. (((v_data28 = v_data28) /\ (((v_Bytes__Length v_data28) = v_x77187722) /\ (0 <= v_x77187722))) /\ (((v_z7721 = v_Pervasives__True) /\ (v_x77187722 >= 1)) \/ ((v_z7721 = v_Pervasives__False) /\ (v_x77187722 < 1)))))) -> ((v_z7721 = v_Pervasives__True) -> (forall v_l7739:top. ((v_data28 = v_data28) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l7739))) -> (forall v_res:top. ((exists v_b177457794:top. (exists v_b277467795:top. ((v_res = (v_Tuples__Tup2 v_b177457794 v_b277467795)) /\ ((v_Bytes__B v_data28) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_b177457794)) (v_Bytes__B v_b277467795)))))) -> (((v_Error__Correct v_res) = v_l7739) -> (((v_Error__Correct v_res) = v_l7739) -> (forall v_sid:top. (forall v_data29:top. (((v_Bytes__B v_data28) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_sid)) (v_Bytes__B v_data29))) -> (((v_Tuples__Tup2 v_sid v_data29) = v_res) -> (((v_Tuples__Tup2 v_sid v_data29) = v_res) -> (forall v_z7812:top. (((32 = 32) /\ (exists v_x78097813:top. (((v_sid = v_sid) /\ (((v_Bytes__Length v_sid) = v_x78097813) /\ (0 <= v_x78097813))) /\ (((v_z7812 = v_Pervasives__True) /\ (v_x78097813 <= 32)) \/ ((v_z7812 = v_Pervasives__False) /\ (v_x78097813 > 32)))))) -> ((v_z7812 = v_Pervasives__True) -> (forall v_z7835:top. (((3 = 3) /\ (exists v_x78327836:top. (((v_data29 = v_data29) /\ (((v_Bytes__Length v_data29) = v_x78327836) /\ (0 <= v_x78327836))) /\ (((v_z7835 = v_Pervasives__True) /\ (v_x78327836 >= 3)) \/ ((v_z7835 = v_Pervasives__False) /\ (v_x78327836 < 3)))))) -> ((v_z7835 = v_Pervasives__True) -> (forall v_l7877:top. ((v_l7877 = 1) -> (((v_Bytes__Length v_data29) >= (2 + v_l7877)) /\ (0 <= v_l7877)))))))))))))))))))))))))))))))))))))))))
(* Querying for (l78867887:Bytes.bytes){l78867887 = csBytes} <: (b788178847888:Bytes.bytes){Bytes.Length (b788178847888) = 2} *)
(* query Bytes.Length (l7889) = 2 [HandshakeMessages.fs(303,26)] *)
goal g133_gl: (forall v_data:top. (forall v_z7617:top. (((34 = 34) /\ (exists v_x76147618:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x76147618) /\ (0 <= v_x76147618))) /\ (((v_z7617 = v_Pervasives__True) /\ (v_x76147618 >= 34)) \/ ((v_z7617 = v_Pervasives__False) /\ (v_x76147618 < 34)))))) -> ((v_z7617 = v_Pervasives__True) -> (forall v_serverVerBytes:top. (forall v_serverRandomBytes:top. (forall v_data28:top. ((((v_Bytes__Length v_serverVerBytes) = 2) /\ (((v_Bytes__Length v_serverRandomBytes) = 32) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_serverVerBytes) (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_serverRandomBytes) (v_Bytes__B v_data28)))))) -> ((32 = 32) -> (forall v_l7661:top. ((v_serverVerBytes = v_serverVerBytes) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l7661))) -> (forall v_serverVer:top. ((((v_Bytes__B v_serverVerBytes) = (v_TLSConstants__VersionBytes v_serverVer)) /\ (v_TLSConstants__IsProtocolVersion_p v_serverVer)) -> (((v_Error__Correct v_serverVer) = v_l7661) -> (((v_Error__Correct v_serverVer) = v_l7661) -> (forall v_z7721:top. (((1 = 1) /\ (exists v_x77187722:top. (((v_data28 = v_data28) /\ (((v_Bytes__Length v_data28) = v_x77187722) /\ (0 <= v_x77187722))) /\ (((v_z7721 = v_Pervasives__True) /\ (v_x77187722 >= 1)) \/ ((v_z7721 = v_Pervasives__False) /\ (v_x77187722 < 1)))))) -> ((v_z7721 = v_Pervasives__True) -> (forall v_l7739:top. ((v_data28 = v_data28) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l7739))) -> (forall v_res:top. ((exists v_b177457794:top. (exists v_b277467795:top. ((v_res = (v_Tuples__Tup2 v_b177457794 v_b277467795)) /\ ((v_Bytes__B v_data28) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_b177457794)) (v_Bytes__B v_b277467795)))))) -> (((v_Error__Correct v_res) = v_l7739) -> (((v_Error__Correct v_res) = v_l7739) -> (forall v_sid:top. (forall v_data29:top. (((v_Bytes__B v_data28) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_sid)) (v_Bytes__B v_data29))) -> (((v_Tuples__Tup2 v_sid v_data29) = v_res) -> (((v_Tuples__Tup2 v_sid v_data29) = v_res) -> (forall v_z7812:top. (((32 = 32) /\ (exists v_x78097813:top. (((v_sid = v_sid) /\ (((v_Bytes__Length v_sid) = v_x78097813) /\ (0 <= v_x78097813))) /\ (((v_z7812 = v_Pervasives__True) /\ (v_x78097813 <= 32)) \/ ((v_z7812 = v_Pervasives__False) /\ (v_x78097813 > 32)))))) -> ((v_z7812 = v_Pervasives__True) -> (forall v_z7835:top. (((3 = 3) /\ (exists v_x78327836:top. (((v_data29 = v_data29) /\ (((v_Bytes__Length v_data29) = v_x78327836) /\ (0 <= v_x78327836))) /\ (((v_z7835 = v_Pervasives__True) /\ (v_x78327836 >= 3)) \/ ((v_z7835 = v_Pervasives__False) /\ (v_x78327836 < 3)))))) -> ((v_z7835 = v_Pervasives__True) -> (forall v_csBytes:top. (forall v_cmBytes:top. (forall v_data30:top. ((((v_Bytes__Length v_csBytes) = 2) /\ (((v_Bytes__Length v_cmBytes) = 1) /\ ((v_Bytes__B v_data29) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_csBytes) (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_cmBytes) (v_Bytes__B v_data30)))))) -> ((1 = 1) -> (forall v_l7889:top. ((v_l7889 = v_csBytes) -> ((v_Bytes__Length v_l7889) = 2)))))))))))))))))))))))))))))))))))))))))))))
(* Querying for (l79887997800580248044:TLSConstants.PreProtocolVersion * l79907998800680258045:Bytes.bytes * l79917999800780268046:Bytes.bytes * l79928000800880278047:TLSConstants.cipherSuite * l79948001800980288048:TLSConstants.PreCompression * l79968002801080298049:Bytes.bytes){Bytes.B (serverVerBytes) = TLSConstants.VersionBytes (l79887997800580248044) /\ TLSConstants.IsProtocolVersion(l79887997800580248044) /\ Bytes.B (csBytes) = TLSConstants.CipherSuiteBytes (l79928000800880278047) /\ Bytes.B (cmBytes) = TLSConstants.CompressionBytes (l79948001800980288048) /\ TLSConstants.IsCompression(l79948001800980288048) /\ (l79887997800580248044, l79907998800680258045, l79917999800780268046, l79928000800880278047, l79948001800980288048, l79968002801080298049) = (serverVer, serverRandomBytes, sid, cs, cm, data30)} <: (pv801380328050:TLSConstants.PreProtocolVersion * sr801580348051:Bytes.bytes * sid801780368052:Bytes.bytes * cs801980388053:TLSConstants.cipherSuite * cm802080398054:TLSConstants.PreCompression * ext802280418055:Bytes.bytes){MessageBytes (HT_server_hello (), Bytes.B (data)) = ServerHelloMsg (pv801380328050, sr801580348051, sid801780368052, cs801980388053, cm802080398054, ext802280418055) /\ TLSConstants.IsProtocolVersion(pv801380328050) /\ Bytes.Length (sr801580348051) = 32 /\ pr_LessThanOrEqual(Bytes.Length (sid801780368052), 32) /\ TLSConstants.IsCompression(cm802080398054)} *)
(* query MessageBytes (HT_server_hello (), Bytes.B (data)) = ServerHelloMsg (l8056, l8057, l8058, l8059, l8060, l8061) /\ TLSConstants.IsProtocolVersion(l8056) /\ Bytes.Length (l8057) = 32 /\ pr_LessThanOrEqual(Bytes.Length (l8058), 32) /\ TLSConstants.IsCompression(l8060) [HandshakeMessages.fs(309,20)] *)
goal g134_gl: (forall v_data:top. (forall v_z7617:top. (((34 = 34) /\ (exists v_x76147618:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x76147618) /\ (0 <= v_x76147618))) /\ (((v_z7617 = v_Pervasives__True) /\ (v_x76147618 >= 34)) \/ ((v_z7617 = v_Pervasives__False) /\ (v_x76147618 < 34)))))) -> ((v_z7617 = v_Pervasives__True) -> (forall v_serverVerBytes:top. (forall v_serverRandomBytes:top. (forall v_data28:top. ((((v_Bytes__Length v_serverVerBytes) = 2) /\ (((v_Bytes__Length v_serverRandomBytes) = 32) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_serverVerBytes) (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_serverRandomBytes) (v_Bytes__B v_data28)))))) -> ((32 = 32) -> (forall v_l7661:top. ((v_serverVerBytes = v_serverVerBytes) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l7661))) -> (forall v_serverVer:top. ((((v_Bytes__B v_serverVerBytes) = (v_TLSConstants__VersionBytes v_serverVer)) /\ (v_TLSConstants__IsProtocolVersion_p v_serverVer)) -> (((v_Error__Correct v_serverVer) = v_l7661) -> (((v_Error__Correct v_serverVer) = v_l7661) -> (forall v_z7721:top. (((1 = 1) /\ (exists v_x77187722:top. (((v_data28 = v_data28) /\ (((v_Bytes__Length v_data28) = v_x77187722) /\ (0 <= v_x77187722))) /\ (((v_z7721 = v_Pervasives__True) /\ (v_x77187722 >= 1)) \/ ((v_z7721 = v_Pervasives__False) /\ (v_x77187722 < 1)))))) -> ((v_z7721 = v_Pervasives__True) -> (forall v_l7739:top. ((v_data28 = v_data28) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l7739))) -> (forall v_res:top. ((exists v_b177457794:top. (exists v_b277467795:top. ((v_res = (v_Tuples__Tup2 v_b177457794 v_b277467795)) /\ ((v_Bytes__B v_data28) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_b177457794)) (v_Bytes__B v_b277467795)))))) -> (((v_Error__Correct v_res) = v_l7739) -> (((v_Error__Correct v_res) = v_l7739) -> (forall v_sid:top. (forall v_data29:top. (((v_Bytes__B v_data28) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_sid)) (v_Bytes__B v_data29))) -> (((v_Tuples__Tup2 v_sid v_data29) = v_res) -> (((v_Tuples__Tup2 v_sid v_data29) = v_res) -> (forall v_z7812:top. (((32 = 32) /\ (exists v_x78097813:top. (((v_sid = v_sid) /\ (((v_Bytes__Length v_sid) = v_x78097813) /\ (0 <= v_x78097813))) /\ (((v_z7812 = v_Pervasives__True) /\ (v_x78097813 <= 32)) \/ ((v_z7812 = v_Pervasives__False) /\ (v_x78097813 > 32)))))) -> ((v_z7812 = v_Pervasives__True) -> (forall v_z7835:top. (((3 = 3) /\ (exists v_x78327836:top. (((v_data29 = v_data29) /\ (((v_Bytes__Length v_data29) = v_x78327836) /\ (0 <= v_x78327836))) /\ (((v_z7835 = v_Pervasives__True) /\ (v_x78327836 >= 3)) \/ ((v_z7835 = v_Pervasives__False) /\ (v_x78327836 < 3)))))) -> ((v_z7835 = v_Pervasives__True) -> (forall v_csBytes:top. (forall v_cmBytes:top. (forall v_data30:top. ((((v_Bytes__Length v_csBytes) = 2) /\ (((v_Bytes__Length v_cmBytes) = 1) /\ ((v_Bytes__B v_data29) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_csBytes) (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_cmBytes) (v_Bytes__B v_data30)))))) -> ((1 = 1) -> (forall v_l7879:top. ((v_csBytes = v_csBytes) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l7879))) -> (forall v_cs:top. (((v_Bytes__B v_csBytes) = (v_TLSConstants__CipherSuiteBytes v_cs)) -> (((v_Error__Correct v_cs) = v_l7879) -> (((v_Error__Correct v_cs) = v_l7879) -> (forall v_l7928:top. ((v_cmBytes = v_cmBytes) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l7928))) -> (forall v_cm:top. ((((v_Bytes__B v_cmBytes) = (v_TLSConstants__CompressionBytes v_cm)) /\ (v_TLSConstants__IsCompression_p v_cm)) -> (((v_Error__Correct v_cm) = v_l7928) -> (((v_Error__Correct v_cm) = v_l7928) -> (forall v_l8023:top. ((((v_Tuples__Tup6 v_serverVer v_serverRandomBytes v_sid v_cs v_cm v_data30) = (v_Tuples__Tup6 v_serverVer v_serverRandomBytes v_sid v_cs v_cm v_data30)) /\ (v_l8023 = (v_Error__Correct (v_Tuples__Tup6 v_serverVer v_serverRandomBytes v_sid v_cs v_cm v_data30)))) -> (forall v_l8056:top. (forall v_l8057:top. (forall v_l8058:top. (forall v_l8059:top. (forall v_l8060:top. (forall v_l8061:top. (((((((v_Bytes__B v_serverVerBytes) = (v_TLSConstants__VersionBytes v_l8056)) /\ (v_TLSConstants__IsProtocolVersion_p v_l8056)) /\ ((v_Bytes__B v_csBytes) = (v_TLSConstants__CipherSuiteBytes v_l8059))) /\ (((v_Bytes__B v_cmBytes) = (v_TLSConstants__CompressionBytes v_l8060)) /\ (v_TLSConstants__IsCompression_p v_l8060))) /\ ((v_Tuples__Tup6 v_l8056 v_l8057 v_l8058 v_l8059 v_l8060 v_l8061) = (v_Tuples__Tup6 v_serverVer v_serverRandomBytes v_sid v_cs v_cm v_data30))) -> ((((((v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_server_hello ) (v_Bytes__B v_data)) = (v_HandshakeMessages__ServerHelloMsg v_l8056 v_l8057 v_l8058 v_l8059 v_l8060 v_l8061)) /\ (v_TLSConstants__IsProtocolVersion_p v_l8056)) /\ ((v_Bytes__Length v_l8057) = 32)) /\ ((v_Bytes__Length v_l8058) <= 32)) /\ (v_TLSConstants__IsCompression_p v_l8060)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(* Querying for (pv8066807881098133:TLSConstants.PreProtocolVersion * sr8068807981108134:Bytes.bytes * sid8070808081118135:Bytes.bytes * cs8072808181128136:TLSConstants.cipherSuite * cm8073808281138137:TLSConstants.PreCompression * ext8075808381148138:Bytes.bytes){MessageBytes (HT_server_hello (), Bytes.B (data)) = ServerHelloMsg (pv8066807881098133, sr8068807981108134, sid8070808081118135, cs8072808181128136, cm8073808281138137, ext8075808381148138) /\ TLSConstants.IsProtocolVersion(pv8066807881098133) /\ Bytes.Length (sr8068807981108134) = 32 /\ pr_LessThanOrEqual(Bytes.Length (sid8070808081118135), 32) /\ TLSConstants.IsCompression(cm8073808281138137)} <: (pv81178139:TLSConstants.PreProtocolVersion * sr81198140:Bytes.bytes * sid81218141:Bytes.bytes * cs81238142:TLSConstants.cipherSuite * cm81248143:TLSConstants.PreCompression * ext81268144:Bytes.bytes){MessageBytes (HT_server_hello (), Bytes.B (data)) = ServerHelloMsg (pv81178139, sr81198140, sid81218141, cs81238142, cm81248143, ext81268144) /\ TLSConstants.IsProtocolVersion(pv81178139) /\ Bytes.Length (sr81198140) = 32 /\ pr_LessThanOrEqual(Bytes.Length (sid81218141), 32) /\ TLSConstants.IsCompression(cm81248143)} *)
(* query MessageBytes (HT_server_hello (), Bytes.B (data)) = ServerHelloMsg (l8145, l8146, l8147, l8148, l8149, l8150) /\ TLSConstants.IsProtocolVersion(l8145) /\ Bytes.Length (l8146) = 32 /\ pr_LessThanOrEqual(Bytes.Length (l8147), 32) /\ TLSConstants.IsCompression(l8149) [HandshakeMessages.fs(310,21)] *)
goal g135_gl: (forall v_data:top. (forall v_z7617:top. (((34 = 34) /\ (exists v_x76147618:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x76147618) /\ (0 <= v_x76147618))) /\ (((v_z7617 = v_Pervasives__True) /\ (v_x76147618 >= 34)) \/ ((v_z7617 = v_Pervasives__False) /\ (v_x76147618 < 34)))))) -> ((v_z7617 = v_Pervasives__True) -> (forall v_serverVerBytes:top. (forall v_serverRandomBytes:top. (forall v_data28:top. ((((v_Bytes__Length v_serverVerBytes) = 2) /\ (((v_Bytes__Length v_serverRandomBytes) = 32) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_serverVerBytes) (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_serverRandomBytes) (v_Bytes__B v_data28)))))) -> ((32 = 32) -> (forall v_l7661:top. ((v_serverVerBytes = v_serverVerBytes) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l7661))) -> (forall v_serverVer:top. ((((v_Bytes__B v_serverVerBytes) = (v_TLSConstants__VersionBytes v_serverVer)) /\ (v_TLSConstants__IsProtocolVersion_p v_serverVer)) -> (((v_Error__Correct v_serverVer) = v_l7661) -> (((v_Error__Correct v_serverVer) = v_l7661) -> (forall v_z7721:top. (((1 = 1) /\ (exists v_x77187722:top. (((v_data28 = v_data28) /\ (((v_Bytes__Length v_data28) = v_x77187722) /\ (0 <= v_x77187722))) /\ (((v_z7721 = v_Pervasives__True) /\ (v_x77187722 >= 1)) \/ ((v_z7721 = v_Pervasives__False) /\ (v_x77187722 < 1)))))) -> ((v_z7721 = v_Pervasives__True) -> (forall v_l7739:top. ((v_data28 = v_data28) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l7739))) -> (forall v_res:top. ((exists v_b177457794:top. (exists v_b277467795:top. ((v_res = (v_Tuples__Tup2 v_b177457794 v_b277467795)) /\ ((v_Bytes__B v_data28) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_b177457794)) (v_Bytes__B v_b277467795)))))) -> (((v_Error__Correct v_res) = v_l7739) -> (((v_Error__Correct v_res) = v_l7739) -> (forall v_sid:top. (forall v_data29:top. (((v_Bytes__B v_data28) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_sid)) (v_Bytes__B v_data29))) -> (((v_Tuples__Tup2 v_sid v_data29) = v_res) -> (((v_Tuples__Tup2 v_sid v_data29) = v_res) -> (forall v_z7812:top. (((32 = 32) /\ (exists v_x78097813:top. (((v_sid = v_sid) /\ (((v_Bytes__Length v_sid) = v_x78097813) /\ (0 <= v_x78097813))) /\ (((v_z7812 = v_Pervasives__True) /\ (v_x78097813 <= 32)) \/ ((v_z7812 = v_Pervasives__False) /\ (v_x78097813 > 32)))))) -> ((v_z7812 = v_Pervasives__True) -> (forall v_z7835:top. (((3 = 3) /\ (exists v_x78327836:top. (((v_data29 = v_data29) /\ (((v_Bytes__Length v_data29) = v_x78327836) /\ (0 <= v_x78327836))) /\ (((v_z7835 = v_Pervasives__True) /\ (v_x78327836 >= 3)) \/ ((v_z7835 = v_Pervasives__False) /\ (v_x78327836 < 3)))))) -> ((v_z7835 = v_Pervasives__False) -> (forall v_l8145:top. (forall v_l8146:top. (forall v_l8147:top. (forall v_l8148:top. (forall v_l8149:top. (forall v_l8150:top. (((((((v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_server_hello ) (v_Bytes__B v_data)) = (v_HandshakeMessages__ServerHelloMsg v_l8145 v_l8146 v_l8147 v_l8148 v_l8149 v_l8150)) /\ (v_TLSConstants__IsProtocolVersion_p v_l8145)) /\ ((v_Bytes__Length v_l8146) = 32)) /\ ((v_Bytes__Length v_l8147) <= 32)) /\ (v_TLSConstants__IsCompression_p v_l8149)) -> ((((((v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_server_hello ) (v_Bytes__B v_data)) = (v_HandshakeMessages__ServerHelloMsg v_l8145 v_l8146 v_l8147 v_l8148 v_l8149 v_l8150)) /\ (v_TLSConstants__IsProtocolVersion_p v_l8145)) /\ ((v_Bytes__Length v_l8146) = 32)) /\ ((v_Bytes__Length v_l8147) <= 32)) /\ (v_TLSConstants__IsCompression_p v_l8149))))))))))))))))))))))))))))))))))))))))))))))
(* Querying for (pv8155816781988222:TLSConstants.PreProtocolVersion * sr8157816881998223:Bytes.bytes * sid8159816982008224:Bytes.bytes * cs8161817082018225:TLSConstants.cipherSuite * cm8162817182028226:TLSConstants.PreCompression * ext8164817282038227:Bytes.bytes){MessageBytes (HT_server_hello (), Bytes.B (data)) = ServerHelloMsg (pv8155816781988222, sr8157816881998223, sid8159816982008224, cs8161817082018225, cm8162817182028226, ext8164817282038227) /\ TLSConstants.IsProtocolVersion(pv8155816781988222) /\ Bytes.Length (sr8157816881998223) = 32 /\ pr_LessThanOrEqual(Bytes.Length (sid8159816982008224), 32) /\ TLSConstants.IsCompression(cm8162817182028226)} <: (pv82068228:TLSConstants.PreProtocolVersion * sr82088229:Bytes.bytes * sid82108230:Bytes.bytes * cs82128231:TLSConstants.cipherSuite * cm82138232:TLSConstants.PreCompression * ext82158233:Bytes.bytes){MessageBytes (HT_server_hello (), Bytes.B (data)) = ServerHelloMsg (pv82068228, sr82088229, sid82108230, cs82128231, cm82138232, ext82158233) /\ TLSConstants.IsProtocolVersion(pv82068228) /\ Bytes.Length (sr82088229) = 32 /\ pr_LessThanOrEqual(Bytes.Length (sid82108230), 32) /\ TLSConstants.IsCompression(cm82138232)} *)
(* query MessageBytes (HT_server_hello (), Bytes.B (data)) = ServerHelloMsg (l8234, l8235, l8236, l8237, l8238, l8239) /\ TLSConstants.IsProtocolVersion(l8234) /\ Bytes.Length (l8235) = 32 /\ pr_LessThanOrEqual(Bytes.Length (l8236), 32) /\ TLSConstants.IsCompression(l8238) [HandshakeMessages.fs(311,17)] *)
goal g136_gl: (forall v_data:top. (forall v_z7617:top. (((34 = 34) /\ (exists v_x76147618:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x76147618) /\ (0 <= v_x76147618))) /\ (((v_z7617 = v_Pervasives__True) /\ (v_x76147618 >= 34)) \/ ((v_z7617 = v_Pervasives__False) /\ (v_x76147618 < 34)))))) -> ((v_z7617 = v_Pervasives__True) -> (forall v_serverVerBytes:top. (forall v_serverRandomBytes:top. (forall v_data28:top. ((((v_Bytes__Length v_serverVerBytes) = 2) /\ (((v_Bytes__Length v_serverRandomBytes) = 32) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_serverVerBytes) (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_serverRandomBytes) (v_Bytes__B v_data28)))))) -> ((32 = 32) -> (forall v_l7661:top. ((v_serverVerBytes = v_serverVerBytes) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l7661))) -> (forall v_serverVer:top. ((((v_Bytes__B v_serverVerBytes) = (v_TLSConstants__VersionBytes v_serverVer)) /\ (v_TLSConstants__IsProtocolVersion_p v_serverVer)) -> (((v_Error__Correct v_serverVer) = v_l7661) -> (((v_Error__Correct v_serverVer) = v_l7661) -> (forall v_z7721:top. (((1 = 1) /\ (exists v_x77187722:top. (((v_data28 = v_data28) /\ (((v_Bytes__Length v_data28) = v_x77187722) /\ (0 <= v_x77187722))) /\ (((v_z7721 = v_Pervasives__True) /\ (v_x77187722 >= 1)) \/ ((v_z7721 = v_Pervasives__False) /\ (v_x77187722 < 1)))))) -> ((v_z7721 = v_Pervasives__True) -> (forall v_l7739:top. ((v_data28 = v_data28) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l7739))) -> (forall v_res:top. ((exists v_b177457794:top. (exists v_b277467795:top. ((v_res = (v_Tuples__Tup2 v_b177457794 v_b277467795)) /\ ((v_Bytes__B v_data28) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_b177457794)) (v_Bytes__B v_b277467795)))))) -> (((v_Error__Correct v_res) = v_l7739) -> (((v_Error__Correct v_res) = v_l7739) -> (forall v_sid:top. (forall v_data29:top. (((v_Bytes__B v_data28) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_sid)) (v_Bytes__B v_data29))) -> (((v_Tuples__Tup2 v_sid v_data29) = v_res) -> (((v_Tuples__Tup2 v_sid v_data29) = v_res) -> (forall v_z7812:top. (((32 = 32) /\ (exists v_x78097813:top. (((v_sid = v_sid) /\ (((v_Bytes__Length v_sid) = v_x78097813) /\ (0 <= v_x78097813))) /\ (((v_z7812 = v_Pervasives__True) /\ (v_x78097813 <= 32)) \/ ((v_z7812 = v_Pervasives__False) /\ (v_x78097813 > 32)))))) -> ((v_z7812 = v_Pervasives__False) -> (forall v_l8234:top. (forall v_l8235:top. (forall v_l8236:top. (forall v_l8237:top. (forall v_l8238:top. (forall v_l8239:top. (((((((v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_server_hello ) (v_Bytes__B v_data)) = (v_HandshakeMessages__ServerHelloMsg v_l8234 v_l8235 v_l8236 v_l8237 v_l8238 v_l8239)) /\ (v_TLSConstants__IsProtocolVersion_p v_l8234)) /\ ((v_Bytes__Length v_l8235) = 32)) /\ ((v_Bytes__Length v_l8236) <= 32)) /\ (v_TLSConstants__IsCompression_p v_l8238)) -> ((((((v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_server_hello ) (v_Bytes__B v_data)) = (v_HandshakeMessages__ServerHelloMsg v_l8234 v_l8235 v_l8236 v_l8237 v_l8238 v_l8239)) /\ (v_TLSConstants__IsProtocolVersion_p v_l8234)) /\ ((v_Bytes__Length v_l8235) = 32)) /\ ((v_Bytes__Length v_l8236) <= 32)) /\ (v_TLSConstants__IsCompression_p v_l8238)))))))))))))))))))))))))))))))))))))))))))
(* Querying for (pv8244825682878311:TLSConstants.PreProtocolVersion * sr8246825782888312:Bytes.bytes * sid8248825882898313:Bytes.bytes * cs8250825982908314:TLSConstants.cipherSuite * cm8251826082918315:TLSConstants.PreCompression * ext8253826182928316:Bytes.bytes){MessageBytes (HT_server_hello (), Bytes.B (data)) = ServerHelloMsg (pv8244825682878311, sr8246825782888312, sid8248825882898313, cs8250825982908314, cm8251826082918315, ext8253826182928316) /\ TLSConstants.IsProtocolVersion(pv8244825682878311) /\ Bytes.Length (sr8246825782888312) = 32 /\ pr_LessThanOrEqual(Bytes.Length (sid8248825882898313), 32) /\ TLSConstants.IsCompression(cm8251826082918315)} <: (pv82958317:TLSConstants.PreProtocolVersion * sr82978318:Bytes.bytes * sid82998319:Bytes.bytes * cs83018320:TLSConstants.cipherSuite * cm83028321:TLSConstants.PreCompression * ext83048322:Bytes.bytes){MessageBytes (HT_server_hello (), Bytes.B (data)) = ServerHelloMsg (pv82958317, sr82978318, sid82998319, cs83018320, cm83028321, ext83048322) /\ TLSConstants.IsProtocolVersion(pv82958317) /\ Bytes.Length (sr82978318) = 32 /\ pr_LessThanOrEqual(Bytes.Length (sid82998319), 32) /\ TLSConstants.IsCompression(cm83028321)} *)
(* query MessageBytes (HT_server_hello (), Bytes.B (data)) = ServerHelloMsg (l8323, l8324, l8325, l8326, l8327, l8328) /\ TLSConstants.IsProtocolVersion(l8323) /\ Bytes.Length (l8324) = 32 /\ pr_LessThanOrEqual(Bytes.Length (l8325), 32) /\ TLSConstants.IsCompression(l8327) [HandshakeMessages.fs(312,13)] *)
goal g137_gl: (forall v_data:top. (forall v_z7617:top. (((34 = 34) /\ (exists v_x76147618:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x76147618) /\ (0 <= v_x76147618))) /\ (((v_z7617 = v_Pervasives__True) /\ (v_x76147618 >= 34)) \/ ((v_z7617 = v_Pervasives__False) /\ (v_x76147618 < 34)))))) -> ((v_z7617 = v_Pervasives__True) -> (forall v_serverVerBytes:top. (forall v_serverRandomBytes:top. (forall v_data28:top. ((((v_Bytes__Length v_serverVerBytes) = 2) /\ (((v_Bytes__Length v_serverRandomBytes) = 32) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_serverVerBytes) (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_serverRandomBytes) (v_Bytes__B v_data28)))))) -> ((32 = 32) -> (forall v_l7661:top. ((v_serverVerBytes = v_serverVerBytes) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l7661))) -> (forall v_serverVer:top. ((((v_Bytes__B v_serverVerBytes) = (v_TLSConstants__VersionBytes v_serverVer)) /\ (v_TLSConstants__IsProtocolVersion_p v_serverVer)) -> (((v_Error__Correct v_serverVer) = v_l7661) -> (((v_Error__Correct v_serverVer) = v_l7661) -> (forall v_z7721:top. (((1 = 1) /\ (exists v_x77187722:top. (((v_data28 = v_data28) /\ (((v_Bytes__Length v_data28) = v_x77187722) /\ (0 <= v_x77187722))) /\ (((v_z7721 = v_Pervasives__True) /\ (v_x77187722 >= 1)) \/ ((v_z7721 = v_Pervasives__False) /\ (v_x77187722 < 1)))))) -> ((v_z7721 = v_Pervasives__False) -> (forall v_l8323:top. (forall v_l8324:top. (forall v_l8325:top. (forall v_l8326:top. (forall v_l8327:top. (forall v_l8328:top. (((((((v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_server_hello ) (v_Bytes__B v_data)) = (v_HandshakeMessages__ServerHelloMsg v_l8323 v_l8324 v_l8325 v_l8326 v_l8327 v_l8328)) /\ (v_TLSConstants__IsProtocolVersion_p v_l8323)) /\ ((v_Bytes__Length v_l8324) = 32)) /\ ((v_Bytes__Length v_l8325) <= 32)) /\ (v_TLSConstants__IsCompression_p v_l8327)) -> ((((((v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_server_hello ) (v_Bytes__B v_data)) = (v_HandshakeMessages__ServerHelloMsg v_l8323 v_l8324 v_l8325 v_l8326 v_l8327 v_l8328)) /\ (v_TLSConstants__IsProtocolVersion_p v_l8323)) /\ ((v_Bytes__Length v_l8324) = 32)) /\ ((v_Bytes__Length v_l8325) <= 32)) /\ (v_TLSConstants__IsCompression_p v_l8327))))))))))))))))))))))))))))
(* Querying for (pv8333834583768400:TLSConstants.PreProtocolVersion * sr8335834683778401:Bytes.bytes * sid8337834783788402:Bytes.bytes * cs8339834883798403:TLSConstants.cipherSuite * cm8340834983808404:TLSConstants.PreCompression * ext8342835083818405:Bytes.bytes){MessageBytes (HT_server_hello (), Bytes.B (data)) = ServerHelloMsg (pv8333834583768400, sr8335834683778401, sid8337834783788402, cs8339834883798403, cm8340834983808404, ext8342835083818405) /\ TLSConstants.IsProtocolVersion(pv8333834583768400) /\ Bytes.Length (sr8335834683778401) = 32 /\ pr_LessThanOrEqual(Bytes.Length (sid8337834783788402), 32) /\ TLSConstants.IsCompression(cm8340834983808404)} <: (pv83848406:TLSConstants.PreProtocolVersion * sr83868407:Bytes.bytes * sid83888408:Bytes.bytes * cs83908409:TLSConstants.cipherSuite * cm83918410:TLSConstants.PreCompression * ext83938411:Bytes.bytes){MessageBytes (HT_server_hello (), Bytes.B (data)) = ServerHelloMsg (pv83848406, sr83868407, sid83888408, cs83908409, cm83918410, ext83938411) /\ TLSConstants.IsProtocolVersion(pv83848406) /\ Bytes.Length (sr83868407) = 32 /\ pr_LessThanOrEqual(Bytes.Length (sid83888408), 32) /\ TLSConstants.IsCompression(cm83918410)} *)
(* query MessageBytes (HT_server_hello (), Bytes.B (data)) = ServerHelloMsg (l8412, l8413, l8414, l8415, l8416, l8417) /\ TLSConstants.IsProtocolVersion(l8412) /\ Bytes.Length (l8413) = 32 /\ pr_LessThanOrEqual(Bytes.Length (l8414), 32) /\ TLSConstants.IsCompression(l8416) [HandshakeMessages.fs(313,9)] *)
goal g138_gl: (forall v_data:top. (forall v_z7617:top. (((34 = 34) /\ (exists v_x76147618:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x76147618) /\ (0 <= v_x76147618))) /\ (((v_z7617 = v_Pervasives__True) /\ (v_x76147618 >= 34)) \/ ((v_z7617 = v_Pervasives__False) /\ (v_x76147618 < 34)))))) -> ((v_z7617 = v_Pervasives__False) -> (forall v_l8412:top. (forall v_l8413:top. (forall v_l8414:top. (forall v_l8415:top. (forall v_l8416:top. (forall v_l8417:top. (((((((v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_server_hello ) (v_Bytes__B v_data)) = (v_HandshakeMessages__ServerHelloMsg v_l8412 v_l8413 v_l8414 v_l8415 v_l8416 v_l8417)) /\ (v_TLSConstants__IsProtocolVersion_p v_l8412)) /\ ((v_Bytes__Length v_l8413) = 32)) /\ ((v_Bytes__Length v_l8414) <= 32)) /\ (v_TLSConstants__IsCompression_p v_l8416)) -> ((((((v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_server_hello ) (v_Bytes__B v_data)) = (v_HandshakeMessages__ServerHelloMsg v_l8412 v_l8413 v_l8414 v_l8415 v_l8416 v_l8417)) /\ (v_TLSConstants__IsProtocolVersion_p v_l8412)) /\ ((v_Bytes__Length v_l8413) = 32)) /\ ((v_Bytes__Length v_l8414) <= 32)) /\ (v_TLSConstants__IsCompression_p v_l8416)))))))))))))
(* Querying for (l84268427:PreHandshakeType){l84268427 = HT_hello_request ()} <: (ht842084248428:PreHandshakeType){IsHandshakeType(ht842084248428)} *)
(* query IsHandshakeType(l8429) [HandshakeMessages.fs(315,24)] *)
goal g139_gl: (forall v_l8429:top. ((v_l8429 = (v_HandshakeMessages__HT_hello_request )) -> (v_HandshakeMessages__IsHandshakeType_p v_l8429)))
(* Querying for (m84238436:Bytes.bytes){Bytes.empty_bytes = Bytes.empty_bytes /\ Bytes.B (Bytes.empty_bytes) = array_of_list op_Nil () /\ Bytes.B (m84238436) = MessageBytes (HT_hello_request (), Bytes.B (Bytes.empty_bytes))} <: (l84188437:Bytes.bytes){Bytes.B (l84188437) = MessageBytes (HT_hello_request (), array_of_list op_Nil ())} *)
(* query Bytes.B (l8438) = MessageBytes (HT_hello_request (), array_of_list op_Nil ()) [HandshakeMessages.fs(315,24)] *)
goal g140_gl: (forall v_l8438:top. ((((v_Bytes__empty_bytes = v_Bytes__empty_bytes) /\ ((v_Bytes__B v_Bytes__empty_bytes) = (v_Pervasives__array_of_list (v_Pervasives__op_Nil )))) /\ ((v_Bytes__B v_l8438) = (v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_hello_request ) (v_Bytes__B v_Bytes__empty_bytes)))) -> ((v_Bytes__B v_l8438) = (v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_hello_request ) (v_Pervasives__array_of_list (v_Pervasives__op_Nil ))))))
(* assume Bytes.B (helloRequestBytes) = MessageBytes (HT_hello_request (), array_of_list op_Nil ()) [HandshakeMessages.fs(315,0)] *)
axiom a1816_asm: ((v_Bytes__B v_HandshakeMessages__helloRequestBytes) = (v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_hello_request ) (v_Pervasives__array_of_list (v_Pervasives__op_Nil ))))
(* Querying for (a844284448449:Bytes.bytes){1 = 1 /\ Bytes.B (a844284448449) = array_of_list op_ColonColon (1, op_Nil ())} <: (l84398450:Bytes.bytes){Bytes.B (l84398450) = array_of_list op_ColonColon (1, op_Nil ())} *)
(* query Bytes.B (l8451) = array_of_list op_ColonColon (1, op_Nil ()) [HandshakeMessages.fs(317,15)] *)
goal g141_gl: (forall v_l8451:top. (((1 = 1) /\ ((v_Bytes__B v_l8451) = (v_Pervasives__array_of_list (v_Pervasives__op_ColonColon 1 (v_Pervasives__op_Nil ))))) -> ((v_Bytes__B v_l8451) = (v_Pervasives__array_of_list (v_Pervasives__op_ColonColon 1 (v_Pervasives__op_Nil ))))))
(* assume Bytes.B (CCSBytes) = array_of_list op_ColonColon (1, op_Nil ()) [HandshakeMessages.fs(317,0)] *)
axiom a1817_asm: ((v_Bytes__B v_HandshakeMessages__CCSBytes) = (v_Pervasives__array_of_list (v_Pervasives__op_ColonColon 1 (v_Pervasives__op_Nil ))))
(* Querying for (l84608461:PreHandshakeType){l84608461 = HT_server_hello_done ()} <: (ht845484588462:PreHandshakeType){IsHandshakeType(ht845484588462)} *)
(* query IsHandshakeType(l8463) [HandshakeMessages.fs(322,27)] *)
goal g142_gl: (forall v_l8463:top. ((v_l8463 = (v_HandshakeMessages__HT_server_hello_done )) -> (v_HandshakeMessages__IsHandshakeType_p v_l8463)))
(* Querying for (m84578470:Bytes.bytes){Bytes.empty_bytes = Bytes.empty_bytes /\ Bytes.B (Bytes.empty_bytes) = array_of_list op_Nil () /\ Bytes.B (m84578470) = MessageBytes (HT_server_hello_done (), Bytes.B (Bytes.empty_bytes))} <: (l84528471:Bytes.bytes){Bytes.B (l84528471) = ServerHelloDoneMsg (Bytes.empty_bytes)} *)
(* query Bytes.B (l8472) = ServerHelloDoneMsg (Bytes.empty_bytes) [HandshakeMessages.fs(322,27)] *)
goal g143_gl: (forall v_l8472:top. ((((v_Bytes__empty_bytes = v_Bytes__empty_bytes) /\ ((v_Bytes__B v_Bytes__empty_bytes) = (v_Pervasives__array_of_list (v_Pervasives__op_Nil )))) /\ ((v_Bytes__B v_l8472) = (v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_server_hello_done ) (v_Bytes__B v_Bytes__empty_bytes)))) -> ((v_Bytes__B v_l8472) = (v_HandshakeMessages__ServerHelloDoneMsg v_Bytes__empty_bytes))))
(* assume Bytes.B (serverHelloDoneBytes) = ServerHelloDoneMsg (Bytes.empty_bytes) [HandshakeMessages.fs(322,0)] *)
axiom a1818_asm: ((v_Bytes__B v_HandshakeMessages__serverHelloDoneBytes) = (v_HandshakeMessages__ServerHelloDoneMsg v_Bytes__empty_bytes))
(* Querying for (l84818482:PreHandshakeType){l84818482 = HT_certificate ()} <: (ht847584798483:PreHandshakeType){IsHandshakeType(ht847584798483)} *)
(* query IsHandshakeType(l8484) [HandshakeMessages.fs(324,32)] *)
goal g144_gl: (forall v_cl:top. ((not (v_cl = (v_Pervasives__op_Nil ))) -> (forall v_l8484:top. ((v_l8484 = (v_HandshakeMessages__HT_certificate )) -> (v_HandshakeMessages__IsHandshakeType_p v_l8484)))))
(* Querying for (m84788497:Bytes.bytes){(?x8477. cl = cl /\ Bytes.B (x8477) = TLSConstants.VLBytes (3, Cert.CertificateListBytes (cl)) /\ Bytes.B (m84788497) = MessageBytes (HT_certificate (), Bytes.B (x8477)))} <: (b8498:Bytes.bytes){Bytes.B (b8498) = CertificateMsg (cl)} *)
(* query Bytes.B (l8499) = CertificateMsg (cl) [HandshakeMessages.fs(324,32)] *)
goal g145_gl: (forall v_cl:top. ((not (v_cl = (v_Pervasives__op_Nil ))) -> (forall v_l8499:top. ((exists v_x8477:top. (((v_cl = v_cl) /\ ((v_Bytes__B v_x8477) = (v_TLSConstants__VLBytes 3 (v_Cert__CertificateListBytes v_cl)))) /\ ((v_Bytes__B v_l8499) = (v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_certificate ) (v_Bytes__B v_x8477))))) -> ((v_Bytes__B v_l8499) = (v_HandshakeMessages__CertificateMsg v_cl))))))
(* Querying for (l85398540:PreHandshakeType){l85398540 = HT_certificate ()} <: (ht853385378541:PreHandshakeType){IsHandshakeType(ht853385378541)} *)
(* query IsHandshakeType(l8542) [HandshakeMessages.fs(329,56)] *)
goal g146_gl: (forall v_cs:top. (((v_Pervasives__None ) = v_cs) -> (((v_Pervasives__None ) = v_cs) -> (forall v_clb:top. ((((v_Pervasives__op_Nil ) = (v_Pervasives__op_Nil )) /\ ((v_Bytes__B v_clb) = (v_TLSConstants__VLBytes 3 (v_Cert__CertificateListBytes (v_Pervasives__op_Nil ))))) -> (forall v_l8542:top. ((v_l8542 = (v_HandshakeMessages__HT_certificate )) -> (v_HandshakeMessages__IsHandshakeType_p v_l8542))))))))
(* Querying for (m85368548:Bytes.bytes){clb = clb /\ Bytes.B (m85368548) = MessageBytes (HT_certificate (), Bytes.B (clb))} <: (b8549:Bytes.bytes){cs = None () => Bytes.B (b8549) = CertificateMsg (op_Nil ()) /\ (!cl. (!a'. (!b'. cs = Some ((cl, a', b')) => Bytes.B (b8549) = CertificateMsg (cl))))} *)
(* query cs = None () => Bytes.B (l8550) = CertificateMsg (op_Nil ()) /\ (!cl. (!a'. (!b'. cs = Some ((cl, a', b')) => Bytes.B (l8550) = CertificateMsg (cl)))) [HandshakeMessages.fs(329,56)] *)
goal g147_gl: (forall v_cs:top. (((v_Pervasives__None ) = v_cs) -> (((v_Pervasives__None ) = v_cs) -> (forall v_clb:top. ((((v_Pervasives__op_Nil ) = (v_Pervasives__op_Nil )) /\ ((v_Bytes__B v_clb) = (v_TLSConstants__VLBytes 3 (v_Cert__CertificateListBytes (v_Pervasives__op_Nil ))))) -> (forall v_l8550:top. (((v_clb = v_clb) /\ ((v_Bytes__B v_l8550) = (v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_certificate ) (v_Bytes__B v_clb)))) -> (((v_cs = (v_Pervasives__None )) -> ((v_Bytes__B v_l8550) = (v_HandshakeMessages__CertificateMsg (v_Pervasives__op_Nil )))) /\ (forall v_cl:top. (forall v_a':top. (forall v_b':top. ((v_cs = (v_Pervasives__Some (v_Tuples__Tup3 v_cl v_a' v_b'))) -> ((v_Bytes__B v_l8550) = (v_HandshakeMessages__CertificateMsg v_cl))))))))))))))
(* Querying for (l85958596:PreHandshakeType){l85958596 = HT_certificate ()} <: (ht858985938597:PreHandshakeType){IsHandshakeType(ht858985938597)} *)
(* query IsHandshakeType(l8598) [HandshakeMessages.fs(333,8)] *)
goal g148_gl: (forall v_cs:top. ((not ((v_Pervasives__None ) = v_cs)) -> (forall v_v:top. ((exists v_l20578552:top. (exists v_a8554:top. (exists v_l20588557:top. ((v_v = (v_Tuples__Tup3 v_l20578552 v_a8554 v_l20588557)) /\ (not (v_l20578552 = (v_Pervasives__op_Nil ))))))) -> (((v_Pervasives__Some v_v) = v_cs) -> (((v_Pervasives__Some v_v) = v_cs) -> (forall v_certList:top. (forall v_l8500:top. ((exists v_l59985558572:top. (exists v_l60085568573:top. (v_l8500 = (v_Tuples__Tup2 v_l59985558572 v_l60085568573)))) -> (forall v_l8501:top. ((not (v_certList = (v_Pervasives__op_Nil ))) -> (((v_Tuples__Tup3 v_certList v_l8500 v_l8501) = v_v) -> (((v_Tuples__Tup3 v_certList v_l8500 v_l8501) = v_v) -> (forall v_clb:top. (((v_certList = v_certList) /\ ((v_Bytes__B v_clb) = (v_TLSConstants__VLBytes 3 (v_Cert__CertificateListBytes v_certList)))) -> (forall v_l8598:top. ((v_l8598 = (v_HandshakeMessages__HT_certificate )) -> (v_HandshakeMessages__IsHandshakeType_p v_l8598))))))))))))))))))
(* Querying for (m85928604:Bytes.bytes){clb = clb /\ Bytes.B (m85928604) = MessageBytes (HT_certificate (), Bytes.B (clb))} <: (b8605:Bytes.bytes){cs = None () => Bytes.B (b8605) = CertificateMsg (op_Nil ()) /\ (!cl. (!a'. (!b'. cs = Some ((cl, a', b')) => Bytes.B (b8605) = CertificateMsg (cl))))} *)
(* query cs = None () => Bytes.B (l8606) = CertificateMsg (op_Nil ()) /\ (!cl. (!a'. (!b'. cs = Some ((cl, a', b')) => Bytes.B (l8606) = CertificateMsg (cl)))) [HandshakeMessages.fs(333,8)] *)
goal g149_gl: (forall v_cs:top. ((not ((v_Pervasives__None ) = v_cs)) -> (forall v_v:top. ((exists v_l20578552:top. (exists v_a8554:top. (exists v_l20588557:top. ((v_v = (v_Tuples__Tup3 v_l20578552 v_a8554 v_l20588557)) /\ (not (v_l20578552 = (v_Pervasives__op_Nil ))))))) -> (((v_Pervasives__Some v_v) = v_cs) -> (((v_Pervasives__Some v_v) = v_cs) -> (forall v_certList:top. (forall v_l8500:top. ((exists v_l59985558572:top. (exists v_l60085568573:top. (v_l8500 = (v_Tuples__Tup2 v_l59985558572 v_l60085568573)))) -> (forall v_l8501:top. ((not (v_certList = (v_Pervasives__op_Nil ))) -> (((v_Tuples__Tup3 v_certList v_l8500 v_l8501) = v_v) -> (((v_Tuples__Tup3 v_certList v_l8500 v_l8501) = v_v) -> (forall v_clb:top. (((v_certList = v_certList) /\ ((v_Bytes__B v_clb) = (v_TLSConstants__VLBytes 3 (v_Cert__CertificateListBytes v_certList)))) -> (forall v_l8606:top. (((v_clb = v_clb) /\ ((v_Bytes__B v_l8606) = (v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_certificate ) (v_Bytes__B v_clb)))) -> (((v_cs = (v_Pervasives__None )) -> ((v_Bytes__B v_l8606) = (v_HandshakeMessages__CertificateMsg (v_Pervasives__op_Nil )))) /\ (forall v_cl:top. (forall v_a':top. (forall v_b':top. ((v_cs = (v_Pervasives__Some (v_Tuples__Tup3 v_cl v_a' v_b'))) -> ((v_Bytes__B v_l8606) = (v_HandshakeMessages__CertificateMsg v_cl))))))))))))))))))))))))
(* Querying for (l86408641:int){l86408641 = 3} <: (l863386388642:int){pr_LessThanOrEqual(l863386388642, 8) /\ pr_LessThanOrEqual(0, l863386388642)} *)
(* query pr_LessThanOrEqual(l8643, 8) /\ pr_LessThanOrEqual(0, l8643) [HandshakeMessages.fs(337,14)] *)
goal g150_gl: (forall v_data:top. (forall v_z8613:top. (((3 = 3) /\ (exists v_x86108614:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x86108614) /\ (0 <= v_x86108614))) /\ (((v_z8613 = v_Pervasives__True) /\ (v_x86108614 >= 3)) \/ ((v_z8613 = v_Pervasives__False) /\ (v_x86108614 < 3)))))) -> ((v_z8613 = v_Pervasives__True) -> (forall v_l8643:top. ((v_l8643 = 3) -> ((v_l8643 <= 8) /\ (0 <= v_l8643))))))))
(* Querying for (l86458646:Bytes.bytes){l86458646 = data} <: (b86358647:Bytes.bytes){pr_GreaterThanOrEqual(Bytes.Length (b86358647), 3)} *)
(* query pr_GreaterThanOrEqual(Bytes.Length (l8648), 3) [HandshakeMessages.fs(337,14)] *)
goal g151_gl: (forall v_data:top. (forall v_z8613:top. (((3 = 3) /\ (exists v_x86108614:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x86108614) /\ (0 <= v_x86108614))) /\ (((v_z8613 = v_Pervasives__True) /\ (v_x86108614 >= 3)) \/ ((v_z8613 = v_Pervasives__False) /\ (v_x86108614 < 3)))))) -> ((v_z8613 = v_Pervasives__True) -> (forall v_l8648:top. ((v_l8648 = v_data) -> ((v_Bytes__Length v_l8648) >= 3)))))))
(* Querying for (cl8730874187488758:Bytes.bytes list){Bytes.B (certList) = Cert.CertificateListBytes (cl8730874187488758)} <: (bl874487518759:Bytes.bytes list){MessageBytes (HT_certificate (), Bytes.B (data)) = CertificateMsg (bl874487518759)} *)
(* query MessageBytes (HT_certificate (), Bytes.B (data)) = CertificateMsg (l8760) [HandshakeMessages.fs(339,32)] *)
goal g152_gl: (forall v_data:top. (forall v_z8613:top. (((3 = 3) /\ (exists v_x86108614:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x86108614) /\ (0 <= v_x86108614))) /\ (((v_z8613 = v_Pervasives__True) /\ (v_x86108614 >= 3)) \/ ((v_z8613 = v_Pervasives__False) /\ (v_x86108614 < 3)))))) -> ((v_z8613 = v_Pervasives__True) -> (forall v_l8631:top. ((v_data = v_data) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l8631))) -> (forall v_certList:top. (((v_Bytes__B v_data) = (v_TLSConstants__VLBytes 3 (v_Bytes__B v_certList))) -> (((v_Error__Correct v_certList) = v_l8631) -> (((v_Error__Correct v_certList) = v_l8631) -> (forall v_l8745:top. (((v_certList = v_certList) /\ ((v_Bytes__B v_data) = (v_TLSConstants__VLBytes 3 (v_Bytes__B v_certList)))) -> (forall v_l8760:top. (((v_Bytes__B v_certList) = (v_Cert__CertificateListBytes v_l8760)) -> ((v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_certificate ) (v_Bytes__B v_data)) = (v_HandshakeMessages__CertificateMsg v_l8760)))))))))))))))))
(* Querying for (l88168817:TLSConstants.PreProtocolVersion){l88168817 = version} <: (pv881088148818:TLSConstants.PreProtocolVersion){TLSConstants.IsProtocolVersion(pv881088148818)} *)
(* query TLSConstants.IsProtocolVersion(l8819) [HandshakeMessages.fs(345,27)] *)
goal g153_gl: (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_cs:top. (((v_TLSConstants__TLS_1p2 ) = v_version) -> (((v_TLSConstants__TLS_1p2 ) = v_version) -> (forall v_l8819:top. ((v_l8819 = v_version) -> (v_TLSConstants__IsProtocolVersion_p v_l8819))))))))
(* Querying for (l88658866:int){l88658866 = 2} <: (l885988638867:int){pr_LessThanOrEqual(0, l885988638867)} *)
(* query pr_LessThanOrEqual(0, l8868) [HandshakeMessages.fs(347,12)] *)
goal g154_gl: (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_cs:top. (((v_TLSConstants__TLS_1p2 ) = v_version) -> (((v_TLSConstants__TLS_1p2 ) = v_version) -> (forall v_defaults:top. (((v_cs = v_cs) /\ (v_defaults = (v_TLSExtensions__DefaultSigHashAlgs v_version v_cs))) -> (forall v_res:top. (((v_defaults = v_defaults) /\ ((v_Bytes__B v_res) = (v_TLSExtensions__SigHashAlgsBytes v_defaults))) -> (forall v_l8868:top. ((v_l8868 = 2) -> (0 <= v_l8868))))))))))))
(* Querying for (r88628874:Bytes.bytes){res = res /\ Bytes.B (r88628874) = TLSConstants.VLBytes (2, Bytes.B (res))} <: (b8875:Bytes.bytes){version = TLSConstants.TLS_1p2 () => Bytes.B (b8875) = TLSConstants.VLBytes (2, TLSExtensions.SigHashAlgsBytes (TLSExtensions.DefaultSigHashAlgs (version, cs))) /\ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.SSL_3p0 () => Bytes.B (b8875) = array_of_list op_Nil ()} *)
(* query version = TLSConstants.TLS_1p2 () => Bytes.B (l8876) = TLSConstants.VLBytes (2, TLSExtensions.SigHashAlgsBytes (TLSExtensions.DefaultSigHashAlgs (version, cs))) /\ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.SSL_3p0 () => Bytes.B (l8876) = array_of_list op_Nil () [HandshakeMessages.fs(347,12)] *)
goal g155_gl: (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_cs:top. (((v_TLSConstants__TLS_1p2 ) = v_version) -> (((v_TLSConstants__TLS_1p2 ) = v_version) -> (forall v_defaults:top. (((v_cs = v_cs) /\ (v_defaults = (v_TLSExtensions__DefaultSigHashAlgs v_version v_cs))) -> (forall v_res:top. (((v_defaults = v_defaults) /\ ((v_Bytes__B v_res) = (v_TLSExtensions__SigHashAlgsBytes v_defaults))) -> (forall v_l8876:top. (((v_res = v_res) /\ ((v_Bytes__B v_l8876) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_res)))) -> (((v_version = (v_TLSConstants__TLS_1p2 )) -> ((v_Bytes__B v_l8876) = (v_TLSConstants__VLBytes 2 (v_TLSExtensions__SigHashAlgsBytes (v_TLSExtensions__DefaultSigHashAlgs v_version v_cs))))) /\ (((v_version = (v_TLSConstants__TLS_1p1 )) \/ ((v_version = (v_TLSConstants__TLS_1p0 )) \/ (v_version = (v_TLSConstants__SSL_3p0 )))) -> ((v_Bytes__B v_l8876) = (v_Pervasives__array_of_list (v_Pervasives__op_Nil ))))))))))))))))
(* Querying for (msg) Bytes.empty_bytes : (b:Bytes.bytes){version = TLSConstants.TLS_1p2 () => Bytes.B (b) = TLSConstants.VLBytes (2, TLSExtensions.SigHashAlgsBytes (TLSExtensions.DefaultSigHashAlgs (version, cs))) /\ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.SSL_3p0 () => Bytes.B (b) = array_of_list op_Nil ()} *)
(* query version = TLSConstants.TLS_1p2 () => Bytes.B (Bytes.empty_bytes) = TLSConstants.VLBytes (2, TLSExtensions.SigHashAlgsBytes (TLSExtensions.DefaultSigHashAlgs (version, cs))) /\ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.SSL_3p0 () => Bytes.B (Bytes.empty_bytes) = array_of_list op_Nil () [HandshakeMessages.fs(348,41)] *)
goal g156_gl: (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_cs:top. ((not ((v_TLSConstants__TLS_1p2 ) = v_version)) -> (((v_TLSConstants__TLS_1p1 ) = v_version) -> (((v_TLSConstants__TLS_1p1 ) = v_version) -> (((v_version = (v_TLSConstants__TLS_1p2 )) -> ((v_Bytes__B v_Bytes__empty_bytes) = (v_TLSConstants__VLBytes 2 (v_TLSExtensions__SigHashAlgsBytes (v_TLSExtensions__DefaultSigHashAlgs v_version v_cs))))) /\ (((v_version = (v_TLSConstants__TLS_1p1 )) \/ ((v_version = (v_TLSConstants__TLS_1p0 )) \/ (v_version = (v_TLSConstants__SSL_3p0 )))) -> ((v_Bytes__B v_Bytes__empty_bytes) = (v_Pervasives__array_of_list (v_Pervasives__op_Nil )))))))))))
(* Querying for (msg) Bytes.empty_bytes : (b:Bytes.bytes){version = TLSConstants.TLS_1p2 () => Bytes.B (b) = TLSConstants.VLBytes (2, TLSExtensions.SigHashAlgsBytes (TLSExtensions.DefaultSigHashAlgs (version, cs))) /\ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.SSL_3p0 () => Bytes.B (b) = array_of_list op_Nil ()} *)
(* query version = TLSConstants.TLS_1p2 () => Bytes.B (Bytes.empty_bytes) = TLSConstants.VLBytes (2, TLSExtensions.SigHashAlgsBytes (TLSExtensions.DefaultSigHashAlgs (version, cs))) /\ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.SSL_3p0 () => Bytes.B (Bytes.empty_bytes) = array_of_list op_Nil () [HandshakeMessages.fs(348,41)] *)
goal g157_gl: (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_cs:top. ((not ((v_TLSConstants__TLS_1p2 ) = v_version)) -> ((not ((v_TLSConstants__TLS_1p1 ) = v_version)) -> (((v_TLSConstants__TLS_1p0 ) = v_version) -> (((v_TLSConstants__TLS_1p0 ) = v_version) -> (((v_version = (v_TLSConstants__TLS_1p2 )) -> ((v_Bytes__B v_Bytes__empty_bytes) = (v_TLSConstants__VLBytes 2 (v_TLSExtensions__SigHashAlgsBytes (v_TLSExtensions__DefaultSigHashAlgs v_version v_cs))))) /\ (((v_version = (v_TLSConstants__TLS_1p1 )) \/ ((v_version = (v_TLSConstants__TLS_1p0 )) \/ (v_version = (v_TLSConstants__SSL_3p0 )))) -> ((v_Bytes__B v_Bytes__empty_bytes) = (v_Pervasives__array_of_list (v_Pervasives__op_Nil ))))))))))))
(* Querying for (msg) Bytes.empty_bytes : (b:Bytes.bytes){version = TLSConstants.TLS_1p2 () => Bytes.B (b) = TLSConstants.VLBytes (2, TLSExtensions.SigHashAlgsBytes (TLSExtensions.DefaultSigHashAlgs (version, cs))) /\ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.SSL_3p0 () => Bytes.B (b) = array_of_list op_Nil ()} *)
(* query version = TLSConstants.TLS_1p2 () => Bytes.B (Bytes.empty_bytes) = TLSConstants.VLBytes (2, TLSExtensions.SigHashAlgsBytes (TLSExtensions.DefaultSigHashAlgs (version, cs))) /\ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.SSL_3p0 () => Bytes.B (Bytes.empty_bytes) = array_of_list op_Nil () [HandshakeMessages.fs(348,41)] *)
goal g158_gl: (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_cs:top. ((not ((v_TLSConstants__TLS_1p2 ) = v_version)) -> ((not ((v_TLSConstants__TLS_1p1 ) = v_version)) -> ((not ((v_TLSConstants__TLS_1p0 ) = v_version)) -> (((v_TLSConstants__SSL_3p0 ) = v_version) -> (((v_TLSConstants__SSL_3p0 ) = v_version) -> (((v_version = (v_TLSConstants__TLS_1p2 )) -> ((v_Bytes__B v_Bytes__empty_bytes) = (v_TLSConstants__VLBytes 2 (v_TLSExtensions__SigHashAlgsBytes (v_TLSExtensions__DefaultSigHashAlgs v_version v_cs))))) /\ (((v_version = (v_TLSConstants__TLS_1p1 )) \/ ((v_version = (v_TLSConstants__TLS_1p0 )) \/ (v_version = (v_TLSConstants__SSL_3p0 )))) -> ((v_Bytes__B v_Bytes__empty_bytes) = (v_Pervasives__array_of_list (v_Pervasives__op_Nil )))))))))))))
(* Querying for (l89278928:int){l89278928 = 2} <: (l891989258929:int){pr_LessThanOrEqual(l891989258929, 8) /\ pr_LessThanOrEqual(0, l891989258929)} *)
(* query pr_LessThanOrEqual(l8930, 8) /\ pr_LessThanOrEqual(0, l8930) [HandshakeMessages.fs(354,18)] *)
goal g159_gl: (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_data:top. (((v_TLSConstants__TLS_1p2 ) = v_version) -> (((v_TLSConstants__TLS_1p2 ) = v_version) -> (forall v_z8899:top. (((2 = 2) /\ (exists v_x88968900:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x88968900) /\ (0 <= v_x88968900))) /\ (((v_z8899 = v_Pervasives__True) /\ (v_x88968900 >= 2)) \/ ((v_z8899 = v_Pervasives__False) /\ (v_x88968900 < 2)))))) -> ((v_z8899 = v_Pervasives__True) -> (forall v_l8930:top. ((v_l8930 = 2) -> ((v_l8930 <= 8) /\ (0 <= v_l8930))))))))))))
(* Querying for (l89328933:Bytes.bytes){l89328933 = data} <: (b89218934:Bytes.bytes){pr_GreaterThanOrEqual(Bytes.Length (b89218934), 2)} *)
(* query pr_GreaterThanOrEqual(Bytes.Length (l8935), 2) [HandshakeMessages.fs(354,18)] *)
goal g160_gl: (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_data:top. (((v_TLSConstants__TLS_1p2 ) = v_version) -> (((v_TLSConstants__TLS_1p2 ) = v_version) -> (forall v_z8899:top. (((2 = 2) /\ (exists v_x88968900:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x88968900) /\ (0 <= v_x88968900))) /\ (((v_z8899 = v_Pervasives__True) /\ (v_x88968900 >= 2)) \/ ((v_z8899 = v_Pervasives__False) /\ (v_x88968900 < 2)))))) -> ((v_z8899 = v_Pervasives__True) -> (forall v_l8935:top. ((v_l8935 = v_data) -> ((v_Bytes__Length v_l8935) >= 2)))))))))))
(* Querying for (l90559060906690779089:(TLSConstants.sigAlg * TLSConstants.hashAlg) list * l90599063906990809092:Bytes.bytes){Bytes.B (sigAlgsBytes) = TLSExtensions.SigHashAlgsBytes (l90559060906690779089) /\ (l90559060906690779089, l90599063906990809092) = (sigAlgsList, data31)} <: (a907290839093:(TLSConstants.sigAlg * TLSConstants.hashAlg) list * r907590869096:Bytes.bytes){version = TLSConstants.TLS_1p2 () => Bytes.B (data) = bop_ArrayAppend (TLSConstants.VLBytes (2, TLSExtensions.SigHashAlgsBytes (a907290839093)), Bytes.B (r907590869096)) /\ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.SSL_3p0 () => a907290839093 = op_Nil () /\ Bytes.B (r907590869096) = Bytes.B (data)} *)
(* query version = TLSConstants.TLS_1p2 () => Bytes.B (data) = bop_ArrayAppend (TLSConstants.VLBytes (2, TLSExtensions.SigHashAlgsBytes (l9097)), Bytes.B (l9098)) /\ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.SSL_3p0 () => l9097 = op_Nil () /\ Bytes.B (l9098) = Bytes.B (data) [HandshakeMessages.fs(360,39)] *)
goal g161_gl: (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_data:top. (((v_TLSConstants__TLS_1p2 ) = v_version) -> (((v_TLSConstants__TLS_1p2 ) = v_version) -> (forall v_z8899:top. (((2 = 2) /\ (exists v_x88968900:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x88968900) /\ (0 <= v_x88968900))) /\ (((v_z8899 = v_Pervasives__True) /\ (v_x88968900 >= 2)) \/ ((v_z8899 = v_Pervasives__False) /\ (v_x88968900 < 2)))))) -> ((v_z8899 = v_Pervasives__True) -> (forall v_l8917:top. ((v_data = v_data) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l8917))) -> (forall v_res:top. ((exists v_b189238972:top. (exists v_b289248973:top. ((v_res = (v_Tuples__Tup2 v_b189238972 v_b289248973)) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_b189238972)) (v_Bytes__B v_b289248973)))))) -> (((v_Error__Correct v_res) = v_l8917) -> (((v_Error__Correct v_res) = v_l8917) -> (forall v_sigAlgsBytes:top. (forall v_data31:top. (((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_sigAlgsBytes)) (v_Bytes__B v_data31))) -> (((v_Tuples__Tup2 v_sigAlgsBytes v_data31) = v_res) -> (((v_Tuples__Tup2 v_sigAlgsBytes v_data31) = v_res) -> (forall v_l8985:top. ((v_sigAlgsBytes = v_sigAlgsBytes) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l8985))) -> (forall v_sigAlgsList:top. (((v_Bytes__B v_sigAlgsBytes) = (v_TLSExtensions__SigHashAlgsBytes v_sigAlgsList)) -> (((v_Error__Correct v_sigAlgsList) = v_l8985) -> (((v_Error__Correct v_sigAlgsList) = v_l8985) -> (forall v_l9076:top. ((((v_Tuples__Tup2 v_sigAlgsList v_data31) = (v_Tuples__Tup2 v_sigAlgsList v_data31)) /\ (v_l9076 = (v_Error__Correct (v_Tuples__Tup2 v_sigAlgsList v_data31)))) -> (forall v_l9097:top. (forall v_l9098:top. ((((v_Bytes__B v_sigAlgsBytes) = (v_TLSExtensions__SigHashAlgsBytes v_l9097)) /\ ((v_Tuples__Tup2 v_l9097 v_l9098) = (v_Tuples__Tup2 v_sigAlgsList v_data31))) -> (((v_version = (v_TLSConstants__TLS_1p2 )) -> ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_TLSExtensions__SigHashAlgsBytes v_l9097)) (v_Bytes__B v_l9098)))) /\ (((v_version = (v_TLSConstants__TLS_1p1 )) \/ ((v_version = (v_TLSConstants__TLS_1p0 )) \/ (v_version = (v_TLSConstants__SSL_3p0 )))) -> ((v_l9097 = (v_Pervasives__op_Nil )) /\ ((v_Bytes__B v_l9098) = (v_Bytes__B v_data)))))))))))))))))))))))))))))))))))))
(* Querying for (a9113911991489164:(TLSConstants.sigAlg * TLSConstants.hashAlg) list * r9116912291519167:Bytes.bytes){version = TLSConstants.TLS_1p2 () => Bytes.B (data) = bop_ArrayAppend (TLSConstants.VLBytes (2, TLSExtensions.SigHashAlgsBytes (a9113911991489164)), Bytes.B (r9116912291519167)) /\ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.SSL_3p0 () => a9113911991489164 = op_Nil () /\ Bytes.B (r9116912291519167) = Bytes.B (data)} <: (a91549168:(TLSConstants.sigAlg * TLSConstants.hashAlg) list * r91579171:Bytes.bytes){version = TLSConstants.TLS_1p2 () => Bytes.B (data) = bop_ArrayAppend (TLSConstants.VLBytes (2, TLSExtensions.SigHashAlgsBytes (a91549168)), Bytes.B (r91579171)) /\ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.SSL_3p0 () => a91549168 = op_Nil () /\ Bytes.B (r91579171) = Bytes.B (data)} *)
(* query version = TLSConstants.TLS_1p2 () => Bytes.B (data) = bop_ArrayAppend (TLSConstants.VLBytes (2, TLSExtensions.SigHashAlgsBytes (l9172)), Bytes.B (l9173)) /\ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.SSL_3p0 () => l9172 = op_Nil () /\ Bytes.B (l9173) = Bytes.B (data) [HandshakeMessages.fs(361,13)] *)
goal g162_gl: (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_data:top. (((v_TLSConstants__TLS_1p2 ) = v_version) -> (((v_TLSConstants__TLS_1p2 ) = v_version) -> (forall v_z8899:top. (((2 = 2) /\ (exists v_x88968900:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x88968900) /\ (0 <= v_x88968900))) /\ (((v_z8899 = v_Pervasives__True) /\ (v_x88968900 >= 2)) \/ ((v_z8899 = v_Pervasives__False) /\ (v_x88968900 < 2)))))) -> ((v_z8899 = v_Pervasives__False) -> (forall v_l9172:top. (forall v_l9173:top. ((((v_version = (v_TLSConstants__TLS_1p2 )) -> ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_TLSExtensions__SigHashAlgsBytes v_l9172)) (v_Bytes__B v_l9173)))) /\ (((v_version = (v_TLSConstants__TLS_1p1 )) \/ ((v_version = (v_TLSConstants__TLS_1p0 )) \/ (v_version = (v_TLSConstants__SSL_3p0 )))) -> ((v_l9172 = (v_Pervasives__op_Nil )) /\ ((v_Bytes__B v_l9173) = (v_Bytes__B v_data))))) -> (((v_version = (v_TLSConstants__TLS_1p2 )) -> ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_TLSExtensions__SigHashAlgsBytes v_l9172)) (v_Bytes__B v_l9173)))) /\ (((v_version = (v_TLSConstants__TLS_1p1 )) \/ ((v_version = (v_TLSConstants__TLS_1p0 )) \/ (v_version = (v_TLSConstants__SSL_3p0 )))) -> ((v_l9172 = (v_Pervasives__op_Nil )) /\ ((v_Bytes__B v_l9173) = (v_Bytes__B v_data))))))))))))))))
(* Querying for (l91919193919792069216:(TLSConstants.sigAlg * TLSConstants.hashAlg) list * l91929194919892079217:Bytes.bytes){(l91919193919792069216, l91929194919892079217) = (op_Nil (), data)} <: (a920192109218:(TLSConstants.sigAlg * TLSConstants.hashAlg) list * r920492139221:Bytes.bytes){version = TLSConstants.TLS_1p2 () => Bytes.B (data) = bop_ArrayAppend (TLSConstants.VLBytes (2, TLSExtensions.SigHashAlgsBytes (a920192109218)), Bytes.B (r920492139221)) /\ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.SSL_3p0 () => a920192109218 = op_Nil () /\ Bytes.B (r920492139221) = Bytes.B (data)} *)
(* query version = TLSConstants.TLS_1p2 () => Bytes.B (data) = bop_ArrayAppend (TLSConstants.VLBytes (2, TLSExtensions.SigHashAlgsBytes (l9222)), Bytes.B (l9223)) /\ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.SSL_3p0 () => l9222 = op_Nil () /\ Bytes.B (l9223) = Bytes.B (data) [HandshakeMessages.fs(363,8)] *)
goal g163_gl: (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_data:top. ((not ((v_TLSConstants__TLS_1p2 ) = v_version)) -> (((v_TLSConstants__TLS_1p1 ) = v_version) -> (((v_TLSConstants__TLS_1p1 ) = v_version) -> (forall v_l9205:top. ((((v_Tuples__Tup2 (v_Pervasives__op_Nil ) v_data) = (v_Tuples__Tup2 (v_Pervasives__op_Nil ) v_data)) /\ (v_l9205 = (v_Error__Correct (v_Tuples__Tup2 (v_Pervasives__op_Nil ) v_data)))) -> (forall v_l9222:top. (forall v_l9223:top. (((v_Tuples__Tup2 v_l9222 v_l9223) = (v_Tuples__Tup2 (v_Pervasives__op_Nil ) v_data)) -> (((v_version = (v_TLSConstants__TLS_1p2 )) -> ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_TLSExtensions__SigHashAlgsBytes v_l9222)) (v_Bytes__B v_l9223)))) /\ (((v_version = (v_TLSConstants__TLS_1p1 )) \/ ((v_version = (v_TLSConstants__TLS_1p0 )) \/ (v_version = (v_TLSConstants__SSL_3p0 )))) -> ((v_l9222 = (v_Pervasives__op_Nil )) /\ ((v_Bytes__B v_l9223) = (v_Bytes__B v_data))))))))))))))))
(* Querying for (l92359237924192509260:(TLSConstants.sigAlg * TLSConstants.hashAlg) list * l92369238924292519261:Bytes.bytes){(l92359237924192509260, l92369238924292519261) = (op_Nil (), data)} <: (a924592549262:(TLSConstants.sigAlg * TLSConstants.hashAlg) list * r924892579265:Bytes.bytes){version = TLSConstants.TLS_1p2 () => Bytes.B (data) = bop_ArrayAppend (TLSConstants.VLBytes (2, TLSExtensions.SigHashAlgsBytes (a924592549262)), Bytes.B (r924892579265)) /\ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.SSL_3p0 () => a924592549262 = op_Nil () /\ Bytes.B (r924892579265) = Bytes.B (data)} *)
(* query version = TLSConstants.TLS_1p2 () => Bytes.B (data) = bop_ArrayAppend (TLSConstants.VLBytes (2, TLSExtensions.SigHashAlgsBytes (l9266)), Bytes.B (l9267)) /\ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.SSL_3p0 () => l9266 = op_Nil () /\ Bytes.B (l9267) = Bytes.B (data) [HandshakeMessages.fs(363,8)] *)
goal g164_gl: (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_data:top. ((not ((v_TLSConstants__TLS_1p2 ) = v_version)) -> ((not ((v_TLSConstants__TLS_1p1 ) = v_version)) -> (((v_TLSConstants__TLS_1p0 ) = v_version) -> (((v_TLSConstants__TLS_1p0 ) = v_version) -> (forall v_l9249:top. ((((v_Tuples__Tup2 (v_Pervasives__op_Nil ) v_data) = (v_Tuples__Tup2 (v_Pervasives__op_Nil ) v_data)) /\ (v_l9249 = (v_Error__Correct (v_Tuples__Tup2 (v_Pervasives__op_Nil ) v_data)))) -> (forall v_l9266:top. (forall v_l9267:top. (((v_Tuples__Tup2 v_l9266 v_l9267) = (v_Tuples__Tup2 (v_Pervasives__op_Nil ) v_data)) -> (((v_version = (v_TLSConstants__TLS_1p2 )) -> ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_TLSExtensions__SigHashAlgsBytes v_l9266)) (v_Bytes__B v_l9267)))) /\ (((v_version = (v_TLSConstants__TLS_1p1 )) \/ ((v_version = (v_TLSConstants__TLS_1p0 )) \/ (v_version = (v_TLSConstants__SSL_3p0 )))) -> ((v_l9266 = (v_Pervasives__op_Nil )) /\ ((v_Bytes__B v_l9267) = (v_Bytes__B v_data)))))))))))))))))
(* Querying for (l92799281928592949304:(TLSConstants.sigAlg * TLSConstants.hashAlg) list * l92809282928692959305:Bytes.bytes){(l92799281928592949304, l92809282928692959305) = (op_Nil (), data)} <: (a928992989306:(TLSConstants.sigAlg * TLSConstants.hashAlg) list * r929293019309:Bytes.bytes){version = TLSConstants.TLS_1p2 () => Bytes.B (data) = bop_ArrayAppend (TLSConstants.VLBytes (2, TLSExtensions.SigHashAlgsBytes (a928992989306)), Bytes.B (r929293019309)) /\ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.SSL_3p0 () => a928992989306 = op_Nil () /\ Bytes.B (r929293019309) = Bytes.B (data)} *)
(* query version = TLSConstants.TLS_1p2 () => Bytes.B (data) = bop_ArrayAppend (TLSConstants.VLBytes (2, TLSExtensions.SigHashAlgsBytes (l9310)), Bytes.B (l9311)) /\ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.SSL_3p0 () => l9310 = op_Nil () /\ Bytes.B (l9311) = Bytes.B (data) [HandshakeMessages.fs(363,8)] *)
goal g165_gl: (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_data:top. ((not ((v_TLSConstants__TLS_1p2 ) = v_version)) -> ((not ((v_TLSConstants__TLS_1p1 ) = v_version)) -> ((not ((v_TLSConstants__TLS_1p0 ) = v_version)) -> (((v_TLSConstants__SSL_3p0 ) = v_version) -> (((v_TLSConstants__SSL_3p0 ) = v_version) -> (forall v_l9293:top. ((((v_Tuples__Tup2 (v_Pervasives__op_Nil ) v_data) = (v_Tuples__Tup2 (v_Pervasives__op_Nil ) v_data)) /\ (v_l9293 = (v_Error__Correct (v_Tuples__Tup2 (v_Pervasives__op_Nil ) v_data)))) -> (forall v_l9310:top. (forall v_l9311:top. (((v_Tuples__Tup2 v_l9310 v_l9311) = (v_Tuples__Tup2 (v_Pervasives__op_Nil ) v_data)) -> (((v_version = (v_TLSConstants__TLS_1p2 )) -> ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_TLSExtensions__SigHashAlgsBytes v_l9310)) (v_Bytes__B v_l9311)))) /\ (((v_version = (v_TLSConstants__TLS_1p1 )) \/ ((v_version = (v_TLSConstants__TLS_1p0 )) \/ (v_version = (v_TLSConstants__SSL_3p0 )))) -> ((v_l9310 = (v_Pervasives__op_Nil )) /\ ((v_Bytes__B v_l9311) = (v_Bytes__B v_data))))))))))))))))))
(* Querying for (l93529353:int){l93529353 = 1} <: (l934693509354:int){pr_LessThanOrEqual(0, l934693509354)} *)
(* query pr_LessThanOrEqual(0, l9355) [HandshakeMessages.fs(368,14)] *)
goal g166_gl: (forall v_sign:top. (forall v_cs:top. (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_certTypes:top. (((v_cs = v_cs) /\ (v_certTypes = (v_TLSConstants__DefaultCertTypes v_sign v_cs))) -> (forall v_ctb:top. (((v_certTypes = v_certTypes) /\ ((v_Bytes__B v_ctb) = (v_TLSConstants__CertTypesBytes v_certTypes))) -> (forall v_l9355:top. ((v_l9355 = 1) -> (0 <= v_l9355)))))))))))
(* Querying for (l93709371:TLSConstants.PreProtocolVersion){l93709371 = version} <: (pv936493689372:TLSConstants.PreProtocolVersion){TLSConstants.IsProtocolVersion(pv936493689372)} *)
(* query TLSConstants.IsProtocolVersion(l9373) [HandshakeMessages.fs(369,20)] *)
goal g167_gl: (forall v_sign:top. (forall v_cs:top. (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_certTypes:top. (((v_cs = v_cs) /\ (v_certTypes = (v_TLSConstants__DefaultCertTypes v_sign v_cs))) -> (forall v_ctb:top. (((v_certTypes = v_certTypes) /\ ((v_Bytes__B v_ctb) = (v_TLSConstants__CertTypesBytes v_certTypes))) -> (forall v_ctb32:top. (((v_ctb = v_ctb) /\ ((v_Bytes__B v_ctb32) = (v_TLSConstants__VLBytes 1 (v_Bytes__B v_ctb)))) -> (forall v_l9373:top. ((v_l9373 = v_version) -> (v_TLSConstants__IsProtocolVersion_p v_l9373)))))))))))))
(* Querying for (l93999400:int){l93999400 = 2} <: (l939393979401:int){pr_LessThanOrEqual(0, l939393979401)} *)
(* query pr_LessThanOrEqual(0, l9402) [HandshakeMessages.fs(372,20)] *)
goal g168_gl: (forall v_sign:top. (forall v_cs:top. (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_certTypes:top. (((v_cs = v_cs) /\ (v_certTypes = (v_TLSConstants__DefaultCertTypes v_sign v_cs))) -> (forall v_ctb:top. (((v_certTypes = v_certTypes) /\ ((v_Bytes__B v_ctb) = (v_TLSConstants__CertTypesBytes v_certTypes))) -> (forall v_ctb32:top. (((v_ctb = v_ctb) /\ ((v_Bytes__B v_ctb32) = (v_TLSConstants__VLBytes 1 (v_Bytes__B v_ctb)))) -> (forall v_sigAndAlg:top. (((v_cs = v_cs) /\ (((v_version = (v_TLSConstants__TLS_1p2 )) -> ((v_Bytes__B v_sigAndAlg) = (v_TLSConstants__VLBytes 2 (v_TLSExtensions__SigHashAlgsBytes (v_TLSExtensions__DefaultSigHashAlgs v_version v_cs))))) /\ (((v_version = (v_TLSConstants__TLS_1p1 )) \/ ((v_version = (v_TLSConstants__TLS_1p0 )) \/ (v_version = (v_TLSConstants__SSL_3p0 )))) -> ((v_Bytes__B v_sigAndAlg) = (v_Pervasives__array_of_list (v_Pervasives__op_Nil )))))) -> (forall v_distNames:top. ((((v_Pervasives__op_Nil ) = (v_Pervasives__op_Nil )) /\ ((v_Bytes__B v_distNames) = (v_TLSConstants__DistinguishedNameListBytes (v_Pervasives__op_Nil )))) -> (forall v_l9402:top. ((v_l9402 = 2) -> (0 <= v_l9402)))))))))))))))))
(* Querying for (l94479448:PreHandshakeType){l94479448 = HT_certificate_request ()} <: (ht944194459449:PreHandshakeType){IsHandshakeType(ht944194459449)} *)
(* query IsHandshakeType(l9450) [HandshakeMessages.fs(376,4)] *)
goal g169_gl: (forall v_sign:top. (forall v_cs:top. (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_certTypes:top. (((v_cs = v_cs) /\ (v_certTypes = (v_TLSConstants__DefaultCertTypes v_sign v_cs))) -> (forall v_ctb:top. (((v_certTypes = v_certTypes) /\ ((v_Bytes__B v_ctb) = (v_TLSConstants__CertTypesBytes v_certTypes))) -> (forall v_ctb32:top. (((v_ctb = v_ctb) /\ ((v_Bytes__B v_ctb32) = (v_TLSConstants__VLBytes 1 (v_Bytes__B v_ctb)))) -> (forall v_sigAndAlg:top. (((v_cs = v_cs) /\ (((v_version = (v_TLSConstants__TLS_1p2 )) -> ((v_Bytes__B v_sigAndAlg) = (v_TLSConstants__VLBytes 2 (v_TLSExtensions__SigHashAlgsBytes (v_TLSExtensions__DefaultSigHashAlgs v_version v_cs))))) /\ (((v_version = (v_TLSConstants__TLS_1p1 )) \/ ((v_version = (v_TLSConstants__TLS_1p0 )) \/ (v_version = (v_TLSConstants__SSL_3p0 )))) -> ((v_Bytes__B v_sigAndAlg) = (v_Pervasives__array_of_list (v_Pervasives__op_Nil )))))) -> (forall v_distNames:top. ((((v_Pervasives__op_Nil ) = (v_Pervasives__op_Nil )) /\ ((v_Bytes__B v_distNames) = (v_TLSConstants__DistinguishedNameListBytes (v_Pervasives__op_Nil )))) -> (forall v_distNames33:top. (((v_distNames = v_distNames) /\ ((v_Bytes__B v_distNames33) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_distNames)))) -> (forall v_data:top. ((exists v_b29413:top. (((v_distNames33 = v_distNames33) /\ ((v_Bytes__B v_b29413) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_sigAndAlg) (v_Bytes__B v_distNames33)))) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_ctb32) (v_Bytes__B v_b29413))))) -> (forall v_l9450:top. ((v_l9450 = (v_HandshakeMessages__HT_certificate_request )) -> (v_HandshakeMessages__IsHandshakeType_p v_l9450)))))))))))))))))))))
(* Querying for (m94449456:Bytes.bytes){data = data /\ Bytes.B (m94449456) = MessageBytes (HT_certificate_request (), Bytes.B (data))} <: (b9457:Bytes.bytes){Bytes.B (b9457) = CertificateRequestMsg (version, TLSConstants.DefaultCertTypes (sign, cs), TLSExtensions.DefaultSigHashAlgs (version, cs), op_Nil ())} *)
(* query Bytes.B (l9458) = CertificateRequestMsg (version, TLSConstants.DefaultCertTypes (sign, cs), TLSExtensions.DefaultSigHashAlgs (version, cs), op_Nil ()) [HandshakeMessages.fs(376,4)] *)
goal g170_gl: (forall v_sign:top. (forall v_cs:top. (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_certTypes:top. (((v_cs = v_cs) /\ (v_certTypes = (v_TLSConstants__DefaultCertTypes v_sign v_cs))) -> (forall v_ctb:top. (((v_certTypes = v_certTypes) /\ ((v_Bytes__B v_ctb) = (v_TLSConstants__CertTypesBytes v_certTypes))) -> (forall v_ctb32:top. (((v_ctb = v_ctb) /\ ((v_Bytes__B v_ctb32) = (v_TLSConstants__VLBytes 1 (v_Bytes__B v_ctb)))) -> (forall v_sigAndAlg:top. (((v_cs = v_cs) /\ (((v_version = (v_TLSConstants__TLS_1p2 )) -> ((v_Bytes__B v_sigAndAlg) = (v_TLSConstants__VLBytes 2 (v_TLSExtensions__SigHashAlgsBytes (v_TLSExtensions__DefaultSigHashAlgs v_version v_cs))))) /\ (((v_version = (v_TLSConstants__TLS_1p1 )) \/ ((v_version = (v_TLSConstants__TLS_1p0 )) \/ (v_version = (v_TLSConstants__SSL_3p0 )))) -> ((v_Bytes__B v_sigAndAlg) = (v_Pervasives__array_of_list (v_Pervasives__op_Nil )))))) -> (forall v_distNames:top. ((((v_Pervasives__op_Nil ) = (v_Pervasives__op_Nil )) /\ ((v_Bytes__B v_distNames) = (v_TLSConstants__DistinguishedNameListBytes (v_Pervasives__op_Nil )))) -> (forall v_distNames33:top. (((v_distNames = v_distNames) /\ ((v_Bytes__B v_distNames33) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_distNames)))) -> (forall v_data:top. ((exists v_b29413:top. (((v_distNames33 = v_distNames33) /\ ((v_Bytes__B v_b29413) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_sigAndAlg) (v_Bytes__B v_distNames33)))) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_ctb32) (v_Bytes__B v_b29413))))) -> (forall v_l9458:top. (((v_data = v_data) /\ ((v_Bytes__B v_l9458) = (v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_certificate_request ) (v_Bytes__B v_data)))) -> ((v_Bytes__B v_l9458) = (v_HandshakeMessages__CertificateRequestMsg v_version (v_TLSConstants__DefaultCertTypes v_sign v_cs) (v_TLSExtensions__DefaultSigHashAlgs v_version v_cs) (v_Pervasives__op_Nil )))))))))))))))))))))))
(* Querying for (l94939494:int){l94939494 = 1} <: (l948594919495:int){pr_LessThanOrEqual(l948594919495, 8) /\ pr_LessThanOrEqual(0, l948594919495)} *)
(* query pr_LessThanOrEqual(l9496, 8) /\ pr_LessThanOrEqual(0, l9496) [HandshakeMessages.fs(380,14)] *)
goal g171_gl: (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_data:top. (forall v_z9465:top. (((1 = 1) /\ (exists v_x94629466:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x94629466) /\ (0 <= v_x94629466))) /\ (((v_z9465 = v_Pervasives__True) /\ (v_x94629466 >= 1)) \/ ((v_z9465 = v_Pervasives__False) /\ (v_x94629466 < 1)))))) -> ((v_z9465 = v_Pervasives__True) -> (forall v_l9496:top. ((v_l9496 = 1) -> ((v_l9496 <= 8) /\ (0 <= v_l9496))))))))))
(* Querying for (l94989499:Bytes.bytes){l94989499 = data} <: (b94879500:Bytes.bytes){pr_GreaterThanOrEqual(Bytes.Length (b94879500), 1)} *)
(* query pr_GreaterThanOrEqual(Bytes.Length (l9501), 1) [HandshakeMessages.fs(380,14)] *)
goal g172_gl: (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_data:top. (forall v_z9465:top. (((1 = 1) /\ (exists v_x94629466:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x94629466) /\ (0 <= v_x94629466))) /\ (((v_z9465 = v_Pervasives__True) /\ (v_x94629466 >= 1)) \/ ((v_z9465 = v_Pervasives__False) /\ (v_x94629466 < 1)))))) -> ((v_z9465 = v_Pervasives__True) -> (forall v_l9501:top. ((v_l9501 = v_data) -> ((v_Bytes__Length v_l9501) >= 1)))))))))
(* Querying for (l96079608:TLSConstants.PreProtocolVersion){l96079608 = version} <: (pv959996059609:TLSConstants.PreProtocolVersion){TLSConstants.IsProtocolVersion(pv959996059609)} *)
(* query TLSConstants.IsProtocolVersion(l9610) [HandshakeMessages.fs(387,14)] *)
goal g173_gl: (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_data:top. (forall v_z9465:top. (((1 = 1) /\ (exists v_x94629466:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x94629466) /\ (0 <= v_x94629466))) /\ (((v_z9465 = v_Pervasives__True) /\ (v_x94629466 >= 1)) \/ ((v_z9465 = v_Pervasives__False) /\ (v_x94629466 < 1)))))) -> ((v_z9465 = v_Pervasives__True) -> (forall v_l9483:top. ((v_data = v_data) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l9483))) -> (forall v_res:top. ((exists v_b194899538:top. (exists v_b294909539:top. ((v_res = (v_Tuples__Tup2 v_b194899538 v_b294909539)) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_b194899538)) (v_Bytes__B v_b294909539)))))) -> (((v_Error__Correct v_res) = v_l9483) -> (((v_Error__Correct v_res) = v_l9483) -> (forall v_certTypeListBytes:top. (forall v_data34:top. (((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_certTypeListBytes)) (v_Bytes__B v_data34))) -> (((v_Tuples__Tup2 v_certTypeListBytes v_data34) = v_res) -> (((v_Tuples__Tup2 v_certTypeListBytes v_data34) = v_res) -> (forall v_l9551:top. ((v_certTypeListBytes = v_certTypeListBytes) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l9551))) -> (forall v_certTypeList:top. (((v_Error__Correct v_certTypeList) = v_l9551) -> (((v_Error__Correct v_certTypeList) = v_l9551) -> (forall v_l9610:top. ((v_l9610 = v_version) -> (v_TLSConstants__IsProtocolVersion_p v_l9610)))))))))))))))))))))))))))
(* Querying for (l97169717:int){l97169717 = 2} <: (l970997149718:int){pr_LessThanOrEqual(l970997149718, 8) /\ pr_LessThanOrEqual(0, l970997149718)} *)
(* query pr_LessThanOrEqual(l9719, 8) /\ pr_LessThanOrEqual(0, l9719) [HandshakeMessages.fs(392,18)] *)
goal g174_gl: (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_data:top. (forall v_z9465:top. (((1 = 1) /\ (exists v_x94629466:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x94629466) /\ (0 <= v_x94629466))) /\ (((v_z9465 = v_Pervasives__True) /\ (v_x94629466 >= 1)) \/ ((v_z9465 = v_Pervasives__False) /\ (v_x94629466 < 1)))))) -> ((v_z9465 = v_Pervasives__True) -> (forall v_l9483:top. ((v_data = v_data) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l9483))) -> (forall v_res:top. ((exists v_b194899538:top. (exists v_b294909539:top. ((v_res = (v_Tuples__Tup2 v_b194899538 v_b294909539)) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_b194899538)) (v_Bytes__B v_b294909539)))))) -> (((v_Error__Correct v_res) = v_l9483) -> (((v_Error__Correct v_res) = v_l9483) -> (forall v_certTypeListBytes:top. (forall v_data34:top. (((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_certTypeListBytes)) (v_Bytes__B v_data34))) -> (((v_Tuples__Tup2 v_certTypeListBytes v_data34) = v_res) -> (((v_Tuples__Tup2 v_certTypeListBytes v_data34) = v_res) -> (forall v_l9551:top. ((v_certTypeListBytes = v_certTypeListBytes) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l9551))) -> (forall v_certTypeList:top. (((v_Error__Correct v_certTypeList) = v_l9551) -> (((v_Error__Correct v_certTypeList) = v_l9551) -> (forall v_l9597:top. ((v_data34 = v_data34) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l9597))) -> (forall v_res35:top. ((exists v_a96039661:top. (exists v_r96049664:top. ((v_res35 = (v_Tuples__Tup2 v_a96039661 v_r96049664)) /\ (((v_version = (v_TLSConstants__TLS_1p2 )) -> ((v_Bytes__B v_data34) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_TLSExtensions__SigHashAlgsBytes v_a96039661)) (v_Bytes__B v_r96049664)))) /\ (((v_version = (v_TLSConstants__TLS_1p1 )) \/ ((v_version = (v_TLSConstants__TLS_1p0 )) \/ (v_version = (v_TLSConstants__SSL_3p0 )))) -> ((v_a96039661 = (v_Pervasives__op_Nil )) /\ ((v_Bytes__B v_r96049664) = (v_Bytes__B v_data34)))))))) -> (((v_Error__Correct v_res35) = v_l9597) -> (((v_Error__Correct v_res35) = v_l9597) -> (forall v_sigAlgs:top. (forall v_data36:top. ((((v_version = (v_TLSConstants__TLS_1p2 )) -> ((v_Bytes__B v_data34) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_TLSExtensions__SigHashAlgsBytes v_sigAlgs)) (v_Bytes__B v_data36)))) /\ (((v_version = (v_TLSConstants__TLS_1p1 )) \/ ((v_version = (v_TLSConstants__TLS_1p0 )) \/ (v_version = (v_TLSConstants__SSL_3p0 )))) -> ((v_sigAlgs = (v_Pervasives__op_Nil )) /\ ((v_Bytes__B v_data36) = (v_Bytes__B v_data34))))) -> (((v_Tuples__Tup2 v_sigAlgs v_data36) = v_res35) -> (((v_Tuples__Tup2 v_sigAlgs v_data36) = v_res35) -> (forall v_z9689:top. (((2 = 2) /\ (exists v_x96869690:top. (((v_data36 = v_data36) /\ (((v_Bytes__Length v_data36) = v_x96869690) /\ (0 <= v_x96869690))) /\ (((v_z9689 = v_Pervasives__True) /\ (v_x96869690 >= 2)) \/ ((v_z9689 = v_Pervasives__False) /\ (v_x96869690 < 2)))))) -> ((v_z9689 = v_Pervasives__True) -> (forall v_l9719:top. ((v_l9719 = 2) -> ((v_l9719 <= 8) /\ (0 <= v_l9719)))))))))))))))))))))))))))))))))))))))))))
(* Querying for (l97219722:Bytes.bytes){l97219722 = data36} <: (b97119723:Bytes.bytes){pr_GreaterThanOrEqual(Bytes.Length (b97119723), 2)} *)
(* query pr_GreaterThanOrEqual(Bytes.Length (l9724), 2) [HandshakeMessages.fs(392,18)] *)
goal g175_gl: (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_data:top. (forall v_z9465:top. (((1 = 1) /\ (exists v_x94629466:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x94629466) /\ (0 <= v_x94629466))) /\ (((v_z9465 = v_Pervasives__True) /\ (v_x94629466 >= 1)) \/ ((v_z9465 = v_Pervasives__False) /\ (v_x94629466 < 1)))))) -> ((v_z9465 = v_Pervasives__True) -> (forall v_l9483:top. ((v_data = v_data) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l9483))) -> (forall v_res:top. ((exists v_b194899538:top. (exists v_b294909539:top. ((v_res = (v_Tuples__Tup2 v_b194899538 v_b294909539)) /\ ((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_b194899538)) (v_Bytes__B v_b294909539)))))) -> (((v_Error__Correct v_res) = v_l9483) -> (((v_Error__Correct v_res) = v_l9483) -> (forall v_certTypeListBytes:top. (forall v_data34:top. (((v_Bytes__B v_data) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 1 (v_Bytes__B v_certTypeListBytes)) (v_Bytes__B v_data34))) -> (((v_Tuples__Tup2 v_certTypeListBytes v_data34) = v_res) -> (((v_Tuples__Tup2 v_certTypeListBytes v_data34) = v_res) -> (forall v_l9551:top. ((v_certTypeListBytes = v_certTypeListBytes) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l9551))) -> (forall v_certTypeList:top. (((v_Error__Correct v_certTypeList) = v_l9551) -> (((v_Error__Correct v_certTypeList) = v_l9551) -> (forall v_l9597:top. ((v_data34 = v_data34) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l9597))) -> (forall v_res35:top. ((exists v_a96039661:top. (exists v_r96049664:top. ((v_res35 = (v_Tuples__Tup2 v_a96039661 v_r96049664)) /\ (((v_version = (v_TLSConstants__TLS_1p2 )) -> ((v_Bytes__B v_data34) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_TLSExtensions__SigHashAlgsBytes v_a96039661)) (v_Bytes__B v_r96049664)))) /\ (((v_version = (v_TLSConstants__TLS_1p1 )) \/ ((v_version = (v_TLSConstants__TLS_1p0 )) \/ (v_version = (v_TLSConstants__SSL_3p0 )))) -> ((v_a96039661 = (v_Pervasives__op_Nil )) /\ ((v_Bytes__B v_r96049664) = (v_Bytes__B v_data34)))))))) -> (((v_Error__Correct v_res35) = v_l9597) -> (((v_Error__Correct v_res35) = v_l9597) -> (forall v_sigAlgs:top. (forall v_data36:top. ((((v_version = (v_TLSConstants__TLS_1p2 )) -> ((v_Bytes__B v_data34) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_TLSExtensions__SigHashAlgsBytes v_sigAlgs)) (v_Bytes__B v_data36)))) /\ (((v_version = (v_TLSConstants__TLS_1p1 )) \/ ((v_version = (v_TLSConstants__TLS_1p0 )) \/ (v_version = (v_TLSConstants__SSL_3p0 )))) -> ((v_sigAlgs = (v_Pervasives__op_Nil )) /\ ((v_Bytes__B v_data36) = (v_Bytes__B v_data34))))) -> (((v_Tuples__Tup2 v_sigAlgs v_data36) = v_res35) -> (((v_Tuples__Tup2 v_sigAlgs v_data36) = v_res35) -> (forall v_z9689:top. (((2 = 2) /\ (exists v_x96869690:top. (((v_data36 = v_data36) /\ (((v_Bytes__Length v_data36) = v_x96869690) /\ (0 <= v_x96869690))) /\ (((v_z9689 = v_Pervasives__True) /\ (v_x96869690 >= 2)) \/ ((v_z9689 = v_Pervasives__False) /\ (v_x96869690 < 2)))))) -> ((v_z9689 = v_Pervasives__True) -> (forall v_l9724:top. ((v_l9724 = v_data36) -> ((v_Bytes__Length v_l9724) >= 2))))))))))))))))))))))))))))))))))))))))))
(* Querying for (msg) encpms : (b:Bytes.bytes){version = TLSConstants.SSL_3p0 () => Bytes.B (b) = Bytes.B (encpms) /\ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p2 () => Bytes.B (b) = TLSConstants.VLBytes (2, Bytes.B (encpms))} *)
(* query version = TLSConstants.SSL_3p0 () => Bytes.B (encpms) = Bytes.B (encpms) /\ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p2 () => Bytes.B (encpms) = TLSConstants.VLBytes (2, Bytes.B (encpms)) [HandshakeMessages.fs(412,17)] *)
goal g176_gl: (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_encpms:top. (((v_TLSConstants__SSL_3p0 ) = v_version) -> (((v_TLSConstants__SSL_3p0 ) = v_version) -> (((v_version = (v_TLSConstants__SSL_3p0 )) -> ((v_Bytes__B v_encpms) = (v_Bytes__B v_encpms))) /\ (((v_version = (v_TLSConstants__TLS_1p0 )) \/ ((v_version = (v_TLSConstants__TLS_1p1 )) \/ (v_version = (v_TLSConstants__TLS_1p2 )))) -> ((v_Bytes__B v_encpms) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_encpms))))))))))
(* Querying for (l1002110022:int){l1002110022 = 2} <: (l100151001910023:int){pr_LessThanOrEqual(0, l100151001910023)} *)
(* query pr_LessThanOrEqual(0, l10024) [HandshakeMessages.fs(413,37)] *)
goal g177_gl: (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_encpms:top. ((not ((v_TLSConstants__SSL_3p0 ) = v_version)) -> (((v_TLSConstants__TLS_1p0 ) = v_version) -> (((v_TLSConstants__TLS_1p0 ) = v_version) -> (forall v_l10024:top. ((v_l10024 = 2) -> (0 <= v_l10024)))))))))
(* Querying for (r1001810030:Bytes.bytes){encpms = encpms /\ Bytes.B (r1001810030) = TLSConstants.VLBytes (2, Bytes.B (encpms))} <: (b10031:Bytes.bytes){version = TLSConstants.SSL_3p0 () => Bytes.B (b10031) = Bytes.B (encpms) /\ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p2 () => Bytes.B (b10031) = TLSConstants.VLBytes (2, Bytes.B (encpms))} *)
(* query version = TLSConstants.SSL_3p0 () => Bytes.B (l10032) = Bytes.B (encpms) /\ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p2 () => Bytes.B (l10032) = TLSConstants.VLBytes (2, Bytes.B (encpms)) [HandshakeMessages.fs(413,37)] *)
goal g178_gl: (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_encpms:top. ((not ((v_TLSConstants__SSL_3p0 ) = v_version)) -> (((v_TLSConstants__TLS_1p0 ) = v_version) -> (((v_TLSConstants__TLS_1p0 ) = v_version) -> (forall v_l10032:top. (((v_encpms = v_encpms) /\ ((v_Bytes__B v_l10032) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_encpms)))) -> (((v_version = (v_TLSConstants__SSL_3p0 )) -> ((v_Bytes__B v_l10032) = (v_Bytes__B v_encpms))) /\ (((v_version = (v_TLSConstants__TLS_1p0 )) \/ ((v_version = (v_TLSConstants__TLS_1p1 )) \/ (v_version = (v_TLSConstants__TLS_1p2 )))) -> ((v_Bytes__B v_l10032) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_encpms)))))))))))))
(* Querying for (l1004110042:int){l1004110042 = 2} <: (l100351003910043:int){pr_LessThanOrEqual(0, l100351003910043)} *)
(* query pr_LessThanOrEqual(0, l10044) [HandshakeMessages.fs(413,37)] *)
goal g179_gl: (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_encpms:top. ((not ((v_TLSConstants__SSL_3p0 ) = v_version)) -> ((not ((v_TLSConstants__TLS_1p0 ) = v_version)) -> (((v_TLSConstants__TLS_1p1 ) = v_version) -> (((v_TLSConstants__TLS_1p1 ) = v_version) -> (forall v_l10044:top. ((v_l10044 = 2) -> (0 <= v_l10044))))))))))
(* Querying for (r1003810050:Bytes.bytes){encpms = encpms /\ Bytes.B (r1003810050) = TLSConstants.VLBytes (2, Bytes.B (encpms))} <: (b10051:Bytes.bytes){version = TLSConstants.SSL_3p0 () => Bytes.B (b10051) = Bytes.B (encpms) /\ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p2 () => Bytes.B (b10051) = TLSConstants.VLBytes (2, Bytes.B (encpms))} *)
(* query version = TLSConstants.SSL_3p0 () => Bytes.B (l10052) = Bytes.B (encpms) /\ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p2 () => Bytes.B (l10052) = TLSConstants.VLBytes (2, Bytes.B (encpms)) [HandshakeMessages.fs(413,37)] *)
goal g180_gl: (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_encpms:top. ((not ((v_TLSConstants__SSL_3p0 ) = v_version)) -> ((not ((v_TLSConstants__TLS_1p0 ) = v_version)) -> (((v_TLSConstants__TLS_1p1 ) = v_version) -> (((v_TLSConstants__TLS_1p1 ) = v_version) -> (forall v_l10052:top. (((v_encpms = v_encpms) /\ ((v_Bytes__B v_l10052) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_encpms)))) -> (((v_version = (v_TLSConstants__SSL_3p0 )) -> ((v_Bytes__B v_l10052) = (v_Bytes__B v_encpms))) /\ (((v_version = (v_TLSConstants__TLS_1p0 )) \/ ((v_version = (v_TLSConstants__TLS_1p1 )) \/ (v_version = (v_TLSConstants__TLS_1p2 )))) -> ((v_Bytes__B v_l10052) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_encpms))))))))))))))
(* Querying for (l1006110062:int){l1006110062 = 2} <: (l100551005910063:int){pr_LessThanOrEqual(0, l100551005910063)} *)
(* query pr_LessThanOrEqual(0, l10064) [HandshakeMessages.fs(413,37)] *)
goal g181_gl: (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_encpms:top. ((not ((v_TLSConstants__SSL_3p0 ) = v_version)) -> ((not ((v_TLSConstants__TLS_1p0 ) = v_version)) -> ((not ((v_TLSConstants__TLS_1p1 ) = v_version)) -> (((v_TLSConstants__TLS_1p2 ) = v_version) -> (((v_TLSConstants__TLS_1p2 ) = v_version) -> (forall v_l10064:top. ((v_l10064 = 2) -> (0 <= v_l10064)))))))))))
(* Querying for (r1005810070:Bytes.bytes){encpms = encpms /\ Bytes.B (r1005810070) = TLSConstants.VLBytes (2, Bytes.B (encpms))} <: (b10071:Bytes.bytes){version = TLSConstants.SSL_3p0 () => Bytes.B (b10071) = Bytes.B (encpms) /\ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p2 () => Bytes.B (b10071) = TLSConstants.VLBytes (2, Bytes.B (encpms))} *)
(* query version = TLSConstants.SSL_3p0 () => Bytes.B (l10072) = Bytes.B (encpms) /\ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p2 () => Bytes.B (l10072) = TLSConstants.VLBytes (2, Bytes.B (encpms)) [HandshakeMessages.fs(413,37)] *)
goal g182_gl: (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_encpms:top. ((not ((v_TLSConstants__SSL_3p0 ) = v_version)) -> ((not ((v_TLSConstants__TLS_1p0 ) = v_version)) -> ((not ((v_TLSConstants__TLS_1p1 ) = v_version)) -> (((v_TLSConstants__TLS_1p2 ) = v_version) -> (((v_TLSConstants__TLS_1p2 ) = v_version) -> (forall v_l10072:top. (((v_encpms = v_encpms) /\ ((v_Bytes__B v_l10072) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_encpms)))) -> (((v_version = (v_TLSConstants__SSL_3p0 )) -> ((v_Bytes__B v_l10072) = (v_Bytes__B v_encpms))) /\ (((v_version = (v_TLSConstants__TLS_1p0 )) \/ ((v_version = (v_TLSConstants__TLS_1p1 )) \/ (v_version = (v_TLSConstants__TLS_1p2 )))) -> ((v_Bytes__B v_l10072) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_encpms)))))))))))))))
(* Querying for (l1008010081100841008910095:Bytes.bytes){l1008010081100841008910095 = data} <: (encpms100871009210096:Bytes.bytes){version = TLSConstants.SSL_3p0 () => Bytes.B (data) = Bytes.B (encpms100871009210096) /\ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p2 () => Bytes.B (data) = TLSConstants.VLBytes (2, Bytes.B (encpms100871009210096))} *)
(* query version = TLSConstants.SSL_3p0 () => Bytes.B (data) = Bytes.B (l10097) /\ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p2 () => Bytes.B (data) = TLSConstants.VLBytes (2, Bytes.B (l10097)) [HandshakeMessages.fs(417,17)] *)
goal g183_gl: (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_data:top. (((v_TLSConstants__SSL_3p0 ) = v_version) -> (((v_TLSConstants__SSL_3p0 ) = v_version) -> (forall v_l10088:top. (((v_data = v_data) /\ (v_l10088 = (v_Error__Correct v_data))) -> (forall v_l10097:top. ((v_l10097 = v_data) -> (((v_version = (v_TLSConstants__SSL_3p0 )) -> ((v_Bytes__B v_data) = (v_Bytes__B v_l10097))) /\ (((v_version = (v_TLSConstants__TLS_1p0 )) \/ ((v_version = (v_TLSConstants__TLS_1p1 )) \/ (v_version = (v_TLSConstants__TLS_1p2 )))) -> ((v_Bytes__B v_data) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_l10097))))))))))))))
(* Querying for (l1013110132:int){l1013110132 = 2} <: (l101241012910133:int){pr_LessThanOrEqual(l101241012910133, 8) /\ pr_LessThanOrEqual(0, l101241012910133)} *)
(* query pr_LessThanOrEqual(l10134, 8) /\ pr_LessThanOrEqual(0, l10134) [HandshakeMessages.fs(420,18)] *)
goal g184_gl: (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_data:top. ((not ((v_TLSConstants__SSL_3p0 ) = v_version)) -> (((v_TLSConstants__TLS_1p0 ) = v_version) -> (((v_TLSConstants__TLS_1p0 ) = v_version) -> (forall v_z10104:top. (((2 = 2) /\ (exists v_x1010110105:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x1010110105) /\ (0 <= v_x1010110105))) /\ (((v_z10104 = v_Pervasives__True) /\ (v_x1010110105 >= 2)) \/ ((v_z10104 = v_Pervasives__False) /\ (v_x1010110105 < 2)))))) -> ((v_z10104 = v_Pervasives__True) -> (forall v_l10134:top. ((v_l10134 = 2) -> ((v_l10134 <= 8) /\ (0 <= v_l10134)))))))))))))
(* Querying for (l1013610137:Bytes.bytes){l1013610137 = data} <: (b1012610138:Bytes.bytes){pr_GreaterThanOrEqual(Bytes.Length (b1012610138), 2)} *)
(* query pr_GreaterThanOrEqual(Bytes.Length (l10139), 2) [HandshakeMessages.fs(420,18)] *)
goal g185_gl: (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_data:top. ((not ((v_TLSConstants__SSL_3p0 ) = v_version)) -> (((v_TLSConstants__TLS_1p0 ) = v_version) -> (((v_TLSConstants__TLS_1p0 ) = v_version) -> (forall v_z10104:top. (((2 = 2) /\ (exists v_x1010110105:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x1010110105) /\ (0 <= v_x1010110105))) /\ (((v_z10104 = v_Pervasives__True) /\ (v_x1010110105 >= 2)) \/ ((v_z10104 = v_Pervasives__False) /\ (v_x1010110105 < 2)))))) -> ((v_z10104 = v_Pervasives__True) -> (forall v_l10139:top. ((v_l10139 = v_data) -> ((v_Bytes__Length v_l10139) >= 2))))))))))))
(* Querying for (l1016410166101691017410180:Bytes.bytes){l1016410166101691017410180 = encPMS /\ Bytes.B (data) = TLSConstants.VLBytes (2, Bytes.B (l1016410166101691017410180))} <: (encpms101721017710181:Bytes.bytes){version = TLSConstants.SSL_3p0 () => Bytes.B (data) = Bytes.B (encpms101721017710181) /\ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p2 () => Bytes.B (data) = TLSConstants.VLBytes (2, Bytes.B (encpms101721017710181))} *)
(* query version = TLSConstants.SSL_3p0 () => Bytes.B (data) = Bytes.B (l10182) /\ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p2 () => Bytes.B (data) = TLSConstants.VLBytes (2, Bytes.B (l10182)) [HandshakeMessages.fs(421,34)] *)
goal g186_gl: (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_data:top. ((not ((v_TLSConstants__SSL_3p0 ) = v_version)) -> (((v_TLSConstants__TLS_1p0 ) = v_version) -> (((v_TLSConstants__TLS_1p0 ) = v_version) -> (forall v_z10104:top. (((2 = 2) /\ (exists v_x1010110105:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x1010110105) /\ (0 <= v_x1010110105))) /\ (((v_z10104 = v_Pervasives__True) /\ (v_x1010110105 >= 2)) \/ ((v_z10104 = v_Pervasives__False) /\ (v_x1010110105 < 2)))))) -> ((v_z10104 = v_Pervasives__True) -> (forall v_l10122:top. ((v_data = v_data) -> (forall v_encPMS:top. (((v_Bytes__B v_data) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_encPMS))) -> (((v_Error__Correct v_encPMS) = v_l10122) -> (((v_Error__Correct v_encPMS) = v_l10122) -> (forall v_l10173:top. ((((v_encPMS = v_encPMS) /\ ((v_Bytes__B v_data) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_encPMS)))) /\ (v_l10173 = (v_Error__Correct v_encPMS))) -> (forall v_l10182:top. (((v_l10182 = v_encPMS) /\ ((v_Bytes__B v_data) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_l10182)))) -> (((v_version = (v_TLSConstants__SSL_3p0 )) -> ((v_Bytes__B v_data) = (v_Bytes__B v_l10182))) /\ (((v_version = (v_TLSConstants__TLS_1p0 )) \/ ((v_version = (v_TLSConstants__TLS_1p1 )) \/ (v_version = (v_TLSConstants__TLS_1p2 )))) -> ((v_Bytes__B v_data) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_l10182))))))))))))))))))))))))
(* Querying for (encpms10206102091023510245:Bytes.bytes){version = TLSConstants.SSL_3p0 () => Bytes.B (data) = Bytes.B (encpms10206102091023510245) /\ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p2 () => Bytes.B (data) = TLSConstants.VLBytes (2, Bytes.B (encpms10206102091023510245))} <: (encpms1023810246:Bytes.bytes){version = TLSConstants.SSL_3p0 () => Bytes.B (data) = Bytes.B (encpms1023810246) /\ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p2 () => Bytes.B (data) = TLSConstants.VLBytes (2, Bytes.B (encpms1023810246))} *)
(* query version = TLSConstants.SSL_3p0 () => Bytes.B (data) = Bytes.B (l10247) /\ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p2 () => Bytes.B (data) = TLSConstants.VLBytes (2, Bytes.B (l10247)) [HandshakeMessages.fs(423,13)] *)
goal g187_gl: (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_data:top. ((not ((v_TLSConstants__SSL_3p0 ) = v_version)) -> (((v_TLSConstants__TLS_1p0 ) = v_version) -> (((v_TLSConstants__TLS_1p0 ) = v_version) -> (forall v_z10104:top. (((2 = 2) /\ (exists v_x1010110105:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x1010110105) /\ (0 <= v_x1010110105))) /\ (((v_z10104 = v_Pervasives__True) /\ (v_x1010110105 >= 2)) \/ ((v_z10104 = v_Pervasives__False) /\ (v_x1010110105 < 2)))))) -> ((v_z10104 = v_Pervasives__False) -> (forall v_l10247:top. ((((v_version = (v_TLSConstants__SSL_3p0 )) -> ((v_Bytes__B v_data) = (v_Bytes__B v_l10247))) /\ (((v_version = (v_TLSConstants__TLS_1p0 )) \/ ((v_version = (v_TLSConstants__TLS_1p1 )) \/ (v_version = (v_TLSConstants__TLS_1p2 )))) -> ((v_Bytes__B v_data) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_l10247))))) -> (((v_version = (v_TLSConstants__SSL_3p0 )) -> ((v_Bytes__B v_data) = (v_Bytes__B v_l10247))) /\ (((v_version = (v_TLSConstants__TLS_1p0 )) \/ ((v_version = (v_TLSConstants__TLS_1p1 )) \/ (v_version = (v_TLSConstants__TLS_1p2 )))) -> ((v_Bytes__B v_data) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_l10247))))))))))))))))
(* Querying for (l1028110282:int){l1028110282 = 2} <: (l102741027910283:int){pr_LessThanOrEqual(l102741027910283, 8) /\ pr_LessThanOrEqual(0, l102741027910283)} *)
(* query pr_LessThanOrEqual(l10284, 8) /\ pr_LessThanOrEqual(0, l10284) [HandshakeMessages.fs(420,18)] *)
goal g188_gl: (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_data:top. ((not ((v_TLSConstants__SSL_3p0 ) = v_version)) -> ((not ((v_TLSConstants__TLS_1p0 ) = v_version)) -> (((v_TLSConstants__TLS_1p1 ) = v_version) -> (((v_TLSConstants__TLS_1p1 ) = v_version) -> (forall v_z10254:top. (((2 = 2) /\ (exists v_x1025110255:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x1025110255) /\ (0 <= v_x1025110255))) /\ (((v_z10254 = v_Pervasives__True) /\ (v_x1025110255 >= 2)) \/ ((v_z10254 = v_Pervasives__False) /\ (v_x1025110255 < 2)))))) -> ((v_z10254 = v_Pervasives__True) -> (forall v_l10284:top. ((v_l10284 = 2) -> ((v_l10284 <= 8) /\ (0 <= v_l10284))))))))))))))
(* Querying for (l1028610287:Bytes.bytes){l1028610287 = data} <: (b1027610288:Bytes.bytes){pr_GreaterThanOrEqual(Bytes.Length (b1027610288), 2)} *)
(* query pr_GreaterThanOrEqual(Bytes.Length (l10289), 2) [HandshakeMessages.fs(420,18)] *)
goal g189_gl: (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_data:top. ((not ((v_TLSConstants__SSL_3p0 ) = v_version)) -> ((not ((v_TLSConstants__TLS_1p0 ) = v_version)) -> (((v_TLSConstants__TLS_1p1 ) = v_version) -> (((v_TLSConstants__TLS_1p1 ) = v_version) -> (forall v_z10254:top. (((2 = 2) /\ (exists v_x1025110255:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x1025110255) /\ (0 <= v_x1025110255))) /\ (((v_z10254 = v_Pervasives__True) /\ (v_x1025110255 >= 2)) \/ ((v_z10254 = v_Pervasives__False) /\ (v_x1025110255 < 2)))))) -> ((v_z10254 = v_Pervasives__True) -> (forall v_l10289:top. ((v_l10289 = v_data) -> ((v_Bytes__Length v_l10289) >= 2)))))))))))))
(* Querying for (l1031410316103191032410330:Bytes.bytes){l1031410316103191032410330 = encPMS /\ Bytes.B (data) = TLSConstants.VLBytes (2, Bytes.B (l1031410316103191032410330))} <: (encpms103221032710331:Bytes.bytes){version = TLSConstants.SSL_3p0 () => Bytes.B (data) = Bytes.B (encpms103221032710331) /\ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p2 () => Bytes.B (data) = TLSConstants.VLBytes (2, Bytes.B (encpms103221032710331))} *)
(* query version = TLSConstants.SSL_3p0 () => Bytes.B (data) = Bytes.B (l10332) /\ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p2 () => Bytes.B (data) = TLSConstants.VLBytes (2, Bytes.B (l10332)) [HandshakeMessages.fs(421,34)] *)
goal g190_gl: (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_data:top. ((not ((v_TLSConstants__SSL_3p0 ) = v_version)) -> ((not ((v_TLSConstants__TLS_1p0 ) = v_version)) -> (((v_TLSConstants__TLS_1p1 ) = v_version) -> (((v_TLSConstants__TLS_1p1 ) = v_version) -> (forall v_z10254:top. (((2 = 2) /\ (exists v_x1025110255:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x1025110255) /\ (0 <= v_x1025110255))) /\ (((v_z10254 = v_Pervasives__True) /\ (v_x1025110255 >= 2)) \/ ((v_z10254 = v_Pervasives__False) /\ (v_x1025110255 < 2)))))) -> ((v_z10254 = v_Pervasives__True) -> (forall v_l10272:top. ((v_data = v_data) -> (forall v_encPMS:top. (((v_Bytes__B v_data) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_encPMS))) -> (((v_Error__Correct v_encPMS) = v_l10272) -> (((v_Error__Correct v_encPMS) = v_l10272) -> (forall v_l10323:top. ((((v_encPMS = v_encPMS) /\ ((v_Bytes__B v_data) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_encPMS)))) /\ (v_l10323 = (v_Error__Correct v_encPMS))) -> (forall v_l10332:top. (((v_l10332 = v_encPMS) /\ ((v_Bytes__B v_data) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_l10332)))) -> (((v_version = (v_TLSConstants__SSL_3p0 )) -> ((v_Bytes__B v_data) = (v_Bytes__B v_l10332))) /\ (((v_version = (v_TLSConstants__TLS_1p0 )) \/ ((v_version = (v_TLSConstants__TLS_1p1 )) \/ (v_version = (v_TLSConstants__TLS_1p2 )))) -> ((v_Bytes__B v_data) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_l10332)))))))))))))))))))))))))
(* Querying for (encpms10356103591038510395:Bytes.bytes){version = TLSConstants.SSL_3p0 () => Bytes.B (data) = Bytes.B (encpms10356103591038510395) /\ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p2 () => Bytes.B (data) = TLSConstants.VLBytes (2, Bytes.B (encpms10356103591038510395))} <: (encpms1038810396:Bytes.bytes){version = TLSConstants.SSL_3p0 () => Bytes.B (data) = Bytes.B (encpms1038810396) /\ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p2 () => Bytes.B (data) = TLSConstants.VLBytes (2, Bytes.B (encpms1038810396))} *)
(* query version = TLSConstants.SSL_3p0 () => Bytes.B (data) = Bytes.B (l10397) /\ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p2 () => Bytes.B (data) = TLSConstants.VLBytes (2, Bytes.B (l10397)) [HandshakeMessages.fs(423,13)] *)
goal g191_gl: (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_data:top. ((not ((v_TLSConstants__SSL_3p0 ) = v_version)) -> ((not ((v_TLSConstants__TLS_1p0 ) = v_version)) -> (((v_TLSConstants__TLS_1p1 ) = v_version) -> (((v_TLSConstants__TLS_1p1 ) = v_version) -> (forall v_z10254:top. (((2 = 2) /\ (exists v_x1025110255:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x1025110255) /\ (0 <= v_x1025110255))) /\ (((v_z10254 = v_Pervasives__True) /\ (v_x1025110255 >= 2)) \/ ((v_z10254 = v_Pervasives__False) /\ (v_x1025110255 < 2)))))) -> ((v_z10254 = v_Pervasives__False) -> (forall v_l10397:top. ((((v_version = (v_TLSConstants__SSL_3p0 )) -> ((v_Bytes__B v_data) = (v_Bytes__B v_l10397))) /\ (((v_version = (v_TLSConstants__TLS_1p0 )) \/ ((v_version = (v_TLSConstants__TLS_1p1 )) \/ (v_version = (v_TLSConstants__TLS_1p2 )))) -> ((v_Bytes__B v_data) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_l10397))))) -> (((v_version = (v_TLSConstants__SSL_3p0 )) -> ((v_Bytes__B v_data) = (v_Bytes__B v_l10397))) /\ (((v_version = (v_TLSConstants__TLS_1p0 )) \/ ((v_version = (v_TLSConstants__TLS_1p1 )) \/ (v_version = (v_TLSConstants__TLS_1p2 )))) -> ((v_Bytes__B v_data) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_l10397)))))))))))))))))
(* Querying for (l1043110432:int){l1043110432 = 2} <: (l104241042910433:int){pr_LessThanOrEqual(l104241042910433, 8) /\ pr_LessThanOrEqual(0, l104241042910433)} *)
(* query pr_LessThanOrEqual(l10434, 8) /\ pr_LessThanOrEqual(0, l10434) [HandshakeMessages.fs(420,18)] *)
goal g192_gl: (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_data:top. ((not ((v_TLSConstants__SSL_3p0 ) = v_version)) -> ((not ((v_TLSConstants__TLS_1p0 ) = v_version)) -> ((not ((v_TLSConstants__TLS_1p1 ) = v_version)) -> (((v_TLSConstants__TLS_1p2 ) = v_version) -> (((v_TLSConstants__TLS_1p2 ) = v_version) -> (forall v_z10404:top. (((2 = 2) /\ (exists v_x1040110405:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x1040110405) /\ (0 <= v_x1040110405))) /\ (((v_z10404 = v_Pervasives__True) /\ (v_x1040110405 >= 2)) \/ ((v_z10404 = v_Pervasives__False) /\ (v_x1040110405 < 2)))))) -> ((v_z10404 = v_Pervasives__True) -> (forall v_l10434:top. ((v_l10434 = 2) -> ((v_l10434 <= 8) /\ (0 <= v_l10434)))))))))))))))
(* Querying for (l1043610437:Bytes.bytes){l1043610437 = data} <: (b1042610438:Bytes.bytes){pr_GreaterThanOrEqual(Bytes.Length (b1042610438), 2)} *)
(* query pr_GreaterThanOrEqual(Bytes.Length (l10439), 2) [HandshakeMessages.fs(420,18)] *)
goal g193_gl: (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_data:top. ((not ((v_TLSConstants__SSL_3p0 ) = v_version)) -> ((not ((v_TLSConstants__TLS_1p0 ) = v_version)) -> ((not ((v_TLSConstants__TLS_1p1 ) = v_version)) -> (((v_TLSConstants__TLS_1p2 ) = v_version) -> (((v_TLSConstants__TLS_1p2 ) = v_version) -> (forall v_z10404:top. (((2 = 2) /\ (exists v_x1040110405:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x1040110405) /\ (0 <= v_x1040110405))) /\ (((v_z10404 = v_Pervasives__True) /\ (v_x1040110405 >= 2)) \/ ((v_z10404 = v_Pervasives__False) /\ (v_x1040110405 < 2)))))) -> ((v_z10404 = v_Pervasives__True) -> (forall v_l10439:top. ((v_l10439 = v_data) -> ((v_Bytes__Length v_l10439) >= 2))))))))))))))
(* Querying for (l1046410466104691047410480:Bytes.bytes){l1046410466104691047410480 = encPMS /\ Bytes.B (data) = TLSConstants.VLBytes (2, Bytes.B (l1046410466104691047410480))} <: (encpms104721047710481:Bytes.bytes){version = TLSConstants.SSL_3p0 () => Bytes.B (data) = Bytes.B (encpms104721047710481) /\ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p2 () => Bytes.B (data) = TLSConstants.VLBytes (2, Bytes.B (encpms104721047710481))} *)
(* query version = TLSConstants.SSL_3p0 () => Bytes.B (data) = Bytes.B (l10482) /\ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p2 () => Bytes.B (data) = TLSConstants.VLBytes (2, Bytes.B (l10482)) [HandshakeMessages.fs(421,34)] *)
goal g194_gl: (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_data:top. ((not ((v_TLSConstants__SSL_3p0 ) = v_version)) -> ((not ((v_TLSConstants__TLS_1p0 ) = v_version)) -> ((not ((v_TLSConstants__TLS_1p1 ) = v_version)) -> (((v_TLSConstants__TLS_1p2 ) = v_version) -> (((v_TLSConstants__TLS_1p2 ) = v_version) -> (forall v_z10404:top. (((2 = 2) /\ (exists v_x1040110405:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x1040110405) /\ (0 <= v_x1040110405))) /\ (((v_z10404 = v_Pervasives__True) /\ (v_x1040110405 >= 2)) \/ ((v_z10404 = v_Pervasives__False) /\ (v_x1040110405 < 2)))))) -> ((v_z10404 = v_Pervasives__True) -> (forall v_l10422:top. ((v_data = v_data) -> (forall v_encPMS:top. (((v_Bytes__B v_data) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_encPMS))) -> (((v_Error__Correct v_encPMS) = v_l10422) -> (((v_Error__Correct v_encPMS) = v_l10422) -> (forall v_l10473:top. ((((v_encPMS = v_encPMS) /\ ((v_Bytes__B v_data) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_encPMS)))) /\ (v_l10473 = (v_Error__Correct v_encPMS))) -> (forall v_l10482:top. (((v_l10482 = v_encPMS) /\ ((v_Bytes__B v_data) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_l10482)))) -> (((v_version = (v_TLSConstants__SSL_3p0 )) -> ((v_Bytes__B v_data) = (v_Bytes__B v_l10482))) /\ (((v_version = (v_TLSConstants__TLS_1p0 )) \/ ((v_version = (v_TLSConstants__TLS_1p1 )) \/ (v_version = (v_TLSConstants__TLS_1p2 )))) -> ((v_Bytes__B v_data) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_l10482))))))))))))))))))))))))))
(* Querying for (encpms10506105091053510545:Bytes.bytes){version = TLSConstants.SSL_3p0 () => Bytes.B (data) = Bytes.B (encpms10506105091053510545) /\ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p2 () => Bytes.B (data) = TLSConstants.VLBytes (2, Bytes.B (encpms10506105091053510545))} <: (encpms1053810546:Bytes.bytes){version = TLSConstants.SSL_3p0 () => Bytes.B (data) = Bytes.B (encpms1053810546) /\ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p2 () => Bytes.B (data) = TLSConstants.VLBytes (2, Bytes.B (encpms1053810546))} *)
(* query version = TLSConstants.SSL_3p0 () => Bytes.B (data) = Bytes.B (l10547) /\ version = TLSConstants.TLS_1p0 () \/ version = TLSConstants.TLS_1p1 () \/ version = TLSConstants.TLS_1p2 () => Bytes.B (data) = TLSConstants.VLBytes (2, Bytes.B (l10547)) [HandshakeMessages.fs(423,13)] *)
goal g195_gl: (forall v_version:top. ((v_TLSConstants__IsProtocolVersion_p v_version) -> (forall v_data:top. ((not ((v_TLSConstants__SSL_3p0 ) = v_version)) -> ((not ((v_TLSConstants__TLS_1p0 ) = v_version)) -> ((not ((v_TLSConstants__TLS_1p1 ) = v_version)) -> (((v_TLSConstants__TLS_1p2 ) = v_version) -> (((v_TLSConstants__TLS_1p2 ) = v_version) -> (forall v_z10404:top. (((2 = 2) /\ (exists v_x1040110405:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x1040110405) /\ (0 <= v_x1040110405))) /\ (((v_z10404 = v_Pervasives__True) /\ (v_x1040110405 >= 2)) \/ ((v_z10404 = v_Pervasives__False) /\ (v_x1040110405 < 2)))))) -> ((v_z10404 = v_Pervasives__False) -> (forall v_l10547:top. ((((v_version = (v_TLSConstants__SSL_3p0 )) -> ((v_Bytes__B v_data) = (v_Bytes__B v_l10547))) /\ (((v_version = (v_TLSConstants__TLS_1p0 )) \/ ((v_version = (v_TLSConstants__TLS_1p1 )) \/ (v_version = (v_TLSConstants__TLS_1p2 )))) -> ((v_Bytes__B v_data) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_l10547))))) -> (((v_version = (v_TLSConstants__SSL_3p0 )) -> ((v_Bytes__B v_data) = (v_Bytes__B v_l10547))) /\ (((v_version = (v_TLSConstants__TLS_1p0 )) \/ ((v_version = (v_TLSConstants__TLS_1p1 )) \/ (v_version = (v_TLSConstants__TLS_1p2 )))) -> ((v_Bytes__B v_data) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_l10547))))))))))))))))))
(* Querying for (l1055610656:TLSConstants.PreProtocolVersion){l1055610656 = Tuples.Tup14.10 si /\ (?l10583. (?l10581. (?l10579. (?l10577. (?l10575. (?l10573. (?l10571. (?l10569. (?l10567. (?l10565. (?l10563. (?l10561. (?l10559. (?l10557. si = (l10557, l10559, l10561, l10563, l10565, l10567, l10569, l10571, l10573, l10575, l10577, l10579, l10581, l10583) /\ l1055610656 = l10575))))))))))))))} <: (pv105501055410657:TLSConstants.PreProtocolVersion){TLSConstants.IsProtocolVersion(pv105501055410657)} *)
(* query TLSConstants.IsProtocolVersion(l10658) [HandshakeMessages.fs(426,18)] *)
goal g196_gl: (forall v_si:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_si = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> (forall v_encpms:top. (forall v_l10658:top. (((v_l10658 = (v_Tuples__Tup14__10 v_si)) /\ (exists v_l10583:top. (exists v_l10581:top. (exists v_l10579:top. (exists v_l10577:top. (exists v_l10575:top. (exists v_l10573:top. (exists v_l10571:top. (exists v_l10569:top. (exists v_l10567:top. (exists v_l10565:top. (exists v_l10563:top. (exists v_l10561:top. (exists v_l10559:top. (exists v_l10557:top. ((v_si = (v_Tuples__Tup14 v_l10557 v_l10559 v_l10561 v_l10563 v_l10565 v_l10567 v_l10569 v_l10571 v_l10573 v_l10575 v_l10577 v_l10579 v_l10581 v_l10583)) /\ (v_l10658 = v_l10575))))))))))))))))) -> (v_TLSConstants__IsProtocolVersion_p v_l10658))))))
(* Querying for (l1067310674:PreHandshakeType){l1067310674 = HT_client_key_exchange ()} <: (ht106671067110675:PreHandshakeType){IsHandshakeType(ht106671067110675)} *)
(* query IsHandshakeType(l10676) [HandshakeMessages.fs(427,14)] *)
goal g197_gl: (forall v_si:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_si = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> (forall v_encpms:top. (forall v_nencpms:top. (((((v_Tuples__Tup14__10 v_si) = (v_Tuples__Tup14__10 v_si)) /\ (exists v_l10583:top. (exists v_l10581:top. (exists v_l10579:top. (exists v_l10577:top. (exists v_l10575:top. (exists v_l10573:top. (exists v_l10571:top. (exists v_l10569:top. (exists v_l10567:top. (exists v_l10565:top. (exists v_l10563:top. (exists v_l10561:top. (exists v_l10559:top. (exists v_l10557:top. ((v_si = (v_Tuples__Tup14 v_l10557 v_l10559 v_l10561 v_l10563 v_l10565 v_l10567 v_l10569 v_l10571 v_l10573 v_l10575 v_l10577 v_l10579 v_l10581 v_l10583)) /\ ((v_Tuples__Tup14__10 v_si) = v_l10575))))))))))))))))) /\ ((v_encpms = v_encpms) /\ ((((v_Tuples__Tup14__10 v_si) = (v_TLSConstants__SSL_3p0 )) -> ((v_Bytes__B v_nencpms) = (v_Bytes__B v_encpms))) /\ ((((v_Tuples__Tup14__10 v_si) = (v_TLSConstants__TLS_1p0 )) \/ (((v_Tuples__Tup14__10 v_si) = (v_TLSConstants__TLS_1p1 )) \/ ((v_Tuples__Tup14__10 v_si) = (v_TLSConstants__TLS_1p2 )))) -> ((v_Bytes__B v_nencpms) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_encpms))))))) -> (forall v_l10676:top. ((v_l10676 = (v_HandshakeMessages__HT_client_key_exchange )) -> (v_HandshakeMessages__IsHandshakeType_p v_l10676))))))))
(* Querying for (msg) mex : (b:Bytes.bytes){Bytes.B (b) = ClientKeyExchangeMsg_RSA (Tuples.Tup14.10 si, encpms)} *)
(* query Bytes.B (mex) = ClientKeyExchangeMsg_RSA (Tuples.Tup14.10 si, encpms) [HandshakeMessages.fs(428,8)] *)
goal g198_gl: (forall v_si:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_si = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> (forall v_encpms:top. (forall v_nencpms:top. (((((v_Tuples__Tup14__10 v_si) = (v_Tuples__Tup14__10 v_si)) /\ (exists v_l10583:top. (exists v_l10581:top. (exists v_l10579:top. (exists v_l10577:top. (exists v_l10575:top. (exists v_l10573:top. (exists v_l10571:top. (exists v_l10569:top. (exists v_l10567:top. (exists v_l10565:top. (exists v_l10563:top. (exists v_l10561:top. (exists v_l10559:top. (exists v_l10557:top. ((v_si = (v_Tuples__Tup14 v_l10557 v_l10559 v_l10561 v_l10563 v_l10565 v_l10567 v_l10569 v_l10571 v_l10573 v_l10575 v_l10577 v_l10579 v_l10581 v_l10583)) /\ ((v_Tuples__Tup14__10 v_si) = v_l10575))))))))))))))))) /\ ((v_encpms = v_encpms) /\ ((((v_Tuples__Tup14__10 v_si) = (v_TLSConstants__SSL_3p0 )) -> ((v_Bytes__B v_nencpms) = (v_Bytes__B v_encpms))) /\ ((((v_Tuples__Tup14__10 v_si) = (v_TLSConstants__TLS_1p0 )) \/ (((v_Tuples__Tup14__10 v_si) = (v_TLSConstants__TLS_1p1 )) \/ ((v_Tuples__Tup14__10 v_si) = (v_TLSConstants__TLS_1p2 )))) -> ((v_Bytes__B v_nencpms) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_encpms))))))) -> (forall v_mex:top. (((v_nencpms = v_nencpms) /\ ((v_Bytes__B v_mex) = (v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_client_key_exchange ) (v_Bytes__B v_nencpms)))) -> ((v_Bytes__B v_mex) = (v_HandshakeMessages__ClientKeyExchangeMsg_RSA (v_Tuples__Tup14__10 v_si) v_encpms)))))))))
(* Querying for (l1069610796:TLSConstants.PreProtocolVersion){l1069610796 = Tuples.Tup14.10 si /\ (?l10723. (?l10721. (?l10719. (?l10717. (?l10715. (?l10713. (?l10711. (?l10709. (?l10707. (?l10705. (?l10703. (?l10701. (?l10699. (?l10697. si = (l10697, l10699, l10701, l10703, l10705, l10707, l10709, l10711, l10713, l10715, l10717, l10719, l10721, l10723) /\ l1069610796 = l10715))))))))))))))} <: (pv106891069410797:TLSConstants.PreProtocolVersion){TLSConstants.IsProtocolVersion(pv106891069410797)} *)
(* query TLSConstants.IsProtocolVersion(l10798) [HandshakeMessages.fs(431,4)] *)
goal g199_gl: (forall v_si:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_si = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> (forall v_data:top. (forall v_l10798:top. (((v_l10798 = (v_Tuples__Tup14__10 v_si)) /\ (exists v_l10723:top. (exists v_l10721:top. (exists v_l10719:top. (exists v_l10717:top. (exists v_l10715:top. (exists v_l10713:top. (exists v_l10711:top. (exists v_l10709:top. (exists v_l10707:top. (exists v_l10705:top. (exists v_l10703:top. (exists v_l10701:top. (exists v_l10699:top. (exists v_l10697:top. ((v_si = (v_Tuples__Tup14 v_l10697 v_l10699 v_l10701 v_l10703 v_l10705 v_l10707 v_l10709 v_l10711 v_l10713 v_l10715 v_l10717 v_l10719 v_l10721 v_l10723)) /\ (v_l10798 = v_l10715))))))))))))))))) -> (v_TLSConstants__IsProtocolVersion_p v_l10798))))))
(* Querying for (encpms10693108071081410824:Bytes.bytes){Tuples.Tup14.10 si = TLSConstants.SSL_3p0 () => Bytes.B (data) = Bytes.B (encpms10693108071081410824) /\ Tuples.Tup14.10 si = TLSConstants.TLS_1p0 () \/ Tuples.Tup14.10 si = TLSConstants.TLS_1p1 () \/ Tuples.Tup14.10 si = TLSConstants.TLS_1p2 () => Bytes.B (data) = TLSConstants.VLBytes (2, Bytes.B (encpms10693108071081410824))} <: (encpms108101081710825:Bytes.bytes){ClientKeyExchangeMsg_RSA (Tuples.Tup14.10 si, encpms108101081710825) = MessageBytes (HT_client_key_exchange (), Bytes.B (data))} *)
(* query ClientKeyExchangeMsg_RSA (Tuples.Tup14.10 si, l10826) = MessageBytes (HT_client_key_exchange (), Bytes.B (data)) [HandshakeMessages.fs(431,4)] *)
goal g200_gl: (forall v_si:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_si = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> (forall v_data:top. (forall v_l10811:top. ((((v_Tuples__Tup14__10 v_si) = (v_Tuples__Tup14__10 v_si)) /\ (exists v_l10723:top. (exists v_l10721:top. (exists v_l10719:top. (exists v_l10717:top. (exists v_l10715:top. (exists v_l10713:top. (exists v_l10711:top. (exists v_l10709:top. (exists v_l10707:top. (exists v_l10705:top. (exists v_l10703:top. (exists v_l10701:top. (exists v_l10699:top. (exists v_l10697:top. ((v_si = (v_Tuples__Tup14 v_l10697 v_l10699 v_l10701 v_l10703 v_l10705 v_l10707 v_l10709 v_l10711 v_l10713 v_l10715 v_l10717 v_l10719 v_l10721 v_l10723)) /\ ((v_Tuples__Tup14__10 v_si) = v_l10715))))))))))))))))) -> (forall v_l10826:top. (((((v_Tuples__Tup14__10 v_si) = (v_TLSConstants__SSL_3p0 )) -> ((v_Bytes__B v_data) = (v_Bytes__B v_l10826))) /\ ((((v_Tuples__Tup14__10 v_si) = (v_TLSConstants__TLS_1p0 )) \/ (((v_Tuples__Tup14__10 v_si) = (v_TLSConstants__TLS_1p1 )) \/ ((v_Tuples__Tup14__10 v_si) = (v_TLSConstants__TLS_1p2 )))) -> ((v_Bytes__B v_data) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_l10826))))) -> ((v_HandshakeMessages__ClientKeyExchangeMsg_RSA (v_Tuples__Tup14__10 v_si) v_l10826) = (v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_client_key_exchange ) (v_Bytes__B v_data))))))))))
(* Querying for (l1083510836:int){l1083510836 = 2} <: (l108291083310837:int){pr_LessThanOrEqual(0, l108291083310837)} *)
(* query pr_LessThanOrEqual(0, l10838) [HandshakeMessages.fs(434,13)] *)
goal g201_gl: (forall v_y:top. (forall v_l10838:top. ((v_l10838 = 2) -> (0 <= v_l10838))))
(* Querying for (l1085310854:PreHandshakeType){l1085310854 = HT_client_key_exchange ()} <: (ht108471085110855:PreHandshakeType){IsHandshakeType(ht108471085110855)} *)
(* query IsHandshakeType(l10856) [HandshakeMessages.fs(435,4)] *)
goal g202_gl: (forall v_y:top. (forall v_yb:top. (((v_y = v_y) /\ ((v_Bytes__B v_yb) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_y)))) -> (forall v_l10856:top. ((v_l10856 = (v_HandshakeMessages__HT_client_key_exchange )) -> (v_HandshakeMessages__IsHandshakeType_p v_l10856))))))
(* Querying for (m1085010862:Bytes.bytes){yb = yb /\ Bytes.B (m1085010862) = MessageBytes (HT_client_key_exchange (), Bytes.B (yb))} <: (b10863:Bytes.bytes){Bytes.B (b10863) = ClientKeyExchangeMsg_DHE (y)} *)
(* query Bytes.B (l10864) = ClientKeyExchangeMsg_DHE (y) [HandshakeMessages.fs(435,4)] *)
goal g203_gl: (forall v_y:top. (forall v_yb:top. (((v_y = v_y) /\ ((v_Bytes__B v_yb) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_y)))) -> (forall v_l10864:top. (((v_yb = v_yb) /\ ((v_Bytes__B v_l10864) = (v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_client_key_exchange ) (v_Bytes__B v_yb)))) -> ((v_Bytes__B v_l10864) = (v_HandshakeMessages__ClientKeyExchangeMsg_DHE v_y)))))))
(* Querying for (l1089810899:int){l1089810899 = 2} <: (l108911089610900:int){pr_LessThanOrEqual(l108911089610900, 8) /\ pr_LessThanOrEqual(0, l108911089610900)} *)
(* query pr_LessThanOrEqual(l10901, 8) /\ pr_LessThanOrEqual(0, l10901) [HandshakeMessages.fs(439,14)] *)
goal g204_gl: (forall v_p:top. (forall v_g:top. ((v_DHGroup__Elt_p v_p v_g v_g) -> (forall v_data:top. (forall v_z10871:top. (((2 = 2) /\ (exists v_x1086810872:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x1086810872) /\ (0 <= v_x1086810872))) /\ (((v_z10871 = v_Pervasives__True) /\ (v_x1086810872 >= 2)) \/ ((v_z10871 = v_Pervasives__False) /\ (v_x1086810872 < 2)))))) -> ((v_z10871 = v_Pervasives__True) -> (forall v_l10901:top. ((v_l10901 = 2) -> ((v_l10901 <= 8) /\ (0 <= v_l10901)))))))))))
(* Querying for (l1090310904:Bytes.bytes){l1090310904 = data} <: (b1089310905:Bytes.bytes){pr_GreaterThanOrEqual(Bytes.Length (b1089310905), 2)} *)
(* query pr_GreaterThanOrEqual(Bytes.Length (l10906), 2) [HandshakeMessages.fs(439,14)] *)
goal g205_gl: (forall v_p:top. (forall v_g:top. ((v_DHGroup__Elt_p v_p v_g v_g) -> (forall v_data:top. (forall v_z10871:top. (((2 = 2) /\ (exists v_x1086810872:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x1086810872) /\ (0 <= v_x1086810872))) /\ (((v_z10871 = v_Pervasives__True) /\ (v_x1086810872 >= 2)) \/ ((v_z10871 = v_Pervasives__False) /\ (v_x1086810872 < 2)))))) -> ((v_z10871 = v_Pervasives__True) -> (forall v_l10906:top. ((v_l10906 = v_data) -> ((v_Bytes__Length v_l10906) >= 2))))))))))
(* Querying for (gx10985109891101511026:Bytes.bytes){MessageBytes (HT_client_key_exchange (), Bytes.B (data)) = ClientKeyExchangeMsg_DHE (gx10985109891101511026) /\ DHGroup.Elt(p, g, gx10985109891101511026)} <: (gx1101811027:Bytes.bytes){MessageBytes (HT_client_key_exchange (), Bytes.B (data)) = ClientKeyExchangeMsg_DHE (gx1101811027) /\ DHGroup.Elt(p, g, gx1101811027)} *)
(* query MessageBytes (HT_client_key_exchange (), Bytes.B (data)) = ClientKeyExchangeMsg_DHE (l11028) /\ DHGroup.Elt(p, g, l11028) [HandshakeMessages.fs(443,22)] *)
goal g206_gl: (forall v_p:top. (forall v_g:top. ((v_DHGroup__Elt_p v_p v_g v_g) -> (forall v_data:top. (forall v_z10871:top. (((2 = 2) /\ (exists v_x1086810872:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x1086810872) /\ (0 <= v_x1086810872))) /\ (((v_z10871 = v_Pervasives__True) /\ (v_x1086810872 >= 2)) \/ ((v_z10871 = v_Pervasives__False) /\ (v_x1086810872 < 2)))))) -> ((v_z10871 = v_Pervasives__True) -> (forall v_l10889:top. ((v_data = v_data) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l10889))) -> (forall v_y:top. (((v_Bytes__B v_data) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_y))) -> (((v_Error__Correct v_y) = v_l10889) -> (((v_Error__Correct v_y) = v_l10889) -> (forall v_l10945:top. (((v_y = v_y) /\ ((v_Bytes__B v_data) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_y)))) -> (((v_Pervasives__None ) = v_l10945) -> (((v_Pervasives__None ) = v_l10945) -> (forall v_l11028:top. ((((v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_client_key_exchange ) (v_Bytes__B v_data)) = (v_HandshakeMessages__ClientKeyExchangeMsg_DHE v_l11028)) /\ (v_DHGroup__Elt_p v_p v_g v_l11028)) -> (((v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_client_key_exchange ) (v_Bytes__B v_data)) = (v_HandshakeMessages__ClientKeyExchangeMsg_DHE v_l11028)) /\ (v_DHGroup__Elt_p v_p v_g v_l11028))))))))))))))))))))))
(* Querying for (l1104011042110451105111058:Bytes.bytes){l1104011042110451105111058 = y37 /\ y = l1104011042110451105111058 /\ DHGroup.Elt(p, g, l1104011042110451105111058)} <: (gx110481105411059:Bytes.bytes){MessageBytes (HT_client_key_exchange (), Bytes.B (data)) = ClientKeyExchangeMsg_DHE (gx110481105411059) /\ DHGroup.Elt(p, g, gx110481105411059)} *)
(* query MessageBytes (HT_client_key_exchange (), Bytes.B (data)) = ClientKeyExchangeMsg_DHE (l11060) /\ DHGroup.Elt(p, g, l11060) [HandshakeMessages.fs(444,25)] *)
goal g207_gl: (forall v_p:top. (forall v_g:top. ((v_DHGroup__Elt_p v_p v_g v_g) -> (forall v_data:top. (forall v_z10871:top. (((2 = 2) /\ (exists v_x1086810872:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x1086810872) /\ (0 <= v_x1086810872))) /\ (((v_z10871 = v_Pervasives__True) /\ (v_x1086810872 >= 2)) \/ ((v_z10871 = v_Pervasives__False) /\ (v_x1086810872 < 2)))))) -> ((v_z10871 = v_Pervasives__True) -> (forall v_l10889:top. ((v_data = v_data) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l10889))) -> (forall v_y:top. (((v_Bytes__B v_data) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_y))) -> (((v_Error__Correct v_y) = v_l10889) -> (((v_Error__Correct v_y) = v_l10889) -> (forall v_l10945:top. (((v_y = v_y) /\ ((v_Bytes__B v_data) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_y)))) -> ((not ((v_Pervasives__None ) = v_l10945)) -> (forall v_y37:top. (((v_y = v_y37) /\ (v_DHGroup__Elt_p v_p v_g v_y37)) -> (((v_Pervasives__Some v_y37) = v_l10945) -> (((v_Pervasives__Some v_y37) = v_l10945) -> (forall v_l11050:top. ((((v_y37 = v_y37) /\ ((v_y = v_y37) /\ (v_DHGroup__Elt_p v_p v_g v_y37))) /\ (v_l11050 = (v_Error__Correct v_y37))) -> (forall v_l11060:top. (((v_l11060 = v_y37) /\ ((v_y = v_l11060) /\ (v_DHGroup__Elt_p v_p v_g v_l11060))) -> (((v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_client_key_exchange ) (v_Bytes__B v_data)) = (v_HandshakeMessages__ClientKeyExchangeMsg_DHE v_l11060)) /\ (v_DHGroup__Elt_p v_p v_g v_l11060)))))))))))))))))))))))))))
(* Querying for (gx11065110691109511106:Bytes.bytes){MessageBytes (HT_client_key_exchange (), Bytes.B (data)) = ClientKeyExchangeMsg_DHE (gx11065110691109511106) /\ DHGroup.Elt(p, g, gx11065110691109511106)} <: (gx1109811107:Bytes.bytes){MessageBytes (HT_client_key_exchange (), Bytes.B (data)) = ClientKeyExchangeMsg_DHE (gx1109811107) /\ DHGroup.Elt(p, g, gx1109811107)} *)
(* query MessageBytes (HT_client_key_exchange (), Bytes.B (data)) = ClientKeyExchangeMsg_DHE (l11108) /\ DHGroup.Elt(p, g, l11108) [HandshakeMessages.fs(445,9)] *)
goal g208_gl: (forall v_p:top. (forall v_g:top. ((v_DHGroup__Elt_p v_p v_g v_g) -> (forall v_data:top. (forall v_z10871:top. (((2 = 2) /\ (exists v_x1086810872:top. (((v_data = v_data) /\ (((v_Bytes__Length v_data) = v_x1086810872) /\ (0 <= v_x1086810872))) /\ (((v_z10871 = v_Pervasives__True) /\ (v_x1086810872 >= 2)) \/ ((v_z10871 = v_Pervasives__False) /\ (v_x1086810872 < 2)))))) -> ((v_z10871 = v_Pervasives__False) -> (forall v_l11108:top. ((((v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_client_key_exchange ) (v_Bytes__B v_data)) = (v_HandshakeMessages__ClientKeyExchangeMsg_DHE v_l11108)) /\ (v_DHGroup__Elt_p v_p v_g v_l11108)) -> (((v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_client_key_exchange ) (v_Bytes__B v_data)) = (v_HandshakeMessages__ClientKeyExchangeMsg_DHE v_l11108)) /\ (v_DHGroup__Elt_p v_p v_g v_l11108)))))))))))
(* Querying for (l1111711118:PreHandshakeType){l1111711118 = HT_client_key_exchange ()} <: (ht111111111511119:PreHandshakeType){IsHandshakeType(ht111111111511119)} *)
(* query IsHandshakeType(l11120) [HandshakeMessages.fs(448,32)] *)
goal g209_gl: (forall v_l11120:top. ((v_l11120 = (v_HandshakeMessages__HT_client_key_exchange )) -> (v_HandshakeMessages__IsHandshakeType_p v_l11120)))
(* Querying for (l1121311214:int){l1121311214 = 2} <: (l112071121111215:int){pr_LessThanOrEqual(0, l112071121111215)} *)
(* query pr_LessThanOrEqual(0, l11216) [HandshakeMessages.fs(459,14)] *)
goal g210_gl: (forall v_alg:top. ((exists v_l599:top. (exists v_l600:top. (v_alg = (v_Tuples__Tup2 v_l599 v_l600)))) -> (forall v_data:top. (forall v_pv:top. ((v_TLSConstants__IsProtocolVersion_p v_pv) -> (forall v_l11216:top. ((v_l11216 = 2) -> (0 <= v_l11216))))))))
(* Querying for (b1124611257:Bytes.bytes){tag = tag /\ Bytes.B (b1124611257) = bop_ArrayAppend (Bytes.B (sigHashB), Bytes.B (tag))} <: (b11258:Bytes.bytes){Bytes.B (b11258) = DigitallySignedBytes (alg, data, pv)} *)
(* query Bytes.B (l11259) = DigitallySignedBytes (alg, data, pv) [HandshakeMessages.fs(463,17)] *)
goal g211_gl: (forall v_alg:top. ((exists v_l599:top. (exists v_l600:top. (v_alg = (v_Tuples__Tup2 v_l599 v_l600)))) -> (forall v_data:top. (forall v_pv:top. ((v_TLSConstants__IsProtocolVersion_p v_pv) -> (forall v_tag:top. (((v_data = v_data) /\ ((v_Bytes__B v_tag) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_data)))) -> (((v_TLSConstants__TLS_1p2 ) = v_pv) -> (((v_TLSConstants__TLS_1p2 ) = v_pv) -> (forall v_sigHashB:top. (((v_alg = v_alg) /\ ((v_Bytes__B v_sigHashB) = (v_TLSExtensions__SigHashAlgBytes v_alg))) -> (forall v_l11259:top. (((v_tag = v_tag) /\ ((v_Bytes__B v_l11259) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_sigHashB) (v_Bytes__B v_tag)))) -> ((v_Bytes__B v_l11259) = (v_HandshakeMessages__DigitallySignedBytes v_alg v_data v_pv)))))))))))))))
(* Querying for (msg) tag : (b:Bytes.bytes){Bytes.B (b) = DigitallySignedBytes (alg, data, pv)} *)
(* query Bytes.B (tag) = DigitallySignedBytes (alg, data, pv) [HandshakeMessages.fs(464,37)] *)
goal g212_gl: (forall v_alg:top. ((exists v_l599:top. (exists v_l600:top. (v_alg = (v_Tuples__Tup2 v_l599 v_l600)))) -> (forall v_data:top. (forall v_pv:top. ((v_TLSConstants__IsProtocolVersion_p v_pv) -> (forall v_tag:top. (((v_data = v_data) /\ ((v_Bytes__B v_tag) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_data)))) -> ((not ((v_TLSConstants__TLS_1p2 ) = v_pv)) -> (((v_TLSConstants__SSL_3p0 ) = v_pv) -> (((v_TLSConstants__SSL_3p0 ) = v_pv) -> ((v_Bytes__B v_tag) = (v_HandshakeMessages__DigitallySignedBytes v_alg v_data v_pv))))))))))))
(* Querying for (msg) tag : (b:Bytes.bytes){Bytes.B (b) = DigitallySignedBytes (alg, data, pv)} *)
(* query Bytes.B (tag) = DigitallySignedBytes (alg, data, pv) [HandshakeMessages.fs(464,37)] *)
goal g213_gl: (forall v_alg:top. ((exists v_l599:top. (exists v_l600:top. (v_alg = (v_Tuples__Tup2 v_l599 v_l600)))) -> (forall v_data:top. (forall v_pv:top. ((v_TLSConstants__IsProtocolVersion_p v_pv) -> (forall v_tag:top. (((v_data = v_data) /\ ((v_Bytes__B v_tag) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_data)))) -> ((not ((v_TLSConstants__TLS_1p2 ) = v_pv)) -> ((not ((v_TLSConstants__SSL_3p0 ) = v_pv)) -> (((v_TLSConstants__TLS_1p0 ) = v_pv) -> (((v_TLSConstants__TLS_1p0 ) = v_pv) -> ((v_Bytes__B v_tag) = (v_HandshakeMessages__DigitallySignedBytes v_alg v_data v_pv)))))))))))))
(* Querying for (msg) tag : (b:Bytes.bytes){Bytes.B (b) = DigitallySignedBytes (alg, data, pv)} *)
(* query Bytes.B (tag) = DigitallySignedBytes (alg, data, pv) [HandshakeMessages.fs(464,37)] *)
goal g214_gl: (forall v_alg:top. ((exists v_l599:top. (exists v_l600:top. (v_alg = (v_Tuples__Tup2 v_l599 v_l600)))) -> (forall v_data:top. (forall v_pv:top. ((v_TLSConstants__IsProtocolVersion_p v_pv) -> (forall v_tag:top. (((v_data = v_data) /\ ((v_Bytes__B v_tag) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_data)))) -> ((not ((v_TLSConstants__TLS_1p2 ) = v_pv)) -> ((not ((v_TLSConstants__SSL_3p0 ) = v_pv)) -> ((not ((v_TLSConstants__TLS_1p0 ) = v_pv)) -> (((v_TLSConstants__TLS_1p1 ) = v_pv) -> (((v_TLSConstants__TLS_1p1 ) = v_pv) -> ((v_Bytes__B v_tag) = (v_HandshakeMessages__DigitallySignedBytes v_alg v_data v_pv))))))))))))))
(* Querying for (l1131011311:int){l1131011311 = 2} <: (i1130011312:int){pr_GreaterThanOrEqual(Bytes.Length (payload), i1130011312) /\ pr_LessThanOrEqual(0, i1130011312)} *)
(* query pr_GreaterThanOrEqual(Bytes.Length (payload), l11313) /\ pr_LessThanOrEqual(0, l11313) [HandshakeMessages.fs(470,35)] *)
goal g215_gl: (forall v_expectedAlgs:top. (forall v_payload:top. (forall v_pv:top. ((v_TLSConstants__IsProtocolVersion_p v_pv) -> (((v_TLSConstants__TLS_1p2 ) = v_pv) -> (((v_TLSConstants__TLS_1p2 ) = v_pv) -> (forall v_z11279:top. (((2 = 2) /\ (exists v_x1127611280:top. (((v_payload = v_payload) /\ (((v_Bytes__Length v_payload) = v_x1127611280) /\ (0 <= v_x1127611280))) /\ (((v_z11279 = v_Pervasives__True) /\ (v_x1127611280 >= 2)) \/ ((v_z11279 = v_Pervasives__False) /\ (v_x1127611280 < 2)))))) -> ((v_z11279 = v_Pervasives__True) -> (forall v_l11313:top. ((v_l11313 = 2) -> (((v_Bytes__Length v_payload) >= v_l11313) /\ (0 <= v_l11313)))))))))))))
(* Querying for (l1144711448:int){l1144711448 = 2} <: (l114401144511449:int){pr_LessThanOrEqual(l114401144511449, 8) /\ pr_LessThanOrEqual(0, l114401144511449)} *)
(* query pr_LessThanOrEqual(l11450, 8) /\ pr_LessThanOrEqual(0, l11450) [HandshakeMessages.fs(476,30)] *)
goal g216_gl: (forall v_expectedAlgs:top. (forall v_payload:top. (forall v_pv:top. ((v_TLSConstants__IsProtocolVersion_p v_pv) -> (((v_TLSConstants__TLS_1p2 ) = v_pv) -> (((v_TLSConstants__TLS_1p2 ) = v_pv) -> (forall v_z11279:top. (((2 = 2) /\ (exists v_x1127611280:top. (((v_payload = v_payload) /\ (((v_Bytes__Length v_payload) = v_x1127611280) /\ (0 <= v_x1127611280))) /\ (((v_z11279 = v_Pervasives__True) /\ (v_x1127611280 >= 2)) \/ ((v_z11279 = v_Pervasives__False) /\ (v_x1127611280 < 2)))))) -> ((v_z11279 = v_Pervasives__True) -> (forall v_recvAlgsB:top. (forall v_sign:top. ((((v_Bytes__Length v_recvAlgsB) = 2) /\ ((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_recvAlgsB) (v_Bytes__B v_sign)))) -> ((2 = 2) -> (forall v_l11315:top. ((v_recvAlgsB = v_recvAlgsB) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l11315))) -> (forall v_recvAlgs:top. ((exists v_l59911366:top. (exists v_l60011367:top. ((v_recvAlgs = (v_Tuples__Tup2 v_l59911366 v_l60011367)) /\ ((v_Bytes__B v_recvAlgsB) = (v_TLSExtensions__SigHashAlgBytes (v_Tuples__Tup2 v_l59911366 v_l60011367)))))) -> (((v_Error__Correct v_recvAlgs) = v_l11315) -> (((v_Error__Correct v_recvAlgs) = v_l11315) -> (forall v_l118911382:top. ((v_recvAlgs = v_recvAlgs) -> ((v_l118911382 = v_Pervasives__True) -> (forall v_z11420:top. (((2 = 2) /\ (exists v_x1141711421:top. (((v_sign = v_sign) /\ (((v_Bytes__Length v_sign) = v_x1141711421) /\ (0 <= v_x1141711421))) /\ (((v_z11420 = v_Pervasives__True) /\ (v_x1141711421 >= 2)) \/ ((v_z11420 = v_Pervasives__False) /\ (v_x1141711421 < 2)))))) -> ((v_z11420 = v_Pervasives__True) -> (forall v_l11450:top. ((v_l11450 = 2) -> ((v_l11450 <= 8) /\ (0 <= v_l11450))))))))))))))))))))))))))))))
(* Querying for (l1145211453:Bytes.bytes){l1145211453 = sign} <: (b1144211454:Bytes.bytes){pr_GreaterThanOrEqual(Bytes.Length (b1144211454), 2)} *)
(* query pr_GreaterThanOrEqual(Bytes.Length (l11455), 2) [HandshakeMessages.fs(476,30)] *)
goal g217_gl: (forall v_expectedAlgs:top. (forall v_payload:top. (forall v_pv:top. ((v_TLSConstants__IsProtocolVersion_p v_pv) -> (((v_TLSConstants__TLS_1p2 ) = v_pv) -> (((v_TLSConstants__TLS_1p2 ) = v_pv) -> (forall v_z11279:top. (((2 = 2) /\ (exists v_x1127611280:top. (((v_payload = v_payload) /\ (((v_Bytes__Length v_payload) = v_x1127611280) /\ (0 <= v_x1127611280))) /\ (((v_z11279 = v_Pervasives__True) /\ (v_x1127611280 >= 2)) \/ ((v_z11279 = v_Pervasives__False) /\ (v_x1127611280 < 2)))))) -> ((v_z11279 = v_Pervasives__True) -> (forall v_recvAlgsB:top. (forall v_sign:top. ((((v_Bytes__Length v_recvAlgsB) = 2) /\ ((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_recvAlgsB) (v_Bytes__B v_sign)))) -> ((2 = 2) -> (forall v_l11315:top. ((v_recvAlgsB = v_recvAlgsB) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l11315))) -> (forall v_recvAlgs:top. ((exists v_l59911366:top. (exists v_l60011367:top. ((v_recvAlgs = (v_Tuples__Tup2 v_l59911366 v_l60011367)) /\ ((v_Bytes__B v_recvAlgsB) = (v_TLSExtensions__SigHashAlgBytes (v_Tuples__Tup2 v_l59911366 v_l60011367)))))) -> (((v_Error__Correct v_recvAlgs) = v_l11315) -> (((v_Error__Correct v_recvAlgs) = v_l11315) -> (forall v_l118911382:top. ((v_recvAlgs = v_recvAlgs) -> ((v_l118911382 = v_Pervasives__True) -> (forall v_z11420:top. (((2 = 2) /\ (exists v_x1141711421:top. (((v_sign = v_sign) /\ (((v_Bytes__Length v_sign) = v_x1141711421) /\ (0 <= v_x1141711421))) /\ (((v_z11420 = v_Pervasives__True) /\ (v_x1141711421 >= 2)) \/ ((v_z11420 = v_Pervasives__False) /\ (v_x1141711421 < 2)))))) -> ((v_z11420 = v_Pervasives__True) -> (forall v_l11455:top. ((v_l11455 = v_sign) -> ((v_Bytes__Length v_l11455) >= 2)))))))))))))))))))))))))))))
(* Querying for (l1150011505115111152211534:(l599113661150111506115121152311535:TLSConstants.sigAlg * l600113671150211507115131152411536:TLSConstants.hashAlg){Bytes.B (recvAlgsB) = TLSExtensions.SigHashAlgBytes ((l599113661150111506115121152311535, l600113671150211507115131152411536))} * l1150311508115141152511537:Bytes.bytes){Bytes.B (sign) = TLSConstants.VLBytes (2, Bytes.B (l1150311508115141152511537)) /\ (l1150011505115111152211534, l1150311508115141152511537) = (recvAlgs, sign38)} <: (a115171152811538:(TLSConstants.sigAlg * TLSConstants.hashAlg) * p115201153111541:Bytes.bytes){Bytes.B (payload) = DigitallySignedBytes (a115171152811538, p115201153111541, pv)} *)
(* query Bytes.B (payload) = DigitallySignedBytes (l11542, l11543, pv) [HandshakeMessages.fs(478,43)] *)
goal g218_gl: (forall v_expectedAlgs:top. (forall v_payload:top. (forall v_pv:top. ((v_TLSConstants__IsProtocolVersion_p v_pv) -> (((v_TLSConstants__TLS_1p2 ) = v_pv) -> (((v_TLSConstants__TLS_1p2 ) = v_pv) -> (forall v_z11279:top. (((2 = 2) /\ (exists v_x1127611280:top. (((v_payload = v_payload) /\ (((v_Bytes__Length v_payload) = v_x1127611280) /\ (0 <= v_x1127611280))) /\ (((v_z11279 = v_Pervasives__True) /\ (v_x1127611280 >= 2)) \/ ((v_z11279 = v_Pervasives__False) /\ (v_x1127611280 < 2)))))) -> ((v_z11279 = v_Pervasives__True) -> (forall v_recvAlgsB:top. (forall v_sign:top. ((((v_Bytes__Length v_recvAlgsB) = 2) /\ ((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_recvAlgsB) (v_Bytes__B v_sign)))) -> ((2 = 2) -> (forall v_l11315:top. ((v_recvAlgsB = v_recvAlgsB) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l11315))) -> (forall v_recvAlgs:top. ((exists v_l59911366:top. (exists v_l60011367:top. ((v_recvAlgs = (v_Tuples__Tup2 v_l59911366 v_l60011367)) /\ ((v_Bytes__B v_recvAlgsB) = (v_TLSExtensions__SigHashAlgBytes (v_Tuples__Tup2 v_l59911366 v_l60011367)))))) -> (((v_Error__Correct v_recvAlgs) = v_l11315) -> (((v_Error__Correct v_recvAlgs) = v_l11315) -> (forall v_l118911382:top. ((v_recvAlgs = v_recvAlgs) -> ((v_l118911382 = v_Pervasives__True) -> (forall v_z11420:top. (((2 = 2) /\ (exists v_x1141711421:top. (((v_sign = v_sign) /\ (((v_Bytes__Length v_sign) = v_x1141711421) /\ (0 <= v_x1141711421))) /\ (((v_z11420 = v_Pervasives__True) /\ (v_x1141711421 >= 2)) \/ ((v_z11420 = v_Pervasives__False) /\ (v_x1141711421 < 2)))))) -> ((v_z11420 = v_Pervasives__True) -> (forall v_l11438:top. ((v_sign = v_sign) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l11438))) -> (forall v_sign38:top. (((v_Bytes__B v_sign) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_sign38))) -> (((v_Error__Correct v_sign38) = v_l11438) -> (((v_Error__Correct v_sign38) = v_l11438) -> (forall v_l11521:top. ((((v_Tuples__Tup2 v_recvAlgs v_sign38) = (v_Tuples__Tup2 v_recvAlgs v_sign38)) /\ (v_l11521 = (v_Error__Correct (v_Tuples__Tup2 v_recvAlgs v_sign38)))) -> (forall v_l11542:top. ((exists v_l599113661150111506115121152311535:top. (exists v_l600113671150211507115131152411536:top. ((v_l11542 = (v_Tuples__Tup2 v_l599113661150111506115121152311535 v_l600113671150211507115131152411536)) /\ ((v_Bytes__B v_recvAlgsB) = (v_TLSExtensions__SigHashAlgBytes (v_Tuples__Tup2 v_l599113661150111506115121152311535 v_l600113671150211507115131152411536)))))) -> (forall v_l11543:top. ((((v_Bytes__B v_sign) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_l11543))) /\ ((v_Tuples__Tup2 v_l11542 v_l11543) = (v_Tuples__Tup2 v_recvAlgs v_sign38))) -> ((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_l11542 v_l11543 v_pv)))))))))))))))))))))))))))))))))))))))))
(* Querying for (l1182511826:int){l1182511826 = 2} <: (l118181182311827:int){pr_LessThanOrEqual(l118181182311827, 8) /\ pr_LessThanOrEqual(0, l118181182311827)} *)
(* query pr_LessThanOrEqual(l11828, 8) /\ pr_LessThanOrEqual(0, l11828) [HandshakeMessages.fs(485,22)] *)
goal g219_gl: (forall v_expectedAlgs:top. (forall v_payload:top. (forall v_pv:top. ((v_TLSConstants__IsProtocolVersion_p v_pv) -> ((not ((v_TLSConstants__TLS_1p2 ) = v_pv)) -> (((v_TLSConstants__SSL_3p0 ) = v_pv) -> (((v_TLSConstants__SSL_3p0 ) = v_pv) -> (forall v_z11769:top. (((1 = 1) /\ (exists v_x1176611770:top. (((v_expectedAlgs = v_expectedAlgs) /\ (((v_List__ListLength v_expectedAlgs) = v_x1176611770) /\ (0 <= v_x1176611770))) /\ (((v_z11769 = v_Pervasives__True) /\ (v_x1176611770 = 1)) \/ ((v_z11769 = v_Pervasives__False) /\ (not (v_x1176611770 = 1))))))) -> ((v_z11769 = v_Pervasives__True) -> (forall v_z11798:top. (((2 = 2) /\ (exists v_x1179511799:top. (((v_payload = v_payload) /\ (((v_Bytes__Length v_payload) = v_x1179511799) /\ (0 <= v_x1179511799))) /\ (((v_z11798 = v_Pervasives__True) /\ (v_x1179511799 >= 2)) \/ ((v_z11798 = v_Pervasives__False) /\ (v_x1179511799 < 2)))))) -> ((v_z11798 = v_Pervasives__True) -> (forall v_l11828:top. ((v_l11828 = 2) -> ((v_l11828 <= 8) /\ (0 <= v_l11828)))))))))))))))))
(* Querying for (l1183011831:Bytes.bytes){l1183011831 = payload} <: (b1182011832:Bytes.bytes){pr_GreaterThanOrEqual(Bytes.Length (b1182011832), 2)} *)
(* query pr_GreaterThanOrEqual(Bytes.Length (l11833), 2) [HandshakeMessages.fs(485,22)] *)
goal g220_gl: (forall v_expectedAlgs:top. (forall v_payload:top. (forall v_pv:top. ((v_TLSConstants__IsProtocolVersion_p v_pv) -> ((not ((v_TLSConstants__TLS_1p2 ) = v_pv)) -> (((v_TLSConstants__SSL_3p0 ) = v_pv) -> (((v_TLSConstants__SSL_3p0 ) = v_pv) -> (forall v_z11769:top. (((1 = 1) /\ (exists v_x1176611770:top. (((v_expectedAlgs = v_expectedAlgs) /\ (((v_List__ListLength v_expectedAlgs) = v_x1176611770) /\ (0 <= v_x1176611770))) /\ (((v_z11769 = v_Pervasives__True) /\ (v_x1176611770 = 1)) \/ ((v_z11769 = v_Pervasives__False) /\ (not (v_x1176611770 = 1))))))) -> ((v_z11769 = v_Pervasives__True) -> (forall v_z11798:top. (((2 = 2) /\ (exists v_x1179511799:top. (((v_payload = v_payload) /\ (((v_Bytes__Length v_payload) = v_x1179511799) /\ (0 <= v_x1179511799))) /\ (((v_z11798 = v_Pervasives__True) /\ (v_x1179511799 >= 2)) \/ ((v_z11798 = v_Pervasives__False) /\ (v_x1179511799 < 2)))))) -> ((v_z11798 = v_Pervasives__True) -> (forall v_l11833:top. ((v_l11833 = v_payload) -> ((v_Bytes__Length v_l11833) >= 2))))))))))))))))
(* Querying for (l1188311886:(TLSConstants.sigAlg * TLSConstants.hashAlg) list){l1188311886 = expectedAlgs} <: (l118791188111889:(TLSConstants.sigAlg * TLSConstants.hashAlg) list){pr_GreaterThan(List.ListLength (l118791188111889), 0)} *)
(* query pr_GreaterThan(List.ListLength (l11890), 0) [HandshakeMessages.fs(488,24)] *)
goal g221_gl: (forall v_expectedAlgs:top. (forall v_payload:top. (forall v_pv:top. ((v_TLSConstants__IsProtocolVersion_p v_pv) -> ((not ((v_TLSConstants__TLS_1p2 ) = v_pv)) -> (((v_TLSConstants__SSL_3p0 ) = v_pv) -> (((v_TLSConstants__SSL_3p0 ) = v_pv) -> (forall v_z11769:top. (((1 = 1) /\ (exists v_x1176611770:top. (((v_expectedAlgs = v_expectedAlgs) /\ (((v_List__ListLength v_expectedAlgs) = v_x1176611770) /\ (0 <= v_x1176611770))) /\ (((v_z11769 = v_Pervasives__True) /\ (v_x1176611770 = 1)) \/ ((v_z11769 = v_Pervasives__False) /\ (not (v_x1176611770 = 1))))))) -> ((v_z11769 = v_Pervasives__True) -> (forall v_z11798:top. (((2 = 2) /\ (exists v_x1179511799:top. (((v_payload = v_payload) /\ (((v_Bytes__Length v_payload) = v_x1179511799) /\ (0 <= v_x1179511799))) /\ (((v_z11798 = v_Pervasives__True) /\ (v_x1179511799 >= 2)) \/ ((v_z11798 = v_Pervasives__False) /\ (v_x1179511799 < 2)))))) -> ((v_z11798 = v_Pervasives__True) -> (forall v_l11816:top. ((v_payload = v_payload) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l11816))) -> (forall v_sign:top. (((v_Bytes__B v_payload) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_sign))) -> (((v_Error__Correct v_sign) = v_l11816) -> (((v_Error__Correct v_sign) = v_l11816) -> (forall v_l11890:top. ((v_l11890 = v_expectedAlgs) -> ((v_List__ListLength v_l11890) > 0)))))))))))))))))))))))
(* Querying for ((TLSConstants.sigAlg * TLSConstants.hashAlg){expectedAlgs = expectedAlgs} * l1189611901119061191711929:Bytes.bytes){l1189611901119061191711929 = sign /\ Bytes.B (payload) = TLSConstants.VLBytes (2, Bytes.B (l1189611901119061191711929))} <: (a119091192011930:(TLSConstants.sigAlg * TLSConstants.hashAlg) * p119121192311933:Bytes.bytes){Bytes.B (payload) = DigitallySignedBytes (a119091192011930, p119121192311933, pv)} *)
(* query Bytes.B (payload) = DigitallySignedBytes (l11934, l11935, pv) [HandshakeMessages.fs(488,16)] *)
goal g222_gl: (forall v_expectedAlgs:top. (forall v_payload:top. (forall v_pv:top. ((v_TLSConstants__IsProtocolVersion_p v_pv) -> ((not ((v_TLSConstants__TLS_1p2 ) = v_pv)) -> (((v_TLSConstants__SSL_3p0 ) = v_pv) -> (((v_TLSConstants__SSL_3p0 ) = v_pv) -> (forall v_z11769:top. (((1 = 1) /\ (exists v_x1176611770:top. (((v_expectedAlgs = v_expectedAlgs) /\ (((v_List__ListLength v_expectedAlgs) = v_x1176611770) /\ (0 <= v_x1176611770))) /\ (((v_z11769 = v_Pervasives__True) /\ (v_x1176611770 = 1)) \/ ((v_z11769 = v_Pervasives__False) /\ (not (v_x1176611770 = 1))))))) -> ((v_z11769 = v_Pervasives__True) -> (forall v_z11798:top. (((2 = 2) /\ (exists v_x1179511799:top. (((v_payload = v_payload) /\ (((v_Bytes__Length v_payload) = v_x1179511799) /\ (0 <= v_x1179511799))) /\ (((v_z11798 = v_Pervasives__True) /\ (v_x1179511799 >= 2)) \/ ((v_z11798 = v_Pervasives__False) /\ (v_x1179511799 < 2)))))) -> ((v_z11798 = v_Pervasives__True) -> (forall v_l11816:top. ((v_payload = v_payload) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l11816))) -> (forall v_sign:top. (((v_Bytes__B v_payload) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_sign))) -> (((v_Error__Correct v_sign) = v_l11816) -> (((v_Error__Correct v_sign) = v_l11816) -> (forall v_l11913:top. ((exists v_x1187311875:top. (v_l11913 = (v_Error__Correct v_x1187311875))) -> (forall v_l11934:top. ((exists v_l5991188411887118911189311899119041191511927:top. (exists v_l6001188511888118921189411900119051191611928:top. (v_l11934 = (v_Tuples__Tup2 v_l5991188411887118911189311899119041191511927 v_l6001188511888118921189411900119051191611928)))) -> (forall v_l11935:top. (((v_l11935 = v_sign) /\ ((v_Bytes__B v_payload) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_l11935)))) -> ((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_l11934 v_l11935 v_pv))))))))))))))))))))))))))))
(* Querying for (l1209812099:int){l1209812099 = 2} <: (l120911209612100:int){pr_LessThanOrEqual(l120911209612100, 8) /\ pr_LessThanOrEqual(0, l120911209612100)} *)
(* query pr_LessThanOrEqual(l12101, 8) /\ pr_LessThanOrEqual(0, l12101) [HandshakeMessages.fs(485,22)] *)
goal g223_gl: (forall v_expectedAlgs:top. (forall v_payload:top. (forall v_pv:top. ((v_TLSConstants__IsProtocolVersion_p v_pv) -> ((not ((v_TLSConstants__TLS_1p2 ) = v_pv)) -> ((not ((v_TLSConstants__SSL_3p0 ) = v_pv)) -> (((v_TLSConstants__TLS_1p0 ) = v_pv) -> (((v_TLSConstants__TLS_1p0 ) = v_pv) -> (forall v_z12042:top. (((1 = 1) /\ (exists v_x1203912043:top. (((v_expectedAlgs = v_expectedAlgs) /\ (((v_List__ListLength v_expectedAlgs) = v_x1203912043) /\ (0 <= v_x1203912043))) /\ (((v_z12042 = v_Pervasives__True) /\ (v_x1203912043 = 1)) \/ ((v_z12042 = v_Pervasives__False) /\ (not (v_x1203912043 = 1))))))) -> ((v_z12042 = v_Pervasives__True) -> (forall v_z12071:top. (((2 = 2) /\ (exists v_x1206812072:top. (((v_payload = v_payload) /\ (((v_Bytes__Length v_payload) = v_x1206812072) /\ (0 <= v_x1206812072))) /\ (((v_z12071 = v_Pervasives__True) /\ (v_x1206812072 >= 2)) \/ ((v_z12071 = v_Pervasives__False) /\ (v_x1206812072 < 2)))))) -> ((v_z12071 = v_Pervasives__True) -> (forall v_l12101:top. ((v_l12101 = 2) -> ((v_l12101 <= 8) /\ (0 <= v_l12101))))))))))))))))))
(* Querying for (l1210312104:Bytes.bytes){l1210312104 = payload} <: (b1209312105:Bytes.bytes){pr_GreaterThanOrEqual(Bytes.Length (b1209312105), 2)} *)
(* query pr_GreaterThanOrEqual(Bytes.Length (l12106), 2) [HandshakeMessages.fs(485,22)] *)
goal g224_gl: (forall v_expectedAlgs:top. (forall v_payload:top. (forall v_pv:top. ((v_TLSConstants__IsProtocolVersion_p v_pv) -> ((not ((v_TLSConstants__TLS_1p2 ) = v_pv)) -> ((not ((v_TLSConstants__SSL_3p0 ) = v_pv)) -> (((v_TLSConstants__TLS_1p0 ) = v_pv) -> (((v_TLSConstants__TLS_1p0 ) = v_pv) -> (forall v_z12042:top. (((1 = 1) /\ (exists v_x1203912043:top. (((v_expectedAlgs = v_expectedAlgs) /\ (((v_List__ListLength v_expectedAlgs) = v_x1203912043) /\ (0 <= v_x1203912043))) /\ (((v_z12042 = v_Pervasives__True) /\ (v_x1203912043 = 1)) \/ ((v_z12042 = v_Pervasives__False) /\ (not (v_x1203912043 = 1))))))) -> ((v_z12042 = v_Pervasives__True) -> (forall v_z12071:top. (((2 = 2) /\ (exists v_x1206812072:top. (((v_payload = v_payload) /\ (((v_Bytes__Length v_payload) = v_x1206812072) /\ (0 <= v_x1206812072))) /\ (((v_z12071 = v_Pervasives__True) /\ (v_x1206812072 >= 2)) \/ ((v_z12071 = v_Pervasives__False) /\ (v_x1206812072 < 2)))))) -> ((v_z12071 = v_Pervasives__True) -> (forall v_l12106:top. ((v_l12106 = v_payload) -> ((v_Bytes__Length v_l12106) >= 2)))))))))))))))))
(* Querying for (l1215612159:(TLSConstants.sigAlg * TLSConstants.hashAlg) list){l1215612159 = expectedAlgs} <: (l121521215412162:(TLSConstants.sigAlg * TLSConstants.hashAlg) list){pr_GreaterThan(List.ListLength (l121521215412162), 0)} *)
(* query pr_GreaterThan(List.ListLength (l12163), 0) [HandshakeMessages.fs(488,24)] *)
goal g225_gl: (forall v_expectedAlgs:top. (forall v_payload:top. (forall v_pv:top. ((v_TLSConstants__IsProtocolVersion_p v_pv) -> ((not ((v_TLSConstants__TLS_1p2 ) = v_pv)) -> ((not ((v_TLSConstants__SSL_3p0 ) = v_pv)) -> (((v_TLSConstants__TLS_1p0 ) = v_pv) -> (((v_TLSConstants__TLS_1p0 ) = v_pv) -> (forall v_z12042:top. (((1 = 1) /\ (exists v_x1203912043:top. (((v_expectedAlgs = v_expectedAlgs) /\ (((v_List__ListLength v_expectedAlgs) = v_x1203912043) /\ (0 <= v_x1203912043))) /\ (((v_z12042 = v_Pervasives__True) /\ (v_x1203912043 = 1)) \/ ((v_z12042 = v_Pervasives__False) /\ (not (v_x1203912043 = 1))))))) -> ((v_z12042 = v_Pervasives__True) -> (forall v_z12071:top. (((2 = 2) /\ (exists v_x1206812072:top. (((v_payload = v_payload) /\ (((v_Bytes__Length v_payload) = v_x1206812072) /\ (0 <= v_x1206812072))) /\ (((v_z12071 = v_Pervasives__True) /\ (v_x1206812072 >= 2)) \/ ((v_z12071 = v_Pervasives__False) /\ (v_x1206812072 < 2)))))) -> ((v_z12071 = v_Pervasives__True) -> (forall v_l12089:top. ((v_payload = v_payload) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l12089))) -> (forall v_sign:top. (((v_Bytes__B v_payload) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_sign))) -> (((v_Error__Correct v_sign) = v_l12089) -> (((v_Error__Correct v_sign) = v_l12089) -> (forall v_l12163:top. ((v_l12163 = v_expectedAlgs) -> ((v_List__ListLength v_l12163) > 0))))))))))))))))))))))))
(* Querying for ((TLSConstants.sigAlg * TLSConstants.hashAlg){expectedAlgs = expectedAlgs} * l1216912174121791219012202:Bytes.bytes){l1216912174121791219012202 = sign /\ Bytes.B (payload) = TLSConstants.VLBytes (2, Bytes.B (l1216912174121791219012202))} <: (a121821219312203:(TLSConstants.sigAlg * TLSConstants.hashAlg) * p121851219612206:Bytes.bytes){Bytes.B (payload) = DigitallySignedBytes (a121821219312203, p121851219612206, pv)} *)
(* query Bytes.B (payload) = DigitallySignedBytes (l12207, l12208, pv) [HandshakeMessages.fs(488,16)] *)
goal g226_gl: (forall v_expectedAlgs:top. (forall v_payload:top. (forall v_pv:top. ((v_TLSConstants__IsProtocolVersion_p v_pv) -> ((not ((v_TLSConstants__TLS_1p2 ) = v_pv)) -> ((not ((v_TLSConstants__SSL_3p0 ) = v_pv)) -> (((v_TLSConstants__TLS_1p0 ) = v_pv) -> (((v_TLSConstants__TLS_1p0 ) = v_pv) -> (forall v_z12042:top. (((1 = 1) /\ (exists v_x1203912043:top. (((v_expectedAlgs = v_expectedAlgs) /\ (((v_List__ListLength v_expectedAlgs) = v_x1203912043) /\ (0 <= v_x1203912043))) /\ (((v_z12042 = v_Pervasives__True) /\ (v_x1203912043 = 1)) \/ ((v_z12042 = v_Pervasives__False) /\ (not (v_x1203912043 = 1))))))) -> ((v_z12042 = v_Pervasives__True) -> (forall v_z12071:top. (((2 = 2) /\ (exists v_x1206812072:top. (((v_payload = v_payload) /\ (((v_Bytes__Length v_payload) = v_x1206812072) /\ (0 <= v_x1206812072))) /\ (((v_z12071 = v_Pervasives__True) /\ (v_x1206812072 >= 2)) \/ ((v_z12071 = v_Pervasives__False) /\ (v_x1206812072 < 2)))))) -> ((v_z12071 = v_Pervasives__True) -> (forall v_l12089:top. ((v_payload = v_payload) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l12089))) -> (forall v_sign:top. (((v_Bytes__B v_payload) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_sign))) -> (((v_Error__Correct v_sign) = v_l12089) -> (((v_Error__Correct v_sign) = v_l12089) -> (forall v_l12186:top. ((exists v_x1214612148:top. (v_l12186 = (v_Error__Correct v_x1214612148))) -> (forall v_l12207:top. ((exists v_l5991215712160121641216612172121771218812200:top. (exists v_l6001215812161121651216712173121781218912201:top. (v_l12207 = (v_Tuples__Tup2 v_l5991215712160121641216612172121771218812200 v_l6001215812161121651216712173121781218912201)))) -> (forall v_l12208:top. (((v_l12208 = v_sign) /\ ((v_Bytes__B v_payload) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_l12208)))) -> ((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_l12207 v_l12208 v_pv)))))))))))))))))))))))))))))
(* Querying for (l1237112372:int){l1237112372 = 2} <: (l123641236912373:int){pr_LessThanOrEqual(l123641236912373, 8) /\ pr_LessThanOrEqual(0, l123641236912373)} *)
(* query pr_LessThanOrEqual(l12374, 8) /\ pr_LessThanOrEqual(0, l12374) [HandshakeMessages.fs(485,22)] *)
goal g227_gl: (forall v_expectedAlgs:top. (forall v_payload:top. (forall v_pv:top. ((v_TLSConstants__IsProtocolVersion_p v_pv) -> ((not ((v_TLSConstants__TLS_1p2 ) = v_pv)) -> ((not ((v_TLSConstants__SSL_3p0 ) = v_pv)) -> ((not ((v_TLSConstants__TLS_1p0 ) = v_pv)) -> (((v_TLSConstants__TLS_1p1 ) = v_pv) -> (((v_TLSConstants__TLS_1p1 ) = v_pv) -> (forall v_z12315:top. (((1 = 1) /\ (exists v_x1231212316:top. (((v_expectedAlgs = v_expectedAlgs) /\ (((v_List__ListLength v_expectedAlgs) = v_x1231212316) /\ (0 <= v_x1231212316))) /\ (((v_z12315 = v_Pervasives__True) /\ (v_x1231212316 = 1)) \/ ((v_z12315 = v_Pervasives__False) /\ (not (v_x1231212316 = 1))))))) -> ((v_z12315 = v_Pervasives__True) -> (forall v_z12344:top. (((2 = 2) /\ (exists v_x1234112345:top. (((v_payload = v_payload) /\ (((v_Bytes__Length v_payload) = v_x1234112345) /\ (0 <= v_x1234112345))) /\ (((v_z12344 = v_Pervasives__True) /\ (v_x1234112345 >= 2)) \/ ((v_z12344 = v_Pervasives__False) /\ (v_x1234112345 < 2)))))) -> ((v_z12344 = v_Pervasives__True) -> (forall v_l12374:top. ((v_l12374 = 2) -> ((v_l12374 <= 8) /\ (0 <= v_l12374)))))))))))))))))))
(* Querying for (l1237612377:Bytes.bytes){l1237612377 = payload} <: (b1236612378:Bytes.bytes){pr_GreaterThanOrEqual(Bytes.Length (b1236612378), 2)} *)
(* query pr_GreaterThanOrEqual(Bytes.Length (l12379), 2) [HandshakeMessages.fs(485,22)] *)
goal g228_gl: (forall v_expectedAlgs:top. (forall v_payload:top. (forall v_pv:top. ((v_TLSConstants__IsProtocolVersion_p v_pv) -> ((not ((v_TLSConstants__TLS_1p2 ) = v_pv)) -> ((not ((v_TLSConstants__SSL_3p0 ) = v_pv)) -> ((not ((v_TLSConstants__TLS_1p0 ) = v_pv)) -> (((v_TLSConstants__TLS_1p1 ) = v_pv) -> (((v_TLSConstants__TLS_1p1 ) = v_pv) -> (forall v_z12315:top. (((1 = 1) /\ (exists v_x1231212316:top. (((v_expectedAlgs = v_expectedAlgs) /\ (((v_List__ListLength v_expectedAlgs) = v_x1231212316) /\ (0 <= v_x1231212316))) /\ (((v_z12315 = v_Pervasives__True) /\ (v_x1231212316 = 1)) \/ ((v_z12315 = v_Pervasives__False) /\ (not (v_x1231212316 = 1))))))) -> ((v_z12315 = v_Pervasives__True) -> (forall v_z12344:top. (((2 = 2) /\ (exists v_x1234112345:top. (((v_payload = v_payload) /\ (((v_Bytes__Length v_payload) = v_x1234112345) /\ (0 <= v_x1234112345))) /\ (((v_z12344 = v_Pervasives__True) /\ (v_x1234112345 >= 2)) \/ ((v_z12344 = v_Pervasives__False) /\ (v_x1234112345 < 2)))))) -> ((v_z12344 = v_Pervasives__True) -> (forall v_l12379:top. ((v_l12379 = v_payload) -> ((v_Bytes__Length v_l12379) >= 2))))))))))))))))))
(* Querying for (l1242912432:(TLSConstants.sigAlg * TLSConstants.hashAlg) list){l1242912432 = expectedAlgs} <: (l124251242712435:(TLSConstants.sigAlg * TLSConstants.hashAlg) list){pr_GreaterThan(List.ListLength (l124251242712435), 0)} *)
(* query pr_GreaterThan(List.ListLength (l12436), 0) [HandshakeMessages.fs(488,24)] *)
goal g229_gl: (forall v_expectedAlgs:top. (forall v_payload:top. (forall v_pv:top. ((v_TLSConstants__IsProtocolVersion_p v_pv) -> ((not ((v_TLSConstants__TLS_1p2 ) = v_pv)) -> ((not ((v_TLSConstants__SSL_3p0 ) = v_pv)) -> ((not ((v_TLSConstants__TLS_1p0 ) = v_pv)) -> (((v_TLSConstants__TLS_1p1 ) = v_pv) -> (((v_TLSConstants__TLS_1p1 ) = v_pv) -> (forall v_z12315:top. (((1 = 1) /\ (exists v_x1231212316:top. (((v_expectedAlgs = v_expectedAlgs) /\ (((v_List__ListLength v_expectedAlgs) = v_x1231212316) /\ (0 <= v_x1231212316))) /\ (((v_z12315 = v_Pervasives__True) /\ (v_x1231212316 = 1)) \/ ((v_z12315 = v_Pervasives__False) /\ (not (v_x1231212316 = 1))))))) -> ((v_z12315 = v_Pervasives__True) -> (forall v_z12344:top. (((2 = 2) /\ (exists v_x1234112345:top. (((v_payload = v_payload) /\ (((v_Bytes__Length v_payload) = v_x1234112345) /\ (0 <= v_x1234112345))) /\ (((v_z12344 = v_Pervasives__True) /\ (v_x1234112345 >= 2)) \/ ((v_z12344 = v_Pervasives__False) /\ (v_x1234112345 < 2)))))) -> ((v_z12344 = v_Pervasives__True) -> (forall v_l12362:top. ((v_payload = v_payload) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l12362))) -> (forall v_sign:top. (((v_Bytes__B v_payload) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_sign))) -> (((v_Error__Correct v_sign) = v_l12362) -> (((v_Error__Correct v_sign) = v_l12362) -> (forall v_l12436:top. ((v_l12436 = v_expectedAlgs) -> ((v_List__ListLength v_l12436) > 0)))))))))))))))))))))))))
(* Querying for ((TLSConstants.sigAlg * TLSConstants.hashAlg){expectedAlgs = expectedAlgs} * l1244212447124521246312475:Bytes.bytes){l1244212447124521246312475 = sign /\ Bytes.B (payload) = TLSConstants.VLBytes (2, Bytes.B (l1244212447124521246312475))} <: (a124551246612476:(TLSConstants.sigAlg * TLSConstants.hashAlg) * p124581246912479:Bytes.bytes){Bytes.B (payload) = DigitallySignedBytes (a124551246612476, p124581246912479, pv)} *)
(* query Bytes.B (payload) = DigitallySignedBytes (l12480, l12481, pv) [HandshakeMessages.fs(488,16)] *)
goal g230_gl: (forall v_expectedAlgs:top. (forall v_payload:top. (forall v_pv:top. ((v_TLSConstants__IsProtocolVersion_p v_pv) -> ((not ((v_TLSConstants__TLS_1p2 ) = v_pv)) -> ((not ((v_TLSConstants__SSL_3p0 ) = v_pv)) -> ((not ((v_TLSConstants__TLS_1p0 ) = v_pv)) -> (((v_TLSConstants__TLS_1p1 ) = v_pv) -> (((v_TLSConstants__TLS_1p1 ) = v_pv) -> (forall v_z12315:top. (((1 = 1) /\ (exists v_x1231212316:top. (((v_expectedAlgs = v_expectedAlgs) /\ (((v_List__ListLength v_expectedAlgs) = v_x1231212316) /\ (0 <= v_x1231212316))) /\ (((v_z12315 = v_Pervasives__True) /\ (v_x1231212316 = 1)) \/ ((v_z12315 = v_Pervasives__False) /\ (not (v_x1231212316 = 1))))))) -> ((v_z12315 = v_Pervasives__True) -> (forall v_z12344:top. (((2 = 2) /\ (exists v_x1234112345:top. (((v_payload = v_payload) /\ (((v_Bytes__Length v_payload) = v_x1234112345) /\ (0 <= v_x1234112345))) /\ (((v_z12344 = v_Pervasives__True) /\ (v_x1234112345 >= 2)) \/ ((v_z12344 = v_Pervasives__False) /\ (v_x1234112345 < 2)))))) -> ((v_z12344 = v_Pervasives__True) -> (forall v_l12362:top. ((v_payload = v_payload) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l12362))) -> (forall v_sign:top. (((v_Bytes__B v_payload) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_sign))) -> (((v_Error__Correct v_sign) = v_l12362) -> (((v_Error__Correct v_sign) = v_l12362) -> (forall v_l12459:top. ((exists v_x1241912421:top. (v_l12459 = (v_Error__Correct v_x1241912421))) -> (forall v_l12480:top. ((exists v_l5991243012433124371243912445124501246112473:top. (exists v_l6001243112434124381244012446124511246212474:top. (v_l12480 = (v_Tuples__Tup2 v_l5991243012433124371243912445124501246112473 v_l6001243112434124381244012446124511246212474)))) -> (forall v_l12481:top. (((v_l12481 = v_sign) /\ ((v_Bytes__B v_payload) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_l12481)))) -> ((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_l12480 v_l12481 v_pv))))))))))))))))))))))))))))))
(* Querying for (l1259712598:int){l1259712598 = 2} <: (l125911259512599:int){pr_LessThanOrEqual(0, l125911259512599)} *)
(* query pr_LessThanOrEqual(0, l12600) [HandshakeMessages.fs(494,27)] *)
goal g231_gl: (forall v_p:top. (forall v_g:top. (forall v_y:top. (forall v_l12600:top. ((v_l12600 = 2) -> (0 <= v_l12600))))))
(* Querying for (l1262212623:int){l1262212623 = 2} <: (l126161262012624:int){pr_LessThanOrEqual(0, l126161262012624)} *)
(* query pr_LessThanOrEqual(0, l12625) [HandshakeMessages.fs(494,44)] *)
goal g232_gl: (forall v_p:top. (forall v_g:top. (forall v_y:top. (forall v_l12625:top. ((v_l12625 = 2) -> (0 <= v_l12625))))))
(* Querying for (l1264012641:int){l1264012641 = 2} <: (l126341263812642:int){pr_LessThanOrEqual(0, l126341263812642)} *)
(* query pr_LessThanOrEqual(0, l12643) [HandshakeMessages.fs(494,61)] *)
goal g233_gl: (forall v_p:top. (forall v_g:top. (forall v_y:top. (forall v_l12643:top. ((v_l12643 = 2) -> (0 <= v_l12643))))))
(* Querying for (b1258712653:Bytes.bytes){(?b212586. (?b212611. y = y /\ Bytes.B (b212611) = TLSConstants.VLBytes (2, Bytes.B (y)) /\ (?b11260912613. g = g /\ Bytes.B (b11260912613) = TLSConstants.VLBytes (2, Bytes.B (g)) /\ Bytes.B (b212586) = bop_ArrayAppend (Bytes.B (b11260912613), Bytes.B (b212611)))) /\ (?b11258412588. p = p /\ Bytes.B (b11258412588) = TLSConstants.VLBytes (2, Bytes.B (p)) /\ Bytes.B (b1258712653) = bop_ArrayAppend (Bytes.B (b11258412588), Bytes.B (b212586))))} <: (b12654:Bytes.bytes){Bytes.B (b12654) = DHEParamBytes (p, g, y)} *)
(* query Bytes.B (l12655) = DHEParamBytes (p, g, y) [HandshakeMessages.fs(494,40)] *)
goal g234_gl: (forall v_p:top. (forall v_g:top. (forall v_y:top. (forall v_l12655:top. ((exists v_b212586:top. ((exists v_b212611:top. (((v_y = v_y) /\ ((v_Bytes__B v_b212611) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_y)))) /\ (exists v_b11260912613:top. (((v_g = v_g) /\ ((v_Bytes__B v_b11260912613) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_g)))) /\ ((v_Bytes__B v_b212586) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_b11260912613) (v_Bytes__B v_b212611))))))) /\ (exists v_b11258412588:top. (((v_p = v_p) /\ ((v_Bytes__B v_b11258412588) = (v_TLSConstants__VLBytes 2 (v_Bytes__B v_p)))) /\ ((v_Bytes__B v_l12655) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_b11258412588) (v_Bytes__B v_b212586))))))) -> ((v_Bytes__B v_l12655) = (v_HandshakeMessages__DHEParamBytes v_p v_g v_y)))))))
(* Querying for (l1269012691:int){l1269012691 = 2} <: (l126821268812692:int){pr_LessThanOrEqual(l126821268812692, 8) /\ pr_LessThanOrEqual(0, l126821268812692)} *)
(* query pr_LessThanOrEqual(l12693, 8) /\ pr_LessThanOrEqual(0, l12693) [HandshakeMessages.fs(497,14)] *)
goal g235_gl: (forall v_payload:top. (forall v_z12662:top. (((2 = 2) /\ (exists v_x1265912663:top. (((v_payload = v_payload) /\ (((v_Bytes__Length v_payload) = v_x1265912663) /\ (0 <= v_x1265912663))) /\ (((v_z12662 = v_Pervasives__True) /\ (v_x1265912663 >= 2)) \/ ((v_z12662 = v_Pervasives__False) /\ (v_x1265912663 < 2)))))) -> ((v_z12662 = v_Pervasives__True) -> (forall v_l12693:top. ((v_l12693 = 2) -> ((v_l12693 <= 8) /\ (0 <= v_l12693))))))))
(* Querying for (l1269512696:Bytes.bytes){l1269512696 = payload} <: (b1268412697:Bytes.bytes){pr_GreaterThanOrEqual(Bytes.Length (b1268412697), 2)} *)
(* query pr_GreaterThanOrEqual(Bytes.Length (l12698), 2) [HandshakeMessages.fs(497,14)] *)
goal g236_gl: (forall v_payload:top. (forall v_z12662:top. (((2 = 2) /\ (exists v_x1265912663:top. (((v_payload = v_payload) /\ (((v_Bytes__Length v_payload) = v_x1265912663) /\ (0 <= v_x1265912663))) /\ (((v_z12662 = v_Pervasives__True) /\ (v_x1265912663 >= 2)) \/ ((v_z12662 = v_Pervasives__False) /\ (v_x1265912663 < 2)))))) -> ((v_z12662 = v_Pervasives__True) -> (forall v_l12698:top. ((v_l12698 = v_payload) -> ((v_Bytes__Length v_l12698) >= 2)))))))
(* Querying for (l1278112782:int){l1278112782 = 2} <: (l127731277912783:int){pr_LessThanOrEqual(l127731277912783, 8) /\ pr_LessThanOrEqual(0, l127731277912783)} *)
(* query pr_LessThanOrEqual(l12784, 8) /\ pr_LessThanOrEqual(0, l12784) [HandshakeMessages.fs(502,18)] *)
goal g237_gl: (forall v_payload:top. (forall v_z12662:top. (((2 = 2) /\ (exists v_x1265912663:top. (((v_payload = v_payload) /\ (((v_Bytes__Length v_payload) = v_x1265912663) /\ (0 <= v_x1265912663))) /\ (((v_z12662 = v_Pervasives__True) /\ (v_x1265912663 >= 2)) \/ ((v_z12662 = v_Pervasives__False) /\ (v_x1265912663 < 2)))))) -> ((v_z12662 = v_Pervasives__True) -> (forall v_l12680:top. ((v_payload = v_payload) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l12680))) -> (forall v_res:top. ((exists v_b11268612735:top. (exists v_b21268712736:top. ((v_res = (v_Tuples__Tup2 v_b11268612735 v_b21268712736)) /\ ((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_b11268612735)) (v_Bytes__B v_b21268712736)))))) -> (((v_Error__Correct v_res) = v_l12680) -> (((v_Error__Correct v_res) = v_l12680) -> (forall v_p:top. (forall v_payload39:top. (((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_p)) (v_Bytes__B v_payload39))) -> (((v_Tuples__Tup2 v_p v_payload39) = v_res) -> (((v_Tuples__Tup2 v_p v_payload39) = v_res) -> (forall v_z12753:top. (((2 = 2) /\ (exists v_x1275012754:top. (((v_payload39 = v_payload39) /\ (((v_Bytes__Length v_payload39) = v_x1275012754) /\ (0 <= v_x1275012754))) /\ (((v_z12753 = v_Pervasives__True) /\ (v_x1275012754 >= 2)) \/ ((v_z12753 = v_Pervasives__False) /\ (v_x1275012754 < 2)))))) -> ((v_z12753 = v_Pervasives__True) -> (forall v_l12784:top. ((v_l12784 = 2) -> ((v_l12784 <= 8) /\ (0 <= v_l12784)))))))))))))))))))))))
(* Querying for (l1278612787:Bytes.bytes){l1278612787 = payload39} <: (b1277512788:Bytes.bytes){pr_GreaterThanOrEqual(Bytes.Length (b1277512788), 2)} *)
(* query pr_GreaterThanOrEqual(Bytes.Length (l12789), 2) [HandshakeMessages.fs(502,18)] *)
goal g238_gl: (forall v_payload:top. (forall v_z12662:top. (((2 = 2) /\ (exists v_x1265912663:top. (((v_payload = v_payload) /\ (((v_Bytes__Length v_payload) = v_x1265912663) /\ (0 <= v_x1265912663))) /\ (((v_z12662 = v_Pervasives__True) /\ (v_x1265912663 >= 2)) \/ ((v_z12662 = v_Pervasives__False) /\ (v_x1265912663 < 2)))))) -> ((v_z12662 = v_Pervasives__True) -> (forall v_l12680:top. ((v_payload = v_payload) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l12680))) -> (forall v_res:top. ((exists v_b11268612735:top. (exists v_b21268712736:top. ((v_res = (v_Tuples__Tup2 v_b11268612735 v_b21268712736)) /\ ((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_b11268612735)) (v_Bytes__B v_b21268712736)))))) -> (((v_Error__Correct v_res) = v_l12680) -> (((v_Error__Correct v_res) = v_l12680) -> (forall v_p:top. (forall v_payload39:top. (((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_p)) (v_Bytes__B v_payload39))) -> (((v_Tuples__Tup2 v_p v_payload39) = v_res) -> (((v_Tuples__Tup2 v_p v_payload39) = v_res) -> (forall v_z12753:top. (((2 = 2) /\ (exists v_x1275012754:top. (((v_payload39 = v_payload39) /\ (((v_Bytes__Length v_payload39) = v_x1275012754) /\ (0 <= v_x1275012754))) /\ (((v_z12753 = v_Pervasives__True) /\ (v_x1275012754 >= 2)) \/ ((v_z12753 = v_Pervasives__False) /\ (v_x1275012754 < 2)))))) -> ((v_z12753 = v_Pervasives__True) -> (forall v_l12789:top. ((v_l12789 = v_payload39) -> ((v_Bytes__Length v_l12789) >= 2))))))))))))))))))))))
(* Querying for (l1287212873:int){l1287212873 = 2} <: (l128641287012874:int){pr_LessThanOrEqual(l128641287012874, 8) /\ pr_LessThanOrEqual(0, l128641287012874)} *)
(* query pr_LessThanOrEqual(l12875, 8) /\ pr_LessThanOrEqual(0, l12875) [HandshakeMessages.fs(507,22)] *)
goal g239_gl: (forall v_payload:top. (forall v_z12662:top. (((2 = 2) /\ (exists v_x1265912663:top. (((v_payload = v_payload) /\ (((v_Bytes__Length v_payload) = v_x1265912663) /\ (0 <= v_x1265912663))) /\ (((v_z12662 = v_Pervasives__True) /\ (v_x1265912663 >= 2)) \/ ((v_z12662 = v_Pervasives__False) /\ (v_x1265912663 < 2)))))) -> ((v_z12662 = v_Pervasives__True) -> (forall v_l12680:top. ((v_payload = v_payload) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l12680))) -> (forall v_res:top. ((exists v_b11268612735:top. (exists v_b21268712736:top. ((v_res = (v_Tuples__Tup2 v_b11268612735 v_b21268712736)) /\ ((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_b11268612735)) (v_Bytes__B v_b21268712736)))))) -> (((v_Error__Correct v_res) = v_l12680) -> (((v_Error__Correct v_res) = v_l12680) -> (forall v_p:top. (forall v_payload39:top. (((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_p)) (v_Bytes__B v_payload39))) -> (((v_Tuples__Tup2 v_p v_payload39) = v_res) -> (((v_Tuples__Tup2 v_p v_payload39) = v_res) -> (forall v_z12753:top. (((2 = 2) /\ (exists v_x1275012754:top. (((v_payload39 = v_payload39) /\ (((v_Bytes__Length v_payload39) = v_x1275012754) /\ (0 <= v_x1275012754))) /\ (((v_z12753 = v_Pervasives__True) /\ (v_x1275012754 >= 2)) \/ ((v_z12753 = v_Pervasives__False) /\ (v_x1275012754 < 2)))))) -> ((v_z12753 = v_Pervasives__True) -> (forall v_l12771:top. ((v_payload39 = v_payload39) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l12771))) -> (forall v_res40:top. ((exists v_b11277712826:top. (exists v_b21277812827:top. ((v_res40 = (v_Tuples__Tup2 v_b11277712826 v_b21277812827)) /\ ((v_Bytes__B v_payload39) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_b11277712826)) (v_Bytes__B v_b21277812827)))))) -> (((v_Error__Correct v_res40) = v_l12771) -> (((v_Error__Correct v_res40) = v_l12771) -> (forall v_g:top. (forall v_payload41:top. (((v_Bytes__B v_payload39) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_g)) (v_Bytes__B v_payload41))) -> (((v_Tuples__Tup2 v_g v_payload41) = v_res40) -> (((v_Tuples__Tup2 v_g v_payload41) = v_res40) -> (forall v_z12844:top. (((2 = 2) /\ (exists v_x1284112845:top. (((v_payload41 = v_payload41) /\ (((v_Bytes__Length v_payload41) = v_x1284112845) /\ (0 <= v_x1284112845))) /\ (((v_z12844 = v_Pervasives__True) /\ (v_x1284112845 >= 2)) \/ ((v_z12844 = v_Pervasives__False) /\ (v_x1284112845 < 2)))))) -> ((v_z12844 = v_Pervasives__True) -> (forall v_l12875:top. ((v_l12875 = 2) -> ((v_l12875 <= 8) /\ (0 <= v_l12875))))))))))))))))))))))))))))))))))))))
(* Querying for (l1287712878:Bytes.bytes){l1287712878 = payload41} <: (b1286612879:Bytes.bytes){pr_GreaterThanOrEqual(Bytes.Length (b1286612879), 2)} *)
(* query pr_GreaterThanOrEqual(Bytes.Length (l12880), 2) [HandshakeMessages.fs(507,22)] *)
goal g240_gl: (forall v_payload:top. (forall v_z12662:top. (((2 = 2) /\ (exists v_x1265912663:top. (((v_payload = v_payload) /\ (((v_Bytes__Length v_payload) = v_x1265912663) /\ (0 <= v_x1265912663))) /\ (((v_z12662 = v_Pervasives__True) /\ (v_x1265912663 >= 2)) \/ ((v_z12662 = v_Pervasives__False) /\ (v_x1265912663 < 2)))))) -> ((v_z12662 = v_Pervasives__True) -> (forall v_l12680:top. ((v_payload = v_payload) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l12680))) -> (forall v_res:top. ((exists v_b11268612735:top. (exists v_b21268712736:top. ((v_res = (v_Tuples__Tup2 v_b11268612735 v_b21268712736)) /\ ((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_b11268612735)) (v_Bytes__B v_b21268712736)))))) -> (((v_Error__Correct v_res) = v_l12680) -> (((v_Error__Correct v_res) = v_l12680) -> (forall v_p:top. (forall v_payload39:top. (((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_p)) (v_Bytes__B v_payload39))) -> (((v_Tuples__Tup2 v_p v_payload39) = v_res) -> (((v_Tuples__Tup2 v_p v_payload39) = v_res) -> (forall v_z12753:top. (((2 = 2) /\ (exists v_x1275012754:top. (((v_payload39 = v_payload39) /\ (((v_Bytes__Length v_payload39) = v_x1275012754) /\ (0 <= v_x1275012754))) /\ (((v_z12753 = v_Pervasives__True) /\ (v_x1275012754 >= 2)) \/ ((v_z12753 = v_Pervasives__False) /\ (v_x1275012754 < 2)))))) -> ((v_z12753 = v_Pervasives__True) -> (forall v_l12771:top. ((v_payload39 = v_payload39) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l12771))) -> (forall v_res40:top. ((exists v_b11277712826:top. (exists v_b21277812827:top. ((v_res40 = (v_Tuples__Tup2 v_b11277712826 v_b21277812827)) /\ ((v_Bytes__B v_payload39) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_b11277712826)) (v_Bytes__B v_b21277812827)))))) -> (((v_Error__Correct v_res40) = v_l12771) -> (((v_Error__Correct v_res40) = v_l12771) -> (forall v_g:top. (forall v_payload41:top. (((v_Bytes__B v_payload39) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_g)) (v_Bytes__B v_payload41))) -> (((v_Tuples__Tup2 v_g v_payload41) = v_res40) -> (((v_Tuples__Tup2 v_g v_payload41) = v_res40) -> (forall v_z12844:top. (((2 = 2) /\ (exists v_x1284112845:top. (((v_payload41 = v_payload41) /\ (((v_Bytes__Length v_payload41) = v_x1284112845) /\ (0 <= v_x1284112845))) /\ (((v_z12844 = v_Pervasives__True) /\ (v_x1284112845 >= 2)) \/ ((v_z12844 = v_Pervasives__False) /\ (v_x1284112845 < 2)))))) -> ((v_z12844 = v_Pervasives__True) -> (forall v_l12880:top. ((v_l12880 = v_payload41) -> ((v_Bytes__Length v_l12880) >= 2)))))))))))))))))))))))))))))))))))))
(* Querying for (p12969129771300613024:Bytes.bytes * g12970129781300713025:Bytes.bytes * y12972129791300813026:Bytes.bytes * rem12974129801300913027:Bytes.bytes){Bytes.B (payload) = bop_ArrayAppend (DHEParamBytes (p12969129771300613024, g12970129781300713025, y12972129791300813026), Bytes.B (rem12974129801300913027)) /\ DHGroup.Elt(p12969129771300613024, g12970129781300713025, g12970129781300713025) /\ DHGroup.Elt(p12969129771300613024, g12970129781300713025, y12972129791300813026)} <: (p1301213028:Bytes.bytes * g1301313029:Bytes.bytes * y1301513030:Bytes.bytes * rem1301713031:Bytes.bytes){Bytes.B (payload) = bop_ArrayAppend (DHEParamBytes (p1301213028, g1301313029, y1301513030), Bytes.B (rem1301713031)) /\ DHGroup.Elt(p1301213028, g1301313029, g1301313029) /\ DHGroup.Elt(p1301213028, g1301313029, y1301513030)} *)
(* query Bytes.B (payload) = bop_ArrayAppend (DHEParamBytes (l13032, l13033, l13034), Bytes.B (l13035)) /\ DHGroup.Elt(l13032, l13033, l13033) /\ DHGroup.Elt(l13032, l13033, l13034) [HandshakeMessages.fs(513,26)] *)
goal g241_gl: (forall v_payload:top. (forall v_z12662:top. (((2 = 2) /\ (exists v_x1265912663:top. (((v_payload = v_payload) /\ (((v_Bytes__Length v_payload) = v_x1265912663) /\ (0 <= v_x1265912663))) /\ (((v_z12662 = v_Pervasives__True) /\ (v_x1265912663 >= 2)) \/ ((v_z12662 = v_Pervasives__False) /\ (v_x1265912663 < 2)))))) -> ((v_z12662 = v_Pervasives__True) -> (forall v_l12680:top. ((v_payload = v_payload) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l12680))) -> (forall v_res:top. ((exists v_b11268612735:top. (exists v_b21268712736:top. ((v_res = (v_Tuples__Tup2 v_b11268612735 v_b21268712736)) /\ ((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_b11268612735)) (v_Bytes__B v_b21268712736)))))) -> (((v_Error__Correct v_res) = v_l12680) -> (((v_Error__Correct v_res) = v_l12680) -> (forall v_p:top. (forall v_payload39:top. (((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_p)) (v_Bytes__B v_payload39))) -> (((v_Tuples__Tup2 v_p v_payload39) = v_res) -> (((v_Tuples__Tup2 v_p v_payload39) = v_res) -> (forall v_z12753:top. (((2 = 2) /\ (exists v_x1275012754:top. (((v_payload39 = v_payload39) /\ (((v_Bytes__Length v_payload39) = v_x1275012754) /\ (0 <= v_x1275012754))) /\ (((v_z12753 = v_Pervasives__True) /\ (v_x1275012754 >= 2)) \/ ((v_z12753 = v_Pervasives__False) /\ (v_x1275012754 < 2)))))) -> ((v_z12753 = v_Pervasives__True) -> (forall v_l12771:top. ((v_payload39 = v_payload39) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l12771))) -> (forall v_res40:top. ((exists v_b11277712826:top. (exists v_b21277812827:top. ((v_res40 = (v_Tuples__Tup2 v_b11277712826 v_b21277812827)) /\ ((v_Bytes__B v_payload39) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_b11277712826)) (v_Bytes__B v_b21277812827)))))) -> (((v_Error__Correct v_res40) = v_l12771) -> (((v_Error__Correct v_res40) = v_l12771) -> (forall v_g:top. (forall v_payload41:top. (((v_Bytes__B v_payload39) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_g)) (v_Bytes__B v_payload41))) -> (((v_Tuples__Tup2 v_g v_payload41) = v_res40) -> (((v_Tuples__Tup2 v_g v_payload41) = v_res40) -> (forall v_z12844:top. (((2 = 2) /\ (exists v_x1284112845:top. (((v_payload41 = v_payload41) /\ (((v_Bytes__Length v_payload41) = v_x1284112845) /\ (0 <= v_x1284112845))) /\ (((v_z12844 = v_Pervasives__True) /\ (v_x1284112845 >= 2)) \/ ((v_z12844 = v_Pervasives__False) /\ (v_x1284112845 < 2)))))) -> ((v_z12844 = v_Pervasives__True) -> (forall v_l12862:top. ((v_payload41 = v_payload41) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l12862))) -> (forall v_res42:top. ((exists v_b11286812917:top. (exists v_b21286912918:top. ((v_res42 = (v_Tuples__Tup2 v_b11286812917 v_b21286912918)) /\ ((v_Bytes__B v_payload41) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_b11286812917)) (v_Bytes__B v_b21286912918)))))) -> (((v_Error__Correct v_res42) = v_l12862) -> (((v_Error__Correct v_res42) = v_l12862) -> (forall v_y:top. (forall v_payload43:top. (((v_Bytes__B v_payload41) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_y)) (v_Bytes__B v_payload43))) -> (((v_Tuples__Tup2 v_y v_payload43) = v_res42) -> (((v_Tuples__Tup2 v_y v_payload43) = v_res42) -> (forall v_l12930:top. ((v_g = v_g) -> (((v_Pervasives__None ) = v_l12930) -> (((v_Pervasives__None ) = v_l12930) -> (forall v_l13032:top. (forall v_l13033:top. (forall v_l13034:top. (forall v_l13035:top. (((((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__DHEParamBytes v_l13032 v_l13033 v_l13034) (v_Bytes__B v_l13035))) /\ (v_DHGroup__Elt_p v_l13032 v_l13033 v_l13033)) /\ (v_DHGroup__Elt_p v_l13032 v_l13033 v_l13034)) -> ((((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__DHEParamBytes v_l13032 v_l13033 v_l13034) (v_Bytes__B v_l13035))) /\ (v_DHGroup__Elt_p v_l13032 v_l13033 v_l13033)) /\ (v_DHGroup__Elt_p v_l13032 v_l13033 v_l13034)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(* Querying for (p13082130901311913137:Bytes.bytes * g13083130911312013138:Bytes.bytes * y13085130921312113139:Bytes.bytes * rem13087130931312213140:Bytes.bytes){Bytes.B (payload) = bop_ArrayAppend (DHEParamBytes (p13082130901311913137, g13083130911312013138, y13085130921312113139), Bytes.B (rem13087130931312213140)) /\ DHGroup.Elt(p13082130901311913137, g13083130911312013138, g13083130911312013138) /\ DHGroup.Elt(p13082130901311913137, g13083130911312013138, y13085130921312113139)} <: (p1312513141:Bytes.bytes * g1312613142:Bytes.bytes * y1312813143:Bytes.bytes * rem1313013144:Bytes.bytes){Bytes.B (payload) = bop_ArrayAppend (DHEParamBytes (p1312513141, g1312613142, y1312813143), Bytes.B (rem1313013144)) /\ DHGroup.Elt(p1312513141, g1312613142, g1312613142) /\ DHGroup.Elt(p1312513141, g1312613142, y1312813143)} *)
(* query Bytes.B (payload) = bop_ArrayAppend (DHEParamBytes (l13145, l13146, l13147), Bytes.B (l13148)) /\ DHGroup.Elt(l13145, l13146, l13146) /\ DHGroup.Elt(l13145, l13146, l13147) [HandshakeMessages.fs(516,30)] *)
goal g242_gl: (forall v_payload:top. (forall v_z12662:top. (((2 = 2) /\ (exists v_x1265912663:top. (((v_payload = v_payload) /\ (((v_Bytes__Length v_payload) = v_x1265912663) /\ (0 <= v_x1265912663))) /\ (((v_z12662 = v_Pervasives__True) /\ (v_x1265912663 >= 2)) \/ ((v_z12662 = v_Pervasives__False) /\ (v_x1265912663 < 2)))))) -> ((v_z12662 = v_Pervasives__True) -> (forall v_l12680:top. ((v_payload = v_payload) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l12680))) -> (forall v_res:top. ((exists v_b11268612735:top. (exists v_b21268712736:top. ((v_res = (v_Tuples__Tup2 v_b11268612735 v_b21268712736)) /\ ((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_b11268612735)) (v_Bytes__B v_b21268712736)))))) -> (((v_Error__Correct v_res) = v_l12680) -> (((v_Error__Correct v_res) = v_l12680) -> (forall v_p:top. (forall v_payload39:top. (((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_p)) (v_Bytes__B v_payload39))) -> (((v_Tuples__Tup2 v_p v_payload39) = v_res) -> (((v_Tuples__Tup2 v_p v_payload39) = v_res) -> (forall v_z12753:top. (((2 = 2) /\ (exists v_x1275012754:top. (((v_payload39 = v_payload39) /\ (((v_Bytes__Length v_payload39) = v_x1275012754) /\ (0 <= v_x1275012754))) /\ (((v_z12753 = v_Pervasives__True) /\ (v_x1275012754 >= 2)) \/ ((v_z12753 = v_Pervasives__False) /\ (v_x1275012754 < 2)))))) -> ((v_z12753 = v_Pervasives__True) -> (forall v_l12771:top. ((v_payload39 = v_payload39) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l12771))) -> (forall v_res40:top. ((exists v_b11277712826:top. (exists v_b21277812827:top. ((v_res40 = (v_Tuples__Tup2 v_b11277712826 v_b21277812827)) /\ ((v_Bytes__B v_payload39) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_b11277712826)) (v_Bytes__B v_b21277812827)))))) -> (((v_Error__Correct v_res40) = v_l12771) -> (((v_Error__Correct v_res40) = v_l12771) -> (forall v_g:top. (forall v_payload41:top. (((v_Bytes__B v_payload39) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_g)) (v_Bytes__B v_payload41))) -> (((v_Tuples__Tup2 v_g v_payload41) = v_res40) -> (((v_Tuples__Tup2 v_g v_payload41) = v_res40) -> (forall v_z12844:top. (((2 = 2) /\ (exists v_x1284112845:top. (((v_payload41 = v_payload41) /\ (((v_Bytes__Length v_payload41) = v_x1284112845) /\ (0 <= v_x1284112845))) /\ (((v_z12844 = v_Pervasives__True) /\ (v_x1284112845 >= 2)) \/ ((v_z12844 = v_Pervasives__False) /\ (v_x1284112845 < 2)))))) -> ((v_z12844 = v_Pervasives__True) -> (forall v_l12862:top. ((v_payload41 = v_payload41) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l12862))) -> (forall v_res42:top. ((exists v_b11286812917:top. (exists v_b21286912918:top. ((v_res42 = (v_Tuples__Tup2 v_b11286812917 v_b21286912918)) /\ ((v_Bytes__B v_payload41) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_b11286812917)) (v_Bytes__B v_b21286912918)))))) -> (((v_Error__Correct v_res42) = v_l12862) -> (((v_Error__Correct v_res42) = v_l12862) -> (forall v_y:top. (forall v_payload43:top. (((v_Bytes__B v_payload41) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_y)) (v_Bytes__B v_payload43))) -> (((v_Tuples__Tup2 v_y v_payload43) = v_res42) -> (((v_Tuples__Tup2 v_y v_payload43) = v_res42) -> (forall v_l12930:top. ((v_g = v_g) -> ((not ((v_Pervasives__None ) = v_l12930)) -> (forall v_g44:top. (((v_g = v_g44) /\ (v_DHGroup__Elt_p v_p v_g v_g44)) -> (((v_Pervasives__Some v_g44) = v_l12930) -> (((v_Pervasives__Some v_g44) = v_l12930) -> (forall v_l13042:top. (((v_g44 = v_g44) /\ ((v_g = v_g44) /\ (v_DHGroup__Elt_p v_p v_g v_g44))) -> (((v_Pervasives__None ) = v_l13042) -> (((v_Pervasives__None ) = v_l13042) -> (forall v_l13145:top. (forall v_l13146:top. (forall v_l13147:top. (forall v_l13148:top. (((((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__DHEParamBytes v_l13145 v_l13146 v_l13147) (v_Bytes__B v_l13148))) /\ (v_DHGroup__Elt_p v_l13145 v_l13146 v_l13146)) /\ (v_DHGroup__Elt_p v_l13145 v_l13146 v_l13147)) -> ((((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__DHEParamBytes v_l13145 v_l13146 v_l13147) (v_Bytes__B v_l13148))) /\ (v_DHGroup__Elt_p v_l13145 v_l13146 v_l13146)) /\ (v_DHGroup__Elt_p v_l13145 v_l13146 v_l13147))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(* Querying for (l1316113167131731318613200:Bytes.bytes * l1316213168131741318713201:Bytes.bytes * l1316413169131751318813202:Bytes.bytes * l1316613170131761318913203:Bytes.bytes){g = l1316213168131741318713201 /\ DHGroup.Elt(p, g, l1316213168131741318713201) /\ y = l1316413169131751318813202 /\ DHGroup.Elt(p, g44, l1316413169131751318813202) /\ (l1316113167131731318613200, l1316213168131741318713201, l1316413169131751318813202, l1316613170131761318913203) = (p, g44, y45, payload43)} <: (p131791319213204:Bytes.bytes * g131801319313205:Bytes.bytes * y131821319513206:Bytes.bytes * rem131841319713207:Bytes.bytes){Bytes.B (payload) = bop_ArrayAppend (DHEParamBytes (p131791319213204, g131801319313205, y131821319513206), Bytes.B (rem131841319713207)) /\ DHGroup.Elt(p131791319213204, g131801319313205, g131801319313205) /\ DHGroup.Elt(p131791319213204, g131801319313205, y131821319513206)} *)
(* query Bytes.B (payload) = bop_ArrayAppend (DHEParamBytes (l13208, l13209, l13210), Bytes.B (l13211)) /\ DHGroup.Elt(l13208, l13209, l13209) /\ DHGroup.Elt(l13208, l13209, l13210) [HandshakeMessages.fs(517,33)] *)
goal g243_gl: (forall v_payload:top. (forall v_z12662:top. (((2 = 2) /\ (exists v_x1265912663:top. (((v_payload = v_payload) /\ (((v_Bytes__Length v_payload) = v_x1265912663) /\ (0 <= v_x1265912663))) /\ (((v_z12662 = v_Pervasives__True) /\ (v_x1265912663 >= 2)) \/ ((v_z12662 = v_Pervasives__False) /\ (v_x1265912663 < 2)))))) -> ((v_z12662 = v_Pervasives__True) -> (forall v_l12680:top. ((v_payload = v_payload) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l12680))) -> (forall v_res:top. ((exists v_b11268612735:top. (exists v_b21268712736:top. ((v_res = (v_Tuples__Tup2 v_b11268612735 v_b21268712736)) /\ ((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_b11268612735)) (v_Bytes__B v_b21268712736)))))) -> (((v_Error__Correct v_res) = v_l12680) -> (((v_Error__Correct v_res) = v_l12680) -> (forall v_p:top. (forall v_payload39:top. (((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_p)) (v_Bytes__B v_payload39))) -> (((v_Tuples__Tup2 v_p v_payload39) = v_res) -> (((v_Tuples__Tup2 v_p v_payload39) = v_res) -> (forall v_z12753:top. (((2 = 2) /\ (exists v_x1275012754:top. (((v_payload39 = v_payload39) /\ (((v_Bytes__Length v_payload39) = v_x1275012754) /\ (0 <= v_x1275012754))) /\ (((v_z12753 = v_Pervasives__True) /\ (v_x1275012754 >= 2)) \/ ((v_z12753 = v_Pervasives__False) /\ (v_x1275012754 < 2)))))) -> ((v_z12753 = v_Pervasives__True) -> (forall v_l12771:top. ((v_payload39 = v_payload39) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l12771))) -> (forall v_res40:top. ((exists v_b11277712826:top. (exists v_b21277812827:top. ((v_res40 = (v_Tuples__Tup2 v_b11277712826 v_b21277812827)) /\ ((v_Bytes__B v_payload39) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_b11277712826)) (v_Bytes__B v_b21277812827)))))) -> (((v_Error__Correct v_res40) = v_l12771) -> (((v_Error__Correct v_res40) = v_l12771) -> (forall v_g:top. (forall v_payload41:top. (((v_Bytes__B v_payload39) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_g)) (v_Bytes__B v_payload41))) -> (((v_Tuples__Tup2 v_g v_payload41) = v_res40) -> (((v_Tuples__Tup2 v_g v_payload41) = v_res40) -> (forall v_z12844:top. (((2 = 2) /\ (exists v_x1284112845:top. (((v_payload41 = v_payload41) /\ (((v_Bytes__Length v_payload41) = v_x1284112845) /\ (0 <= v_x1284112845))) /\ (((v_z12844 = v_Pervasives__True) /\ (v_x1284112845 >= 2)) \/ ((v_z12844 = v_Pervasives__False) /\ (v_x1284112845 < 2)))))) -> ((v_z12844 = v_Pervasives__True) -> (forall v_l12862:top. ((v_payload41 = v_payload41) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l12862))) -> (forall v_res42:top. ((exists v_b11286812917:top. (exists v_b21286912918:top. ((v_res42 = (v_Tuples__Tup2 v_b11286812917 v_b21286912918)) /\ ((v_Bytes__B v_payload41) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_b11286812917)) (v_Bytes__B v_b21286912918)))))) -> (((v_Error__Correct v_res42) = v_l12862) -> (((v_Error__Correct v_res42) = v_l12862) -> (forall v_y:top. (forall v_payload43:top. (((v_Bytes__B v_payload41) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_y)) (v_Bytes__B v_payload43))) -> (((v_Tuples__Tup2 v_y v_payload43) = v_res42) -> (((v_Tuples__Tup2 v_y v_payload43) = v_res42) -> (forall v_l12930:top. ((v_g = v_g) -> ((not ((v_Pervasives__None ) = v_l12930)) -> (forall v_g44:top. (((v_g = v_g44) /\ (v_DHGroup__Elt_p v_p v_g v_g44)) -> (((v_Pervasives__Some v_g44) = v_l12930) -> (((v_Pervasives__Some v_g44) = v_l12930) -> (forall v_l13042:top. (((v_g44 = v_g44) /\ ((v_g = v_g44) /\ (v_DHGroup__Elt_p v_p v_g v_g44))) -> ((not ((v_Pervasives__None ) = v_l13042)) -> (forall v_y45:top. (((v_y = v_y45) /\ (v_DHGroup__Elt_p v_p v_g44 v_y45)) -> (((v_Pervasives__Some v_y45) = v_l13042) -> (((v_Pervasives__Some v_y45) = v_l13042) -> (forall v_l13185:top. ((((v_Tuples__Tup4 v_p v_g44 v_y45 v_payload43) = (v_Tuples__Tup4 v_p v_g44 v_y45 v_payload43)) /\ (v_l13185 = (v_Error__Correct (v_Tuples__Tup4 v_p v_g44 v_y45 v_payload43)))) -> (forall v_l13208:top. (forall v_l13209:top. (forall v_l13210:top. (forall v_l13211:top. (((((v_g = v_l13209) /\ (v_DHGroup__Elt_p v_p v_g v_l13209)) /\ ((v_y = v_l13210) /\ (v_DHGroup__Elt_p v_p v_g44 v_l13210))) /\ ((v_Tuples__Tup4 v_l13208 v_l13209 v_l13210 v_l13211) = (v_Tuples__Tup4 v_p v_g44 v_y45 v_payload43))) -> ((((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__DHEParamBytes v_l13208 v_l13209 v_l13210) (v_Bytes__B v_l13211))) /\ (v_DHGroup__Elt_p v_l13208 v_l13209 v_l13209)) /\ (v_DHGroup__Elt_p v_l13208 v_l13209 v_l13210)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(* Querying for (p13216132241325313271:Bytes.bytes * g13217132251325413272:Bytes.bytes * y13219132261325513273:Bytes.bytes * rem13221132271325613274:Bytes.bytes){Bytes.B (payload) = bop_ArrayAppend (DHEParamBytes (p13216132241325313271, g13217132251325413272, y13219132261325513273), Bytes.B (rem13221132271325613274)) /\ DHGroup.Elt(p13216132241325313271, g13217132251325413272, g13217132251325413272) /\ DHGroup.Elt(p13216132241325313271, g13217132251325413272, y13219132261325513273)} <: (p1325913275:Bytes.bytes * g1326013276:Bytes.bytes * y1326213277:Bytes.bytes * rem1326413278:Bytes.bytes){Bytes.B (payload) = bop_ArrayAppend (DHEParamBytes (p1325913275, g1326013276, y1326213277), Bytes.B (rem1326413278)) /\ DHGroup.Elt(p1325913275, g1326013276, g1326013276) /\ DHGroup.Elt(p1325913275, g1326013276, y1326213277)} *)
(* query Bytes.B (payload) = bop_ArrayAppend (DHEParamBytes (l13279, l13280, l13281), Bytes.B (l13282)) /\ DHGroup.Elt(l13279, l13280, l13280) /\ DHGroup.Elt(l13279, l13280, l13281) [HandshakeMessages.fs(518,17)] *)
goal g244_gl: (forall v_payload:top. (forall v_z12662:top. (((2 = 2) /\ (exists v_x1265912663:top. (((v_payload = v_payload) /\ (((v_Bytes__Length v_payload) = v_x1265912663) /\ (0 <= v_x1265912663))) /\ (((v_z12662 = v_Pervasives__True) /\ (v_x1265912663 >= 2)) \/ ((v_z12662 = v_Pervasives__False) /\ (v_x1265912663 < 2)))))) -> ((v_z12662 = v_Pervasives__True) -> (forall v_l12680:top. ((v_payload = v_payload) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l12680))) -> (forall v_res:top. ((exists v_b11268612735:top. (exists v_b21268712736:top. ((v_res = (v_Tuples__Tup2 v_b11268612735 v_b21268712736)) /\ ((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_b11268612735)) (v_Bytes__B v_b21268712736)))))) -> (((v_Error__Correct v_res) = v_l12680) -> (((v_Error__Correct v_res) = v_l12680) -> (forall v_p:top. (forall v_payload39:top. (((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_p)) (v_Bytes__B v_payload39))) -> (((v_Tuples__Tup2 v_p v_payload39) = v_res) -> (((v_Tuples__Tup2 v_p v_payload39) = v_res) -> (forall v_z12753:top. (((2 = 2) /\ (exists v_x1275012754:top. (((v_payload39 = v_payload39) /\ (((v_Bytes__Length v_payload39) = v_x1275012754) /\ (0 <= v_x1275012754))) /\ (((v_z12753 = v_Pervasives__True) /\ (v_x1275012754 >= 2)) \/ ((v_z12753 = v_Pervasives__False) /\ (v_x1275012754 < 2)))))) -> ((v_z12753 = v_Pervasives__True) -> (forall v_l12771:top. ((v_payload39 = v_payload39) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l12771))) -> (forall v_res40:top. ((exists v_b11277712826:top. (exists v_b21277812827:top. ((v_res40 = (v_Tuples__Tup2 v_b11277712826 v_b21277812827)) /\ ((v_Bytes__B v_payload39) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_b11277712826)) (v_Bytes__B v_b21277812827)))))) -> (((v_Error__Correct v_res40) = v_l12771) -> (((v_Error__Correct v_res40) = v_l12771) -> (forall v_g:top. (forall v_payload41:top. (((v_Bytes__B v_payload39) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_g)) (v_Bytes__B v_payload41))) -> (((v_Tuples__Tup2 v_g v_payload41) = v_res40) -> (((v_Tuples__Tup2 v_g v_payload41) = v_res40) -> (forall v_z12844:top. (((2 = 2) /\ (exists v_x1284112845:top. (((v_payload41 = v_payload41) /\ (((v_Bytes__Length v_payload41) = v_x1284112845) /\ (0 <= v_x1284112845))) /\ (((v_z12844 = v_Pervasives__True) /\ (v_x1284112845 >= 2)) \/ ((v_z12844 = v_Pervasives__False) /\ (v_x1284112845 < 2)))))) -> ((v_z12844 = v_Pervasives__False) -> (forall v_l13279:top. (forall v_l13280:top. (forall v_l13281:top. (forall v_l13282:top. (((((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__DHEParamBytes v_l13279 v_l13280 v_l13281) (v_Bytes__B v_l13282))) /\ (v_DHGroup__Elt_p v_l13279 v_l13280 v_l13280)) /\ (v_DHGroup__Elt_p v_l13279 v_l13280 v_l13281)) -> ((((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__DHEParamBytes v_l13279 v_l13280 v_l13281) (v_Bytes__B v_l13282))) /\ (v_DHGroup__Elt_p v_l13279 v_l13280 v_l13280)) /\ (v_DHGroup__Elt_p v_l13279 v_l13280 v_l13281)))))))))))))))))))))))))))))))))))))))))
(* Querying for (p13287132951332413342:Bytes.bytes * g13288132961332513343:Bytes.bytes * y13290132971332613344:Bytes.bytes * rem13292132981332713345:Bytes.bytes){Bytes.B (payload) = bop_ArrayAppend (DHEParamBytes (p13287132951332413342, g13288132961332513343, y13290132971332613344), Bytes.B (rem13292132981332713345)) /\ DHGroup.Elt(p13287132951332413342, g13288132961332513343, g13288132961332513343) /\ DHGroup.Elt(p13287132951332413342, g13288132961332513343, y13290132971332613344)} <: (p1333013346:Bytes.bytes * g1333113347:Bytes.bytes * y1333313348:Bytes.bytes * rem1333513349:Bytes.bytes){Bytes.B (payload) = bop_ArrayAppend (DHEParamBytes (p1333013346, g1333113347, y1333313348), Bytes.B (rem1333513349)) /\ DHGroup.Elt(p1333013346, g1333113347, g1333113347) /\ DHGroup.Elt(p1333013346, g1333113347, y1333313348)} *)
(* query Bytes.B (payload) = bop_ArrayAppend (DHEParamBytes (l13350, l13351, l13352), Bytes.B (l13353)) /\ DHGroup.Elt(l13350, l13351, l13351) /\ DHGroup.Elt(l13350, l13351, l13352) [HandshakeMessages.fs(519,13)] *)
goal g245_gl: (forall v_payload:top. (forall v_z12662:top. (((2 = 2) /\ (exists v_x1265912663:top. (((v_payload = v_payload) /\ (((v_Bytes__Length v_payload) = v_x1265912663) /\ (0 <= v_x1265912663))) /\ (((v_z12662 = v_Pervasives__True) /\ (v_x1265912663 >= 2)) \/ ((v_z12662 = v_Pervasives__False) /\ (v_x1265912663 < 2)))))) -> ((v_z12662 = v_Pervasives__True) -> (forall v_l12680:top. ((v_payload = v_payload) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l12680))) -> (forall v_res:top. ((exists v_b11268612735:top. (exists v_b21268712736:top. ((v_res = (v_Tuples__Tup2 v_b11268612735 v_b21268712736)) /\ ((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_b11268612735)) (v_Bytes__B v_b21268712736)))))) -> (((v_Error__Correct v_res) = v_l12680) -> (((v_Error__Correct v_res) = v_l12680) -> (forall v_p:top. (forall v_payload39:top. (((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_TLSConstants__VLBytes 2 (v_Bytes__B v_p)) (v_Bytes__B v_payload39))) -> (((v_Tuples__Tup2 v_p v_payload39) = v_res) -> (((v_Tuples__Tup2 v_p v_payload39) = v_res) -> (forall v_z12753:top. (((2 = 2) /\ (exists v_x1275012754:top. (((v_payload39 = v_payload39) /\ (((v_Bytes__Length v_payload39) = v_x1275012754) /\ (0 <= v_x1275012754))) /\ (((v_z12753 = v_Pervasives__True) /\ (v_x1275012754 >= 2)) \/ ((v_z12753 = v_Pervasives__False) /\ (v_x1275012754 < 2)))))) -> ((v_z12753 = v_Pervasives__False) -> (forall v_l13350:top. (forall v_l13351:top. (forall v_l13352:top. (forall v_l13353:top. (((((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__DHEParamBytes v_l13350 v_l13351 v_l13352) (v_Bytes__B v_l13353))) /\ (v_DHGroup__Elt_p v_l13350 v_l13351 v_l13351)) /\ (v_DHGroup__Elt_p v_l13350 v_l13351 v_l13352)) -> ((((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__DHEParamBytes v_l13350 v_l13351 v_l13352) (v_Bytes__B v_l13353))) /\ (v_DHGroup__Elt_p v_l13350 v_l13351 v_l13351)) /\ (v_DHGroup__Elt_p v_l13350 v_l13351 v_l13352))))))))))))))))))))))))))
(* Querying for (p13358133661339513413:Bytes.bytes * g13359133671339613414:Bytes.bytes * y13361133681339713415:Bytes.bytes * rem13363133691339813416:Bytes.bytes){Bytes.B (payload) = bop_ArrayAppend (DHEParamBytes (p13358133661339513413, g13359133671339613414, y13361133681339713415), Bytes.B (rem13363133691339813416)) /\ DHGroup.Elt(p13358133661339513413, g13359133671339613414, g13359133671339613414) /\ DHGroup.Elt(p13358133661339513413, g13359133671339613414, y13361133681339713415)} <: (p1340113417:Bytes.bytes * g1340213418:Bytes.bytes * y1340413419:Bytes.bytes * rem1340613420:Bytes.bytes){Bytes.B (payload) = bop_ArrayAppend (DHEParamBytes (p1340113417, g1340213418, y1340413419), Bytes.B (rem1340613420)) /\ DHGroup.Elt(p1340113417, g1340213418, g1340213418) /\ DHGroup.Elt(p1340113417, g1340213418, y1340413419)} *)
(* query Bytes.B (payload) = bop_ArrayAppend (DHEParamBytes (l13421, l13422, l13423), Bytes.B (l13424)) /\ DHGroup.Elt(l13421, l13422, l13422) /\ DHGroup.Elt(l13421, l13422, l13423) [HandshakeMessages.fs(520,9)] *)
goal g246_gl: (forall v_payload:top. (forall v_z12662:top. (((2 = 2) /\ (exists v_x1265912663:top. (((v_payload = v_payload) /\ (((v_Bytes__Length v_payload) = v_x1265912663) /\ (0 <= v_x1265912663))) /\ (((v_z12662 = v_Pervasives__True) /\ (v_x1265912663 >= 2)) \/ ((v_z12662 = v_Pervasives__False) /\ (v_x1265912663 < 2)))))) -> ((v_z12662 = v_Pervasives__False) -> (forall v_l13421:top. (forall v_l13422:top. (forall v_l13423:top. (forall v_l13424:top. (((((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__DHEParamBytes v_l13421 v_l13422 v_l13423) (v_Bytes__B v_l13424))) /\ (v_DHGroup__Elt_p v_l13421 v_l13422 v_l13422)) /\ (v_DHGroup__Elt_p v_l13421 v_l13422 v_l13423)) -> ((((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__DHEParamBytes v_l13421 v_l13422 v_l13423) (v_Bytes__B v_l13424))) /\ (v_DHGroup__Elt_p v_l13421 v_l13422 v_l13422)) /\ (v_DHGroup__Elt_p v_l13421 v_l13422 v_l13423)))))))))))
(* Querying for (l1344913450:TLSConstants.PreProtocolVersion){l1344913450 = pv} <: (pv1343113451:TLSConstants.PreProtocolVersion){TLSConstants.IsProtocolVersion(pv1343113451)} *)
(* query TLSConstants.IsProtocolVersion(l13452) [HandshakeMessages.fs(523,15)] *)
goal g247_gl: (forall v_dheb:top. ((exists v_p:top. (exists v_g:top. (exists v_y:top. ((v_Bytes__B v_dheb) = (v_HandshakeMessages__DHEParamBytes v_p v_g v_y))))) -> (forall v_alg:top. ((exists v_l599:top. (exists v_l600:top. (v_alg = (v_Tuples__Tup2 v_l599 v_l600)))) -> (forall v_sign:top. (forall v_pv:top. ((v_TLSConstants__IsProtocolVersion_p v_pv) -> (forall v_l13452:top. ((v_l13452 = v_pv) -> (v_TLSConstants__IsProtocolVersion_p v_l13452))))))))))
(* Querying for (l1348013481:PreHandshakeType){l1348013481 = HT_server_key_exchange ()} <: (ht134741347813482:PreHandshakeType){IsHandshakeType(ht134741347813482)} *)
(* query IsHandshakeType(l13483) [HandshakeMessages.fs(525,4)] *)
goal g248_gl: (forall v_dheb:top. ((exists v_p:top. (exists v_g:top. (exists v_y:top. ((v_Bytes__B v_dheb) = (v_HandshakeMessages__DHEParamBytes v_p v_g v_y))))) -> (forall v_alg:top. ((exists v_l599:top. (exists v_l600:top. (v_alg = (v_Tuples__Tup2 v_l599 v_l600)))) -> (forall v_sign:top. (forall v_pv:top. ((v_TLSConstants__IsProtocolVersion_p v_pv) -> (forall v_sign46:top. (((v_pv = v_pv) /\ ((v_Bytes__B v_sign46) = (v_HandshakeMessages__DigitallySignedBytes v_alg v_sign v_pv))) -> (forall v_payload:top. (((v_sign46 = v_sign46) /\ ((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_dheb) (v_Bytes__B v_sign46)))) -> (forall v_l13483:top. ((v_l13483 = (v_HandshakeMessages__HT_server_key_exchange )) -> (v_HandshakeMessages__IsHandshakeType_p v_l13483))))))))))))))
(* Querying for (m1347713489:Bytes.bytes){payload = payload /\ Bytes.B (m1347713489) = MessageBytes (HT_server_key_exchange (), Bytes.B (payload))} <: (b13490:Bytes.bytes){(?p. (?g. (?y. Bytes.B (dheb) = DHEParamBytes (p, g, y) /\ Bytes.B (b13490) = ServerKeyExchangeMsg_DHE (pv, p, g, y, alg, sign))))} *)
(* query (?p. (?g. (?y. Bytes.B (dheb) = DHEParamBytes (p, g, y) /\ Bytes.B (l13491) = ServerKeyExchangeMsg_DHE (pv, p, g, y, alg, sign)))) [HandshakeMessages.fs(525,4)] *)
goal g249_gl: (forall v_dheb:top. ((exists v_p:top. (exists v_g:top. (exists v_y:top. ((v_Bytes__B v_dheb) = (v_HandshakeMessages__DHEParamBytes v_p v_g v_y))))) -> (forall v_alg:top. ((exists v_l599:top. (exists v_l600:top. (v_alg = (v_Tuples__Tup2 v_l599 v_l600)))) -> (forall v_sign:top. (forall v_pv:top. ((v_TLSConstants__IsProtocolVersion_p v_pv) -> (forall v_sign46:top. (((v_pv = v_pv) /\ ((v_Bytes__B v_sign46) = (v_HandshakeMessages__DigitallySignedBytes v_alg v_sign v_pv))) -> (forall v_payload:top. (((v_sign46 = v_sign46) /\ ((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_Bytes__B v_dheb) (v_Bytes__B v_sign46)))) -> (forall v_l13491:top. (((v_payload = v_payload) /\ ((v_Bytes__B v_l13491) = (v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_server_key_exchange ) (v_Bytes__B v_payload)))) -> (exists v_p:top. (exists v_g:top. (exists v_y:top. (((v_Bytes__B v_dheb) = (v_HandshakeMessages__DHEParamBytes v_p v_g v_y)) /\ ((v_Bytes__B v_l13491) = (v_HandshakeMessages__ServerKeyExchangeMsg_DHE v_pv v_p v_g v_y v_alg v_sign)))))))))))))))))))
(* Querying for (l1359213593:TLSConstants.PreProtocolVersion){l1359213593 = pv} <: (pv135861359013594:TLSConstants.PreProtocolVersion){TLSConstants.IsProtocolVersion(pv135861359013594)} *)
(* query TLSConstants.IsProtocolVersion(l13595) [HandshakeMessages.fs(532,26)] *)
goal g250_gl: (forall v_pv:top. ((v_TLSConstants__IsProtocolVersion_p v_pv) -> (forall v_cs:top. (forall v_payload:top. (forall v_l13493:top. ((v_payload = v_payload) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l13493))) -> (forall v_res:top. ((exists v_p1349713560:top. (exists v_g1349813561:top. (exists v_y1349913563:top. (exists v_rem1350013565:top. ((v_res = (v_Tuples__Tup4 v_p1349713560 v_g1349813561 v_y1349913563 v_rem1350013565)) /\ ((((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__DHEParamBytes v_p1349713560 v_g1349813561 v_y1349913563) (v_Bytes__B v_rem1350013565))) /\ (v_DHGroup__Elt_p v_p1349713560 v_g1349813561 v_g1349813561)) /\ (v_DHGroup__Elt_p v_p1349713560 v_g1349813561 v_y1349913563))))))) -> (((v_Error__Correct v_res) = v_l13493) -> (((v_Error__Correct v_res) = v_l13493) -> (forall v_p:top. (forall v_g:top. (forall v_y:top. (forall v_payload47:top. (((((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__DHEParamBytes v_p v_g v_y) (v_Bytes__B v_payload47))) /\ (v_DHGroup__Elt_p v_p v_g v_g)) /\ (v_DHGroup__Elt_p v_p v_g v_y)) -> (((v_Tuples__Tup4 v_p v_g v_y v_payload47) = v_res) -> (((v_Tuples__Tup4 v_p v_g v_y v_payload47) = v_res) -> (forall v_l13595:top. ((v_l13595 = v_pv) -> (v_TLSConstants__IsProtocolVersion_p v_l13595)))))))))))))))))))))
(* Querying for (l1364313644:TLSConstants.PreProtocolVersion){l1364313644 = pv} <: (pv1361313645:TLSConstants.PreProtocolVersion){TLSConstants.IsProtocolVersion(pv1361313645)} *)
(* query TLSConstants.IsProtocolVersion(l13646) [HandshakeMessages.fs(533,14)] *)
goal g251_gl: (forall v_pv:top. ((v_TLSConstants__IsProtocolVersion_p v_pv) -> (forall v_cs:top. (forall v_payload:top. (forall v_l13493:top. ((v_payload = v_payload) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l13493))) -> (forall v_res:top. ((exists v_p1349713560:top. (exists v_g1349813561:top. (exists v_y1349913563:top. (exists v_rem1350013565:top. ((v_res = (v_Tuples__Tup4 v_p1349713560 v_g1349813561 v_y1349913563 v_rem1350013565)) /\ ((((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__DHEParamBytes v_p1349713560 v_g1349813561 v_y1349913563) (v_Bytes__B v_rem1350013565))) /\ (v_DHGroup__Elt_p v_p1349713560 v_g1349813561 v_g1349813561)) /\ (v_DHGroup__Elt_p v_p1349713560 v_g1349813561 v_y1349913563))))))) -> (((v_Error__Correct v_res) = v_l13493) -> (((v_Error__Correct v_res) = v_l13493) -> (forall v_p:top. (forall v_g:top. (forall v_y:top. (forall v_payload47:top. (((((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__DHEParamBytes v_p v_g v_y) (v_Bytes__B v_payload47))) /\ (v_DHGroup__Elt_p v_p v_g v_g)) /\ (v_DHGroup__Elt_p v_p v_g v_y)) -> (((v_Tuples__Tup4 v_p v_g v_y v_payload47) = v_res) -> (((v_Tuples__Tup4 v_p v_g v_y v_payload47) = v_res) -> (forall v_allowedAlgs:top. (((v_cs = v_cs) /\ (v_allowedAlgs = (v_TLSExtensions__DefaultSigHashAlgs v_pv v_cs))) -> (forall v_l13646:top. ((v_l13646 = v_pv) -> (v_TLSConstants__IsProtocolVersion_p v_l13646)))))))))))))))))))))))
(* Querying for (l1372213729137381375713777:Bytes.bytes * l1372313730137391375813778:Bytes.bytes * l1372413731137401375913779:Bytes.bytes * l1372513732137411376013780:(TLSConstants.sigAlg * TLSConstants.hashAlg) * l1372813735137441376313783:Bytes.bytes){(l1372213729137381375713777, l1372313730137391375813778, l1372413731137401375913779, l1372513732137411376013780, l1372813735137441376313783) = (p, g, y, alg, signature)} <: (p137471376613784:Bytes.bytes * g137481376713785:Bytes.bytes * y137501376913786:Bytes.bytes * a137521377113787:(TLSConstants.sigAlg * TLSConstants.hashAlg) * sign137551377413790:Bytes.bytes){MessageBytes (HT_server_key_exchange (), Bytes.B (payload)) = ServerKeyExchangeMsg_DHE (pv, p137471376613784, g137481376713785, y137501376913786, a137521377113787, sign137551377413790) /\ DHGroup.Elt(p137471376613784, g137481376713785, g137481376713785) /\ DHGroup.Elt(p137471376613784, g137481376713785, y137501376913786)} *)
(* query MessageBytes (HT_server_key_exchange (), Bytes.B (payload)) = ServerKeyExchangeMsg_DHE (pv, l13791, l13792, l13793, l13794, l13795) /\ DHGroup.Elt(l13791, l13792, l13792) /\ DHGroup.Elt(l13791, l13792, l13793) [HandshakeMessages.fs(537,12)] *)
goal g252_gl: (forall v_pv:top. ((v_TLSConstants__IsProtocolVersion_p v_pv) -> (forall v_cs:top. (forall v_payload:top. (forall v_l13493:top. ((v_payload = v_payload) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l13493))) -> (forall v_res:top. ((exists v_p1349713560:top. (exists v_g1349813561:top. (exists v_y1349913563:top. (exists v_rem1350013565:top. ((v_res = (v_Tuples__Tup4 v_p1349713560 v_g1349813561 v_y1349913563 v_rem1350013565)) /\ ((((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__DHEParamBytes v_p1349713560 v_g1349813561 v_y1349913563) (v_Bytes__B v_rem1350013565))) /\ (v_DHGroup__Elt_p v_p1349713560 v_g1349813561 v_g1349813561)) /\ (v_DHGroup__Elt_p v_p1349713560 v_g1349813561 v_y1349913563))))))) -> (((v_Error__Correct v_res) = v_l13493) -> (((v_Error__Correct v_res) = v_l13493) -> (forall v_p:top. (forall v_g:top. (forall v_y:top. (forall v_payload47:top. (((((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__DHEParamBytes v_p v_g v_y) (v_Bytes__B v_payload47))) /\ (v_DHGroup__Elt_p v_p v_g v_g)) /\ (v_DHGroup__Elt_p v_p v_g v_y)) -> (((v_Tuples__Tup4 v_p v_g v_y v_payload47) = v_res) -> (((v_Tuples__Tup4 v_p v_g v_y v_payload47) = v_res) -> (forall v_allowedAlgs:top. (((v_cs = v_cs) /\ (v_allowedAlgs = (v_TLSExtensions__DefaultSigHashAlgs v_pv v_cs))) -> (forall v_l13607:top. ((v_pv = v_pv) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l13607))) -> (forall v_res48:top. ((exists v_a1361513693:top. (exists v_p1361613696:top. ((v_res48 = (v_Tuples__Tup2 v_a1361513693 v_p1361613696)) /\ ((v_Bytes__B v_payload47) = (v_HandshakeMessages__DigitallySignedBytes v_a1361513693 v_p1361613696 v_pv))))) -> (((v_Error__Correct v_res48) = v_l13607) -> (((v_Error__Correct v_res48) = v_l13607) -> (forall v_alg:top. ((exists v_l5991369413711:top. (exists v_l6001369513712:top. (v_alg = (v_Tuples__Tup2 v_l5991369413711 v_l6001369513712)))) -> (forall v_signature:top. (((v_Bytes__B v_payload47) = (v_HandshakeMessages__DigitallySignedBytes v_alg v_signature v_pv)) -> (((v_Tuples__Tup2 v_alg v_signature) = v_res48) -> (((v_Tuples__Tup2 v_alg v_signature) = v_res48) -> (forall v_l13756:top. ((((v_Tuples__Tup5 v_p v_g v_y v_alg v_signature) = (v_Tuples__Tup5 v_p v_g v_y v_alg v_signature)) /\ (v_l13756 = (v_Error__Correct (v_Tuples__Tup5 v_p v_g v_y v_alg v_signature)))) -> (forall v_l13791:top. (forall v_l13792:top. (forall v_l13793:top. (forall v_l13794:top. ((exists v_l59913694137111372613733137421376113781:top. (exists v_l60013695137121372713734137431376213782:top. (v_l13794 = (v_Tuples__Tup2 v_l59913694137111372613733137421376113781 v_l60013695137121372713734137431376213782)))) -> (forall v_l13795:top. (((v_Tuples__Tup5 v_l13791 v_l13792 v_l13793 v_l13794 v_l13795) = (v_Tuples__Tup5 v_p v_g v_y v_alg v_signature)) -> ((((v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_server_key_exchange ) (v_Bytes__B v_payload)) = (v_HandshakeMessages__ServerKeyExchangeMsg_DHE v_pv v_l13791 v_l13792 v_l13793 v_l13794 v_l13795)) /\ (v_DHGroup__Elt_p v_l13791 v_l13792 v_l13792)) /\ (v_DHGroup__Elt_p v_l13791 v_l13792 v_l13793))))))))))))))))))))))))))))))))))))))))))))
(* Querying for (l1383313834:PreHandshakeType){l1383313834 = HT_server_key_exchange ()} <: (ht138271383113835:PreHandshakeType){IsHandshakeType(ht138271383113835)} *)
(* query IsHandshakeType(l13836) [HandshakeMessages.fs(541,4)] *)
goal g253_gl: (forall v_p:top. (forall v_g:top. (forall v_y:top. (forall v_dehb:top. (((v_y = v_y) /\ ((v_Bytes__B v_dehb) = (v_HandshakeMessages__DHEParamBytes v_p v_g v_y))) -> (forall v_l13836:top. ((v_l13836 = (v_HandshakeMessages__HT_server_key_exchange )) -> (v_HandshakeMessages__IsHandshakeType_p v_l13836))))))))
(* Querying for (l1396413967139721398313995:Bytes.bytes * l1396513968139731398413996:Bytes.bytes * l1396613969139741398513997:Bytes.bytes){(l1396413967139721398313995, l1396513968139731398413996, l1396613969139741398513997) = (p, g, y)} <: (p139771398813998:Bytes.bytes * g139781398913999:Bytes.bytes * y139801399114000:Bytes.bytes){DHGroup.Elt(p139771398813998, g139781398913999, g139781398913999) /\ DHGroup.Elt(p139771398813998, g139781398913999, y139801399114000)} *)
(* query DHGroup.Elt(l14001, l14002, l14002) /\ DHGroup.Elt(l14001, l14002, l14003) [HandshakeMessages.fs(549,12)] *)
goal g254_gl: (forall v_payload:top. (forall v_l13845:top. ((v_payload = v_payload) -> ((forall v_z_2:top. (not ((v_Error__Error v_z_2) = v_l13845))) -> (forall v_z:top. ((exists v_p1384913912:top. (exists v_g1385013913:top. (exists v_y1385113915:top. (exists v_rem1385213917:top. ((v_z = (v_Tuples__Tup4 v_p1384913912 v_g1385013913 v_y1385113915 v_rem1385213917)) /\ ((((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__DHEParamBytes v_p1384913912 v_g1385013913 v_y1385113915) (v_Bytes__B v_rem1385213917))) /\ (v_DHGroup__Elt_p v_p1384913912 v_g1385013913 v_g1385013913)) /\ (v_DHGroup__Elt_p v_p1384913912 v_g1385013913 v_y1385113915))))))) -> (((v_Error__Correct v_z) = v_l13845) -> (((v_Error__Correct v_z) = v_l13845) -> (forall v_p:top. (forall v_g:top. (forall v_y:top. (forall v_rem:top. (((((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__DHEParamBytes v_p v_g v_y) (v_Bytes__B v_rem))) /\ (v_DHGroup__Elt_p v_p v_g v_g)) /\ (v_DHGroup__Elt_p v_p v_g v_y)) -> (((v_Tuples__Tup4 v_p v_g v_y v_rem) = v_z) -> (((v_Tuples__Tup4 v_p v_g v_y v_rem) = v_z) -> (forall v_z13942:top. (((0 = 0) /\ (exists v_x1393913943:top. (((v_rem = v_rem) /\ (((v_Bytes__Length v_rem) = v_x1393913943) /\ (0 <= v_x1393913943))) /\ (((v_z13942 = v_Pervasives__True) /\ (v_x1393913943 = 0)) \/ ((v_z13942 = v_Pervasives__False) /\ (not (v_x1393913943 = 0))))))) -> ((v_z13942 = v_Pervasives__True) -> (forall v_l13982:top. ((((v_Tuples__Tup3 v_p v_g v_y) = (v_Tuples__Tup3 v_p v_g v_y)) /\ (v_l13982 = (v_Error__Correct (v_Tuples__Tup3 v_p v_g v_y)))) -> (forall v_l14001:top. (forall v_l14002:top. (forall v_l14003:top. (((v_Tuples__Tup3 v_l14001 v_l14002 v_l14003) = (v_Tuples__Tup3 v_p v_g v_y)) -> ((v_DHGroup__Elt_p v_l14001 v_l14002 v_l14002) /\ (v_DHGroup__Elt_p v_l14001 v_l14002 v_l14003))))))))))))))))))))))))))
(* Querying for (p14008140151404314059:Bytes.bytes * g14009140161404414060:Bytes.bytes * y14011140171404514061:Bytes.bytes){DHGroup.Elt(p14008140151404314059, g14009140161404414060, g14009140161404414060) /\ DHGroup.Elt(p14008140151404314059, g14009140161404414060, y14011140171404514061)} <: (p1404814062:Bytes.bytes * g1404914063:Bytes.bytes * y1405114064:Bytes.bytes){DHGroup.Elt(p1404814062, g1404914063, g1404914063) /\ DHGroup.Elt(p1404814062, g1404914063, y1405114064)} *)
(* query DHGroup.Elt(l14065, l14066, l14066) /\ DHGroup.Elt(l14065, l14066, l14067) [HandshakeMessages.fs(551,12)] *)
goal g255_gl: (forall v_payload:top. (forall v_l13845:top. ((v_payload = v_payload) -> ((forall v_z_2:top. (not ((v_Error__Error v_z_2) = v_l13845))) -> (forall v_z:top. ((exists v_p1384913912:top. (exists v_g1385013913:top. (exists v_y1385113915:top. (exists v_rem1385213917:top. ((v_z = (v_Tuples__Tup4 v_p1384913912 v_g1385013913 v_y1385113915 v_rem1385213917)) /\ ((((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__DHEParamBytes v_p1384913912 v_g1385013913 v_y1385113915) (v_Bytes__B v_rem1385213917))) /\ (v_DHGroup__Elt_p v_p1384913912 v_g1385013913 v_g1385013913)) /\ (v_DHGroup__Elt_p v_p1384913912 v_g1385013913 v_y1385113915))))))) -> (((v_Error__Correct v_z) = v_l13845) -> (((v_Error__Correct v_z) = v_l13845) -> (forall v_p:top. (forall v_g:top. (forall v_y:top. (forall v_rem:top. (((((v_Bytes__B v_payload) = (v_Pervasives__bop_ArrayAppend (v_HandshakeMessages__DHEParamBytes v_p v_g v_y) (v_Bytes__B v_rem))) /\ (v_DHGroup__Elt_p v_p v_g v_g)) /\ (v_DHGroup__Elt_p v_p v_g v_y)) -> (((v_Tuples__Tup4 v_p v_g v_y v_rem) = v_z) -> (((v_Tuples__Tup4 v_p v_g v_y v_rem) = v_z) -> (forall v_z13942:top. (((0 = 0) /\ (exists v_x1393913943:top. (((v_rem = v_rem) /\ (((v_Bytes__Length v_rem) = v_x1393913943) /\ (0 <= v_x1393913943))) /\ (((v_z13942 = v_Pervasives__True) /\ (v_x1393913943 = 0)) \/ ((v_z13942 = v_Pervasives__False) /\ (not (v_x1393913943 = 0))))))) -> ((v_z13942 = v_Pervasives__False) -> (forall v_l14065:top. (forall v_l14066:top. (forall v_l14067:top. (((v_DHGroup__Elt_p v_l14065 v_l14066 v_l14066) /\ (v_DHGroup__Elt_p v_l14065 v_l14066 v_l14067)) -> ((v_DHGroup__Elt_p v_l14065 v_l14066 v_l14066) /\ (v_DHGroup__Elt_p v_l14065 v_l14066 v_l14067))))))))))))))))))))))))
(* Querying for (;alg) Sig.skey <: (;alg) Sig.skey *)
(* query alg = alg [HandshakeMessages.fs(560,18)] *)
goal g256_gl: (forall v_si:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_si = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> (forall v_ms:top. (forall v_alg:top. ((exists v_l599:top. (exists v_l600:top. (v_alg = (v_Tuples__Tup2 v_l599 v_l600)))) -> (forall v_skey:top. (forall v_data:top. ((v_Sig__Msg_p v_alg (v_Sig__PK v_skey) v_data) -> ((exists v_l14096:top. (exists v_l14094:top. (exists v_l14092:top. (exists v_l14090:top. (exists v_l14088:top. (exists v_l14086:top. (exists v_l14084:top. (exists v_l14082:top. (exists v_l14080:top. (exists v_l14078:top. (exists v_l14076:top. (exists v_l14074:top. (exists v_l14072:top. (exists v_l14070:top. ((v_si = (v_Tuples__Tup14 v_l14070 v_l14072 v_l14074 v_l14076 v_l14078 v_l14080 v_l14082 v_l14084 v_l14086 v_l14088 v_l14090 v_l14092 v_l14094 v_l14096)) /\ ((v_TLSConstants__TLS_1p2 ) = v_l14088)))))))))))))))) -> (((v_TLSConstants__TLS_1p2 ) = (v_Tuples__Tup14__10 v_si)) -> (((v_TLSConstants__TLS_1p2 ) = (v_Tuples__Tup14__10 v_si)) -> (forall v_l14190:top. ((v_l14190 = v_skey) -> (v_alg = v_alg))))))))))))))
(* Querying for (l1419214193:Bytes.bytes){l1419214193 = data} <: (t1417414194:Bytes.bytes){Sig.Msg(alg, Sig.PK (skey), t1417414194)} *)
(* query Sig.Msg(alg, Sig.PK (skey), l14195) [HandshakeMessages.fs(560,18)] *)
goal g257_gl: (forall v_si:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_si = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> (forall v_ms:top. (forall v_alg:top. ((exists v_l599:top. (exists v_l600:top. (v_alg = (v_Tuples__Tup2 v_l599 v_l600)))) -> (forall v_skey:top. (forall v_data:top. ((v_Sig__Msg_p v_alg (v_Sig__PK v_skey) v_data) -> ((exists v_l14096:top. (exists v_l14094:top. (exists v_l14092:top. (exists v_l14090:top. (exists v_l14088:top. (exists v_l14086:top. (exists v_l14084:top. (exists v_l14082:top. (exists v_l14080:top. (exists v_l14078:top. (exists v_l14076:top. (exists v_l14074:top. (exists v_l14072:top. (exists v_l14070:top. ((v_si = (v_Tuples__Tup14 v_l14070 v_l14072 v_l14074 v_l14076 v_l14078 v_l14080 v_l14082 v_l14084 v_l14086 v_l14088 v_l14090 v_l14092 v_l14094 v_l14096)) /\ ((v_TLSConstants__TLS_1p2 ) = v_l14088)))))))))))))))) -> (((v_TLSConstants__TLS_1p2 ) = (v_Tuples__Tup14__10 v_si)) -> (((v_TLSConstants__TLS_1p2 ) = (v_Tuples__Tup14__10 v_si)) -> (forall v_l14195:top. ((v_l14195 = v_data) -> (v_Sig__Msg_p v_alg (v_Sig__PK v_skey) v_l14195))))))))))))))
(* Querying for (l1422214322:TLSConstants.PreProtocolVersion){l1422214322 = Tuples.Tup14.10 si /\ (?l14249. (?l14247. (?l14245. (?l14243. (?l14241. (?l14239. (?l14237. (?l14235. (?l14233. (?l14231. (?l14229. (?l14227. (?l14225. (?l14223. si = (l14223, l14225, l14227, l14229, l14231, l14233, l14235, l14237, l14239, l14241, l14243, l14245, l14247, l14249) /\ l1422214322 = l14241))))))))))))))} <: (pv1420414323:TLSConstants.PreProtocolVersion){TLSConstants.IsProtocolVersion(pv1420414323)} *)
(* query TLSConstants.IsProtocolVersion(l14324) [HandshakeMessages.fs(561,22)] *)
goal g258_gl: (forall v_si:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_si = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> (forall v_ms:top. (forall v_alg:top. ((exists v_l599:top. (exists v_l600:top. (v_alg = (v_Tuples__Tup2 v_l599 v_l600)))) -> (forall v_skey:top. (forall v_data:top. ((v_Sig__Msg_p v_alg (v_Sig__PK v_skey) v_data) -> ((exists v_l14096:top. (exists v_l14094:top. (exists v_l14092:top. (exists v_l14090:top. (exists v_l14088:top. (exists v_l14086:top. (exists v_l14084:top. (exists v_l14082:top. (exists v_l14080:top. (exists v_l14078:top. (exists v_l14076:top. (exists v_l14074:top. (exists v_l14072:top. (exists v_l14070:top. ((v_si = (v_Tuples__Tup14 v_l14070 v_l14072 v_l14074 v_l14076 v_l14078 v_l14080 v_l14082 v_l14084 v_l14086 v_l14088 v_l14090 v_l14092 v_l14094 v_l14096)) /\ ((v_TLSConstants__TLS_1p2 ) = v_l14088)))))))))))))))) -> (((v_TLSConstants__TLS_1p2 ) = (v_Tuples__Tup14__10 v_si)) -> (((v_TLSConstants__TLS_1p2 ) = (v_Tuples__Tup14__10 v_si)) -> (forall v_tag:top. ((v_data = v_data) -> (forall v_l14324:top. (((v_l14324 = (v_Tuples__Tup14__10 v_si)) /\ (exists v_l14249:top. (exists v_l14247:top. (exists v_l14245:top. (exists v_l14243:top. (exists v_l14241:top. (exists v_l14239:top. (exists v_l14237:top. (exists v_l14235:top. (exists v_l14233:top. (exists v_l14231:top. (exists v_l14229:top. (exists v_l14227:top. (exists v_l14225:top. (exists v_l14223:top. ((v_si = (v_Tuples__Tup14 v_l14223 v_l14225 v_l14227 v_l14229 v_l14231 v_l14233 v_l14235 v_l14237 v_l14239 v_l14241 v_l14243 v_l14245 v_l14247 v_l14249)) /\ (v_l14324 = v_l14241))))))))))))))))) -> (v_TLSConstants__IsProtocolVersion_p v_l14324))))))))))))))))
(* Querying for (l1433514336:PreHandshakeType){l1433514336 = HT_certificate_verify ()} <: (ht143291433314337:PreHandshakeType){IsHandshakeType(ht143291433314337)} *)
(* query IsHandshakeType(l14338) [HandshakeMessages.fs(562,18)] *)
goal g259_gl: (forall v_si:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_si = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> (forall v_ms:top. (forall v_alg:top. ((exists v_l599:top. (exists v_l600:top. (v_alg = (v_Tuples__Tup2 v_l599 v_l600)))) -> (forall v_skey:top. (forall v_data:top. ((v_Sig__Msg_p v_alg (v_Sig__PK v_skey) v_data) -> ((exists v_l14096:top. (exists v_l14094:top. (exists v_l14092:top. (exists v_l14090:top. (exists v_l14088:top. (exists v_l14086:top. (exists v_l14084:top. (exists v_l14082:top. (exists v_l14080:top. (exists v_l14078:top. (exists v_l14076:top. (exists v_l14074:top. (exists v_l14072:top. (exists v_l14070:top. ((v_si = (v_Tuples__Tup14 v_l14070 v_l14072 v_l14074 v_l14076 v_l14078 v_l14080 v_l14082 v_l14084 v_l14086 v_l14088 v_l14090 v_l14092 v_l14094 v_l14096)) /\ ((v_TLSConstants__TLS_1p2 ) = v_l14088)))))))))))))))) -> (((v_TLSConstants__TLS_1p2 ) = (v_Tuples__Tup14__10 v_si)) -> (((v_TLSConstants__TLS_1p2 ) = (v_Tuples__Tup14__10 v_si)) -> (forall v_tag:top. ((v_data = v_data) -> (forall v_payload:top. (((((v_Tuples__Tup14__10 v_si) = (v_Tuples__Tup14__10 v_si)) /\ (exists v_l14249:top. (exists v_l14247:top. (exists v_l14245:top. (exists v_l14243:top. (exists v_l14241:top. (exists v_l14239:top. (exists v_l14237:top. (exists v_l14235:top. (exists v_l14233:top. (exists v_l14231:top. (exists v_l14229:top. (exists v_l14227:top. (exists v_l14225:top. (exists v_l14223:top. ((v_si = (v_Tuples__Tup14 v_l14223 v_l14225 v_l14227 v_l14229 v_l14231 v_l14233 v_l14235 v_l14237 v_l14239 v_l14241 v_l14243 v_l14245 v_l14247 v_l14249)) /\ ((v_Tuples__Tup14__10 v_si) = v_l14241))))))))))))))))) /\ ((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_alg v_tag (v_Tuples__Tup14__10 v_si)))) -> (forall v_l14338:top. ((v_l14338 = (v_HandshakeMessages__HT_certificate_verify )) -> (v_HandshakeMessages__IsHandshakeType_p v_l14338))))))))))))))))))
(* Querying for (msg) (mex, tag) : (b:Bytes.bytes * sign:Bytes.bytes){Bytes.B (b) = CertificateVerifyMsg (Tuples.Tup14.10 si, alg, sign)} *)
(* query Bytes.B (mex) = CertificateVerifyMsg (Tuples.Tup14.10 si, alg, tag) [HandshakeMessages.fs(563,9)] *)
goal g260_gl: (forall v_si:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_si = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> (forall v_ms:top. (forall v_alg:top. ((exists v_l599:top. (exists v_l600:top. (v_alg = (v_Tuples__Tup2 v_l599 v_l600)))) -> (forall v_skey:top. (forall v_data:top. ((v_Sig__Msg_p v_alg (v_Sig__PK v_skey) v_data) -> ((exists v_l14096:top. (exists v_l14094:top. (exists v_l14092:top. (exists v_l14090:top. (exists v_l14088:top. (exists v_l14086:top. (exists v_l14084:top. (exists v_l14082:top. (exists v_l14080:top. (exists v_l14078:top. (exists v_l14076:top. (exists v_l14074:top. (exists v_l14072:top. (exists v_l14070:top. ((v_si = (v_Tuples__Tup14 v_l14070 v_l14072 v_l14074 v_l14076 v_l14078 v_l14080 v_l14082 v_l14084 v_l14086 v_l14088 v_l14090 v_l14092 v_l14094 v_l14096)) /\ ((v_TLSConstants__TLS_1p2 ) = v_l14088)))))))))))))))) -> (((v_TLSConstants__TLS_1p2 ) = (v_Tuples__Tup14__10 v_si)) -> (((v_TLSConstants__TLS_1p2 ) = (v_Tuples__Tup14__10 v_si)) -> (forall v_tag:top. ((v_data = v_data) -> (forall v_payload:top. (((((v_Tuples__Tup14__10 v_si) = (v_Tuples__Tup14__10 v_si)) /\ (exists v_l14249:top. (exists v_l14247:top. (exists v_l14245:top. (exists v_l14243:top. (exists v_l14241:top. (exists v_l14239:top. (exists v_l14237:top. (exists v_l14235:top. (exists v_l14233:top. (exists v_l14231:top. (exists v_l14229:top. (exists v_l14227:top. (exists v_l14225:top. (exists v_l14223:top. ((v_si = (v_Tuples__Tup14 v_l14223 v_l14225 v_l14227 v_l14229 v_l14231 v_l14233 v_l14235 v_l14237 v_l14239 v_l14241 v_l14243 v_l14245 v_l14247 v_l14249)) /\ ((v_Tuples__Tup14__10 v_si) = v_l14241))))))))))))))))) /\ ((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_alg v_tag (v_Tuples__Tup14__10 v_si)))) -> (forall v_mex:top. (((v_payload = v_payload) /\ ((v_Bytes__B v_mex) = (v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_certificate_verify ) (v_Bytes__B v_payload)))) -> ((v_Bytes__B v_mex) = (v_HandshakeMessages__CertificateVerifyMsg (v_Tuples__Tup14__10 v_si) v_alg v_tag)))))))))))))))))))
(* Querying for (;alg) Sig.skey <: (;alg) Sig.skey *)
(* query alg = alg [HandshakeMessages.fs(560,18)] *)
goal g261_gl: (forall v_si:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_si = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> (forall v_ms:top. (forall v_alg:top. ((exists v_l599:top. (exists v_l600:top. (v_alg = (v_Tuples__Tup2 v_l599 v_l600)))) -> (forall v_skey:top. (forall v_data:top. ((v_Sig__Msg_p v_alg (v_Sig__PK v_skey) v_data) -> ((not ((v_TLSConstants__TLS_1p2 ) = (v_Tuples__Tup14__10 v_si))) -> ((exists v_l14379:top. (exists v_l14377:top. (exists v_l14375:top. (exists v_l14373:top. (exists v_l14371:top. (exists v_l14369:top. (exists v_l14367:top. (exists v_l14365:top. (exists v_l14363:top. (exists v_l14361:top. (exists v_l14359:top. (exists v_l14357:top. (exists v_l14355:top. (exists v_l14353:top. ((v_si = (v_Tuples__Tup14 v_l14353 v_l14355 v_l14357 v_l14359 v_l14361 v_l14363 v_l14365 v_l14367 v_l14369 v_l14371 v_l14373 v_l14375 v_l14377 v_l14379)) /\ ((v_TLSConstants__TLS_1p1 ) = v_l14371)))))))))))))))) -> (((v_TLSConstants__TLS_1p1 ) = (v_Tuples__Tup14__10 v_si)) -> (((v_TLSConstants__TLS_1p1 ) = (v_Tuples__Tup14__10 v_si)) -> (forall v_l14473:top. ((v_l14473 = v_skey) -> (v_alg = v_alg)))))))))))))))
(* Querying for (l1447514476:Bytes.bytes){l1447514476 = data} <: (t1445714477:Bytes.bytes){Sig.Msg(alg, Sig.PK (skey), t1445714477)} *)
(* query Sig.Msg(alg, Sig.PK (skey), l14478) [HandshakeMessages.fs(560,18)] *)
goal g262_gl: (forall v_si:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_si = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> (forall v_ms:top. (forall v_alg:top. ((exists v_l599:top. (exists v_l600:top. (v_alg = (v_Tuples__Tup2 v_l599 v_l600)))) -> (forall v_skey:top. (forall v_data:top. ((v_Sig__Msg_p v_alg (v_Sig__PK v_skey) v_data) -> ((not ((v_TLSConstants__TLS_1p2 ) = (v_Tuples__Tup14__10 v_si))) -> ((exists v_l14379:top. (exists v_l14377:top. (exists v_l14375:top. (exists v_l14373:top. (exists v_l14371:top. (exists v_l14369:top. (exists v_l14367:top. (exists v_l14365:top. (exists v_l14363:top. (exists v_l14361:top. (exists v_l14359:top. (exists v_l14357:top. (exists v_l14355:top. (exists v_l14353:top. ((v_si = (v_Tuples__Tup14 v_l14353 v_l14355 v_l14357 v_l14359 v_l14361 v_l14363 v_l14365 v_l14367 v_l14369 v_l14371 v_l14373 v_l14375 v_l14377 v_l14379)) /\ ((v_TLSConstants__TLS_1p1 ) = v_l14371)))))))))))))))) -> (((v_TLSConstants__TLS_1p1 ) = (v_Tuples__Tup14__10 v_si)) -> (((v_TLSConstants__TLS_1p1 ) = (v_Tuples__Tup14__10 v_si)) -> (forall v_l14478:top. ((v_l14478 = v_data) -> (v_Sig__Msg_p v_alg (v_Sig__PK v_skey) v_l14478)))))))))))))))
(* Querying for (l1450514605:TLSConstants.PreProtocolVersion){l1450514605 = Tuples.Tup14.10 si /\ (?l14532. (?l14530. (?l14528. (?l14526. (?l14524. (?l14522. (?l14520. (?l14518. (?l14516. (?l14514. (?l14512. (?l14510. (?l14508. (?l14506. si = (l14506, l14508, l14510, l14512, l14514, l14516, l14518, l14520, l14522, l14524, l14526, l14528, l14530, l14532) /\ l1450514605 = l14524))))))))))))))} <: (pv1448714606:TLSConstants.PreProtocolVersion){TLSConstants.IsProtocolVersion(pv1448714606)} *)
(* query TLSConstants.IsProtocolVersion(l14607) [HandshakeMessages.fs(561,22)] *)
goal g263_gl: (forall v_si:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_si = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> (forall v_ms:top. (forall v_alg:top. ((exists v_l599:top. (exists v_l600:top. (v_alg = (v_Tuples__Tup2 v_l599 v_l600)))) -> (forall v_skey:top. (forall v_data:top. ((v_Sig__Msg_p v_alg (v_Sig__PK v_skey) v_data) -> ((not ((v_TLSConstants__TLS_1p2 ) = (v_Tuples__Tup14__10 v_si))) -> ((exists v_l14379:top. (exists v_l14377:top. (exists v_l14375:top. (exists v_l14373:top. (exists v_l14371:top. (exists v_l14369:top. (exists v_l14367:top. (exists v_l14365:top. (exists v_l14363:top. (exists v_l14361:top. (exists v_l14359:top. (exists v_l14357:top. (exists v_l14355:top. (exists v_l14353:top. ((v_si = (v_Tuples__Tup14 v_l14353 v_l14355 v_l14357 v_l14359 v_l14361 v_l14363 v_l14365 v_l14367 v_l14369 v_l14371 v_l14373 v_l14375 v_l14377 v_l14379)) /\ ((v_TLSConstants__TLS_1p1 ) = v_l14371)))))))))))))))) -> (((v_TLSConstants__TLS_1p1 ) = (v_Tuples__Tup14__10 v_si)) -> (((v_TLSConstants__TLS_1p1 ) = (v_Tuples__Tup14__10 v_si)) -> (forall v_tag:top. ((v_data = v_data) -> (forall v_l14607:top. (((v_l14607 = (v_Tuples__Tup14__10 v_si)) /\ (exists v_l14532:top. (exists v_l14530:top. (exists v_l14528:top. (exists v_l14526:top. (exists v_l14524:top. (exists v_l14522:top. (exists v_l14520:top. (exists v_l14518:top. (exists v_l14516:top. (exists v_l14514:top. (exists v_l14512:top. (exists v_l14510:top. (exists v_l14508:top. (exists v_l14506:top. ((v_si = (v_Tuples__Tup14 v_l14506 v_l14508 v_l14510 v_l14512 v_l14514 v_l14516 v_l14518 v_l14520 v_l14522 v_l14524 v_l14526 v_l14528 v_l14530 v_l14532)) /\ (v_l14607 = v_l14524))))))))))))))))) -> (v_TLSConstants__IsProtocolVersion_p v_l14607)))))))))))))))))
(* Querying for (l1461814619:PreHandshakeType){l1461814619 = HT_certificate_verify ()} <: (ht146121461614620:PreHandshakeType){IsHandshakeType(ht146121461614620)} *)
(* query IsHandshakeType(l14621) [HandshakeMessages.fs(562,18)] *)
goal g264_gl: (forall v_si:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_si = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> (forall v_ms:top. (forall v_alg:top. ((exists v_l599:top. (exists v_l600:top. (v_alg = (v_Tuples__Tup2 v_l599 v_l600)))) -> (forall v_skey:top. (forall v_data:top. ((v_Sig__Msg_p v_alg (v_Sig__PK v_skey) v_data) -> ((not ((v_TLSConstants__TLS_1p2 ) = (v_Tuples__Tup14__10 v_si))) -> ((exists v_l14379:top. (exists v_l14377:top. (exists v_l14375:top. (exists v_l14373:top. (exists v_l14371:top. (exists v_l14369:top. (exists v_l14367:top. (exists v_l14365:top. (exists v_l14363:top. (exists v_l14361:top. (exists v_l14359:top. (exists v_l14357:top. (exists v_l14355:top. (exists v_l14353:top. ((v_si = (v_Tuples__Tup14 v_l14353 v_l14355 v_l14357 v_l14359 v_l14361 v_l14363 v_l14365 v_l14367 v_l14369 v_l14371 v_l14373 v_l14375 v_l14377 v_l14379)) /\ ((v_TLSConstants__TLS_1p1 ) = v_l14371)))))))))))))))) -> (((v_TLSConstants__TLS_1p1 ) = (v_Tuples__Tup14__10 v_si)) -> (((v_TLSConstants__TLS_1p1 ) = (v_Tuples__Tup14__10 v_si)) -> (forall v_tag:top. ((v_data = v_data) -> (forall v_payload:top. (((((v_Tuples__Tup14__10 v_si) = (v_Tuples__Tup14__10 v_si)) /\ (exists v_l14532:top. (exists v_l14530:top. (exists v_l14528:top. (exists v_l14526:top. (exists v_l14524:top. (exists v_l14522:top. (exists v_l14520:top. (exists v_l14518:top. (exists v_l14516:top. (exists v_l14514:top. (exists v_l14512:top. (exists v_l14510:top. (exists v_l14508:top. (exists v_l14506:top. ((v_si = (v_Tuples__Tup14 v_l14506 v_l14508 v_l14510 v_l14512 v_l14514 v_l14516 v_l14518 v_l14520 v_l14522 v_l14524 v_l14526 v_l14528 v_l14530 v_l14532)) /\ ((v_Tuples__Tup14__10 v_si) = v_l14524))))))))))))))))) /\ ((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_alg v_tag (v_Tuples__Tup14__10 v_si)))) -> (forall v_l14621:top. ((v_l14621 = (v_HandshakeMessages__HT_certificate_verify )) -> (v_HandshakeMessages__IsHandshakeType_p v_l14621)))))))))))))))))))
(* Querying for (msg) (mex, tag) : (b:Bytes.bytes * sign:Bytes.bytes){Bytes.B (b) = CertificateVerifyMsg (Tuples.Tup14.10 si, alg, sign)} *)
(* query Bytes.B (mex) = CertificateVerifyMsg (Tuples.Tup14.10 si, alg, tag) [HandshakeMessages.fs(563,9)] *)
goal g265_gl: (forall v_si:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_si = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> (forall v_ms:top. (forall v_alg:top. ((exists v_l599:top. (exists v_l600:top. (v_alg = (v_Tuples__Tup2 v_l599 v_l600)))) -> (forall v_skey:top. (forall v_data:top. ((v_Sig__Msg_p v_alg (v_Sig__PK v_skey) v_data) -> ((not ((v_TLSConstants__TLS_1p2 ) = (v_Tuples__Tup14__10 v_si))) -> ((exists v_l14379:top. (exists v_l14377:top. (exists v_l14375:top. (exists v_l14373:top. (exists v_l14371:top. (exists v_l14369:top. (exists v_l14367:top. (exists v_l14365:top. (exists v_l14363:top. (exists v_l14361:top. (exists v_l14359:top. (exists v_l14357:top. (exists v_l14355:top. (exists v_l14353:top. ((v_si = (v_Tuples__Tup14 v_l14353 v_l14355 v_l14357 v_l14359 v_l14361 v_l14363 v_l14365 v_l14367 v_l14369 v_l14371 v_l14373 v_l14375 v_l14377 v_l14379)) /\ ((v_TLSConstants__TLS_1p1 ) = v_l14371)))))))))))))))) -> (((v_TLSConstants__TLS_1p1 ) = (v_Tuples__Tup14__10 v_si)) -> (((v_TLSConstants__TLS_1p1 ) = (v_Tuples__Tup14__10 v_si)) -> (forall v_tag:top. ((v_data = v_data) -> (forall v_payload:top. (((((v_Tuples__Tup14__10 v_si) = (v_Tuples__Tup14__10 v_si)) /\ (exists v_l14532:top. (exists v_l14530:top. (exists v_l14528:top. (exists v_l14526:top. (exists v_l14524:top. (exists v_l14522:top. (exists v_l14520:top. (exists v_l14518:top. (exists v_l14516:top. (exists v_l14514:top. (exists v_l14512:top. (exists v_l14510:top. (exists v_l14508:top. (exists v_l14506:top. ((v_si = (v_Tuples__Tup14 v_l14506 v_l14508 v_l14510 v_l14512 v_l14514 v_l14516 v_l14518 v_l14520 v_l14522 v_l14524 v_l14526 v_l14528 v_l14530 v_l14532)) /\ ((v_Tuples__Tup14__10 v_si) = v_l14524))))))))))))))))) /\ ((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_alg v_tag (v_Tuples__Tup14__10 v_si)))) -> (forall v_mex:top. (((v_payload = v_payload) /\ ((v_Bytes__B v_mex) = (v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_certificate_verify ) (v_Bytes__B v_payload)))) -> ((v_Bytes__B v_mex) = (v_HandshakeMessages__CertificateVerifyMsg (v_Tuples__Tup14__10 v_si) v_alg v_tag))))))))))))))))))))
(* Querying for (;alg) Sig.skey <: (;alg) Sig.skey *)
(* query alg = alg [HandshakeMessages.fs(560,18)] *)
goal g266_gl: (forall v_si:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_si = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> (forall v_ms:top. (forall v_alg:top. ((exists v_l599:top. (exists v_l600:top. (v_alg = (v_Tuples__Tup2 v_l599 v_l600)))) -> (forall v_skey:top. (forall v_data:top. ((v_Sig__Msg_p v_alg (v_Sig__PK v_skey) v_data) -> ((not ((v_TLSConstants__TLS_1p2 ) = (v_Tuples__Tup14__10 v_si))) -> ((not ((v_TLSConstants__TLS_1p1 ) = (v_Tuples__Tup14__10 v_si))) -> ((exists v_l14662:top. (exists v_l14660:top. (exists v_l14658:top. (exists v_l14656:top. (exists v_l14654:top. (exists v_l14652:top. (exists v_l14650:top. (exists v_l14648:top. (exists v_l14646:top. (exists v_l14644:top. (exists v_l14642:top. (exists v_l14640:top. (exists v_l14638:top. (exists v_l14636:top. ((v_si = (v_Tuples__Tup14 v_l14636 v_l14638 v_l14640 v_l14642 v_l14644 v_l14646 v_l14648 v_l14650 v_l14652 v_l14654 v_l14656 v_l14658 v_l14660 v_l14662)) /\ ((v_TLSConstants__TLS_1p0 ) = v_l14654)))))))))))))))) -> (((v_TLSConstants__TLS_1p0 ) = (v_Tuples__Tup14__10 v_si)) -> (((v_TLSConstants__TLS_1p0 ) = (v_Tuples__Tup14__10 v_si)) -> (forall v_l14756:top. ((v_l14756 = v_skey) -> (v_alg = v_alg))))))))))))))))
(* Querying for (l1475814759:Bytes.bytes){l1475814759 = data} <: (t1474014760:Bytes.bytes){Sig.Msg(alg, Sig.PK (skey), t1474014760)} *)
(* query Sig.Msg(alg, Sig.PK (skey), l14761) [HandshakeMessages.fs(560,18)] *)
goal g267_gl: (forall v_si:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_si = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> (forall v_ms:top. (forall v_alg:top. ((exists v_l599:top. (exists v_l600:top. (v_alg = (v_Tuples__Tup2 v_l599 v_l600)))) -> (forall v_skey:top. (forall v_data:top. ((v_Sig__Msg_p v_alg (v_Sig__PK v_skey) v_data) -> ((not ((v_TLSConstants__TLS_1p2 ) = (v_Tuples__Tup14__10 v_si))) -> ((not ((v_TLSConstants__TLS_1p1 ) = (v_Tuples__Tup14__10 v_si))) -> ((exists v_l14662:top. (exists v_l14660:top. (exists v_l14658:top. (exists v_l14656:top. (exists v_l14654:top. (exists v_l14652:top. (exists v_l14650:top. (exists v_l14648:top. (exists v_l14646:top. (exists v_l14644:top. (exists v_l14642:top. (exists v_l14640:top. (exists v_l14638:top. (exists v_l14636:top. ((v_si = (v_Tuples__Tup14 v_l14636 v_l14638 v_l14640 v_l14642 v_l14644 v_l14646 v_l14648 v_l14650 v_l14652 v_l14654 v_l14656 v_l14658 v_l14660 v_l14662)) /\ ((v_TLSConstants__TLS_1p0 ) = v_l14654)))))))))))))))) -> (((v_TLSConstants__TLS_1p0 ) = (v_Tuples__Tup14__10 v_si)) -> (((v_TLSConstants__TLS_1p0 ) = (v_Tuples__Tup14__10 v_si)) -> (forall v_l14761:top. ((v_l14761 = v_data) -> (v_Sig__Msg_p v_alg (v_Sig__PK v_skey) v_l14761))))))))))))))))
(* Querying for (l1478814888:TLSConstants.PreProtocolVersion){l1478814888 = Tuples.Tup14.10 si /\ (?l14815. (?l14813. (?l14811. (?l14809. (?l14807. (?l14805. (?l14803. (?l14801. (?l14799. (?l14797. (?l14795. (?l14793. (?l14791. (?l14789. si = (l14789, l14791, l14793, l14795, l14797, l14799, l14801, l14803, l14805, l14807, l14809, l14811, l14813, l14815) /\ l1478814888 = l14807))))))))))))))} <: (pv1477014889:TLSConstants.PreProtocolVersion){TLSConstants.IsProtocolVersion(pv1477014889)} *)
(* query TLSConstants.IsProtocolVersion(l14890) [HandshakeMessages.fs(561,22)] *)
goal g268_gl: (forall v_si:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_si = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> (forall v_ms:top. (forall v_alg:top. ((exists v_l599:top. (exists v_l600:top. (v_alg = (v_Tuples__Tup2 v_l599 v_l600)))) -> (forall v_skey:top. (forall v_data:top. ((v_Sig__Msg_p v_alg (v_Sig__PK v_skey) v_data) -> ((not ((v_TLSConstants__TLS_1p2 ) = (v_Tuples__Tup14__10 v_si))) -> ((not ((v_TLSConstants__TLS_1p1 ) = (v_Tuples__Tup14__10 v_si))) -> ((exists v_l14662:top. (exists v_l14660:top. (exists v_l14658:top. (exists v_l14656:top. (exists v_l14654:top. (exists v_l14652:top. (exists v_l14650:top. (exists v_l14648:top. (exists v_l14646:top. (exists v_l14644:top. (exists v_l14642:top. (exists v_l14640:top. (exists v_l14638:top. (exists v_l14636:top. ((v_si = (v_Tuples__Tup14 v_l14636 v_l14638 v_l14640 v_l14642 v_l14644 v_l14646 v_l14648 v_l14650 v_l14652 v_l14654 v_l14656 v_l14658 v_l14660 v_l14662)) /\ ((v_TLSConstants__TLS_1p0 ) = v_l14654)))))))))))))))) -> (((v_TLSConstants__TLS_1p0 ) = (v_Tuples__Tup14__10 v_si)) -> (((v_TLSConstants__TLS_1p0 ) = (v_Tuples__Tup14__10 v_si)) -> (forall v_tag:top. ((v_data = v_data) -> (forall v_l14890:top. (((v_l14890 = (v_Tuples__Tup14__10 v_si)) /\ (exists v_l14815:top. (exists v_l14813:top. (exists v_l14811:top. (exists v_l14809:top. (exists v_l14807:top. (exists v_l14805:top. (exists v_l14803:top. (exists v_l14801:top. (exists v_l14799:top. (exists v_l14797:top. (exists v_l14795:top. (exists v_l14793:top. (exists v_l14791:top. (exists v_l14789:top. ((v_si = (v_Tuples__Tup14 v_l14789 v_l14791 v_l14793 v_l14795 v_l14797 v_l14799 v_l14801 v_l14803 v_l14805 v_l14807 v_l14809 v_l14811 v_l14813 v_l14815)) /\ (v_l14890 = v_l14807))))))))))))))))) -> (v_TLSConstants__IsProtocolVersion_p v_l14890))))))))))))))))))
(* Querying for (l1490114902:PreHandshakeType){l1490114902 = HT_certificate_verify ()} <: (ht148951489914903:PreHandshakeType){IsHandshakeType(ht148951489914903)} *)
(* query IsHandshakeType(l14904) [HandshakeMessages.fs(562,18)] *)
goal g269_gl: (forall v_si:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_si = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> (forall v_ms:top. (forall v_alg:top. ((exists v_l599:top. (exists v_l600:top. (v_alg = (v_Tuples__Tup2 v_l599 v_l600)))) -> (forall v_skey:top. (forall v_data:top. ((v_Sig__Msg_p v_alg (v_Sig__PK v_skey) v_data) -> ((not ((v_TLSConstants__TLS_1p2 ) = (v_Tuples__Tup14__10 v_si))) -> ((not ((v_TLSConstants__TLS_1p1 ) = (v_Tuples__Tup14__10 v_si))) -> ((exists v_l14662:top. (exists v_l14660:top. (exists v_l14658:top. (exists v_l14656:top. (exists v_l14654:top. (exists v_l14652:top. (exists v_l14650:top. (exists v_l14648:top. (exists v_l14646:top. (exists v_l14644:top. (exists v_l14642:top. (exists v_l14640:top. (exists v_l14638:top. (exists v_l14636:top. ((v_si = (v_Tuples__Tup14 v_l14636 v_l14638 v_l14640 v_l14642 v_l14644 v_l14646 v_l14648 v_l14650 v_l14652 v_l14654 v_l14656 v_l14658 v_l14660 v_l14662)) /\ ((v_TLSConstants__TLS_1p0 ) = v_l14654)))))))))))))))) -> (((v_TLSConstants__TLS_1p0 ) = (v_Tuples__Tup14__10 v_si)) -> (((v_TLSConstants__TLS_1p0 ) = (v_Tuples__Tup14__10 v_si)) -> (forall v_tag:top. ((v_data = v_data) -> (forall v_payload:top. (((((v_Tuples__Tup14__10 v_si) = (v_Tuples__Tup14__10 v_si)) /\ (exists v_l14815:top. (exists v_l14813:top. (exists v_l14811:top. (exists v_l14809:top. (exists v_l14807:top. (exists v_l14805:top. (exists v_l14803:top. (exists v_l14801:top. (exists v_l14799:top. (exists v_l14797:top. (exists v_l14795:top. (exists v_l14793:top. (exists v_l14791:top. (exists v_l14789:top. ((v_si = (v_Tuples__Tup14 v_l14789 v_l14791 v_l14793 v_l14795 v_l14797 v_l14799 v_l14801 v_l14803 v_l14805 v_l14807 v_l14809 v_l14811 v_l14813 v_l14815)) /\ ((v_Tuples__Tup14__10 v_si) = v_l14807))))))))))))))))) /\ ((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_alg v_tag (v_Tuples__Tup14__10 v_si)))) -> (forall v_l14904:top. ((v_l14904 = (v_HandshakeMessages__HT_certificate_verify )) -> (v_HandshakeMessages__IsHandshakeType_p v_l14904))))))))))))))))))))
(* Querying for (msg) (mex, tag) : (b:Bytes.bytes * sign:Bytes.bytes){Bytes.B (b) = CertificateVerifyMsg (Tuples.Tup14.10 si, alg, sign)} *)
(* query Bytes.B (mex) = CertificateVerifyMsg (Tuples.Tup14.10 si, alg, tag) [HandshakeMessages.fs(563,9)] *)
goal g270_gl: (forall v_si:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_si = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> (forall v_ms:top. (forall v_alg:top. ((exists v_l599:top. (exists v_l600:top. (v_alg = (v_Tuples__Tup2 v_l599 v_l600)))) -> (forall v_skey:top. (forall v_data:top. ((v_Sig__Msg_p v_alg (v_Sig__PK v_skey) v_data) -> ((not ((v_TLSConstants__TLS_1p2 ) = (v_Tuples__Tup14__10 v_si))) -> ((not ((v_TLSConstants__TLS_1p1 ) = (v_Tuples__Tup14__10 v_si))) -> ((exists v_l14662:top. (exists v_l14660:top. (exists v_l14658:top. (exists v_l14656:top. (exists v_l14654:top. (exists v_l14652:top. (exists v_l14650:top. (exists v_l14648:top. (exists v_l14646:top. (exists v_l14644:top. (exists v_l14642:top. (exists v_l14640:top. (exists v_l14638:top. (exists v_l14636:top. ((v_si = (v_Tuples__Tup14 v_l14636 v_l14638 v_l14640 v_l14642 v_l14644 v_l14646 v_l14648 v_l14650 v_l14652 v_l14654 v_l14656 v_l14658 v_l14660 v_l14662)) /\ ((v_TLSConstants__TLS_1p0 ) = v_l14654)))))))))))))))) -> (((v_TLSConstants__TLS_1p0 ) = (v_Tuples__Tup14__10 v_si)) -> (((v_TLSConstants__TLS_1p0 ) = (v_Tuples__Tup14__10 v_si)) -> (forall v_tag:top. ((v_data = v_data) -> (forall v_payload:top. (((((v_Tuples__Tup14__10 v_si) = (v_Tuples__Tup14__10 v_si)) /\ (exists v_l14815:top. (exists v_l14813:top. (exists v_l14811:top. (exists v_l14809:top. (exists v_l14807:top. (exists v_l14805:top. (exists v_l14803:top. (exists v_l14801:top. (exists v_l14799:top. (exists v_l14797:top. (exists v_l14795:top. (exists v_l14793:top. (exists v_l14791:top. (exists v_l14789:top. ((v_si = (v_Tuples__Tup14 v_l14789 v_l14791 v_l14793 v_l14795 v_l14797 v_l14799 v_l14801 v_l14803 v_l14805 v_l14807 v_l14809 v_l14811 v_l14813 v_l14815)) /\ ((v_Tuples__Tup14__10 v_si) = v_l14807))))))))))))))))) /\ ((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_alg v_tag (v_Tuples__Tup14__10 v_si)))) -> (forall v_mex:top. (((v_payload = v_payload) /\ ((v_Bytes__B v_mex) = (v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_certificate_verify ) (v_Bytes__B v_payload)))) -> ((v_Bytes__B v_mex) = (v_HandshakeMessages__CertificateVerifyMsg (v_Tuples__Tup14__10 v_si) v_alg v_tag)))))))))))))))))))))
(* Querying for (l1495615056:TLSConstants.PreProtocolVersion){l1495615056 = Tuples.Tup14.10 si /\ (?l14983. (?l14981. (?l14979. (?l14977. (?l14975. (?l14973. (?l14971. (?l14969. (?l14967. (?l14965. (?l14963. (?l14961. (?l14959. (?l14957. si = (l14957, l14959, l14961, l14963, l14965, l14967, l14969, l14971, l14973, l14975, l14977, l14979, l14981, l14983) /\ l1495615056 = l14975))))))))))))))} <: (pv1492615057:TLSConstants.PreProtocolVersion){TLSConstants.IsProtocolVersion(pv1492615057)} *)
(* query TLSConstants.IsProtocolVersion(l15058) [HandshakeMessages.fs(579,10)] *)
goal g271_gl: (forall v_si:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_si = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> ((not ((v_Tuples__Tup14__2 v_si) = (v_Pervasives__op_Nil ))) -> (forall v_ms:top. (forall v_algs:top. (forall v_log:top. (forall v_payload:top. (forall v_l15058:top. (((v_l15058 = (v_Tuples__Tup14__10 v_si)) /\ (exists v_l14983:top. (exists v_l14981:top. (exists v_l14979:top. (exists v_l14977:top. (exists v_l14975:top. (exists v_l14973:top. (exists v_l14971:top. (exists v_l14969:top. (exists v_l14967:top. (exists v_l14965:top. (exists v_l14963:top. (exists v_l14961:top. (exists v_l14959:top. (exists v_l14957:top. ((v_si = (v_Tuples__Tup14 v_l14957 v_l14959 v_l14961 v_l14963 v_l14965 v_l14967 v_l14969 v_l14971 v_l14973 v_l14975 v_l14977 v_l14979 v_l14981 v_l14983)) /\ (v_l15058 = v_l14975))))))))))))))))) -> (v_TLSConstants__IsProtocolVersion_p v_l15058))))))))))
(* Querying for (l1520915309:Bytes.bytes list){l1520915309 = Tuples.Tup14.2 si /\ (?l15236. (?l15234. (?l15232. (?l15230. (?l15228. (?l15226. (?l15224. (?l15222. (?l15220. (?l15218. (?l15216. (?l15214. (?l15212. (?l15210. si = (l15210, l15212, l15214, l15216, l15218, l15220, l15222, l15224, l15226, l15228, l15230, l15232, l15234, l15236) /\ l1520915309 = l15212))))))))))))))} <: (c152021520715310:Bytes.bytes list){c152021520715310 <> op_Nil ()} *)
(* query l15311 <> op_Nil () [HandshakeMessages.fs(585,18)] *)
goal g272_gl: (forall v_si:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_si = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> ((not ((v_Tuples__Tup14__2 v_si) = (v_Pervasives__op_Nil ))) -> (forall v_ms:top. (forall v_algs:top. (forall v_log:top. (forall v_payload:top. (forall v_l14920:top. ((((v_Tuples__Tup14__10 v_si) = (v_Tuples__Tup14__10 v_si)) /\ (exists v_l14983:top. (exists v_l14981:top. (exists v_l14979:top. (exists v_l14977:top. (exists v_l14975:top. (exists v_l14973:top. (exists v_l14971:top. (exists v_l14969:top. (exists v_l14967:top. (exists v_l14965:top. (exists v_l14963:top. (exists v_l14961:top. (exists v_l14959:top. (exists v_l14957:top. ((v_si = (v_Tuples__Tup14 v_l14957 v_l14959 v_l14961 v_l14963 v_l14965 v_l14967 v_l14969 v_l14971 v_l14973 v_l14975 v_l14977 v_l14979 v_l14981 v_l14983)) /\ ((v_Tuples__Tup14__10 v_si) = v_l14975))))))))))))))))) -> (forall v_res:top. ((exists v_a1492815077:top. (exists v_p1492915080:top. ((v_res = (v_Tuples__Tup2 v_a1492815077 v_p1492915080)) /\ ((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_a1492815077 v_p1492915080 (v_Tuples__Tup14__10 v_si)))))) -> (((v_Error__Correct v_res) = v_l14920) -> (((v_Error__Correct v_res) = v_l14920) -> (forall v_alg:top. ((exists v_l5991507815095:top. (exists v_l6001507915096:top. (v_alg = (v_Tuples__Tup2 v_l5991507815095 v_l6001507915096)))) -> (forall v_signature:top. (((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_alg v_signature (v_Tuples__Tup14__10 v_si))) -> (((v_Tuples__Tup2 v_alg v_signature) = v_res) -> (((v_Tuples__Tup2 v_alg v_signature) = v_res) -> ((exists v_l15127:top. (exists v_l15125:top. (exists v_l15123:top. (exists v_l15121:top. (exists v_l15119:top. (exists v_l15117:top. (exists v_l15115:top. (exists v_l15113:top. (exists v_l15111:top. (exists v_l15109:top. (exists v_l15107:top. (exists v_l15105:top. (exists v_l15103:top. (exists v_l15101:top. ((v_si = (v_Tuples__Tup14 v_l15101 v_l15103 v_l15105 v_l15107 v_l15109 v_l15111 v_l15113 v_l15115 v_l15117 v_l15119 v_l15121 v_l15123 v_l15125 v_l15127)) /\ ((v_TLSConstants__TLS_1p2 ) = v_l15119)))))))))))))))) -> (((v_TLSConstants__TLS_1p2 ) = (v_Tuples__Tup14__10 v_si)) -> (((v_TLSConstants__TLS_1p2 ) = (v_Tuples__Tup14__10 v_si)) -> (forall v_l15311:top. (((v_l15311 = (v_Tuples__Tup14__2 v_si)) /\ (exists v_l15236:top. (exists v_l15234:top. (exists v_l15232:top. (exists v_l15230:top. (exists v_l15228:top. (exists v_l15226:top. (exists v_l15224:top. (exists v_l15222:top. (exists v_l15220:top. (exists v_l15218:top. (exists v_l15216:top. (exists v_l15214:top. (exists v_l15212:top. (exists v_l15210:top. ((v_si = (v_Tuples__Tup14 v_l15210 v_l15212 v_l15214 v_l15216 v_l15218 v_l15220 v_l15222 v_l15224 v_l15226 v_l15228 v_l15230 v_l15232 v_l15234 v_l15236)) /\ (v_l15311 = v_l15212))))))))))))))))) -> (not (v_l15311 = (v_Pervasives__op_Nil )))))))))))))))))))))))))))
(* Querying for (msg) (False, alg, Bytes.empty_bytes) : (b:bool * a:(TLSConstants.sigAlg * TLSConstants.hashAlg) * sign:Bytes.bytes){b = True => MessageBytes (HT_certificate_verify (), Bytes.B (payload)) = CertificateVerifyMsg (Tuples.Tup14.10 si, a, sign) /\ Tuples.Tup14.10 si <> TLSConstants.SSL_3p0 () /\ Sig.Strong(a) /\ Sig.Honest(a, Cert.SigPKCert (Tuples.Tup14.2 si, a)) => Sig.Msg(a, Cert.SigPKCert (Tuples.Tup14.2 si, a), log)} *)
(* query False = True => MessageBytes (HT_certificate_verify (), Bytes.B (payload)) = CertificateVerifyMsg (Tuples.Tup14.10 si, alg, Bytes.empty_bytes) /\ Tuples.Tup14.10 si <> TLSConstants.SSL_3p0 () /\ Sig.Strong(alg) /\ Sig.Honest(alg, Cert.SigPKCert (Tuples.Tup14.2 si, alg)) => Sig.Msg(alg, Cert.SigPKCert (Tuples.Tup14.2 si, alg), log) [HandshakeMessages.fs(586,27)] *)
goal g273_gl: (forall v_si:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_si = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> ((not ((v_Tuples__Tup14__2 v_si) = (v_Pervasives__op_Nil ))) -> (forall v_ms:top. (forall v_algs:top. (forall v_log:top. (forall v_payload:top. (forall v_l14920:top. ((((v_Tuples__Tup14__10 v_si) = (v_Tuples__Tup14__10 v_si)) /\ (exists v_l14983:top. (exists v_l14981:top. (exists v_l14979:top. (exists v_l14977:top. (exists v_l14975:top. (exists v_l14973:top. (exists v_l14971:top. (exists v_l14969:top. (exists v_l14967:top. (exists v_l14965:top. (exists v_l14963:top. (exists v_l14961:top. (exists v_l14959:top. (exists v_l14957:top. ((v_si = (v_Tuples__Tup14 v_l14957 v_l14959 v_l14961 v_l14963 v_l14965 v_l14967 v_l14969 v_l14971 v_l14973 v_l14975 v_l14977 v_l14979 v_l14981 v_l14983)) /\ ((v_Tuples__Tup14__10 v_si) = v_l14975))))))))))))))))) -> (forall v_res:top. ((exists v_a1492815077:top. (exists v_p1492915080:top. ((v_res = (v_Tuples__Tup2 v_a1492815077 v_p1492915080)) /\ ((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_a1492815077 v_p1492915080 (v_Tuples__Tup14__10 v_si)))))) -> (((v_Error__Correct v_res) = v_l14920) -> (((v_Error__Correct v_res) = v_l14920) -> (forall v_alg:top. ((exists v_l5991507815095:top. (exists v_l6001507915096:top. (v_alg = (v_Tuples__Tup2 v_l5991507815095 v_l6001507915096)))) -> (forall v_signature:top. (((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_alg v_signature (v_Tuples__Tup14__10 v_si))) -> (((v_Tuples__Tup2 v_alg v_signature) = v_res) -> (((v_Tuples__Tup2 v_alg v_signature) = v_res) -> ((exists v_l15127:top. (exists v_l15125:top. (exists v_l15123:top. (exists v_l15121:top. (exists v_l15119:top. (exists v_l15117:top. (exists v_l15115:top. (exists v_l15113:top. (exists v_l15111:top. (exists v_l15109:top. (exists v_l15107:top. (exists v_l15105:top. (exists v_l15103:top. (exists v_l15101:top. ((v_si = (v_Tuples__Tup14 v_l15101 v_l15103 v_l15105 v_l15107 v_l15109 v_l15111 v_l15113 v_l15115 v_l15117 v_l15119 v_l15121 v_l15123 v_l15125 v_l15127)) /\ ((v_TLSConstants__TLS_1p2 ) = v_l15119)))))))))))))))) -> (((v_TLSConstants__TLS_1p2 ) = (v_Tuples__Tup14__10 v_si)) -> (((v_TLSConstants__TLS_1p2 ) = (v_Tuples__Tup14__10 v_si)) -> (forall v_l15200:top. ((((v_Tuples__Tup14__2 v_si) = (v_Tuples__Tup14__2 v_si)) /\ (exists v_l15236:top. (exists v_l15234:top. (exists v_l15232:top. (exists v_l15230:top. (exists v_l15228:top. (exists v_l15226:top. (exists v_l15224:top. (exists v_l15222:top. (exists v_l15220:top. (exists v_l15218:top. (exists v_l15216:top. (exists v_l15214:top. (exists v_l15212:top. (exists v_l15210:top. ((v_si = (v_Tuples__Tup14 v_l15210 v_l15212 v_l15214 v_l15216 v_l15218 v_l15220 v_l15222 v_l15224 v_l15226 v_l15228 v_l15230 v_l15232 v_l15234 v_l15236)) /\ ((v_Tuples__Tup14__2 v_si) = v_l15212))))))))))))))))) -> (forall v_z:top. ((exists v_l59315332:top. (exists v_l59415333:top. (v_z = (v_Tuples__Tup2 v_l59315332 v_l59415333)))) -> (((v_Error__Error v_z) = v_l15200) -> (((v_Error__Error v_z) = v_l15200) -> ((v_Pervasives__False = v_Pervasives__True) -> (((v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_certificate_verify ) (v_Bytes__B v_payload)) = (v_HandshakeMessages__CertificateVerifyMsg (v_Tuples__Tup14__10 v_si) v_alg v_Bytes__empty_bytes)) /\ (((not ((v_Tuples__Tup14__10 v_si) = (v_TLSConstants__SSL_3p0 ))) /\ ((v_Sig__Strong_p v_alg) /\ (v_Sig__Honest_p v_alg (v_Cert__SigPKCert (v_Tuples__Tup14__2 v_si) v_alg)))) -> (v_Sig__Msg_p v_alg (v_Cert__SigPKCert (v_Tuples__Tup14__2 v_si) v_alg) v_log))))))))))))))))))))))))))))))))
(* Querying for (;alg) Sig.pkey <: (;alg) Sig.pkey *)
(* query alg = alg [HandshakeMessages.fs(588,26)] *)
goal g274_gl: (forall v_si:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_si = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> ((not ((v_Tuples__Tup14__2 v_si) = (v_Pervasives__op_Nil ))) -> (forall v_ms:top. (forall v_algs:top. (forall v_log:top. (forall v_payload:top. (forall v_l14920:top. ((((v_Tuples__Tup14__10 v_si) = (v_Tuples__Tup14__10 v_si)) /\ (exists v_l14983:top. (exists v_l14981:top. (exists v_l14979:top. (exists v_l14977:top. (exists v_l14975:top. (exists v_l14973:top. (exists v_l14971:top. (exists v_l14969:top. (exists v_l14967:top. (exists v_l14965:top. (exists v_l14963:top. (exists v_l14961:top. (exists v_l14959:top. (exists v_l14957:top. ((v_si = (v_Tuples__Tup14 v_l14957 v_l14959 v_l14961 v_l14963 v_l14965 v_l14967 v_l14969 v_l14971 v_l14973 v_l14975 v_l14977 v_l14979 v_l14981 v_l14983)) /\ ((v_Tuples__Tup14__10 v_si) = v_l14975))))))))))))))))) -> (forall v_res:top. ((exists v_a1492815077:top. (exists v_p1492915080:top. ((v_res = (v_Tuples__Tup2 v_a1492815077 v_p1492915080)) /\ ((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_a1492815077 v_p1492915080 (v_Tuples__Tup14__10 v_si)))))) -> (((v_Error__Correct v_res) = v_l14920) -> (((v_Error__Correct v_res) = v_l14920) -> (forall v_alg:top. ((exists v_l5991507815095:top. (exists v_l6001507915096:top. (v_alg = (v_Tuples__Tup2 v_l5991507815095 v_l6001507915096)))) -> (forall v_signature:top. (((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_alg v_signature (v_Tuples__Tup14__10 v_si))) -> (((v_Tuples__Tup2 v_alg v_signature) = v_res) -> (((v_Tuples__Tup2 v_alg v_signature) = v_res) -> ((exists v_l15127:top. (exists v_l15125:top. (exists v_l15123:top. (exists v_l15121:top. (exists v_l15119:top. (exists v_l15117:top. (exists v_l15115:top. (exists v_l15113:top. (exists v_l15111:top. (exists v_l15109:top. (exists v_l15107:top. (exists v_l15105:top. (exists v_l15103:top. (exists v_l15101:top. ((v_si = (v_Tuples__Tup14 v_l15101 v_l15103 v_l15105 v_l15107 v_l15109 v_l15111 v_l15113 v_l15115 v_l15117 v_l15119 v_l15121 v_l15123 v_l15125 v_l15127)) /\ ((v_TLSConstants__TLS_1p2 ) = v_l15119)))))))))))))))) -> (((v_TLSConstants__TLS_1p2 ) = (v_Tuples__Tup14__10 v_si)) -> (((v_TLSConstants__TLS_1p2 ) = (v_Tuples__Tup14__10 v_si)) -> (forall v_l15200:top. ((((v_Tuples__Tup14__2 v_si) = (v_Tuples__Tup14__2 v_si)) /\ (exists v_l15236:top. (exists v_l15234:top. (exists v_l15232:top. (exists v_l15230:top. (exists v_l15228:top. (exists v_l15226:top. (exists v_l15224:top. (exists v_l15222:top. (exists v_l15220:top. (exists v_l15218:top. (exists v_l15216:top. (exists v_l15214:top. (exists v_l15212:top. (exists v_l15210:top. ((v_si = (v_Tuples__Tup14 v_l15210 v_l15212 v_l15214 v_l15216 v_l15218 v_l15220 v_l15222 v_l15224 v_l15226 v_l15228 v_l15230 v_l15232 v_l15234 v_l15236)) /\ ((v_Tuples__Tup14__2 v_si) = v_l15212))))))))))))))))) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l15200))) -> (forall v_vkey:top. ((v_vkey = (v_Cert__SigPKCert (v_Tuples__Tup14__2 v_si) v_alg)) -> (((v_Error__Correct v_vkey) = v_l15200) -> (((v_Error__Correct v_vkey) = v_l15200) -> (forall v_l15391:top. (((v_l15391 = v_vkey) /\ (v_l15391 = (v_Cert__SigPKCert (v_Tuples__Tup14__2 v_si) v_alg))) -> (v_alg = v_alg))))))))))))))))))))))))))))))))
(* Querying for (msg) (res49, alg, signature) : (b:bool * a:(TLSConstants.sigAlg * TLSConstants.hashAlg) * sign:Bytes.bytes){b = True => MessageBytes (HT_certificate_verify (), Bytes.B (payload)) = CertificateVerifyMsg (Tuples.Tup14.10 si, a, sign) /\ Tuples.Tup14.10 si <> TLSConstants.SSL_3p0 () /\ Sig.Strong(a) /\ Sig.Honest(a, Cert.SigPKCert (Tuples.Tup14.2 si, a)) => Sig.Msg(a, Cert.SigPKCert (Tuples.Tup14.2 si, a), log)} *)
(* query res49 = True => MessageBytes (HT_certificate_verify (), Bytes.B (payload)) = CertificateVerifyMsg (Tuples.Tup14.10 si, alg, signature) /\ Tuples.Tup14.10 si <> TLSConstants.SSL_3p0 () /\ Sig.Strong(alg) /\ Sig.Honest(alg, Cert.SigPKCert (Tuples.Tup14.2 si, alg)) => Sig.Msg(alg, Cert.SigPKCert (Tuples.Tup14.2 si, alg), log) [HandshakeMessages.fs(589,17)] *)
goal g275_gl: (forall v_si:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_si = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> ((not ((v_Tuples__Tup14__2 v_si) = (v_Pervasives__op_Nil ))) -> (forall v_ms:top. (forall v_algs:top. (forall v_log:top. (forall v_payload:top. (forall v_l14920:top. ((((v_Tuples__Tup14__10 v_si) = (v_Tuples__Tup14__10 v_si)) /\ (exists v_l14983:top. (exists v_l14981:top. (exists v_l14979:top. (exists v_l14977:top. (exists v_l14975:top. (exists v_l14973:top. (exists v_l14971:top. (exists v_l14969:top. (exists v_l14967:top. (exists v_l14965:top. (exists v_l14963:top. (exists v_l14961:top. (exists v_l14959:top. (exists v_l14957:top. ((v_si = (v_Tuples__Tup14 v_l14957 v_l14959 v_l14961 v_l14963 v_l14965 v_l14967 v_l14969 v_l14971 v_l14973 v_l14975 v_l14977 v_l14979 v_l14981 v_l14983)) /\ ((v_Tuples__Tup14__10 v_si) = v_l14975))))))))))))))))) -> (forall v_res:top. ((exists v_a1492815077:top. (exists v_p1492915080:top. ((v_res = (v_Tuples__Tup2 v_a1492815077 v_p1492915080)) /\ ((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_a1492815077 v_p1492915080 (v_Tuples__Tup14__10 v_si)))))) -> (((v_Error__Correct v_res) = v_l14920) -> (((v_Error__Correct v_res) = v_l14920) -> (forall v_alg:top. ((exists v_l5991507815095:top. (exists v_l6001507915096:top. (v_alg = (v_Tuples__Tup2 v_l5991507815095 v_l6001507915096)))) -> (forall v_signature:top. (((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_alg v_signature (v_Tuples__Tup14__10 v_si))) -> (((v_Tuples__Tup2 v_alg v_signature) = v_res) -> (((v_Tuples__Tup2 v_alg v_signature) = v_res) -> ((exists v_l15127:top. (exists v_l15125:top. (exists v_l15123:top. (exists v_l15121:top. (exists v_l15119:top. (exists v_l15117:top. (exists v_l15115:top. (exists v_l15113:top. (exists v_l15111:top. (exists v_l15109:top. (exists v_l15107:top. (exists v_l15105:top. (exists v_l15103:top. (exists v_l15101:top. ((v_si = (v_Tuples__Tup14 v_l15101 v_l15103 v_l15105 v_l15107 v_l15109 v_l15111 v_l15113 v_l15115 v_l15117 v_l15119 v_l15121 v_l15123 v_l15125 v_l15127)) /\ ((v_TLSConstants__TLS_1p2 ) = v_l15119)))))))))))))))) -> (((v_TLSConstants__TLS_1p2 ) = (v_Tuples__Tup14__10 v_si)) -> (((v_TLSConstants__TLS_1p2 ) = (v_Tuples__Tup14__10 v_si)) -> (forall v_l15200:top. ((((v_Tuples__Tup14__2 v_si) = (v_Tuples__Tup14__2 v_si)) /\ (exists v_l15236:top. (exists v_l15234:top. (exists v_l15232:top. (exists v_l15230:top. (exists v_l15228:top. (exists v_l15226:top. (exists v_l15224:top. (exists v_l15222:top. (exists v_l15220:top. (exists v_l15218:top. (exists v_l15216:top. (exists v_l15214:top. (exists v_l15212:top. (exists v_l15210:top. ((v_si = (v_Tuples__Tup14 v_l15210 v_l15212 v_l15214 v_l15216 v_l15218 v_l15220 v_l15222 v_l15224 v_l15226 v_l15228 v_l15230 v_l15232 v_l15234 v_l15236)) /\ ((v_Tuples__Tup14__2 v_si) = v_l15212))))))))))))))))) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l15200))) -> (forall v_vkey:top. ((v_vkey = (v_Cert__SigPKCert (v_Tuples__Tup14__2 v_si) v_alg)) -> (((v_Error__Correct v_vkey) = v_l15200) -> (((v_Error__Correct v_vkey) = v_l15200) -> (forall v_res49:top. ((((v_vkey = v_vkey) /\ (v_vkey = (v_Cert__SigPKCert (v_Tuples__Tup14__2 v_si) v_alg))) /\ ((v_signature = v_signature) /\ (((v_res49 = v_Pervasives__True) /\ ((v_Sig__Strong_p v_alg) /\ (v_Sig__Honest_p v_alg v_vkey))) -> (v_Sig__Msg_p v_alg v_vkey v_log)))) -> ((v_res49 = v_Pervasives__True) -> (((v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_certificate_verify ) (v_Bytes__B v_payload)) = (v_HandshakeMessages__CertificateVerifyMsg (v_Tuples__Tup14__10 v_si) v_alg v_signature)) /\ (((not ((v_Tuples__Tup14__10 v_si) = (v_TLSConstants__SSL_3p0 ))) /\ ((v_Sig__Strong_p v_alg) /\ (v_Sig__Honest_p v_alg (v_Cert__SigPKCert (v_Tuples__Tup14__2 v_si) v_alg)))) -> (v_Sig__Msg_p v_alg (v_Cert__SigPKCert (v_Tuples__Tup14__2 v_si) v_alg) v_log)))))))))))))))))))))))))))))))))))
(* Querying for (l1552715627:Bytes.bytes list){l1552715627 = Tuples.Tup14.2 si /\ (?l15554. (?l15552. (?l15550. (?l15548. (?l15546. (?l15544. (?l15542. (?l15540. (?l15538. (?l15536. (?l15534. (?l15532. (?l15530. (?l15528. si = (l15528, l15530, l15532, l15534, l15536, l15538, l15540, l15542, l15544, l15546, l15548, l15550, l15552, l15554) /\ l1552715627 = l15530))))))))))))))} <: (c155201552515628:Bytes.bytes list){c155201552515628 <> op_Nil ()} *)
(* query l15629 <> op_Nil () [HandshakeMessages.fs(585,18)] *)
goal g276_gl: (forall v_si:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_si = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> ((not ((v_Tuples__Tup14__2 v_si) = (v_Pervasives__op_Nil ))) -> (forall v_ms:top. (forall v_algs:top. (forall v_log:top. (forall v_payload:top. (forall v_l14920:top. ((((v_Tuples__Tup14__10 v_si) = (v_Tuples__Tup14__10 v_si)) /\ (exists v_l14983:top. (exists v_l14981:top. (exists v_l14979:top. (exists v_l14977:top. (exists v_l14975:top. (exists v_l14973:top. (exists v_l14971:top. (exists v_l14969:top. (exists v_l14967:top. (exists v_l14965:top. (exists v_l14963:top. (exists v_l14961:top. (exists v_l14959:top. (exists v_l14957:top. ((v_si = (v_Tuples__Tup14 v_l14957 v_l14959 v_l14961 v_l14963 v_l14965 v_l14967 v_l14969 v_l14971 v_l14973 v_l14975 v_l14977 v_l14979 v_l14981 v_l14983)) /\ ((v_Tuples__Tup14__10 v_si) = v_l14975))))))))))))))))) -> (forall v_res:top. ((exists v_a1492815077:top. (exists v_p1492915080:top. ((v_res = (v_Tuples__Tup2 v_a1492815077 v_p1492915080)) /\ ((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_a1492815077 v_p1492915080 (v_Tuples__Tup14__10 v_si)))))) -> (((v_Error__Correct v_res) = v_l14920) -> (((v_Error__Correct v_res) = v_l14920) -> (forall v_alg:top. ((exists v_l5991507815095:top. (exists v_l6001507915096:top. (v_alg = (v_Tuples__Tup2 v_l5991507815095 v_l6001507915096)))) -> (forall v_signature:top. (((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_alg v_signature (v_Tuples__Tup14__10 v_si))) -> (((v_Tuples__Tup2 v_alg v_signature) = v_res) -> (((v_Tuples__Tup2 v_alg v_signature) = v_res) -> ((not ((v_TLSConstants__TLS_1p2 ) = (v_Tuples__Tup14__10 v_si))) -> ((exists v_l15445:top. (exists v_l15443:top. (exists v_l15441:top. (exists v_l15439:top. (exists v_l15437:top. (exists v_l15435:top. (exists v_l15433:top. (exists v_l15431:top. (exists v_l15429:top. (exists v_l15427:top. (exists v_l15425:top. (exists v_l15423:top. (exists v_l15421:top. (exists v_l15419:top. ((v_si = (v_Tuples__Tup14 v_l15419 v_l15421 v_l15423 v_l15425 v_l15427 v_l15429 v_l15431 v_l15433 v_l15435 v_l15437 v_l15439 v_l15441 v_l15443 v_l15445)) /\ ((v_TLSConstants__TLS_1p1 ) = v_l15437)))))))))))))))) -> (((v_TLSConstants__TLS_1p1 ) = (v_Tuples__Tup14__10 v_si)) -> (((v_TLSConstants__TLS_1p1 ) = (v_Tuples__Tup14__10 v_si)) -> (forall v_l15629:top. (((v_l15629 = (v_Tuples__Tup14__2 v_si)) /\ (exists v_l15554:top. (exists v_l15552:top. (exists v_l15550:top. (exists v_l15548:top. (exists v_l15546:top. (exists v_l15544:top. (exists v_l15542:top. (exists v_l15540:top. (exists v_l15538:top. (exists v_l15536:top. (exists v_l15534:top. (exists v_l15532:top. (exists v_l15530:top. (exists v_l15528:top. ((v_si = (v_Tuples__Tup14 v_l15528 v_l15530 v_l15532 v_l15534 v_l15536 v_l15538 v_l15540 v_l15542 v_l15544 v_l15546 v_l15548 v_l15550 v_l15552 v_l15554)) /\ (v_l15629 = v_l15530))))))))))))))))) -> (not (v_l15629 = (v_Pervasives__op_Nil ))))))))))))))))))))))))))))
(* Querying for (msg) (False, alg, Bytes.empty_bytes) : (b:bool * a:(TLSConstants.sigAlg * TLSConstants.hashAlg) * sign:Bytes.bytes){b = True => MessageBytes (HT_certificate_verify (), Bytes.B (payload)) = CertificateVerifyMsg (Tuples.Tup14.10 si, a, sign) /\ Tuples.Tup14.10 si <> TLSConstants.SSL_3p0 () /\ Sig.Strong(a) /\ Sig.Honest(a, Cert.SigPKCert (Tuples.Tup14.2 si, a)) => Sig.Msg(a, Cert.SigPKCert (Tuples.Tup14.2 si, a), log)} *)
(* query False = True => MessageBytes (HT_certificate_verify (), Bytes.B (payload)) = CertificateVerifyMsg (Tuples.Tup14.10 si, alg, Bytes.empty_bytes) /\ Tuples.Tup14.10 si <> TLSConstants.SSL_3p0 () /\ Sig.Strong(alg) /\ Sig.Honest(alg, Cert.SigPKCert (Tuples.Tup14.2 si, alg)) => Sig.Msg(alg, Cert.SigPKCert (Tuples.Tup14.2 si, alg), log) [HandshakeMessages.fs(586,27)] *)
goal g277_gl: (forall v_si:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_si = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> ((not ((v_Tuples__Tup14__2 v_si) = (v_Pervasives__op_Nil ))) -> (forall v_ms:top. (forall v_algs:top. (forall v_log:top. (forall v_payload:top. (forall v_l14920:top. ((((v_Tuples__Tup14__10 v_si) = (v_Tuples__Tup14__10 v_si)) /\ (exists v_l14983:top. (exists v_l14981:top. (exists v_l14979:top. (exists v_l14977:top. (exists v_l14975:top. (exists v_l14973:top. (exists v_l14971:top. (exists v_l14969:top. (exists v_l14967:top. (exists v_l14965:top. (exists v_l14963:top. (exists v_l14961:top. (exists v_l14959:top. (exists v_l14957:top. ((v_si = (v_Tuples__Tup14 v_l14957 v_l14959 v_l14961 v_l14963 v_l14965 v_l14967 v_l14969 v_l14971 v_l14973 v_l14975 v_l14977 v_l14979 v_l14981 v_l14983)) /\ ((v_Tuples__Tup14__10 v_si) = v_l14975))))))))))))))))) -> (forall v_res:top. ((exists v_a1492815077:top. (exists v_p1492915080:top. ((v_res = (v_Tuples__Tup2 v_a1492815077 v_p1492915080)) /\ ((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_a1492815077 v_p1492915080 (v_Tuples__Tup14__10 v_si)))))) -> (((v_Error__Correct v_res) = v_l14920) -> (((v_Error__Correct v_res) = v_l14920) -> (forall v_alg:top. ((exists v_l5991507815095:top. (exists v_l6001507915096:top. (v_alg = (v_Tuples__Tup2 v_l5991507815095 v_l6001507915096)))) -> (forall v_signature:top. (((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_alg v_signature (v_Tuples__Tup14__10 v_si))) -> (((v_Tuples__Tup2 v_alg v_signature) = v_res) -> (((v_Tuples__Tup2 v_alg v_signature) = v_res) -> ((not ((v_TLSConstants__TLS_1p2 ) = (v_Tuples__Tup14__10 v_si))) -> ((exists v_l15445:top. (exists v_l15443:top. (exists v_l15441:top. (exists v_l15439:top. (exists v_l15437:top. (exists v_l15435:top. (exists v_l15433:top. (exists v_l15431:top. (exists v_l15429:top. (exists v_l15427:top. (exists v_l15425:top. (exists v_l15423:top. (exists v_l15421:top. (exists v_l15419:top. ((v_si = (v_Tuples__Tup14 v_l15419 v_l15421 v_l15423 v_l15425 v_l15427 v_l15429 v_l15431 v_l15433 v_l15435 v_l15437 v_l15439 v_l15441 v_l15443 v_l15445)) /\ ((v_TLSConstants__TLS_1p1 ) = v_l15437)))))))))))))))) -> (((v_TLSConstants__TLS_1p1 ) = (v_Tuples__Tup14__10 v_si)) -> (((v_TLSConstants__TLS_1p1 ) = (v_Tuples__Tup14__10 v_si)) -> (forall v_l15518:top. ((((v_Tuples__Tup14__2 v_si) = (v_Tuples__Tup14__2 v_si)) /\ (exists v_l15554:top. (exists v_l15552:top. (exists v_l15550:top. (exists v_l15548:top. (exists v_l15546:top. (exists v_l15544:top. (exists v_l15542:top. (exists v_l15540:top. (exists v_l15538:top. (exists v_l15536:top. (exists v_l15534:top. (exists v_l15532:top. (exists v_l15530:top. (exists v_l15528:top. ((v_si = (v_Tuples__Tup14 v_l15528 v_l15530 v_l15532 v_l15534 v_l15536 v_l15538 v_l15540 v_l15542 v_l15544 v_l15546 v_l15548 v_l15550 v_l15552 v_l15554)) /\ ((v_Tuples__Tup14__2 v_si) = v_l15530))))))))))))))))) -> (forall v_z:top. ((exists v_l59315650:top. (exists v_l59415651:top. (v_z = (v_Tuples__Tup2 v_l59315650 v_l59415651)))) -> (((v_Error__Error v_z) = v_l15518) -> (((v_Error__Error v_z) = v_l15518) -> ((v_Pervasives__False = v_Pervasives__True) -> (((v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_certificate_verify ) (v_Bytes__B v_payload)) = (v_HandshakeMessages__CertificateVerifyMsg (v_Tuples__Tup14__10 v_si) v_alg v_Bytes__empty_bytes)) /\ (((not ((v_Tuples__Tup14__10 v_si) = (v_TLSConstants__SSL_3p0 ))) /\ ((v_Sig__Strong_p v_alg) /\ (v_Sig__Honest_p v_alg (v_Cert__SigPKCert (v_Tuples__Tup14__2 v_si) v_alg)))) -> (v_Sig__Msg_p v_alg (v_Cert__SigPKCert (v_Tuples__Tup14__2 v_si) v_alg) v_log)))))))))))))))))))))))))))))))))
(* Querying for (;alg) Sig.pkey <: (;alg) Sig.pkey *)
(* query alg = alg [HandshakeMessages.fs(588,26)] *)
goal g278_gl: (forall v_si:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_si = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> ((not ((v_Tuples__Tup14__2 v_si) = (v_Pervasives__op_Nil ))) -> (forall v_ms:top. (forall v_algs:top. (forall v_log:top. (forall v_payload:top. (forall v_l14920:top. ((((v_Tuples__Tup14__10 v_si) = (v_Tuples__Tup14__10 v_si)) /\ (exists v_l14983:top. (exists v_l14981:top. (exists v_l14979:top. (exists v_l14977:top. (exists v_l14975:top. (exists v_l14973:top. (exists v_l14971:top. (exists v_l14969:top. (exists v_l14967:top. (exists v_l14965:top. (exists v_l14963:top. (exists v_l14961:top. (exists v_l14959:top. (exists v_l14957:top. ((v_si = (v_Tuples__Tup14 v_l14957 v_l14959 v_l14961 v_l14963 v_l14965 v_l14967 v_l14969 v_l14971 v_l14973 v_l14975 v_l14977 v_l14979 v_l14981 v_l14983)) /\ ((v_Tuples__Tup14__10 v_si) = v_l14975))))))))))))))))) -> (forall v_res:top. ((exists v_a1492815077:top. (exists v_p1492915080:top. ((v_res = (v_Tuples__Tup2 v_a1492815077 v_p1492915080)) /\ ((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_a1492815077 v_p1492915080 (v_Tuples__Tup14__10 v_si)))))) -> (((v_Error__Correct v_res) = v_l14920) -> (((v_Error__Correct v_res) = v_l14920) -> (forall v_alg:top. ((exists v_l5991507815095:top. (exists v_l6001507915096:top. (v_alg = (v_Tuples__Tup2 v_l5991507815095 v_l6001507915096)))) -> (forall v_signature:top. (((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_alg v_signature (v_Tuples__Tup14__10 v_si))) -> (((v_Tuples__Tup2 v_alg v_signature) = v_res) -> (((v_Tuples__Tup2 v_alg v_signature) = v_res) -> ((not ((v_TLSConstants__TLS_1p2 ) = (v_Tuples__Tup14__10 v_si))) -> ((exists v_l15445:top. (exists v_l15443:top. (exists v_l15441:top. (exists v_l15439:top. (exists v_l15437:top. (exists v_l15435:top. (exists v_l15433:top. (exists v_l15431:top. (exists v_l15429:top. (exists v_l15427:top. (exists v_l15425:top. (exists v_l15423:top. (exists v_l15421:top. (exists v_l15419:top. ((v_si = (v_Tuples__Tup14 v_l15419 v_l15421 v_l15423 v_l15425 v_l15427 v_l15429 v_l15431 v_l15433 v_l15435 v_l15437 v_l15439 v_l15441 v_l15443 v_l15445)) /\ ((v_TLSConstants__TLS_1p1 ) = v_l15437)))))))))))))))) -> (((v_TLSConstants__TLS_1p1 ) = (v_Tuples__Tup14__10 v_si)) -> (((v_TLSConstants__TLS_1p1 ) = (v_Tuples__Tup14__10 v_si)) -> (forall v_l15518:top. ((((v_Tuples__Tup14__2 v_si) = (v_Tuples__Tup14__2 v_si)) /\ (exists v_l15554:top. (exists v_l15552:top. (exists v_l15550:top. (exists v_l15548:top. (exists v_l15546:top. (exists v_l15544:top. (exists v_l15542:top. (exists v_l15540:top. (exists v_l15538:top. (exists v_l15536:top. (exists v_l15534:top. (exists v_l15532:top. (exists v_l15530:top. (exists v_l15528:top. ((v_si = (v_Tuples__Tup14 v_l15528 v_l15530 v_l15532 v_l15534 v_l15536 v_l15538 v_l15540 v_l15542 v_l15544 v_l15546 v_l15548 v_l15550 v_l15552 v_l15554)) /\ ((v_Tuples__Tup14__2 v_si) = v_l15530))))))))))))))))) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l15518))) -> (forall v_vkey:top. ((v_vkey = (v_Cert__SigPKCert (v_Tuples__Tup14__2 v_si) v_alg)) -> (((v_Error__Correct v_vkey) = v_l15518) -> (((v_Error__Correct v_vkey) = v_l15518) -> (forall v_l15709:top. (((v_l15709 = v_vkey) /\ (v_l15709 = (v_Cert__SigPKCert (v_Tuples__Tup14__2 v_si) v_alg))) -> (v_alg = v_alg)))))))))))))))))))))))))))))))))
(* Querying for (msg) (res50, alg, signature) : (b:bool * a:(TLSConstants.sigAlg * TLSConstants.hashAlg) * sign:Bytes.bytes){b = True => MessageBytes (HT_certificate_verify (), Bytes.B (payload)) = CertificateVerifyMsg (Tuples.Tup14.10 si, a, sign) /\ Tuples.Tup14.10 si <> TLSConstants.SSL_3p0 () /\ Sig.Strong(a) /\ Sig.Honest(a, Cert.SigPKCert (Tuples.Tup14.2 si, a)) => Sig.Msg(a, Cert.SigPKCert (Tuples.Tup14.2 si, a), log)} *)
(* query res50 = True => MessageBytes (HT_certificate_verify (), Bytes.B (payload)) = CertificateVerifyMsg (Tuples.Tup14.10 si, alg, signature) /\ Tuples.Tup14.10 si <> TLSConstants.SSL_3p0 () /\ Sig.Strong(alg) /\ Sig.Honest(alg, Cert.SigPKCert (Tuples.Tup14.2 si, alg)) => Sig.Msg(alg, Cert.SigPKCert (Tuples.Tup14.2 si, alg), log) [HandshakeMessages.fs(589,17)] *)
goal g279_gl: (forall v_si:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_si = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> ((not ((v_Tuples__Tup14__2 v_si) = (v_Pervasives__op_Nil ))) -> (forall v_ms:top. (forall v_algs:top. (forall v_log:top. (forall v_payload:top. (forall v_l14920:top. ((((v_Tuples__Tup14__10 v_si) = (v_Tuples__Tup14__10 v_si)) /\ (exists v_l14983:top. (exists v_l14981:top. (exists v_l14979:top. (exists v_l14977:top. (exists v_l14975:top. (exists v_l14973:top. (exists v_l14971:top. (exists v_l14969:top. (exists v_l14967:top. (exists v_l14965:top. (exists v_l14963:top. (exists v_l14961:top. (exists v_l14959:top. (exists v_l14957:top. ((v_si = (v_Tuples__Tup14 v_l14957 v_l14959 v_l14961 v_l14963 v_l14965 v_l14967 v_l14969 v_l14971 v_l14973 v_l14975 v_l14977 v_l14979 v_l14981 v_l14983)) /\ ((v_Tuples__Tup14__10 v_si) = v_l14975))))))))))))))))) -> (forall v_res:top. ((exists v_a1492815077:top. (exists v_p1492915080:top. ((v_res = (v_Tuples__Tup2 v_a1492815077 v_p1492915080)) /\ ((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_a1492815077 v_p1492915080 (v_Tuples__Tup14__10 v_si)))))) -> (((v_Error__Correct v_res) = v_l14920) -> (((v_Error__Correct v_res) = v_l14920) -> (forall v_alg:top. ((exists v_l5991507815095:top. (exists v_l6001507915096:top. (v_alg = (v_Tuples__Tup2 v_l5991507815095 v_l6001507915096)))) -> (forall v_signature:top. (((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_alg v_signature (v_Tuples__Tup14__10 v_si))) -> (((v_Tuples__Tup2 v_alg v_signature) = v_res) -> (((v_Tuples__Tup2 v_alg v_signature) = v_res) -> ((not ((v_TLSConstants__TLS_1p2 ) = (v_Tuples__Tup14__10 v_si))) -> ((exists v_l15445:top. (exists v_l15443:top. (exists v_l15441:top. (exists v_l15439:top. (exists v_l15437:top. (exists v_l15435:top. (exists v_l15433:top. (exists v_l15431:top. (exists v_l15429:top. (exists v_l15427:top. (exists v_l15425:top. (exists v_l15423:top. (exists v_l15421:top. (exists v_l15419:top. ((v_si = (v_Tuples__Tup14 v_l15419 v_l15421 v_l15423 v_l15425 v_l15427 v_l15429 v_l15431 v_l15433 v_l15435 v_l15437 v_l15439 v_l15441 v_l15443 v_l15445)) /\ ((v_TLSConstants__TLS_1p1 ) = v_l15437)))))))))))))))) -> (((v_TLSConstants__TLS_1p1 ) = (v_Tuples__Tup14__10 v_si)) -> (((v_TLSConstants__TLS_1p1 ) = (v_Tuples__Tup14__10 v_si)) -> (forall v_l15518:top. ((((v_Tuples__Tup14__2 v_si) = (v_Tuples__Tup14__2 v_si)) /\ (exists v_l15554:top. (exists v_l15552:top. (exists v_l15550:top. (exists v_l15548:top. (exists v_l15546:top. (exists v_l15544:top. (exists v_l15542:top. (exists v_l15540:top. (exists v_l15538:top. (exists v_l15536:top. (exists v_l15534:top. (exists v_l15532:top. (exists v_l15530:top. (exists v_l15528:top. ((v_si = (v_Tuples__Tup14 v_l15528 v_l15530 v_l15532 v_l15534 v_l15536 v_l15538 v_l15540 v_l15542 v_l15544 v_l15546 v_l15548 v_l15550 v_l15552 v_l15554)) /\ ((v_Tuples__Tup14__2 v_si) = v_l15530))))))))))))))))) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l15518))) -> (forall v_vkey:top. ((v_vkey = (v_Cert__SigPKCert (v_Tuples__Tup14__2 v_si) v_alg)) -> (((v_Error__Correct v_vkey) = v_l15518) -> (((v_Error__Correct v_vkey) = v_l15518) -> (forall v_res50:top. ((((v_vkey = v_vkey) /\ (v_vkey = (v_Cert__SigPKCert (v_Tuples__Tup14__2 v_si) v_alg))) /\ ((v_signature = v_signature) /\ (((v_res50 = v_Pervasives__True) /\ ((v_Sig__Strong_p v_alg) /\ (v_Sig__Honest_p v_alg v_vkey))) -> (v_Sig__Msg_p v_alg v_vkey v_log)))) -> ((v_res50 = v_Pervasives__True) -> (((v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_certificate_verify ) (v_Bytes__B v_payload)) = (v_HandshakeMessages__CertificateVerifyMsg (v_Tuples__Tup14__10 v_si) v_alg v_signature)) /\ (((not ((v_Tuples__Tup14__10 v_si) = (v_TLSConstants__SSL_3p0 ))) /\ ((v_Sig__Strong_p v_alg) /\ (v_Sig__Honest_p v_alg (v_Cert__SigPKCert (v_Tuples__Tup14__2 v_si) v_alg)))) -> (v_Sig__Msg_p v_alg (v_Cert__SigPKCert (v_Tuples__Tup14__2 v_si) v_alg) v_log))))))))))))))))))))))))))))))))))))
(* Querying for (l1584515945:Bytes.bytes list){l1584515945 = Tuples.Tup14.2 si /\ (?l15872. (?l15870. (?l15868. (?l15866. (?l15864. (?l15862. (?l15860. (?l15858. (?l15856. (?l15854. (?l15852. (?l15850. (?l15848. (?l15846. si = (l15846, l15848, l15850, l15852, l15854, l15856, l15858, l15860, l15862, l15864, l15866, l15868, l15870, l15872) /\ l1584515945 = l15848))))))))))))))} <: (c158381584315946:Bytes.bytes list){c158381584315946 <> op_Nil ()} *)
(* query l15947 <> op_Nil () [HandshakeMessages.fs(585,18)] *)
goal g280_gl: (forall v_si:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_si = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> ((not ((v_Tuples__Tup14__2 v_si) = (v_Pervasives__op_Nil ))) -> (forall v_ms:top. (forall v_algs:top. (forall v_log:top. (forall v_payload:top. (forall v_l14920:top. ((((v_Tuples__Tup14__10 v_si) = (v_Tuples__Tup14__10 v_si)) /\ (exists v_l14983:top. (exists v_l14981:top. (exists v_l14979:top. (exists v_l14977:top. (exists v_l14975:top. (exists v_l14973:top. (exists v_l14971:top. (exists v_l14969:top. (exists v_l14967:top. (exists v_l14965:top. (exists v_l14963:top. (exists v_l14961:top. (exists v_l14959:top. (exists v_l14957:top. ((v_si = (v_Tuples__Tup14 v_l14957 v_l14959 v_l14961 v_l14963 v_l14965 v_l14967 v_l14969 v_l14971 v_l14973 v_l14975 v_l14977 v_l14979 v_l14981 v_l14983)) /\ ((v_Tuples__Tup14__10 v_si) = v_l14975))))))))))))))))) -> (forall v_res:top. ((exists v_a1492815077:top. (exists v_p1492915080:top. ((v_res = (v_Tuples__Tup2 v_a1492815077 v_p1492915080)) /\ ((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_a1492815077 v_p1492915080 (v_Tuples__Tup14__10 v_si)))))) -> (((v_Error__Correct v_res) = v_l14920) -> (((v_Error__Correct v_res) = v_l14920) -> (forall v_alg:top. ((exists v_l5991507815095:top. (exists v_l6001507915096:top. (v_alg = (v_Tuples__Tup2 v_l5991507815095 v_l6001507915096)))) -> (forall v_signature:top. (((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_alg v_signature (v_Tuples__Tup14__10 v_si))) -> (((v_Tuples__Tup2 v_alg v_signature) = v_res) -> (((v_Tuples__Tup2 v_alg v_signature) = v_res) -> ((not ((v_TLSConstants__TLS_1p2 ) = (v_Tuples__Tup14__10 v_si))) -> ((not ((v_TLSConstants__TLS_1p1 ) = (v_Tuples__Tup14__10 v_si))) -> ((exists v_l15763:top. (exists v_l15761:top. (exists v_l15759:top. (exists v_l15757:top. (exists v_l15755:top. (exists v_l15753:top. (exists v_l15751:top. (exists v_l15749:top. (exists v_l15747:top. (exists v_l15745:top. (exists v_l15743:top. (exists v_l15741:top. (exists v_l15739:top. (exists v_l15737:top. ((v_si = (v_Tuples__Tup14 v_l15737 v_l15739 v_l15741 v_l15743 v_l15745 v_l15747 v_l15749 v_l15751 v_l15753 v_l15755 v_l15757 v_l15759 v_l15761 v_l15763)) /\ ((v_TLSConstants__TLS_1p0 ) = v_l15755)))))))))))))))) -> (((v_TLSConstants__TLS_1p0 ) = (v_Tuples__Tup14__10 v_si)) -> (((v_TLSConstants__TLS_1p0 ) = (v_Tuples__Tup14__10 v_si)) -> (forall v_l15947:top. (((v_l15947 = (v_Tuples__Tup14__2 v_si)) /\ (exists v_l15872:top. (exists v_l15870:top. (exists v_l15868:top. (exists v_l15866:top. (exists v_l15864:top. (exists v_l15862:top. (exists v_l15860:top. (exists v_l15858:top. (exists v_l15856:top. (exists v_l15854:top. (exists v_l15852:top. (exists v_l15850:top. (exists v_l15848:top. (exists v_l15846:top. ((v_si = (v_Tuples__Tup14 v_l15846 v_l15848 v_l15850 v_l15852 v_l15854 v_l15856 v_l15858 v_l15860 v_l15862 v_l15864 v_l15866 v_l15868 v_l15870 v_l15872)) /\ (v_l15947 = v_l15848))))))))))))))))) -> (not (v_l15947 = (v_Pervasives__op_Nil )))))))))))))))))))))))))))))
(* Querying for (msg) (False, alg, Bytes.empty_bytes) : (b:bool * a:(TLSConstants.sigAlg * TLSConstants.hashAlg) * sign:Bytes.bytes){b = True => MessageBytes (HT_certificate_verify (), Bytes.B (payload)) = CertificateVerifyMsg (Tuples.Tup14.10 si, a, sign) /\ Tuples.Tup14.10 si <> TLSConstants.SSL_3p0 () /\ Sig.Strong(a) /\ Sig.Honest(a, Cert.SigPKCert (Tuples.Tup14.2 si, a)) => Sig.Msg(a, Cert.SigPKCert (Tuples.Tup14.2 si, a), log)} *)
(* query False = True => MessageBytes (HT_certificate_verify (), Bytes.B (payload)) = CertificateVerifyMsg (Tuples.Tup14.10 si, alg, Bytes.empty_bytes) /\ Tuples.Tup14.10 si <> TLSConstants.SSL_3p0 () /\ Sig.Strong(alg) /\ Sig.Honest(alg, Cert.SigPKCert (Tuples.Tup14.2 si, alg)) => Sig.Msg(alg, Cert.SigPKCert (Tuples.Tup14.2 si, alg), log) [HandshakeMessages.fs(586,27)] *)
goal g281_gl: (forall v_si:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_si = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> ((not ((v_Tuples__Tup14__2 v_si) = (v_Pervasives__op_Nil ))) -> (forall v_ms:top. (forall v_algs:top. (forall v_log:top. (forall v_payload:top. (forall v_l14920:top. ((((v_Tuples__Tup14__10 v_si) = (v_Tuples__Tup14__10 v_si)) /\ (exists v_l14983:top. (exists v_l14981:top. (exists v_l14979:top. (exists v_l14977:top. (exists v_l14975:top. (exists v_l14973:top. (exists v_l14971:top. (exists v_l14969:top. (exists v_l14967:top. (exists v_l14965:top. (exists v_l14963:top. (exists v_l14961:top. (exists v_l14959:top. (exists v_l14957:top. ((v_si = (v_Tuples__Tup14 v_l14957 v_l14959 v_l14961 v_l14963 v_l14965 v_l14967 v_l14969 v_l14971 v_l14973 v_l14975 v_l14977 v_l14979 v_l14981 v_l14983)) /\ ((v_Tuples__Tup14__10 v_si) = v_l14975))))))))))))))))) -> (forall v_res:top. ((exists v_a1492815077:top. (exists v_p1492915080:top. ((v_res = (v_Tuples__Tup2 v_a1492815077 v_p1492915080)) /\ ((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_a1492815077 v_p1492915080 (v_Tuples__Tup14__10 v_si)))))) -> (((v_Error__Correct v_res) = v_l14920) -> (((v_Error__Correct v_res) = v_l14920) -> (forall v_alg:top. ((exists v_l5991507815095:top. (exists v_l6001507915096:top. (v_alg = (v_Tuples__Tup2 v_l5991507815095 v_l6001507915096)))) -> (forall v_signature:top. (((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_alg v_signature (v_Tuples__Tup14__10 v_si))) -> (((v_Tuples__Tup2 v_alg v_signature) = v_res) -> (((v_Tuples__Tup2 v_alg v_signature) = v_res) -> ((not ((v_TLSConstants__TLS_1p2 ) = (v_Tuples__Tup14__10 v_si))) -> ((not ((v_TLSConstants__TLS_1p1 ) = (v_Tuples__Tup14__10 v_si))) -> ((exists v_l15763:top. (exists v_l15761:top. (exists v_l15759:top. (exists v_l15757:top. (exists v_l15755:top. (exists v_l15753:top. (exists v_l15751:top. (exists v_l15749:top. (exists v_l15747:top. (exists v_l15745:top. (exists v_l15743:top. (exists v_l15741:top. (exists v_l15739:top. (exists v_l15737:top. ((v_si = (v_Tuples__Tup14 v_l15737 v_l15739 v_l15741 v_l15743 v_l15745 v_l15747 v_l15749 v_l15751 v_l15753 v_l15755 v_l15757 v_l15759 v_l15761 v_l15763)) /\ ((v_TLSConstants__TLS_1p0 ) = v_l15755)))))))))))))))) -> (((v_TLSConstants__TLS_1p0 ) = (v_Tuples__Tup14__10 v_si)) -> (((v_TLSConstants__TLS_1p0 ) = (v_Tuples__Tup14__10 v_si)) -> (forall v_l15836:top. ((((v_Tuples__Tup14__2 v_si) = (v_Tuples__Tup14__2 v_si)) /\ (exists v_l15872:top. (exists v_l15870:top. (exists v_l15868:top. (exists v_l15866:top. (exists v_l15864:top. (exists v_l15862:top. (exists v_l15860:top. (exists v_l15858:top. (exists v_l15856:top. (exists v_l15854:top. (exists v_l15852:top. (exists v_l15850:top. (exists v_l15848:top. (exists v_l15846:top. ((v_si = (v_Tuples__Tup14 v_l15846 v_l15848 v_l15850 v_l15852 v_l15854 v_l15856 v_l15858 v_l15860 v_l15862 v_l15864 v_l15866 v_l15868 v_l15870 v_l15872)) /\ ((v_Tuples__Tup14__2 v_si) = v_l15848))))))))))))))))) -> (forall v_z:top. ((exists v_l59315968:top. (exists v_l59415969:top. (v_z = (v_Tuples__Tup2 v_l59315968 v_l59415969)))) -> (((v_Error__Error v_z) = v_l15836) -> (((v_Error__Error v_z) = v_l15836) -> ((v_Pervasives__False = v_Pervasives__True) -> (((v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_certificate_verify ) (v_Bytes__B v_payload)) = (v_HandshakeMessages__CertificateVerifyMsg (v_Tuples__Tup14__10 v_si) v_alg v_Bytes__empty_bytes)) /\ (((not ((v_Tuples__Tup14__10 v_si) = (v_TLSConstants__SSL_3p0 ))) /\ ((v_Sig__Strong_p v_alg) /\ (v_Sig__Honest_p v_alg (v_Cert__SigPKCert (v_Tuples__Tup14__2 v_si) v_alg)))) -> (v_Sig__Msg_p v_alg (v_Cert__SigPKCert (v_Tuples__Tup14__2 v_si) v_alg) v_log))))))))))))))))))))))))))))))))))
(* Querying for (;alg) Sig.pkey <: (;alg) Sig.pkey *)
(* query alg = alg [HandshakeMessages.fs(588,26)] *)
goal g282_gl: (forall v_si:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_si = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> ((not ((v_Tuples__Tup14__2 v_si) = (v_Pervasives__op_Nil ))) -> (forall v_ms:top. (forall v_algs:top. (forall v_log:top. (forall v_payload:top. (forall v_l14920:top. ((((v_Tuples__Tup14__10 v_si) = (v_Tuples__Tup14__10 v_si)) /\ (exists v_l14983:top. (exists v_l14981:top. (exists v_l14979:top. (exists v_l14977:top. (exists v_l14975:top. (exists v_l14973:top. (exists v_l14971:top. (exists v_l14969:top. (exists v_l14967:top. (exists v_l14965:top. (exists v_l14963:top. (exists v_l14961:top. (exists v_l14959:top. (exists v_l14957:top. ((v_si = (v_Tuples__Tup14 v_l14957 v_l14959 v_l14961 v_l14963 v_l14965 v_l14967 v_l14969 v_l14971 v_l14973 v_l14975 v_l14977 v_l14979 v_l14981 v_l14983)) /\ ((v_Tuples__Tup14__10 v_si) = v_l14975))))))))))))))))) -> (forall v_res:top. ((exists v_a1492815077:top. (exists v_p1492915080:top. ((v_res = (v_Tuples__Tup2 v_a1492815077 v_p1492915080)) /\ ((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_a1492815077 v_p1492915080 (v_Tuples__Tup14__10 v_si)))))) -> (((v_Error__Correct v_res) = v_l14920) -> (((v_Error__Correct v_res) = v_l14920) -> (forall v_alg:top. ((exists v_l5991507815095:top. (exists v_l6001507915096:top. (v_alg = (v_Tuples__Tup2 v_l5991507815095 v_l6001507915096)))) -> (forall v_signature:top. (((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_alg v_signature (v_Tuples__Tup14__10 v_si))) -> (((v_Tuples__Tup2 v_alg v_signature) = v_res) -> (((v_Tuples__Tup2 v_alg v_signature) = v_res) -> ((not ((v_TLSConstants__TLS_1p2 ) = (v_Tuples__Tup14__10 v_si))) -> ((not ((v_TLSConstants__TLS_1p1 ) = (v_Tuples__Tup14__10 v_si))) -> ((exists v_l15763:top. (exists v_l15761:top. (exists v_l15759:top. (exists v_l15757:top. (exists v_l15755:top. (exists v_l15753:top. (exists v_l15751:top. (exists v_l15749:top. (exists v_l15747:top. (exists v_l15745:top. (exists v_l15743:top. (exists v_l15741:top. (exists v_l15739:top. (exists v_l15737:top. ((v_si = (v_Tuples__Tup14 v_l15737 v_l15739 v_l15741 v_l15743 v_l15745 v_l15747 v_l15749 v_l15751 v_l15753 v_l15755 v_l15757 v_l15759 v_l15761 v_l15763)) /\ ((v_TLSConstants__TLS_1p0 ) = v_l15755)))))))))))))))) -> (((v_TLSConstants__TLS_1p0 ) = (v_Tuples__Tup14__10 v_si)) -> (((v_TLSConstants__TLS_1p0 ) = (v_Tuples__Tup14__10 v_si)) -> (forall v_l15836:top. ((((v_Tuples__Tup14__2 v_si) = (v_Tuples__Tup14__2 v_si)) /\ (exists v_l15872:top. (exists v_l15870:top. (exists v_l15868:top. (exists v_l15866:top. (exists v_l15864:top. (exists v_l15862:top. (exists v_l15860:top. (exists v_l15858:top. (exists v_l15856:top. (exists v_l15854:top. (exists v_l15852:top. (exists v_l15850:top. (exists v_l15848:top. (exists v_l15846:top. ((v_si = (v_Tuples__Tup14 v_l15846 v_l15848 v_l15850 v_l15852 v_l15854 v_l15856 v_l15858 v_l15860 v_l15862 v_l15864 v_l15866 v_l15868 v_l15870 v_l15872)) /\ ((v_Tuples__Tup14__2 v_si) = v_l15848))))))))))))))))) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l15836))) -> (forall v_vkey:top. ((v_vkey = (v_Cert__SigPKCert (v_Tuples__Tup14__2 v_si) v_alg)) -> (((v_Error__Correct v_vkey) = v_l15836) -> (((v_Error__Correct v_vkey) = v_l15836) -> (forall v_l16027:top. (((v_l16027 = v_vkey) /\ (v_l16027 = (v_Cert__SigPKCert (v_Tuples__Tup14__2 v_si) v_alg))) -> (v_alg = v_alg))))))))))))))))))))))))))))))))))
(* Querying for (msg) (res51, alg, signature) : (b:bool * a:(TLSConstants.sigAlg * TLSConstants.hashAlg) * sign:Bytes.bytes){b = True => MessageBytes (HT_certificate_verify (), Bytes.B (payload)) = CertificateVerifyMsg (Tuples.Tup14.10 si, a, sign) /\ Tuples.Tup14.10 si <> TLSConstants.SSL_3p0 () /\ Sig.Strong(a) /\ Sig.Honest(a, Cert.SigPKCert (Tuples.Tup14.2 si, a)) => Sig.Msg(a, Cert.SigPKCert (Tuples.Tup14.2 si, a), log)} *)
(* query res51 = True => MessageBytes (HT_certificate_verify (), Bytes.B (payload)) = CertificateVerifyMsg (Tuples.Tup14.10 si, alg, signature) /\ Tuples.Tup14.10 si <> TLSConstants.SSL_3p0 () /\ Sig.Strong(alg) /\ Sig.Honest(alg, Cert.SigPKCert (Tuples.Tup14.2 si, alg)) => Sig.Msg(alg, Cert.SigPKCert (Tuples.Tup14.2 si, alg), log) [HandshakeMessages.fs(589,17)] *)
goal g283_gl: (forall v_si:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_si = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> ((not ((v_Tuples__Tup14__2 v_si) = (v_Pervasives__op_Nil ))) -> (forall v_ms:top. (forall v_algs:top. (forall v_log:top. (forall v_payload:top. (forall v_l14920:top. ((((v_Tuples__Tup14__10 v_si) = (v_Tuples__Tup14__10 v_si)) /\ (exists v_l14983:top. (exists v_l14981:top. (exists v_l14979:top. (exists v_l14977:top. (exists v_l14975:top. (exists v_l14973:top. (exists v_l14971:top. (exists v_l14969:top. (exists v_l14967:top. (exists v_l14965:top. (exists v_l14963:top. (exists v_l14961:top. (exists v_l14959:top. (exists v_l14957:top. ((v_si = (v_Tuples__Tup14 v_l14957 v_l14959 v_l14961 v_l14963 v_l14965 v_l14967 v_l14969 v_l14971 v_l14973 v_l14975 v_l14977 v_l14979 v_l14981 v_l14983)) /\ ((v_Tuples__Tup14__10 v_si) = v_l14975))))))))))))))))) -> (forall v_res:top. ((exists v_a1492815077:top. (exists v_p1492915080:top. ((v_res = (v_Tuples__Tup2 v_a1492815077 v_p1492915080)) /\ ((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_a1492815077 v_p1492915080 (v_Tuples__Tup14__10 v_si)))))) -> (((v_Error__Correct v_res) = v_l14920) -> (((v_Error__Correct v_res) = v_l14920) -> (forall v_alg:top. ((exists v_l5991507815095:top. (exists v_l6001507915096:top. (v_alg = (v_Tuples__Tup2 v_l5991507815095 v_l6001507915096)))) -> (forall v_signature:top. (((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_alg v_signature (v_Tuples__Tup14__10 v_si))) -> (((v_Tuples__Tup2 v_alg v_signature) = v_res) -> (((v_Tuples__Tup2 v_alg v_signature) = v_res) -> ((not ((v_TLSConstants__TLS_1p2 ) = (v_Tuples__Tup14__10 v_si))) -> ((not ((v_TLSConstants__TLS_1p1 ) = (v_Tuples__Tup14__10 v_si))) -> ((exists v_l15763:top. (exists v_l15761:top. (exists v_l15759:top. (exists v_l15757:top. (exists v_l15755:top. (exists v_l15753:top. (exists v_l15751:top. (exists v_l15749:top. (exists v_l15747:top. (exists v_l15745:top. (exists v_l15743:top. (exists v_l15741:top. (exists v_l15739:top. (exists v_l15737:top. ((v_si = (v_Tuples__Tup14 v_l15737 v_l15739 v_l15741 v_l15743 v_l15745 v_l15747 v_l15749 v_l15751 v_l15753 v_l15755 v_l15757 v_l15759 v_l15761 v_l15763)) /\ ((v_TLSConstants__TLS_1p0 ) = v_l15755)))))))))))))))) -> (((v_TLSConstants__TLS_1p0 ) = (v_Tuples__Tup14__10 v_si)) -> (((v_TLSConstants__TLS_1p0 ) = (v_Tuples__Tup14__10 v_si)) -> (forall v_l15836:top. ((((v_Tuples__Tup14__2 v_si) = (v_Tuples__Tup14__2 v_si)) /\ (exists v_l15872:top. (exists v_l15870:top. (exists v_l15868:top. (exists v_l15866:top. (exists v_l15864:top. (exists v_l15862:top. (exists v_l15860:top. (exists v_l15858:top. (exists v_l15856:top. (exists v_l15854:top. (exists v_l15852:top. (exists v_l15850:top. (exists v_l15848:top. (exists v_l15846:top. ((v_si = (v_Tuples__Tup14 v_l15846 v_l15848 v_l15850 v_l15852 v_l15854 v_l15856 v_l15858 v_l15860 v_l15862 v_l15864 v_l15866 v_l15868 v_l15870 v_l15872)) /\ ((v_Tuples__Tup14__2 v_si) = v_l15848))))))))))))))))) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l15836))) -> (forall v_vkey:top. ((v_vkey = (v_Cert__SigPKCert (v_Tuples__Tup14__2 v_si) v_alg)) -> (((v_Error__Correct v_vkey) = v_l15836) -> (((v_Error__Correct v_vkey) = v_l15836) -> (forall v_res51:top. ((((v_vkey = v_vkey) /\ (v_vkey = (v_Cert__SigPKCert (v_Tuples__Tup14__2 v_si) v_alg))) /\ ((v_signature = v_signature) /\ (((v_res51 = v_Pervasives__True) /\ ((v_Sig__Strong_p v_alg) /\ (v_Sig__Honest_p v_alg v_vkey))) -> (v_Sig__Msg_p v_alg v_vkey v_log)))) -> ((v_res51 = v_Pervasives__True) -> (((v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_certificate_verify ) (v_Bytes__B v_payload)) = (v_HandshakeMessages__CertificateVerifyMsg (v_Tuples__Tup14__10 v_si) v_alg v_signature)) /\ (((not ((v_Tuples__Tup14__10 v_si) = (v_TLSConstants__SSL_3p0 ))) /\ ((v_Sig__Strong_p v_alg) /\ (v_Sig__Honest_p v_alg (v_Cert__SigPKCert (v_Tuples__Tup14__2 v_si) v_alg)))) -> (v_Sig__Msg_p v_alg (v_Cert__SigPKCert (v_Tuples__Tup14__2 v_si) v_alg) v_log)))))))))))))))))))))))))))))))))))))
(* Querying for (cipher_suite23871617716195:TLSConstants.cipherSuite * clientID23881617816196:Bytes.bytes list * clientSigAlg23891617916197:(TLSConstants.sigAlg * TLSConstants.hashAlg) * client_auth23901618216200:bool * compression23911618316201:TLSConstants.PreCompression * extensions23921618416202:TLSInfo.negotiatedExtension list * init_crand23931618516203:Bytes.bytes * init_srand23941618616204:Bytes.bytes * pmsId23951618716205:TLSInfo.pmsId * protocol_version23961618816206:TLSConstants.PreProtocolVersion * serverID23971618916207:Bytes.bytes list * serverSigAlg23981619016208:(TLSConstants.sigAlg * TLSConstants.hashAlg) * sessionID23991619316211:Bytes.bytes * session_hash24001619416212:Bytes.bytes){TLSConstants.IsCompression(compression23911618316201) /\ Bytes.Length (init_crand23931618516203) = 32 /\ Bytes.Length (init_srand23941618616204) = 32 /\ TLSConstants.IsProtocolVersion(protocol_version23961618816206) /\ pr_LessThanOrEqual(Bytes.Length (sessionID23991619316211), 32) /\ (cipher_suite23871617716195, clientID23881617816196, clientSigAlg23891617916197, client_auth23901618216200, compression23911618316201, extensions23921618416202, init_crand23931618516203, init_srand23941618616204, pmsId23951618716205, protocol_version23961618816206, serverID23971618916207, serverSigAlg23981619016208, sessionID23991619316211, session_hash24001619416212) = si} <: (cipher_suite238716213:TLSConstants.cipherSuite * clientID238816214:Bytes.bytes list * clientSigAlg238916215:(TLSConstants.sigAlg * TLSConstants.hashAlg) * client_auth239016218:bool * compression239116219:TLSConstants.PreCompression * extensions239216220:TLSInfo.negotiatedExtension list * init_crand239316221:Bytes.bytes * init_srand239416222:Bytes.bytes * pmsId239516223:TLSInfo.pmsId * protocol_version239616224:TLSConstants.PreProtocolVersion * serverID239716225:Bytes.bytes list * serverSigAlg239816226:(TLSConstants.sigAlg * TLSConstants.hashAlg) * sessionID239916229:Bytes.bytes * session_hash240016230:Bytes.bytes){TLSConstants.IsCompression(compression239116219) /\ Bytes.Length (init_crand239316221) = 32 /\ Bytes.Length (init_srand239416222) = 32 /\ TLSConstants.IsProtocolVersion(protocol_version239616224) /\ pr_LessThanOrEqual(Bytes.Length (sessionID239916229), 32) /\ not TLSInfo.SafeVD((cipher_suite238716213, clientID238816214, clientSigAlg238916215, client_auth239016218, compression239116219, extensions239216220, init_crand239316221, init_srand239416222, pmsId239516223, protocol_version239616224, serverID239716225, serverSigAlg239816226, sessionID239916229, session_hash240016230))} *)
(* query TLSConstants.IsCompression(l16235) /\ Bytes.Length (l16237) = 32 /\ Bytes.Length (l16238) = 32 /\ TLSConstants.IsProtocolVersion(l16240) /\ pr_LessThanOrEqual(Bytes.Length (l16243), 32) /\ not TLSInfo.SafeVD((l16231, l16232, l16233, l16234, l16235, l16236, l16237, l16238, l16239, l16240, l16241, l16242, l16243, l16244)) [HandshakeMessages.fs(593,27)] *)
goal g284_gl: (forall v_si:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_si = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> ((not ((v_Tuples__Tup14__2 v_si) = (v_Pervasives__op_Nil ))) -> (forall v_ms:top. (forall v_algs:top. (forall v_log:top. (forall v_payload:top. (forall v_l14920:top. ((((v_Tuples__Tup14__10 v_si) = (v_Tuples__Tup14__10 v_si)) /\ (exists v_l14983:top. (exists v_l14981:top. (exists v_l14979:top. (exists v_l14977:top. (exists v_l14975:top. (exists v_l14973:top. (exists v_l14971:top. (exists v_l14969:top. (exists v_l14967:top. (exists v_l14965:top. (exists v_l14963:top. (exists v_l14961:top. (exists v_l14959:top. (exists v_l14957:top. ((v_si = (v_Tuples__Tup14 v_l14957 v_l14959 v_l14961 v_l14963 v_l14965 v_l14967 v_l14969 v_l14971 v_l14973 v_l14975 v_l14977 v_l14979 v_l14981 v_l14983)) /\ ((v_Tuples__Tup14__10 v_si) = v_l14975))))))))))))))))) -> (forall v_res:top. ((exists v_a1492815077:top. (exists v_p1492915080:top. ((v_res = (v_Tuples__Tup2 v_a1492815077 v_p1492915080)) /\ ((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_a1492815077 v_p1492915080 (v_Tuples__Tup14__10 v_si)))))) -> (((v_Error__Correct v_res) = v_l14920) -> (((v_Error__Correct v_res) = v_l14920) -> (forall v_alg:top. ((exists v_l5991507815095:top. (exists v_l6001507915096:top. (v_alg = (v_Tuples__Tup2 v_l5991507815095 v_l6001507915096)))) -> (forall v_signature:top. (((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_alg v_signature (v_Tuples__Tup14__10 v_si))) -> (((v_Tuples__Tup2 v_alg v_signature) = v_res) -> (((v_Tuples__Tup2 v_alg v_signature) = v_res) -> ((not ((v_TLSConstants__TLS_1p2 ) = (v_Tuples__Tup14__10 v_si))) -> ((not ((v_TLSConstants__TLS_1p1 ) = (v_Tuples__Tup14__10 v_si))) -> ((not ((v_TLSConstants__TLS_1p0 ) = (v_Tuples__Tup14__10 v_si))) -> ((exists v_l16081:top. (exists v_l16079:top. (exists v_l16077:top. (exists v_l16075:top. (exists v_l16073:top. (exists v_l16071:top. (exists v_l16069:top. (exists v_l16067:top. (exists v_l16065:top. (exists v_l16063:top. (exists v_l16061:top. (exists v_l16059:top. (exists v_l16057:top. (exists v_l16055:top. ((v_si = (v_Tuples__Tup14 v_l16055 v_l16057 v_l16059 v_l16061 v_l16063 v_l16065 v_l16067 v_l16069 v_l16071 v_l16073 v_l16075 v_l16077 v_l16079 v_l16081)) /\ ((v_TLSConstants__SSL_3p0 ) = v_l16073)))))))))))))))) -> (((v_TLSConstants__SSL_3p0 ) = (v_Tuples__Tup14__10 v_si)) -> (((v_TLSConstants__SSL_3p0 ) = (v_Tuples__Tup14__10 v_si)) -> (forall v_sigAlg:top. (forall v_l14918:top. (((v_Tuples__Tup2 v_sigAlg v_l14918) = v_alg) -> (((v_Tuples__Tup2 v_sigAlg v_l14918) = v_alg) -> (forall v_alg52:top. ((exists v_l16158:top. (exists v_l16159:top. ((v_alg52 = (v_Tuples__Tup2 v_l16158 v_l16159)) /\ ((v_Tuples__Tup2 v_l16158 v_l16159) = (v_Tuples__Tup2 v_sigAlg (v_TLSConstants__NULL )))))) -> ((v_alg52 = (v_Tuples__Tup2 v_sigAlg (v_TLSConstants__NULL ))) -> (forall v_l16231:top. (forall v_l16232:top. (forall v_l16233:top. ((exists v_l5991618016198:top. (exists v_l6001618116199:top. (v_l16233 = (v_Tuples__Tup2 v_l5991618016198 v_l6001618116199)))) -> (forall v_l16234:top. (forall v_l16235:top. (forall v_l16236:top. (forall v_l16237:top. (forall v_l16238:top. (forall v_l16239:top. (forall v_l16240:top. (forall v_l16241:top. (forall v_l16242:top. ((exists v_l5991619116209:top. (exists v_l6001619216210:top. (v_l16242 = (v_Tuples__Tup2 v_l5991619116209 v_l6001619216210)))) -> (forall v_l16243:top. (forall v_l16244:top. (((((((v_TLSConstants__IsCompression_p v_l16235) /\ ((v_Bytes__Length v_l16237) = 32)) /\ ((v_Bytes__Length v_l16238) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_l16240)) /\ ((v_Bytes__Length v_l16243) <= 32)) /\ ((v_Tuples__Tup14 v_l16231 v_l16232 v_l16233 v_l16234 v_l16235 v_l16236 v_l16237 v_l16238 v_l16239 v_l16240 v_l16241 v_l16242 v_l16243 v_l16244) = v_si)) -> ((((((v_TLSConstants__IsCompression_p v_l16235) /\ ((v_Bytes__Length v_l16237) = 32)) /\ ((v_Bytes__Length v_l16238) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_l16240)) /\ ((v_Bytes__Length v_l16243) <= 32)) /\ (not (v_TLSInfo__SafeVD_p (v_Tuples__Tup14 v_l16231 v_l16232 v_l16233 v_l16234 v_l16235 v_l16236 v_l16237 v_l16238 v_l16239 v_l16240 v_l16241 v_l16242 v_l16243 v_l16244)))))))))))))))))))))))))))))))))))))))))))))))))))))
(* Querying for (;TLSInfo.MsI (si)) PRF.ms <: (;TLSInfo.MsI (si)) PRF.ms *)
(* query TLSInfo.MsI (si) = TLSInfo.MsI (si) [HandshakeMessages.fs(593,27)] *)
goal g285_gl: (forall v_si:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_si = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> ((not ((v_Tuples__Tup14__2 v_si) = (v_Pervasives__op_Nil ))) -> (forall v_ms:top. (forall v_algs:top. (forall v_log:top. (forall v_payload:top. (forall v_l14920:top. ((((v_Tuples__Tup14__10 v_si) = (v_Tuples__Tup14__10 v_si)) /\ (exists v_l14983:top. (exists v_l14981:top. (exists v_l14979:top. (exists v_l14977:top. (exists v_l14975:top. (exists v_l14973:top. (exists v_l14971:top. (exists v_l14969:top. (exists v_l14967:top. (exists v_l14965:top. (exists v_l14963:top. (exists v_l14961:top. (exists v_l14959:top. (exists v_l14957:top. ((v_si = (v_Tuples__Tup14 v_l14957 v_l14959 v_l14961 v_l14963 v_l14965 v_l14967 v_l14969 v_l14971 v_l14973 v_l14975 v_l14977 v_l14979 v_l14981 v_l14983)) /\ ((v_Tuples__Tup14__10 v_si) = v_l14975))))))))))))))))) -> (forall v_res:top. ((exists v_a1492815077:top. (exists v_p1492915080:top. ((v_res = (v_Tuples__Tup2 v_a1492815077 v_p1492915080)) /\ ((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_a1492815077 v_p1492915080 (v_Tuples__Tup14__10 v_si)))))) -> (((v_Error__Correct v_res) = v_l14920) -> (((v_Error__Correct v_res) = v_l14920) -> (forall v_alg:top. ((exists v_l5991507815095:top. (exists v_l6001507915096:top. (v_alg = (v_Tuples__Tup2 v_l5991507815095 v_l6001507915096)))) -> (forall v_signature:top. (((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_alg v_signature (v_Tuples__Tup14__10 v_si))) -> (((v_Tuples__Tup2 v_alg v_signature) = v_res) -> (((v_Tuples__Tup2 v_alg v_signature) = v_res) -> ((not ((v_TLSConstants__TLS_1p2 ) = (v_Tuples__Tup14__10 v_si))) -> ((not ((v_TLSConstants__TLS_1p1 ) = (v_Tuples__Tup14__10 v_si))) -> ((not ((v_TLSConstants__TLS_1p0 ) = (v_Tuples__Tup14__10 v_si))) -> ((exists v_l16081:top. (exists v_l16079:top. (exists v_l16077:top. (exists v_l16075:top. (exists v_l16073:top. (exists v_l16071:top. (exists v_l16069:top. (exists v_l16067:top. (exists v_l16065:top. (exists v_l16063:top. (exists v_l16061:top. (exists v_l16059:top. (exists v_l16057:top. (exists v_l16055:top. ((v_si = (v_Tuples__Tup14 v_l16055 v_l16057 v_l16059 v_l16061 v_l16063 v_l16065 v_l16067 v_l16069 v_l16071 v_l16073 v_l16075 v_l16077 v_l16079 v_l16081)) /\ ((v_TLSConstants__SSL_3p0 ) = v_l16073)))))))))))))))) -> (((v_TLSConstants__SSL_3p0 ) = (v_Tuples__Tup14__10 v_si)) -> (((v_TLSConstants__SSL_3p0 ) = (v_Tuples__Tup14__10 v_si)) -> (forall v_sigAlg:top. (forall v_l14918:top. (((v_Tuples__Tup2 v_sigAlg v_l14918) = v_alg) -> (((v_Tuples__Tup2 v_sigAlg v_l14918) = v_alg) -> (forall v_alg52:top. ((exists v_l16158:top. (exists v_l16159:top. ((v_alg52 = (v_Tuples__Tup2 v_l16158 v_l16159)) /\ ((v_Tuples__Tup2 v_l16158 v_l16159) = (v_Tuples__Tup2 v_sigAlg (v_TLSConstants__NULL )))))) -> ((v_alg52 = (v_Tuples__Tup2 v_sigAlg (v_TLSConstants__NULL ))) -> (forall v_l16260:top. ((v_l16260 = v_ms) -> ((v_TLSInfo__MsI v_si) = (v_TLSInfo__MsI v_si))))))))))))))))))))))))))))))))))))
(* Querying for (l1628116381:Bytes.bytes list){l1628116381 = Tuples.Tup14.2 si /\ (?l16308. (?l16306. (?l16304. (?l16302. (?l16300. (?l16298. (?l16296. (?l16294. (?l16292. (?l16290. (?l16288. (?l16286. (?l16284. (?l16282. si = (l16282, l16284, l16286, l16288, l16290, l16292, l16294, l16296, l16298, l16300, l16302, l16304, l16306, l16308) /\ l1628116381 = l16284))))))))))))))} <: (c162741627916382:Bytes.bytes list){c162741627916382 <> op_Nil ()} *)
(* query l16383 <> op_Nil () [HandshakeMessages.fs(594,18)] *)
goal g286_gl: (forall v_si:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_si = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> ((not ((v_Tuples__Tup14__2 v_si) = (v_Pervasives__op_Nil ))) -> (forall v_ms:top. (forall v_algs:top. (forall v_log:top. (forall v_payload:top. (forall v_l14920:top. ((((v_Tuples__Tup14__10 v_si) = (v_Tuples__Tup14__10 v_si)) /\ (exists v_l14983:top. (exists v_l14981:top. (exists v_l14979:top. (exists v_l14977:top. (exists v_l14975:top. (exists v_l14973:top. (exists v_l14971:top. (exists v_l14969:top. (exists v_l14967:top. (exists v_l14965:top. (exists v_l14963:top. (exists v_l14961:top. (exists v_l14959:top. (exists v_l14957:top. ((v_si = (v_Tuples__Tup14 v_l14957 v_l14959 v_l14961 v_l14963 v_l14965 v_l14967 v_l14969 v_l14971 v_l14973 v_l14975 v_l14977 v_l14979 v_l14981 v_l14983)) /\ ((v_Tuples__Tup14__10 v_si) = v_l14975))))))))))))))))) -> (forall v_res:top. ((exists v_a1492815077:top. (exists v_p1492915080:top. ((v_res = (v_Tuples__Tup2 v_a1492815077 v_p1492915080)) /\ ((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_a1492815077 v_p1492915080 (v_Tuples__Tup14__10 v_si)))))) -> (((v_Error__Correct v_res) = v_l14920) -> (((v_Error__Correct v_res) = v_l14920) -> (forall v_alg:top. ((exists v_l5991507815095:top. (exists v_l6001507915096:top. (v_alg = (v_Tuples__Tup2 v_l5991507815095 v_l6001507915096)))) -> (forall v_signature:top. (((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_alg v_signature (v_Tuples__Tup14__10 v_si))) -> (((v_Tuples__Tup2 v_alg v_signature) = v_res) -> (((v_Tuples__Tup2 v_alg v_signature) = v_res) -> ((not ((v_TLSConstants__TLS_1p2 ) = (v_Tuples__Tup14__10 v_si))) -> ((not ((v_TLSConstants__TLS_1p1 ) = (v_Tuples__Tup14__10 v_si))) -> ((not ((v_TLSConstants__TLS_1p0 ) = (v_Tuples__Tup14__10 v_si))) -> ((exists v_l16081:top. (exists v_l16079:top. (exists v_l16077:top. (exists v_l16075:top. (exists v_l16073:top. (exists v_l16071:top. (exists v_l16069:top. (exists v_l16067:top. (exists v_l16065:top. (exists v_l16063:top. (exists v_l16061:top. (exists v_l16059:top. (exists v_l16057:top. (exists v_l16055:top. ((v_si = (v_Tuples__Tup14 v_l16055 v_l16057 v_l16059 v_l16061 v_l16063 v_l16065 v_l16067 v_l16069 v_l16071 v_l16073 v_l16075 v_l16077 v_l16079 v_l16081)) /\ ((v_TLSConstants__SSL_3p0 ) = v_l16073)))))))))))))))) -> (((v_TLSConstants__SSL_3p0 ) = (v_Tuples__Tup14__10 v_si)) -> (((v_TLSConstants__SSL_3p0 ) = (v_Tuples__Tup14__10 v_si)) -> (forall v_sigAlg:top. (forall v_l14918:top. (((v_Tuples__Tup2 v_sigAlg v_l14918) = v_alg) -> (((v_Tuples__Tup2 v_sigAlg v_l14918) = v_alg) -> (forall v_alg52:top. ((exists v_l16158:top. (exists v_l16159:top. ((v_alg52 = (v_Tuples__Tup2 v_l16158 v_l16159)) /\ ((v_Tuples__Tup2 v_l16158 v_l16159) = (v_Tuples__Tup2 v_sigAlg (v_TLSConstants__NULL )))))) -> ((v_alg52 = (v_Tuples__Tup2 v_sigAlg (v_TLSConstants__NULL ))) -> (forall v_expected:top. ((v_log = v_log) -> (forall v_l16383:top. (((v_l16383 = (v_Tuples__Tup14__2 v_si)) /\ (exists v_l16308:top. (exists v_l16306:top. (exists v_l16304:top. (exists v_l16302:top. (exists v_l16300:top. (exists v_l16298:top. (exists v_l16296:top. (exists v_l16294:top. (exists v_l16292:top. (exists v_l16290:top. (exists v_l16288:top. (exists v_l16286:top. (exists v_l16284:top. (exists v_l16282:top. ((v_si = (v_Tuples__Tup14 v_l16282 v_l16284 v_l16286 v_l16288 v_l16290 v_l16292 v_l16294 v_l16296 v_l16298 v_l16300 v_l16302 v_l16304 v_l16306 v_l16308)) /\ (v_l16383 = v_l16284))))))))))))))))) -> (not (v_l16383 = (v_Pervasives__op_Nil )))))))))))))))))))))))))))))))))))))))
(* Querying for (msg) (False, alg52, Bytes.empty_bytes) : (b:bool * a:(TLSConstants.sigAlg * TLSConstants.hashAlg) * sign:Bytes.bytes){b = True => MessageBytes (HT_certificate_verify (), Bytes.B (payload)) = CertificateVerifyMsg (Tuples.Tup14.10 si, a, sign) /\ Tuples.Tup14.10 si <> TLSConstants.SSL_3p0 () /\ Sig.Strong(a) /\ Sig.Honest(a, Cert.SigPKCert (Tuples.Tup14.2 si, a)) => Sig.Msg(a, Cert.SigPKCert (Tuples.Tup14.2 si, a), log)} *)
(* query False = True => MessageBytes (HT_certificate_verify (), Bytes.B (payload)) = CertificateVerifyMsg (Tuples.Tup14.10 si, alg52, Bytes.empty_bytes) /\ Tuples.Tup14.10 si <> TLSConstants.SSL_3p0 () /\ Sig.Strong(alg52) /\ Sig.Honest(alg52, Cert.SigPKCert (Tuples.Tup14.2 si, alg52)) => Sig.Msg(alg52, Cert.SigPKCert (Tuples.Tup14.2 si, alg52), log) [HandshakeMessages.fs(595,27)] *)
goal g287_gl: (forall v_si:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_si = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> ((not ((v_Tuples__Tup14__2 v_si) = (v_Pervasives__op_Nil ))) -> (forall v_ms:top. (forall v_algs:top. (forall v_log:top. (forall v_payload:top. (forall v_l14920:top. ((((v_Tuples__Tup14__10 v_si) = (v_Tuples__Tup14__10 v_si)) /\ (exists v_l14983:top. (exists v_l14981:top. (exists v_l14979:top. (exists v_l14977:top. (exists v_l14975:top. (exists v_l14973:top. (exists v_l14971:top. (exists v_l14969:top. (exists v_l14967:top. (exists v_l14965:top. (exists v_l14963:top. (exists v_l14961:top. (exists v_l14959:top. (exists v_l14957:top. ((v_si = (v_Tuples__Tup14 v_l14957 v_l14959 v_l14961 v_l14963 v_l14965 v_l14967 v_l14969 v_l14971 v_l14973 v_l14975 v_l14977 v_l14979 v_l14981 v_l14983)) /\ ((v_Tuples__Tup14__10 v_si) = v_l14975))))))))))))))))) -> (forall v_res:top. ((exists v_a1492815077:top. (exists v_p1492915080:top. ((v_res = (v_Tuples__Tup2 v_a1492815077 v_p1492915080)) /\ ((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_a1492815077 v_p1492915080 (v_Tuples__Tup14__10 v_si)))))) -> (((v_Error__Correct v_res) = v_l14920) -> (((v_Error__Correct v_res) = v_l14920) -> (forall v_alg:top. ((exists v_l5991507815095:top. (exists v_l6001507915096:top. (v_alg = (v_Tuples__Tup2 v_l5991507815095 v_l6001507915096)))) -> (forall v_signature:top. (((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_alg v_signature (v_Tuples__Tup14__10 v_si))) -> (((v_Tuples__Tup2 v_alg v_signature) = v_res) -> (((v_Tuples__Tup2 v_alg v_signature) = v_res) -> ((not ((v_TLSConstants__TLS_1p2 ) = (v_Tuples__Tup14__10 v_si))) -> ((not ((v_TLSConstants__TLS_1p1 ) = (v_Tuples__Tup14__10 v_si))) -> ((not ((v_TLSConstants__TLS_1p0 ) = (v_Tuples__Tup14__10 v_si))) -> ((exists v_l16081:top. (exists v_l16079:top. (exists v_l16077:top. (exists v_l16075:top. (exists v_l16073:top. (exists v_l16071:top. (exists v_l16069:top. (exists v_l16067:top. (exists v_l16065:top. (exists v_l16063:top. (exists v_l16061:top. (exists v_l16059:top. (exists v_l16057:top. (exists v_l16055:top. ((v_si = (v_Tuples__Tup14 v_l16055 v_l16057 v_l16059 v_l16061 v_l16063 v_l16065 v_l16067 v_l16069 v_l16071 v_l16073 v_l16075 v_l16077 v_l16079 v_l16081)) /\ ((v_TLSConstants__SSL_3p0 ) = v_l16073)))))))))))))))) -> (((v_TLSConstants__SSL_3p0 ) = (v_Tuples__Tup14__10 v_si)) -> (((v_TLSConstants__SSL_3p0 ) = (v_Tuples__Tup14__10 v_si)) -> (forall v_sigAlg:top. (forall v_l14918:top. (((v_Tuples__Tup2 v_sigAlg v_l14918) = v_alg) -> (((v_Tuples__Tup2 v_sigAlg v_l14918) = v_alg) -> (forall v_alg52:top. ((exists v_l16158:top. (exists v_l16159:top. ((v_alg52 = (v_Tuples__Tup2 v_l16158 v_l16159)) /\ ((v_Tuples__Tup2 v_l16158 v_l16159) = (v_Tuples__Tup2 v_sigAlg (v_TLSConstants__NULL )))))) -> ((v_alg52 = (v_Tuples__Tup2 v_sigAlg (v_TLSConstants__NULL ))) -> (forall v_expected:top. ((v_log = v_log) -> (forall v_l16272:top. ((((v_Tuples__Tup14__2 v_si) = (v_Tuples__Tup14__2 v_si)) /\ (exists v_l16308:top. (exists v_l16306:top. (exists v_l16304:top. (exists v_l16302:top. (exists v_l16300:top. (exists v_l16298:top. (exists v_l16296:top. (exists v_l16294:top. (exists v_l16292:top. (exists v_l16290:top. (exists v_l16288:top. (exists v_l16286:top. (exists v_l16284:top. (exists v_l16282:top. ((v_si = (v_Tuples__Tup14 v_l16282 v_l16284 v_l16286 v_l16288 v_l16290 v_l16292 v_l16294 v_l16296 v_l16298 v_l16300 v_l16302 v_l16304 v_l16306 v_l16308)) /\ ((v_Tuples__Tup14__2 v_si) = v_l16284))))))))))))))))) -> (forall v_z:top. ((exists v_l59316404:top. (exists v_l59416405:top. (v_z = (v_Tuples__Tup2 v_l59316404 v_l59416405)))) -> (((v_Error__Error v_z) = v_l16272) -> (((v_Error__Error v_z) = v_l16272) -> ((v_Pervasives__False = v_Pervasives__True) -> (((v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_certificate_verify ) (v_Bytes__B v_payload)) = (v_HandshakeMessages__CertificateVerifyMsg (v_Tuples__Tup14__10 v_si) v_alg52 v_Bytes__empty_bytes)) /\ (((not ((v_Tuples__Tup14__10 v_si) = (v_TLSConstants__SSL_3p0 ))) /\ ((v_Sig__Strong_p v_alg52) /\ (v_Sig__Honest_p v_alg52 (v_Cert__SigPKCert (v_Tuples__Tup14__2 v_si) v_alg52)))) -> (v_Sig__Msg_p v_alg52 (v_Cert__SigPKCert (v_Tuples__Tup14__2 v_si) v_alg52) v_log))))))))))))))))))))))))))))))))))))))))))))
(* Querying for (msg) (res53, alg52, signature) : (b:bool * a:(TLSConstants.sigAlg * TLSConstants.hashAlg) * sign:Bytes.bytes){b = True => MessageBytes (HT_certificate_verify (), Bytes.B (payload)) = CertificateVerifyMsg (Tuples.Tup14.10 si, a, sign) /\ Tuples.Tup14.10 si <> TLSConstants.SSL_3p0 () /\ Sig.Strong(a) /\ Sig.Honest(a, Cert.SigPKCert (Tuples.Tup14.2 si, a)) => Sig.Msg(a, Cert.SigPKCert (Tuples.Tup14.2 si, a), log)} *)
(* query res53 = True => MessageBytes (HT_certificate_verify (), Bytes.B (payload)) = CertificateVerifyMsg (Tuples.Tup14.10 si, alg52, signature) /\ Tuples.Tup14.10 si <> TLSConstants.SSL_3p0 () /\ Sig.Strong(alg52) /\ Sig.Honest(alg52, Cert.SigPKCert (Tuples.Tup14.2 si, alg52)) => Sig.Msg(alg52, Cert.SigPKCert (Tuples.Tup14.2 si, alg52), log) [HandshakeMessages.fs(598,17)] *)
goal g288_gl: (forall v_si:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_si = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> ((not ((v_Tuples__Tup14__2 v_si) = (v_Pervasives__op_Nil ))) -> (forall v_ms:top. (forall v_algs:top. (forall v_log:top. (forall v_payload:top. (forall v_l14920:top. ((((v_Tuples__Tup14__10 v_si) = (v_Tuples__Tup14__10 v_si)) /\ (exists v_l14983:top. (exists v_l14981:top. (exists v_l14979:top. (exists v_l14977:top. (exists v_l14975:top. (exists v_l14973:top. (exists v_l14971:top. (exists v_l14969:top. (exists v_l14967:top. (exists v_l14965:top. (exists v_l14963:top. (exists v_l14961:top. (exists v_l14959:top. (exists v_l14957:top. ((v_si = (v_Tuples__Tup14 v_l14957 v_l14959 v_l14961 v_l14963 v_l14965 v_l14967 v_l14969 v_l14971 v_l14973 v_l14975 v_l14977 v_l14979 v_l14981 v_l14983)) /\ ((v_Tuples__Tup14__10 v_si) = v_l14975))))))))))))))))) -> (forall v_res:top. ((exists v_a1492815077:top. (exists v_p1492915080:top. ((v_res = (v_Tuples__Tup2 v_a1492815077 v_p1492915080)) /\ ((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_a1492815077 v_p1492915080 (v_Tuples__Tup14__10 v_si)))))) -> (((v_Error__Correct v_res) = v_l14920) -> (((v_Error__Correct v_res) = v_l14920) -> (forall v_alg:top. ((exists v_l5991507815095:top. (exists v_l6001507915096:top. (v_alg = (v_Tuples__Tup2 v_l5991507815095 v_l6001507915096)))) -> (forall v_signature:top. (((v_Bytes__B v_payload) = (v_HandshakeMessages__DigitallySignedBytes v_alg v_signature (v_Tuples__Tup14__10 v_si))) -> (((v_Tuples__Tup2 v_alg v_signature) = v_res) -> (((v_Tuples__Tup2 v_alg v_signature) = v_res) -> ((not ((v_TLSConstants__TLS_1p2 ) = (v_Tuples__Tup14__10 v_si))) -> ((not ((v_TLSConstants__TLS_1p1 ) = (v_Tuples__Tup14__10 v_si))) -> ((not ((v_TLSConstants__TLS_1p0 ) = (v_Tuples__Tup14__10 v_si))) -> ((exists v_l16081:top. (exists v_l16079:top. (exists v_l16077:top. (exists v_l16075:top. (exists v_l16073:top. (exists v_l16071:top. (exists v_l16069:top. (exists v_l16067:top. (exists v_l16065:top. (exists v_l16063:top. (exists v_l16061:top. (exists v_l16059:top. (exists v_l16057:top. (exists v_l16055:top. ((v_si = (v_Tuples__Tup14 v_l16055 v_l16057 v_l16059 v_l16061 v_l16063 v_l16065 v_l16067 v_l16069 v_l16071 v_l16073 v_l16075 v_l16077 v_l16079 v_l16081)) /\ ((v_TLSConstants__SSL_3p0 ) = v_l16073)))))))))))))))) -> (((v_TLSConstants__SSL_3p0 ) = (v_Tuples__Tup14__10 v_si)) -> (((v_TLSConstants__SSL_3p0 ) = (v_Tuples__Tup14__10 v_si)) -> (forall v_sigAlg:top. (forall v_l14918:top. (((v_Tuples__Tup2 v_sigAlg v_l14918) = v_alg) -> (((v_Tuples__Tup2 v_sigAlg v_l14918) = v_alg) -> (forall v_alg52:top. ((exists v_l16158:top. (exists v_l16159:top. ((v_alg52 = (v_Tuples__Tup2 v_l16158 v_l16159)) /\ ((v_Tuples__Tup2 v_l16158 v_l16159) = (v_Tuples__Tup2 v_sigAlg (v_TLSConstants__NULL )))))) -> ((v_alg52 = (v_Tuples__Tup2 v_sigAlg (v_TLSConstants__NULL ))) -> (forall v_expected:top. ((v_log = v_log) -> (forall v_l16272:top. ((((v_Tuples__Tup14__2 v_si) = (v_Tuples__Tup14__2 v_si)) /\ (exists v_l16308:top. (exists v_l16306:top. (exists v_l16304:top. (exists v_l16302:top. (exists v_l16300:top. (exists v_l16298:top. (exists v_l16296:top. (exists v_l16294:top. (exists v_l16292:top. (exists v_l16290:top. (exists v_l16288:top. (exists v_l16286:top. (exists v_l16284:top. (exists v_l16282:top. ((v_si = (v_Tuples__Tup14 v_l16282 v_l16284 v_l16286 v_l16288 v_l16290 v_l16292 v_l16294 v_l16296 v_l16298 v_l16300 v_l16302 v_l16304 v_l16306 v_l16308)) /\ ((v_Tuples__Tup14__2 v_si) = v_l16284))))))))))))))))) -> ((forall v_z:top. (not ((v_Error__Error v_z) = v_l16272))) -> (forall v_vkey:top. ((v_vkey = (v_Cert__SigPKCert (v_Tuples__Tup14__2 v_si) v_alg52)) -> (((v_Error__Correct v_vkey) = v_l16272) -> (((v_Error__Correct v_vkey) = v_l16272) -> (forall v_res53:top. ((((v_vkey = v_vkey) /\ (v_vkey = (v_Cert__SigPKCert (v_Tuples__Tup14__2 v_si) v_alg52))) /\ ((v_signature = v_signature) /\ (((v_res53 = v_Pervasives__True) /\ ((v_Sig__Strong_p v_alg52) /\ (v_Sig__Honest_p v_alg52 v_vkey))) -> (v_Sig__Msg_p v_alg52 v_vkey v_expected)))) -> ((v_res53 = v_Pervasives__True) -> (((v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_certificate_verify ) (v_Bytes__B v_payload)) = (v_HandshakeMessages__CertificateVerifyMsg (v_Tuples__Tup14__10 v_si) v_alg52 v_signature)) /\ (((not ((v_Tuples__Tup14__10 v_si) = (v_TLSConstants__SSL_3p0 ))) /\ ((v_Sig__Strong_p v_alg52) /\ (v_Sig__Honest_p v_alg52 (v_Cert__SigPKCert (v_Tuples__Tup14__2 v_si) v_alg52)))) -> (v_Sig__Msg_p v_alg52 (v_Cert__SigPKCert (v_Tuples__Tup14__2 v_si) v_alg52) v_log)))))))))))))))))))))))))))))))))))))))))))))))
(* Querying for (msg) (False, (TLSConstants.SA_RSA (), TLSConstants.SHA ()), Bytes.empty_bytes) : (b:bool * a:(TLSConstants.sigAlg * TLSConstants.hashAlg) * sign:Bytes.bytes){b = True => MessageBytes (HT_certificate_verify (), Bytes.B (payload)) = CertificateVerifyMsg (Tuples.Tup14.10 si, a, sign) /\ Tuples.Tup14.10 si <> TLSConstants.SSL_3p0 () /\ Sig.Strong(a) /\ Sig.Honest(a, Cert.SigPKCert (Tuples.Tup14.2 si, a)) => Sig.Msg(a, Cert.SigPKCert (Tuples.Tup14.2 si, a), log)} *)
(* query False = True => MessageBytes (HT_certificate_verify (), Bytes.B (payload)) = CertificateVerifyMsg (Tuples.Tup14.10 si, (TLSConstants.SA_RSA (), TLSConstants.SHA ()), Bytes.empty_bytes) /\ Tuples.Tup14.10 si <> TLSConstants.SSL_3p0 () /\ Sig.Strong((TLSConstants.SA_RSA (), TLSConstants.SHA ())) /\ Sig.Honest((TLSConstants.SA_RSA (), TLSConstants.SHA ()), Cert.SigPKCert (Tuples.Tup14.2 si, (TLSConstants.SA_RSA (), TLSConstants.SHA ()))) => Sig.Msg((TLSConstants.SA_RSA (), TLSConstants.SHA ()), Cert.SigPKCert (Tuples.Tup14.2 si, (TLSConstants.SA_RSA (), TLSConstants.SHA ())), log) [HandshakeMessages.fs(599,19)] *)
goal g289_gl: (forall v_si:top. ((exists v_cipher_suite2387:top. (exists v_clientID2388:top. (exists v_clientSigAlg2389:top. (exists v_client_auth2390:top. (exists v_compression2391:top. (exists v_extensions2392:top. (exists v_init_crand2393:top. (exists v_init_srand2394:top. (exists v_pmsId2395:top. (exists v_protocol_version2396:top. (exists v_serverID2397:top. (exists v_serverSigAlg2398:top. (exists v_sessionID2399:top. (exists v_session_hash2400:top. ((v_si = (v_Tuples__Tup14 v_cipher_suite2387 v_clientID2388 v_clientSigAlg2389 v_client_auth2390 v_compression2391 v_extensions2392 v_init_crand2393 v_init_srand2394 v_pmsId2395 v_protocol_version2396 v_serverID2397 v_serverSigAlg2398 v_sessionID2399 v_session_hash2400)) /\ (((((v_TLSConstants__IsCompression_p v_compression2391) /\ ((v_Bytes__Length v_init_crand2393) = 32)) /\ ((v_Bytes__Length v_init_srand2394) = 32)) /\ (v_TLSConstants__IsProtocolVersion_p v_protocol_version2396)) /\ ((v_Bytes__Length v_sessionID2399) <= 32))))))))))))))))) -> ((not ((v_Tuples__Tup14__2 v_si) = (v_Pervasives__op_Nil ))) -> (forall v_ms:top. (forall v_algs:top. (forall v_log:top. (forall v_payload:top. (forall v_l14920:top. ((((v_Tuples__Tup14__10 v_si) = (v_Tuples__Tup14__10 v_si)) /\ (exists v_l14983:top. (exists v_l14981:top. (exists v_l14979:top. (exists v_l14977:top. (exists v_l14975:top. (exists v_l14973:top. (exists v_l14971:top. (exists v_l14969:top. (exists v_l14967:top. (exists v_l14965:top. (exists v_l14963:top. (exists v_l14961:top. (exists v_l14959:top. (exists v_l14957:top. ((v_si = (v_Tuples__Tup14 v_l14957 v_l14959 v_l14961 v_l14963 v_l14965 v_l14967 v_l14969 v_l14971 v_l14973 v_l14975 v_l14977 v_l14979 v_l14981 v_l14983)) /\ ((v_Tuples__Tup14__10 v_si) = v_l14975))))))))))))))))) -> ((forall v_res:top. (not ((v_Error__Correct v_res) = v_l14920))) -> (forall v_z:top. ((exists v_l59316491:top. (exists v_l59416492:top. (v_z = (v_Tuples__Tup2 v_l59316491 v_l59416492)))) -> (((v_Error__Error v_z) = v_l14920) -> (((v_Error__Error v_z) = v_l14920) -> ((v_Pervasives__False = v_Pervasives__True) -> (((v_HandshakeMessages__MessageBytes (v_HandshakeMessages__HT_certificate_verify ) (v_Bytes__B v_payload)) = (v_HandshakeMessages__CertificateVerifyMsg (v_Tuples__Tup14__10 v_si) (v_Tuples__Tup2 (v_TLSConstants__SA_RSA ) (v_TLSConstants__SHA )) v_Bytes__empty_bytes)) /\ (((not ((v_Tuples__Tup14__10 v_si) = (v_TLSConstants__SSL_3p0 ))) /\ ((v_Sig__Strong_p (v_Tuples__Tup2 (v_TLSConstants__SA_RSA ) (v_TLSConstants__SHA ))) /\ (v_Sig__Honest_p (v_Tuples__Tup2 (v_TLSConstants__SA_RSA ) (v_TLSConstants__SHA )) (v_Cert__SigPKCert (v_Tuples__Tup14__2 v_si) (v_Tuples__Tup2 (v_TLSConstants__SA_RSA ) (v_TLSConstants__SHA )))))) -> (v_Sig__Msg_p (v_Tuples__Tup2 (v_TLSConstants__SA_RSA ) (v_TLSConstants__SHA )) (v_Cert__SigPKCert (v_Tuples__Tup14__2 v_si) (v_Tuples__Tup2 (v_TLSConstants__SA_RSA ) (v_TLSConstants__SHA ))) v_log))))))))))))))))))
end
