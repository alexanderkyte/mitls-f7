module ENC

open Bytes
open Plain
open TLSInfo
open Error

(* this interface is trusted *)
// AP: Moved to ENCKey.fs7
//type (;ki:KeyInfo) symKey

(* AP: Moved to ENCKey.fs7
// iv3 should be abstract too, and iv hidden 
// we need a function for generating the initial iv3,
// to be called by the the idealized PRF
type iv = bytes

type (;ki:KeyInfo) iv3 =
	| SomeIV of iv{ki.sinfo.protocol_version = SSL_3p0 \/
				   ki.sinfo.protocol_version = TLS_1p0}
	| NoIV of unit{ki.sinfo.protocol_version = TLS_1p1 \/
				   ki.sinfo.protocol_version = TLS_1p2}
*)

// ciphers consist of one or more blocks of bytes.
type (;ki:KeyInfo) cipher = b:bytes

predicate val ENCrypted:
  (ki:KeyInfo * (;ki) symKey * (;ki) plain * (;ki) cipher) -> bool

val ENC: ki:KeyInfo -> k:(;ki) symKey -> (;ki) iv3 -> n:int -> p:(;ki,n) plain -> 
  ((;ki) iv3 * c:(;ki)cipher{ENCrypted(ki,k,p,c) /\ Length(c)=n})

val DEC: ki:KeyInfo -> k:(;ki) symKey -> (;ki) iv3 -> c:(;ki) cipher -> 
  ((;ki) iv3 * p:(;ki,Length(c))plain{ENCrypted(ki,k,p,c)})