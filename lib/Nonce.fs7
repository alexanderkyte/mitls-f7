module Nonce

(* This module is typechecked. *)

open Bytes

val random: n:nat -> (;n)lbytes

val mkHelloRandom: unit -> b:(;32)lbytes
// the idealized code returns globally pairwise-distinct values
// this is securely implemented by returning values that have a negligible probability of collision

// TODO do we need more than that, e.g. no clash with prior adv nonces?
// TODO rename mkHelloRandom to fresh

val noCsr: (;64) lbytes 
// null value for indexing the initial epoch 

private val log: (;32) lbytes list ref 
private val timestamp: unit -> (;4) lbytes
