module HMAC

open Bytes
open Algorithms

type key = bytes
type data = bytes
type mac = bytes

val sslKeyedHash: 
  a:hashAlg{a = MD5 \/ a = SHA} -> k:key{Length(k)=MacKeySize(a)} -> data -> 
  t:mac {Length(t)=MacKeySize(a)} 
val sslKeyedHashVerify:
  a:hashAlg{a = MD5 \/ a = SHA} -> k:key{Length(k)=MacKeySize(a)} -> data -> 
  t:mac -> bool

val HMAC:       
  a:hashAlg -> k:key{Length(k)=MacKeySize(a)} -> data -> 
  t:mac {Length(t)=MacKeySize(a)} 
val HMACVERIFY: 
  a:hashAlg -> k:key{Length(k)=MacKeySize(a)} -> data -> 
  t:mac -> bool
