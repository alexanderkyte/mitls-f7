-*- outline-mode -*-

This is miTLS, a verified reference implementation of the TLS security
protocol.

* 1. Compilation

To compile, usually running "make" from the top level directory is
enough. (See below for prerequisites.)

The produces executables are placed in the `bin' directory.

Each command line tool accepts a "--help" option that shows all the
available command line options and their default values.

The following make targets are available:

- build (default)
    compiles source code and puts executables in then bin directory

- dist
    prepares a compressed archive that can be distributed

- dist-check
    as dist, but also performs some sanity checks

- clean
    remove object files

- dist-clean
    remove object files and distribution archives

The test suite is currently not released, and thus not
available as a make target.

* 2. Prerequisites

In the following, the prerequisites for each supported platform are
given.

** 2.a. Microsoft Windows

- Cygwin, with the make utility installed
- .NET version 4 or above
- Visual F# 2.0
- Power Pack for F# 2.0

** 2.b. Linux, Mac OS X and other Un*ces

- Mono framework, version 3.0.1 or above
- F# open source edition, version 3.0 or above

* 3. Verification

Refinement type checking of the code base is triggered by the default
target of the lib/Makefile file. This file contains a "tc7" target
for each file to be type checked.

Type checking requires F7 and Z3. Note, however, that the latest
version of F7 used to type check the code base is not publicly
distributed.

Each F# implementation file (with .fs extension) can contain
two compilation flags useful for verification:
- ideal: enables ideal cryptographic functionalities in the code.
  (e.g. the ones performing table lookups)
- verify: enables assumptions of events in the code.
Both compilation flags are disabled when compiling the concrete code,
and enable during type checking.