module Tcp

(* Trusted only to return bytes with the requested length *)

open Bytes
open Error

type NetworkStream
type TcpListener

(* Server side *)

val listen: string -> int -> TcpListener
val accept: TcpListener -> NetworkStream
val stop: TcpListener -> unit

(* Client side *)

val connect: string -> int -> NetworkStream

(* Synchronous Input/Output *)

val read:  NetworkStream -> l:int{l>0} -> (;l) lbytes Result
val write: NetworkStream -> bytes -> unit Result
val close: NetworkStream -> unit

// TODO cut: val dataAvailable: NetworkStream -> r:bool Result{!y,z. r = Error(y,z) => y = AD_internal_error}

