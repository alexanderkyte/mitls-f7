module AEAD

open TLSFragment
open TLSKey

val encrypt: ki:KeyInfo -> (;ki) AEADKey -> (;ki) ENC.iv3 -> tlen:int -> ad:addData{?ct.ADofID(ki,tlen,ct,ad)} -> (;ad) AEADFragment -> ((;ki) ENC.iv3 * cipher)
val decrypt: ki:KeyInfo -> (;ki) AEADKey -> (;ki) ENC.iv3 -> tlen:int -> ad:addData{?ct.ADofID(ki,tlen,ct,ad)} -> cipher -> ((;ki) ENC.iv3 * (;ad) fragment) Result


(* TODOS: (KB: Done?) *)
(* - Add explicit ciphertext length *)
(* - Make all iv become iv3: Only TLS 1.0 will use iv, later versions don't. *)
(*	 The ciphertext has different lengths, depending on the version: *)
(*   In later versions it includes the fresh iv, in early versions it doensn't. *)

