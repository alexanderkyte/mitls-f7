module PwApp

open PwToken

type username = PwToken.username

predicate ClientAuthenticated   of username * token
predicate AuthenticatedByServer of SessionInfo  * username

val request :
      servname : string
   -> username : string
   -> token    : token{RegisteredToken(UTK(username, token))}
   -> c:Connection{
           CN(c.si.serverID) = name
		/\ (Strong(c.si.cipher_suite) /\ Honest(c.si.serverID) => AuthenticatedByServer(c.si, username)) 
      } option

val response : unit -> uc:(username * Connection) {
  !c, u. (u, c) = uc ->
    ?token. Strong(c.si.cipher_suite) => ClientAuthenticated(u, token) /\ GoodToken(u, token)
} option
