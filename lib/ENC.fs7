module ENC

type (;ki:KeyInfo) symKey

type (;ki:KeyInfo) iv = IVSome of iv{ki.ver = } | IVNone of unit{ki.ver..}


type (;ki:KeyInfo) cipher = bytes



val ENC: ki:KeyInfo -> (;ki) symKey -> (;ki) ivOpt -> n:int -> (;ki) plain -> ((;ki) ivOpt * cipher) Result
val DEC: ki:KeyInfo -> (;ki) symKey -> (;ki) ivOpt -> n:int -> (;ki) cipher -> ((;ki) ivOpt * plain) Result