(* Copyright (C) 2012--2014 Microsoft Research and INRIA *)

module HMAC

(* Core HMAC algorithms; trusted only on their tag lengths *)

open Bytes
open TLSConstants

type key = bytes
type data = bytes
type mac = bytes

val ssl_pad1_md5:  bytes  
val ssl_pad2_md5:  bytes
val ssl_pad1_sha1: bytes
val ssl_pad2_sha1: bytes

private val sslKeyedHashPads: hashAlg -> bytes * bytes
private val sslKeyedHash: hashAlg -> key -> data -> mac
private val sslKeyedHashVerify: hashAlg -> key -> data -> mac -> bool
private val hmac: hashAlg -> key -> data -> mac
private val hmacVerify: hashAlg -> key -> data -> mac -> bool

val tls_mac:       
  a:macAlg -> k:key {Length(k)=MacKeySize(a)} -> 
  data -> t:mac {Length(t)=MacSize(a)} 
val tls_macVerify: 
  a:macAlg -> k:key {Length(k)=MacKeySize(a)} -> 
  data -> t:mac {Length(k)=MacSize(a)} -> bool

